Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque
Rule 2     varp -> var varp
Rule 3     varp -> empty
Rule 4     funcp -> func funcp
Rule 5     funcp -> empty
Rule 6     bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript
Rule 7     estatutop -> estatuto estatutop
Rule 8     estatutop -> empty
Rule 9     tipo_simp -> INT pnSaveTypeVar
Rule 10    tipo_simp -> FLOAT pnSaveTypeVar
Rule 11    tipo_simp -> CHAR pnSaveTypeVar
Rule 12    tipo_comp -> DATAFRAME
Rule 13    tipo_comp -> file
Rule 14    copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
Rule 15    file -> ID
Rule 16    variable -> ID pnSaveOperandos indexp
Rule 17    indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET
Rule 18    indexp -> empty
Rule 19    indexpp -> COMMA exp
Rule 20    indexpp -> empty
Rule 21    llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
Rule 22    expp -> exp pnCuadParametro exppp
Rule 23    expp -> empty
Rule 24    exppp -> COMMA pnUpdateK exp pnCuadParametro exppp
Rule 25    exppp -> empty
Rule 26    var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON
Rule 27    v -> DATAFRAME pnSaveTypeVar
Rule 28    v -> tipo_simp vp
Rule 29    vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET
Rule 30    vp -> empty
Rule 31    vpp -> COMMA CTEI
Rule 32    vpp -> empty
Rule 33    idp -> ID pnCheckNameTablaVar idpp
Rule 34    idpp -> COMMA ID pnCheckNameTablaVar idpp
Rule 35    idpp -> empty
Rule 36    func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
Rule 37    returnval -> tipo_simp
Rule 38    returnval -> VOID pnSaveTypeVar
Rule 39    param -> paramlist
Rule 40    param -> empty
Rule 41    paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp
Rule 42    tipoparam -> tipo_simp
Rule 43    tipoparam -> DATAFRAME pnSaveTypeVar
Rule 44    paramlistp -> COMMA paramlist
Rule 45    paramlistp -> empty
Rule 46    estatuto -> asign
Rule 47    estatuto -> llamada
Rule 48    estatuto -> lee
Rule 49    estatuto -> escribe
Rule 50    estatuto -> condicion
Rule 51    estatuto -> ciclow
Rule 52    estatuto -> ciclof
Rule 53    estatuto -> funcesp
Rule 54    estatuto -> return
Rule 55    estatuto -> copy
Rule 56    asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
Rule 57    lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
Rule 58    escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
Rule 59    escribep -> exp pnCuadEscribe
Rule 60    escribep -> LETRERO pnCuadEscribe
Rule 61    return -> RETURNS exp SEMICOLON
Rule 62    exp -> exprel pnCuadOplog logic
Rule 63    logic -> logicsig exprel pnCuadOplog logic
Rule 64    logic -> empty
Rule 65    logicsig -> AND pnSaveOperadorLog
Rule 66    logicsig -> OR pnSaveOperadorLog
Rule 67    exprel -> e pnCuadOpRelacional relacionalp
Rule 68    relacionalp -> relsig e pnCuadOpRelacional relacionalp
Rule 69    relacionalp -> empty
Rule 70    relsig -> LESS_THAN pnSaveOperadorRel
Rule 71    relsig -> GREATER_THAN pnSaveOperadorRel
Rule 72    relsig -> EQUALS pnSaveOperadorRel
Rule 73    relsig -> NOTEQUALS pnSaveOperadorRel
Rule 74    e -> t pnCuadPlMi tp
Rule 75    tp -> tsig t pnCuadPlMi tp
Rule 76    tp -> empty
Rule 77    tsig -> PLUS pnSaveOperadorPlMi
Rule 78    tsig -> MINUS pnSaveOperadorPlMi
Rule 79    t -> f pnCuadMuDi fp
Rule 80    fp -> fsig f pnCuadMuDi fp
Rule 81    fp -> empty
Rule 82    fsig -> MULT pnSaveOperadorMuDi
Rule 83    fsig -> DIV pnSaveOperadorMuDi
Rule 84    f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
Rule 85    f -> CTEI pnSaveCteI pnSaveOperandoConstante
Rule 86    f -> CTEF pnSaveCteF pnSaveOperandoConstante
Rule 87    f -> CTEC pnSaveCteC pnSaveOperandoConstante
Rule 88    f -> variable
Rule 89    f -> llamada
Rule 90    f -> funcesp
Rule 91    condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
Rule 92    falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
Rule 93    falsop -> empty
Rule 94    ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
Rule 95    ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
Rule 96    funcesp -> mean
Rule 97    funcesp -> mode
Rule 98    funcesp -> median
Rule 99    funcesp -> variance
Rule 100   funcesp -> max
Rule 101   funcesp -> min
Rule 102   funcesp -> staddes
Rule 103   funcesp -> boxplot
Rule 104   funcesp -> linreg
Rule 105   funcesp -> copy
Rule 106   mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 107   mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 108   median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 109   variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 110   max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 111   min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 112   staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 113   boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 114   linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 115   pnCrearDirFunc -> empty
Rule 116   pnScriptFuncDir -> empty
Rule 117   pnCheckTablaVar -> empty
Rule 118   pnCrearListaParam -> empty
Rule 119   pnSaveTypeVar -> empty
Rule 120   pnCheckNameTablaVar -> empty
Rule 121   pnAddFuncinDir -> empty
Rule 122   pnAddParametersTablaVar -> empty
Rule 123   pnCountVarsINTOResources -> empty
Rule 124   pnDirecIniFunc -> empty
Rule 125   pnCloseCurrentFunction -> empty
Rule 126   pnEndScript -> empty
Rule 127   pnCheckFunc -> empty
Rule 128   pnGenerateEra -> empty
Rule 129   pnCuadParametro -> empty
Rule 130   pnUpdateK -> empty
Rule 131   pnCheckNoParam -> empty
Rule 132   pnCuadGoSub -> empty
Rule 133   pnSaveCteI -> empty
Rule 134   pnSaveCteF -> empty
Rule 135   pnSaveCteC -> empty
Rule 136   pnSaveFondoFalso -> empty
Rule 137   pnPopFondoFalso -> empty
Rule 138   pnSaveOperandos -> empty
Rule 139   pnSaveOperandoConstante -> empty
Rule 140   pnSaveOperadorPlMi -> empty
Rule 141   pnSaveOperadorMuDi -> empty
Rule 142   pnSaveOperadorRel -> empty
Rule 143   pnSaveOperadorLog -> empty
Rule 144   pnCuadPlMi -> empty
Rule 145   pnCuadMuDi -> empty
Rule 146   pnCuadOpRelacional -> empty
Rule 147   pnCuadOplog -> empty
Rule 148   pnSaveOperadorAsign -> empty
Rule 149   pnCuadAsign -> empty
Rule 150   pnCuadEscribe -> empty
Rule 151   pnCuadLee -> empty
Rule 152   pnCuadCopy -> empty
Rule 153   pnCuadFuncEsp -> empty
Rule 154   pnCheckBoolIf -> empty
Rule 155   pnElseIf -> empty
Rule 156   pnEndIf -> empty
Rule 157   pnSaveWhile -> empty
Rule 158   pnEndWhile -> empty
Rule 159   pnSaveForID -> empty
Rule 160   pnCreateVControl -> empty
Rule 161   pnCompControlFinal -> empty
Rule 162   pnEndFor -> empty
Rule 163   empty -> <empty>

Terminals, with rules where they appear

AND                  : 65
ARROW                : 26 36 41
ASIGN                : 56 95
BOXPLOT              : 113
CHAR                 : 11
COMMA                : 19 24 31 34 44 95
COMMENT              : 
CTEC                 : 87
CTEF                 : 86
CTEI                 : 29 31 85
DATAFRAME            : 12 27 43
DIV                  : 83
DO                   : 6
EQUALS               : 72
FLOAT                : 10
FOR                  : 95
FUNC                 : 36
GREATER_THAN         : 71
ID                   : 1 15 16 21 33 34 36 41 95
IF                   : 91
IF_FALSE             : 92
IF_TRUE              : 91
INT                  : 9
LEFT_CUR_BRACKET     : 6 36 91 92 94 95
LEFT_PARENT          : 14 21 36 57 58 84 91 94 95 106 107 108 109 110 111 112 113 114
LEFT_SQR_BRACKET     : 17 29
LESS_THAN            : 70
LETRERO              : 14 60
LINREG               : 114
MAX                  : 110
MEAN                 : 106
MEDIAN               : 108
MIN                  : 111
MINUS                : 78
MODE                 : 107
MULT                 : 82
NOTEQUALS            : 73
OR                   : 66
PLUS                 : 77
READ                 : 57
READ_FILE            : 14
RETURNS              : 61
RIGHT_CUR_BRACKET    : 6 36 91 92 94 95
RIGHT_PARENT         : 14 21 36 57 58 84 91 94 95 106 107 108 109 110 111 112 113 114
RIGHT_SQR_BRACKET    : 17 29
SCRIPT               : 1
SEMICOLON            : 1 14 21 26 56 57 58 61 106 107 108 109 110 111 112 113 114
STADDES              : 112
VAR                  : 26
VARIANCE             : 109
VOID                 : 38
WHILE                : 94
WRITE                : 58
error                : 

Nonterminals, with rules where they appear

asign                : 46
bloque               : 1
boxplot              : 103
ciclof               : 52
ciclow               : 51
condicion            : 50
copy                 : 55 105
e                    : 67 68
empty                : 3 5 8 18 20 23 25 30 32 35 40 45 64 69 76 81 93 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162
escribe              : 49
escribep             : 58
estatuto             : 7
estatutop            : 6 7 36 91 92 94 95
exp                  : 17 19 22 24 56 59 61 84 91 94 95 95
expp                 : 21
exppp                : 22 24
exprel               : 62 63
f                    : 79 80
falsop               : 91
file                 : 13
fp                   : 79 80
fsig                 : 80
func                 : 4
funcesp              : 53 90
funcp                : 1 4 6
idp                  : 26
idpp                 : 33 34
indexp               : 16
indexpp              : 17
lee                  : 48
linreg               : 104
llamada              : 47 89
logic                : 62 63
logicsig             : 63
max                  : 100
mean                 : 96
median               : 98
min                  : 101
mode                 : 97
param                : 36
paramlist            : 39 44
paramlistp           : 41
pnAddFuncinDir       : 36
pnAddParametersTablaVar : 41
pnCheckBoolIf        : 91 94
pnCheckFunc          : 21
pnCheckNameTablaVar  : 33 34
pnCheckNoParam       : 21
pnCheckTablaVar      : 26 36
pnCloseCurrentFunction : 36
pnCompControlFinal   : 95
pnCountVarsINTOResources : 36
pnCrearDirFunc       : 1
pnCrearListaParam    : 36
pnCreateVControl     : 95
pnCuadAsign          : 56
pnCuadCopy           : 14
pnCuadEscribe        : 59 60
pnCuadFuncEsp        : 106 107 108 109 110 111 112 113 114
pnCuadGoSub          : 21
pnCuadLee            : 57
pnCuadMuDi           : 79 80
pnCuadOpRelacional   : 67 68
pnCuadOplog          : 62 63
pnCuadParametro      : 22 24
pnCuadPlMi           : 74 75
pnDirecIniFunc       : 36
pnElseIf             : 92
pnEndFor             : 95
pnEndIf              : 91
pnEndScript          : 6
pnEndWhile           : 94
pnGenerateEra        : 21
pnPopFondoFalso      : 84
pnSaveCteC           : 87
pnSaveCteF           : 86
pnSaveCteI           : 85
pnSaveFondoFalso     : 84
pnSaveForID          : 95
pnSaveOperadorAsign  : 56
pnSaveOperadorLog    : 65 66
pnSaveOperadorMuDi   : 82 83
pnSaveOperadorPlMi   : 77 78
pnSaveOperadorRel    : 70 71 72 73
pnSaveOperandoConstante : 85 86 87
pnSaveOperandos      : 16
pnSaveTypeVar        : 9 10 11 27 38 43
pnSaveWhile          : 94
pnScriptFuncDir      : 1
pnUpdateK            : 24
programa             : 0
relacionalp          : 67 68
relsig               : 68
return               : 54
returnval            : 36
staddes              : 102
t                    : 74 75
tipo_comp            : 
tipo_simp            : 28 37 42
tipoparam            : 41
tp                   : 74 75
tsig                 : 75
v                    : 26
var                  : 2
variable             : 56 57 88 106 107 108 109 110 111 112 113 114
variance             : 99
varp                 : 1 2 6 36
vp                   : 28
vpp                  : 29

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque

    SCRIPT          shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> SCRIPT . pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque
    (115) pnCrearDirFunc -> . empty
    (163) empty -> .

    ID              reduce using rule 163 (empty -> .)

    pnCrearDirFunc                 shift and go to state 3
    empty                          shift and go to state 4

state 3

    (1) programa -> SCRIPT pnCrearDirFunc . ID pnScriptFuncDir SEMICOLON varp funcp bloque

    ID              shift and go to state 5


state 4

    (115) pnCrearDirFunc -> empty .

    ID              reduce using rule 115 (pnCrearDirFunc -> empty .)


state 5

    (1) programa -> SCRIPT pnCrearDirFunc ID . pnScriptFuncDir SEMICOLON varp funcp bloque
    (116) pnScriptFuncDir -> . empty
    (163) empty -> .

    SEMICOLON       reduce using rule 163 (empty -> .)

    pnScriptFuncDir                shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir . SEMICOLON varp funcp bloque

    SEMICOLON       shift and go to state 8


state 7

    (116) pnScriptFuncDir -> empty .

    SEMICOLON       reduce using rule 116 (pnScriptFuncDir -> empty .)


state 8

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON . varp funcp bloque
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (163) empty -> .

    VAR             shift and go to state 12
    FUNC            reduce using rule 163 (empty -> .)
    DO              reduce using rule 163 (empty -> .)

    varp                           shift and go to state 9
    var                            shift and go to state 10
    empty                          shift and go to state 11

state 9

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp . funcp bloque
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (163) empty -> .

    FUNC            shift and go to state 16
    DO              reduce using rule 163 (empty -> .)

    funcp                          shift and go to state 13
    func                           shift and go to state 14
    empty                          shift and go to state 15

state 10

    (2) varp -> var . varp
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (163) empty -> .

    VAR             shift and go to state 12
    FUNC            reduce using rule 163 (empty -> .)
    DO              reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    READ            reduce using rule 163 (empty -> .)
    WRITE           reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    FOR             reduce using rule 163 (empty -> .)
    RETURNS         reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)

    var                            shift and go to state 10
    varp                           shift and go to state 17
    empty                          shift and go to state 11

state 11

    (3) varp -> empty .

    FUNC            reduce using rule 3 (varp -> empty .)
    DO              reduce using rule 3 (varp -> empty .)
    ID              reduce using rule 3 (varp -> empty .)
    READ            reduce using rule 3 (varp -> empty .)
    WRITE           reduce using rule 3 (varp -> empty .)
    IF              reduce using rule 3 (varp -> empty .)
    WHILE           reduce using rule 3 (varp -> empty .)
    FOR             reduce using rule 3 (varp -> empty .)
    RETURNS         reduce using rule 3 (varp -> empty .)
    READ_FILE       reduce using rule 3 (varp -> empty .)
    MEAN            reduce using rule 3 (varp -> empty .)
    MODE            reduce using rule 3 (varp -> empty .)
    MEDIAN          reduce using rule 3 (varp -> empty .)
    VARIANCE        reduce using rule 3 (varp -> empty .)
    MAX             reduce using rule 3 (varp -> empty .)
    MIN             reduce using rule 3 (varp -> empty .)
    STADDES         reduce using rule 3 (varp -> empty .)
    BOXPLOT         reduce using rule 3 (varp -> empty .)
    LINREG          reduce using rule 3 (varp -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 3 (varp -> empty .)


state 12

    (26) var -> VAR . pnCheckTablaVar v ARROW idp SEMICOLON
    (117) pnCheckTablaVar -> . empty
    (163) empty -> .

    DATAFRAME       reduce using rule 163 (empty -> .)
    INT             reduce using rule 163 (empty -> .)
    FLOAT           reduce using rule 163 (empty -> .)
    CHAR            reduce using rule 163 (empty -> .)

    pnCheckTablaVar                shift and go to state 18
    empty                          shift and go to state 19

state 13

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp . bloque
    (6) bloque -> . DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript

    DO              shift and go to state 21

    bloque                         shift and go to state 20

state 14

    (4) funcp -> func . funcp
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (163) empty -> .

    FUNC            shift and go to state 16
    DO              reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    READ            reduce using rule 163 (empty -> .)
    WRITE           reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    FOR             reduce using rule 163 (empty -> .)
    RETURNS         reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)

    func                           shift and go to state 14
    funcp                          shift and go to state 22
    empty                          shift and go to state 15

state 15

    (5) funcp -> empty .

    DO              reduce using rule 5 (funcp -> empty .)
    ID              reduce using rule 5 (funcp -> empty .)
    READ            reduce using rule 5 (funcp -> empty .)
    WRITE           reduce using rule 5 (funcp -> empty .)
    IF              reduce using rule 5 (funcp -> empty .)
    WHILE           reduce using rule 5 (funcp -> empty .)
    FOR             reduce using rule 5 (funcp -> empty .)
    RETURNS         reduce using rule 5 (funcp -> empty .)
    READ_FILE       reduce using rule 5 (funcp -> empty .)
    MEAN            reduce using rule 5 (funcp -> empty .)
    MODE            reduce using rule 5 (funcp -> empty .)
    MEDIAN          reduce using rule 5 (funcp -> empty .)
    VARIANCE        reduce using rule 5 (funcp -> empty .)
    MAX             reduce using rule 5 (funcp -> empty .)
    MIN             reduce using rule 5 (funcp -> empty .)
    STADDES         reduce using rule 5 (funcp -> empty .)
    BOXPLOT         reduce using rule 5 (funcp -> empty .)
    LINREG          reduce using rule 5 (funcp -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 5 (funcp -> empty .)


state 16

    (36) func -> FUNC . returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (37) returnval -> . tipo_simp
    (38) returnval -> . VOID pnSaveTypeVar
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    VOID            shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28

    returnval                      shift and go to state 23
    tipo_simp                      shift and go to state 24

state 17

    (2) varp -> var varp .

    FUNC            reduce using rule 2 (varp -> var varp .)
    DO              reduce using rule 2 (varp -> var varp .)
    ID              reduce using rule 2 (varp -> var varp .)
    READ            reduce using rule 2 (varp -> var varp .)
    WRITE           reduce using rule 2 (varp -> var varp .)
    IF              reduce using rule 2 (varp -> var varp .)
    WHILE           reduce using rule 2 (varp -> var varp .)
    FOR             reduce using rule 2 (varp -> var varp .)
    RETURNS         reduce using rule 2 (varp -> var varp .)
    READ_FILE       reduce using rule 2 (varp -> var varp .)
    MEAN            reduce using rule 2 (varp -> var varp .)
    MODE            reduce using rule 2 (varp -> var varp .)
    MEDIAN          reduce using rule 2 (varp -> var varp .)
    VARIANCE        reduce using rule 2 (varp -> var varp .)
    MAX             reduce using rule 2 (varp -> var varp .)
    MIN             reduce using rule 2 (varp -> var varp .)
    STADDES         reduce using rule 2 (varp -> var varp .)
    BOXPLOT         reduce using rule 2 (varp -> var varp .)
    LINREG          reduce using rule 2 (varp -> var varp .)
    RIGHT_CUR_BRACKET reduce using rule 2 (varp -> var varp .)


state 18

    (26) var -> VAR pnCheckTablaVar . v ARROW idp SEMICOLON
    (27) v -> . DATAFRAME pnSaveTypeVar
    (28) v -> . tipo_simp vp
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    DATAFRAME       shift and go to state 30
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28

    v                              shift and go to state 29
    tipo_simp                      shift and go to state 31

state 19

    (117) pnCheckTablaVar -> empty .

    DATAFRAME       reduce using rule 117 (pnCheckTablaVar -> empty .)
    INT             reduce using rule 117 (pnCheckTablaVar -> empty .)
    FLOAT           reduce using rule 117 (pnCheckTablaVar -> empty .)
    CHAR            reduce using rule 117 (pnCheckTablaVar -> empty .)
    RIGHT_PARENT    reduce using rule 117 (pnCheckTablaVar -> empty .)


state 20

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque .

    $end            reduce using rule 1 (programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque .)


state 21

    (6) bloque -> DO . LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript

    LEFT_CUR_BRACKET shift and go to state 32


state 22

    (4) funcp -> func funcp .

    DO              reduce using rule 4 (funcp -> func funcp .)
    ID              reduce using rule 4 (funcp -> func funcp .)
    READ            reduce using rule 4 (funcp -> func funcp .)
    WRITE           reduce using rule 4 (funcp -> func funcp .)
    IF              reduce using rule 4 (funcp -> func funcp .)
    WHILE           reduce using rule 4 (funcp -> func funcp .)
    FOR             reduce using rule 4 (funcp -> func funcp .)
    RETURNS         reduce using rule 4 (funcp -> func funcp .)
    READ_FILE       reduce using rule 4 (funcp -> func funcp .)
    MEAN            reduce using rule 4 (funcp -> func funcp .)
    MODE            reduce using rule 4 (funcp -> func funcp .)
    MEDIAN          reduce using rule 4 (funcp -> func funcp .)
    VARIANCE        reduce using rule 4 (funcp -> func funcp .)
    MAX             reduce using rule 4 (funcp -> func funcp .)
    MIN             reduce using rule 4 (funcp -> func funcp .)
    STADDES         reduce using rule 4 (funcp -> func funcp .)
    BOXPLOT         reduce using rule 4 (funcp -> func funcp .)
    LINREG          reduce using rule 4 (funcp -> func funcp .)
    RIGHT_CUR_BRACKET reduce using rule 4 (funcp -> func funcp .)


state 23

    (36) func -> FUNC returnval . ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    ARROW           shift and go to state 33


state 24

    (37) returnval -> tipo_simp .

    ARROW           reduce using rule 37 (returnval -> tipo_simp .)


state 25

    (38) returnval -> VOID . pnSaveTypeVar
    (119) pnSaveTypeVar -> . empty
    (163) empty -> .

    ARROW           reduce using rule 163 (empty -> .)

    pnSaveTypeVar                  shift and go to state 34
    empty                          shift and go to state 35

state 26

    (9) tipo_simp -> INT . pnSaveTypeVar
    (119) pnSaveTypeVar -> . empty
    (163) empty -> .

    ARROW           reduce using rule 163 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnSaveTypeVar                  shift and go to state 36
    empty                          shift and go to state 35

state 27

    (10) tipo_simp -> FLOAT . pnSaveTypeVar
    (119) pnSaveTypeVar -> . empty
    (163) empty -> .

    ARROW           reduce using rule 163 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnSaveTypeVar                  shift and go to state 37
    empty                          shift and go to state 35

state 28

    (11) tipo_simp -> CHAR . pnSaveTypeVar
    (119) pnSaveTypeVar -> . empty
    (163) empty -> .

    ARROW           reduce using rule 163 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnSaveTypeVar                  shift and go to state 38
    empty                          shift and go to state 35

state 29

    (26) var -> VAR pnCheckTablaVar v . ARROW idp SEMICOLON

    ARROW           shift and go to state 39


state 30

    (27) v -> DATAFRAME . pnSaveTypeVar
    (119) pnSaveTypeVar -> . empty
    (163) empty -> .

    ARROW           reduce using rule 163 (empty -> .)

    pnSaveTypeVar                  shift and go to state 40
    empty                          shift and go to state 35

state 31

    (28) v -> tipo_simp . vp
    (29) vp -> . LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET
    (30) vp -> . empty
    (163) empty -> .

    LEFT_SQR_BRACKET shift and go to state 42
    ARROW           reduce using rule 163 (empty -> .)

    vp                             shift and go to state 41
    empty                          shift and go to state 43

state 32

    (6) bloque -> DO LEFT_CUR_BRACKET . varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (163) empty -> .

    VAR             shift and go to state 12
    FUNC            reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    READ            reduce using rule 163 (empty -> .)
    WRITE           reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    FOR             reduce using rule 163 (empty -> .)
    RETURNS         reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)

    varp                           shift and go to state 44
    var                            shift and go to state 10
    empty                          shift and go to state 11

state 33

    (36) func -> FUNC returnval ARROW . ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    ID              shift and go to state 45


state 34

    (38) returnval -> VOID pnSaveTypeVar .

    ARROW           reduce using rule 38 (returnval -> VOID pnSaveTypeVar .)


state 35

    (119) pnSaveTypeVar -> empty .

    ARROW           reduce using rule 119 (pnSaveTypeVar -> empty .)
    LEFT_SQR_BRACKET reduce using rule 119 (pnSaveTypeVar -> empty .)


state 36

    (9) tipo_simp -> INT pnSaveTypeVar .

    ARROW           reduce using rule 9 (tipo_simp -> INT pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 9 (tipo_simp -> INT pnSaveTypeVar .)


state 37

    (10) tipo_simp -> FLOAT pnSaveTypeVar .

    ARROW           reduce using rule 10 (tipo_simp -> FLOAT pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 10 (tipo_simp -> FLOAT pnSaveTypeVar .)


state 38

    (11) tipo_simp -> CHAR pnSaveTypeVar .

    ARROW           reduce using rule 11 (tipo_simp -> CHAR pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 11 (tipo_simp -> CHAR pnSaveTypeVar .)


state 39

    (26) var -> VAR pnCheckTablaVar v ARROW . idp SEMICOLON
    (33) idp -> . ID pnCheckNameTablaVar idpp

    ID              shift and go to state 47

    idp                            shift and go to state 46

state 40

    (27) v -> DATAFRAME pnSaveTypeVar .

    ARROW           reduce using rule 27 (v -> DATAFRAME pnSaveTypeVar .)


state 41

    (28) v -> tipo_simp vp .

    ARROW           reduce using rule 28 (v -> tipo_simp vp .)


state 42

    (29) vp -> LEFT_SQR_BRACKET . CTEI vpp RIGHT_SQR_BRACKET

    CTEI            shift and go to state 48


state 43

    (30) vp -> empty .

    ARROW           reduce using rule 30 (vp -> empty .)


state 44

    (6) bloque -> DO LEFT_CUR_BRACKET varp . funcp estatutop RIGHT_CUR_BRACKET pnEndScript
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (163) empty -> .

    FUNC            shift and go to state 16
    ID              reduce using rule 163 (empty -> .)
    READ            reduce using rule 163 (empty -> .)
    WRITE           reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    FOR             reduce using rule 163 (empty -> .)
    RETURNS         reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)

    funcp                          shift and go to state 49
    func                           shift and go to state 14
    empty                          shift and go to state 15

state 45

    (36) func -> FUNC returnval ARROW ID . pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (121) pnAddFuncinDir -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)

    pnAddFuncinDir                 shift and go to state 50
    empty                          shift and go to state 51

state 46

    (26) var -> VAR pnCheckTablaVar v ARROW idp . SEMICOLON

    SEMICOLON       shift and go to state 52


state 47

    (33) idp -> ID . pnCheckNameTablaVar idpp
    (120) pnCheckNameTablaVar -> . empty
    (163) empty -> .

    COMMA           reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)

    pnCheckNameTablaVar            shift and go to state 53
    empty                          shift and go to state 54

state 48

    (29) vp -> LEFT_SQR_BRACKET CTEI . vpp RIGHT_SQR_BRACKET
    (31) vpp -> . COMMA CTEI
    (32) vpp -> . empty
    (163) empty -> .

    COMMA           shift and go to state 56
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    vpp                            shift and go to state 55
    empty                          shift and go to state 57

state 49

    (6) bloque -> DO LEFT_CUR_BRACKET varp funcp . estatutop RIGHT_CUR_BRACKET pnEndScript
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (163) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatutop                      shift and go to state 58
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 50

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir . LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    LEFT_PARENT     shift and go to state 98


state 51

    (121) pnAddFuncinDir -> empty .

    LEFT_PARENT     reduce using rule 121 (pnAddFuncinDir -> empty .)


state 52

    (26) var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .

    VAR             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    FUNC            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    DO              reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    ID              reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    READ            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    WRITE           reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    IF              reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    WHILE           reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    FOR             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    RETURNS         reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    READ_FILE       reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MEAN            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MODE            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MEDIAN          reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    VARIANCE        reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MAX             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MIN             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    STADDES         reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    BOXPLOT         reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    LINREG          reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)


state 53

    (33) idp -> ID pnCheckNameTablaVar . idpp
    (34) idpp -> . COMMA ID pnCheckNameTablaVar idpp
    (35) idpp -> . empty
    (163) empty -> .

    COMMA           shift and go to state 100
    SEMICOLON       reduce using rule 163 (empty -> .)

    idpp                           shift and go to state 99
    empty                          shift and go to state 101

state 54

    (120) pnCheckNameTablaVar -> empty .

    COMMA           reduce using rule 120 (pnCheckNameTablaVar -> empty .)
    SEMICOLON       reduce using rule 120 (pnCheckNameTablaVar -> empty .)


state 55

    (29) vp -> LEFT_SQR_BRACKET CTEI vpp . RIGHT_SQR_BRACKET

    RIGHT_SQR_BRACKET shift and go to state 102


state 56

    (31) vpp -> COMMA . CTEI

    CTEI            shift and go to state 103


state 57

    (32) vpp -> empty .

    RIGHT_SQR_BRACKET reduce using rule 32 (vpp -> empty .)


state 58

    (6) bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop . RIGHT_CUR_BRACKET pnEndScript

    RIGHT_CUR_BRACKET shift and go to state 104


state 59

    (7) estatutop -> estatuto . estatutop
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (163) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatuto                       shift and go to state 59
    estatutop                      shift and go to state 105
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 60

    (8) estatutop -> empty .

    RIGHT_CUR_BRACKET reduce using rule 8 (estatutop -> empty .)


state 61

    (46) estatuto -> asign .

    ID              reduce using rule 46 (estatuto -> asign .)
    READ            reduce using rule 46 (estatuto -> asign .)
    WRITE           reduce using rule 46 (estatuto -> asign .)
    IF              reduce using rule 46 (estatuto -> asign .)
    WHILE           reduce using rule 46 (estatuto -> asign .)
    FOR             reduce using rule 46 (estatuto -> asign .)
    RETURNS         reduce using rule 46 (estatuto -> asign .)
    READ_FILE       reduce using rule 46 (estatuto -> asign .)
    MEAN            reduce using rule 46 (estatuto -> asign .)
    MODE            reduce using rule 46 (estatuto -> asign .)
    MEDIAN          reduce using rule 46 (estatuto -> asign .)
    VARIANCE        reduce using rule 46 (estatuto -> asign .)
    MAX             reduce using rule 46 (estatuto -> asign .)
    MIN             reduce using rule 46 (estatuto -> asign .)
    STADDES         reduce using rule 46 (estatuto -> asign .)
    BOXPLOT         reduce using rule 46 (estatuto -> asign .)
    LINREG          reduce using rule 46 (estatuto -> asign .)
    RIGHT_CUR_BRACKET reduce using rule 46 (estatuto -> asign .)


state 62

    (47) estatuto -> llamada .

    ID              reduce using rule 47 (estatuto -> llamada .)
    READ            reduce using rule 47 (estatuto -> llamada .)
    WRITE           reduce using rule 47 (estatuto -> llamada .)
    IF              reduce using rule 47 (estatuto -> llamada .)
    WHILE           reduce using rule 47 (estatuto -> llamada .)
    FOR             reduce using rule 47 (estatuto -> llamada .)
    RETURNS         reduce using rule 47 (estatuto -> llamada .)
    READ_FILE       reduce using rule 47 (estatuto -> llamada .)
    MEAN            reduce using rule 47 (estatuto -> llamada .)
    MODE            reduce using rule 47 (estatuto -> llamada .)
    MEDIAN          reduce using rule 47 (estatuto -> llamada .)
    VARIANCE        reduce using rule 47 (estatuto -> llamada .)
    MAX             reduce using rule 47 (estatuto -> llamada .)
    MIN             reduce using rule 47 (estatuto -> llamada .)
    STADDES         reduce using rule 47 (estatuto -> llamada .)
    BOXPLOT         reduce using rule 47 (estatuto -> llamada .)
    LINREG          reduce using rule 47 (estatuto -> llamada .)
    RIGHT_CUR_BRACKET reduce using rule 47 (estatuto -> llamada .)


state 63

    (48) estatuto -> lee .

    ID              reduce using rule 48 (estatuto -> lee .)
    READ            reduce using rule 48 (estatuto -> lee .)
    WRITE           reduce using rule 48 (estatuto -> lee .)
    IF              reduce using rule 48 (estatuto -> lee .)
    WHILE           reduce using rule 48 (estatuto -> lee .)
    FOR             reduce using rule 48 (estatuto -> lee .)
    RETURNS         reduce using rule 48 (estatuto -> lee .)
    READ_FILE       reduce using rule 48 (estatuto -> lee .)
    MEAN            reduce using rule 48 (estatuto -> lee .)
    MODE            reduce using rule 48 (estatuto -> lee .)
    MEDIAN          reduce using rule 48 (estatuto -> lee .)
    VARIANCE        reduce using rule 48 (estatuto -> lee .)
    MAX             reduce using rule 48 (estatuto -> lee .)
    MIN             reduce using rule 48 (estatuto -> lee .)
    STADDES         reduce using rule 48 (estatuto -> lee .)
    BOXPLOT         reduce using rule 48 (estatuto -> lee .)
    LINREG          reduce using rule 48 (estatuto -> lee .)
    RIGHT_CUR_BRACKET reduce using rule 48 (estatuto -> lee .)


state 64

    (49) estatuto -> escribe .

    ID              reduce using rule 49 (estatuto -> escribe .)
    READ            reduce using rule 49 (estatuto -> escribe .)
    WRITE           reduce using rule 49 (estatuto -> escribe .)
    IF              reduce using rule 49 (estatuto -> escribe .)
    WHILE           reduce using rule 49 (estatuto -> escribe .)
    FOR             reduce using rule 49 (estatuto -> escribe .)
    RETURNS         reduce using rule 49 (estatuto -> escribe .)
    READ_FILE       reduce using rule 49 (estatuto -> escribe .)
    MEAN            reduce using rule 49 (estatuto -> escribe .)
    MODE            reduce using rule 49 (estatuto -> escribe .)
    MEDIAN          reduce using rule 49 (estatuto -> escribe .)
    VARIANCE        reduce using rule 49 (estatuto -> escribe .)
    MAX             reduce using rule 49 (estatuto -> escribe .)
    MIN             reduce using rule 49 (estatuto -> escribe .)
    STADDES         reduce using rule 49 (estatuto -> escribe .)
    BOXPLOT         reduce using rule 49 (estatuto -> escribe .)
    LINREG          reduce using rule 49 (estatuto -> escribe .)
    RIGHT_CUR_BRACKET reduce using rule 49 (estatuto -> escribe .)


state 65

    (50) estatuto -> condicion .

    ID              reduce using rule 50 (estatuto -> condicion .)
    READ            reduce using rule 50 (estatuto -> condicion .)
    WRITE           reduce using rule 50 (estatuto -> condicion .)
    IF              reduce using rule 50 (estatuto -> condicion .)
    WHILE           reduce using rule 50 (estatuto -> condicion .)
    FOR             reduce using rule 50 (estatuto -> condicion .)
    RETURNS         reduce using rule 50 (estatuto -> condicion .)
    READ_FILE       reduce using rule 50 (estatuto -> condicion .)
    MEAN            reduce using rule 50 (estatuto -> condicion .)
    MODE            reduce using rule 50 (estatuto -> condicion .)
    MEDIAN          reduce using rule 50 (estatuto -> condicion .)
    VARIANCE        reduce using rule 50 (estatuto -> condicion .)
    MAX             reduce using rule 50 (estatuto -> condicion .)
    MIN             reduce using rule 50 (estatuto -> condicion .)
    STADDES         reduce using rule 50 (estatuto -> condicion .)
    BOXPLOT         reduce using rule 50 (estatuto -> condicion .)
    LINREG          reduce using rule 50 (estatuto -> condicion .)
    RIGHT_CUR_BRACKET reduce using rule 50 (estatuto -> condicion .)


state 66

    (51) estatuto -> ciclow .

    ID              reduce using rule 51 (estatuto -> ciclow .)
    READ            reduce using rule 51 (estatuto -> ciclow .)
    WRITE           reduce using rule 51 (estatuto -> ciclow .)
    IF              reduce using rule 51 (estatuto -> ciclow .)
    WHILE           reduce using rule 51 (estatuto -> ciclow .)
    FOR             reduce using rule 51 (estatuto -> ciclow .)
    RETURNS         reduce using rule 51 (estatuto -> ciclow .)
    READ_FILE       reduce using rule 51 (estatuto -> ciclow .)
    MEAN            reduce using rule 51 (estatuto -> ciclow .)
    MODE            reduce using rule 51 (estatuto -> ciclow .)
    MEDIAN          reduce using rule 51 (estatuto -> ciclow .)
    VARIANCE        reduce using rule 51 (estatuto -> ciclow .)
    MAX             reduce using rule 51 (estatuto -> ciclow .)
    MIN             reduce using rule 51 (estatuto -> ciclow .)
    STADDES         reduce using rule 51 (estatuto -> ciclow .)
    BOXPLOT         reduce using rule 51 (estatuto -> ciclow .)
    LINREG          reduce using rule 51 (estatuto -> ciclow .)
    RIGHT_CUR_BRACKET reduce using rule 51 (estatuto -> ciclow .)


state 67

    (52) estatuto -> ciclof .

    ID              reduce using rule 52 (estatuto -> ciclof .)
    READ            reduce using rule 52 (estatuto -> ciclof .)
    WRITE           reduce using rule 52 (estatuto -> ciclof .)
    IF              reduce using rule 52 (estatuto -> ciclof .)
    WHILE           reduce using rule 52 (estatuto -> ciclof .)
    FOR             reduce using rule 52 (estatuto -> ciclof .)
    RETURNS         reduce using rule 52 (estatuto -> ciclof .)
    READ_FILE       reduce using rule 52 (estatuto -> ciclof .)
    MEAN            reduce using rule 52 (estatuto -> ciclof .)
    MODE            reduce using rule 52 (estatuto -> ciclof .)
    MEDIAN          reduce using rule 52 (estatuto -> ciclof .)
    VARIANCE        reduce using rule 52 (estatuto -> ciclof .)
    MAX             reduce using rule 52 (estatuto -> ciclof .)
    MIN             reduce using rule 52 (estatuto -> ciclof .)
    STADDES         reduce using rule 52 (estatuto -> ciclof .)
    BOXPLOT         reduce using rule 52 (estatuto -> ciclof .)
    LINREG          reduce using rule 52 (estatuto -> ciclof .)
    RIGHT_CUR_BRACKET reduce using rule 52 (estatuto -> ciclof .)


state 68

    (53) estatuto -> funcesp .

    ID              reduce using rule 53 (estatuto -> funcesp .)
    READ            reduce using rule 53 (estatuto -> funcesp .)
    WRITE           reduce using rule 53 (estatuto -> funcesp .)
    IF              reduce using rule 53 (estatuto -> funcesp .)
    WHILE           reduce using rule 53 (estatuto -> funcesp .)
    FOR             reduce using rule 53 (estatuto -> funcesp .)
    RETURNS         reduce using rule 53 (estatuto -> funcesp .)
    READ_FILE       reduce using rule 53 (estatuto -> funcesp .)
    MEAN            reduce using rule 53 (estatuto -> funcesp .)
    MODE            reduce using rule 53 (estatuto -> funcesp .)
    MEDIAN          reduce using rule 53 (estatuto -> funcesp .)
    VARIANCE        reduce using rule 53 (estatuto -> funcesp .)
    MAX             reduce using rule 53 (estatuto -> funcesp .)
    MIN             reduce using rule 53 (estatuto -> funcesp .)
    STADDES         reduce using rule 53 (estatuto -> funcesp .)
    BOXPLOT         reduce using rule 53 (estatuto -> funcesp .)
    LINREG          reduce using rule 53 (estatuto -> funcesp .)
    RIGHT_CUR_BRACKET reduce using rule 53 (estatuto -> funcesp .)


state 69

    (54) estatuto -> return .

    ID              reduce using rule 54 (estatuto -> return .)
    READ            reduce using rule 54 (estatuto -> return .)
    WRITE           reduce using rule 54 (estatuto -> return .)
    IF              reduce using rule 54 (estatuto -> return .)
    WHILE           reduce using rule 54 (estatuto -> return .)
    FOR             reduce using rule 54 (estatuto -> return .)
    RETURNS         reduce using rule 54 (estatuto -> return .)
    READ_FILE       reduce using rule 54 (estatuto -> return .)
    MEAN            reduce using rule 54 (estatuto -> return .)
    MODE            reduce using rule 54 (estatuto -> return .)
    MEDIAN          reduce using rule 54 (estatuto -> return .)
    VARIANCE        reduce using rule 54 (estatuto -> return .)
    MAX             reduce using rule 54 (estatuto -> return .)
    MIN             reduce using rule 54 (estatuto -> return .)
    STADDES         reduce using rule 54 (estatuto -> return .)
    BOXPLOT         reduce using rule 54 (estatuto -> return .)
    LINREG          reduce using rule 54 (estatuto -> return .)
    RIGHT_CUR_BRACKET reduce using rule 54 (estatuto -> return .)


state 70

    (55) estatuto -> copy .
    (105) funcesp -> copy .

  ! reduce/reduce conflict for ID resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for READ resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for WRITE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for IF resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for WHILE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for FOR resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for RETURNS resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for READ_FILE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MEAN resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MODE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MEDIAN resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for VARIANCE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MAX resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MIN resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for STADDES resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for BOXPLOT resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for LINREG resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for RIGHT_CUR_BRACKET resolved using rule 55 (estatuto -> copy .)
    ID              reduce using rule 55 (estatuto -> copy .)
    READ            reduce using rule 55 (estatuto -> copy .)
    WRITE           reduce using rule 55 (estatuto -> copy .)
    IF              reduce using rule 55 (estatuto -> copy .)
    WHILE           reduce using rule 55 (estatuto -> copy .)
    FOR             reduce using rule 55 (estatuto -> copy .)
    RETURNS         reduce using rule 55 (estatuto -> copy .)
    READ_FILE       reduce using rule 55 (estatuto -> copy .)
    MEAN            reduce using rule 55 (estatuto -> copy .)
    MODE            reduce using rule 55 (estatuto -> copy .)
    MEDIAN          reduce using rule 55 (estatuto -> copy .)
    VARIANCE        reduce using rule 55 (estatuto -> copy .)
    MAX             reduce using rule 55 (estatuto -> copy .)
    MIN             reduce using rule 55 (estatuto -> copy .)
    STADDES         reduce using rule 55 (estatuto -> copy .)
    BOXPLOT         reduce using rule 55 (estatuto -> copy .)
    LINREG          reduce using rule 55 (estatuto -> copy .)
    RIGHT_CUR_BRACKET reduce using rule 55 (estatuto -> copy .)

  ! ID              [ reduce using rule 105 (funcesp -> copy .) ]
  ! READ            [ reduce using rule 105 (funcesp -> copy .) ]
  ! WRITE           [ reduce using rule 105 (funcesp -> copy .) ]
  ! IF              [ reduce using rule 105 (funcesp -> copy .) ]
  ! WHILE           [ reduce using rule 105 (funcesp -> copy .) ]
  ! FOR             [ reduce using rule 105 (funcesp -> copy .) ]
  ! RETURNS         [ reduce using rule 105 (funcesp -> copy .) ]
  ! READ_FILE       [ reduce using rule 105 (funcesp -> copy .) ]
  ! MEAN            [ reduce using rule 105 (funcesp -> copy .) ]
  ! MODE            [ reduce using rule 105 (funcesp -> copy .) ]
  ! MEDIAN          [ reduce using rule 105 (funcesp -> copy .) ]
  ! VARIANCE        [ reduce using rule 105 (funcesp -> copy .) ]
  ! MAX             [ reduce using rule 105 (funcesp -> copy .) ]
  ! MIN             [ reduce using rule 105 (funcesp -> copy .) ]
  ! STADDES         [ reduce using rule 105 (funcesp -> copy .) ]
  ! BOXPLOT         [ reduce using rule 105 (funcesp -> copy .) ]
  ! LINREG          [ reduce using rule 105 (funcesp -> copy .) ]
  ! RIGHT_CUR_BRACKET [ reduce using rule 105 (funcesp -> copy .) ]


state 71

    (56) asign -> variable . ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON

    ASIGN           shift and go to state 106


state 72

    (21) llamada -> ID . pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (16) variable -> ID . pnSaveOperandos indexp
    (127) pnCheckFunc -> . empty
    (138) pnSaveOperandos -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 163 (empty -> .)
    ASIGN           reduce using rule 163 (empty -> .)

    pnCheckFunc                    shift and go to state 107
    pnSaveOperandos                shift and go to state 108
    empty                          shift and go to state 109

state 73

    (57) lee -> READ . LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 110


state 74

    (58) escribe -> WRITE . LEFT_PARENT escribep RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 111


state 75

    (91) condicion -> IF . LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf

    LEFT_PARENT     shift and go to state 112


state 76

    (94) ciclow -> WHILE . pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (157) pnSaveWhile -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)

    pnSaveWhile                    shift and go to state 113
    empty                          shift and go to state 114

state 77

    (95) ciclof -> FOR . LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    LEFT_PARENT     shift and go to state 115


state 78

    (96) funcesp -> mean .

    ID              reduce using rule 96 (funcesp -> mean .)
    READ            reduce using rule 96 (funcesp -> mean .)
    WRITE           reduce using rule 96 (funcesp -> mean .)
    IF              reduce using rule 96 (funcesp -> mean .)
    WHILE           reduce using rule 96 (funcesp -> mean .)
    FOR             reduce using rule 96 (funcesp -> mean .)
    RETURNS         reduce using rule 96 (funcesp -> mean .)
    READ_FILE       reduce using rule 96 (funcesp -> mean .)
    MEAN            reduce using rule 96 (funcesp -> mean .)
    MODE            reduce using rule 96 (funcesp -> mean .)
    MEDIAN          reduce using rule 96 (funcesp -> mean .)
    VARIANCE        reduce using rule 96 (funcesp -> mean .)
    MAX             reduce using rule 96 (funcesp -> mean .)
    MIN             reduce using rule 96 (funcesp -> mean .)
    STADDES         reduce using rule 96 (funcesp -> mean .)
    BOXPLOT         reduce using rule 96 (funcesp -> mean .)
    LINREG          reduce using rule 96 (funcesp -> mean .)
    RIGHT_CUR_BRACKET reduce using rule 96 (funcesp -> mean .)
    MULT            reduce using rule 96 (funcesp -> mean .)
    DIV             reduce using rule 96 (funcesp -> mean .)
    PLUS            reduce using rule 96 (funcesp -> mean .)
    MINUS           reduce using rule 96 (funcesp -> mean .)
    LESS_THAN       reduce using rule 96 (funcesp -> mean .)
    GREATER_THAN    reduce using rule 96 (funcesp -> mean .)
    EQUALS          reduce using rule 96 (funcesp -> mean .)
    NOTEQUALS       reduce using rule 96 (funcesp -> mean .)
    AND             reduce using rule 96 (funcesp -> mean .)
    OR              reduce using rule 96 (funcesp -> mean .)
    SEMICOLON       reduce using rule 96 (funcesp -> mean .)
    RIGHT_PARENT    reduce using rule 96 (funcesp -> mean .)
    COMMA           reduce using rule 96 (funcesp -> mean .)
    RIGHT_SQR_BRACKET reduce using rule 96 (funcesp -> mean .)


state 79

    (97) funcesp -> mode .

    ID              reduce using rule 97 (funcesp -> mode .)
    READ            reduce using rule 97 (funcesp -> mode .)
    WRITE           reduce using rule 97 (funcesp -> mode .)
    IF              reduce using rule 97 (funcesp -> mode .)
    WHILE           reduce using rule 97 (funcesp -> mode .)
    FOR             reduce using rule 97 (funcesp -> mode .)
    RETURNS         reduce using rule 97 (funcesp -> mode .)
    READ_FILE       reduce using rule 97 (funcesp -> mode .)
    MEAN            reduce using rule 97 (funcesp -> mode .)
    MODE            reduce using rule 97 (funcesp -> mode .)
    MEDIAN          reduce using rule 97 (funcesp -> mode .)
    VARIANCE        reduce using rule 97 (funcesp -> mode .)
    MAX             reduce using rule 97 (funcesp -> mode .)
    MIN             reduce using rule 97 (funcesp -> mode .)
    STADDES         reduce using rule 97 (funcesp -> mode .)
    BOXPLOT         reduce using rule 97 (funcesp -> mode .)
    LINREG          reduce using rule 97 (funcesp -> mode .)
    RIGHT_CUR_BRACKET reduce using rule 97 (funcesp -> mode .)
    MULT            reduce using rule 97 (funcesp -> mode .)
    DIV             reduce using rule 97 (funcesp -> mode .)
    PLUS            reduce using rule 97 (funcesp -> mode .)
    MINUS           reduce using rule 97 (funcesp -> mode .)
    LESS_THAN       reduce using rule 97 (funcesp -> mode .)
    GREATER_THAN    reduce using rule 97 (funcesp -> mode .)
    EQUALS          reduce using rule 97 (funcesp -> mode .)
    NOTEQUALS       reduce using rule 97 (funcesp -> mode .)
    AND             reduce using rule 97 (funcesp -> mode .)
    OR              reduce using rule 97 (funcesp -> mode .)
    SEMICOLON       reduce using rule 97 (funcesp -> mode .)
    RIGHT_PARENT    reduce using rule 97 (funcesp -> mode .)
    COMMA           reduce using rule 97 (funcesp -> mode .)
    RIGHT_SQR_BRACKET reduce using rule 97 (funcesp -> mode .)


state 80

    (98) funcesp -> median .

    ID              reduce using rule 98 (funcesp -> median .)
    READ            reduce using rule 98 (funcesp -> median .)
    WRITE           reduce using rule 98 (funcesp -> median .)
    IF              reduce using rule 98 (funcesp -> median .)
    WHILE           reduce using rule 98 (funcesp -> median .)
    FOR             reduce using rule 98 (funcesp -> median .)
    RETURNS         reduce using rule 98 (funcesp -> median .)
    READ_FILE       reduce using rule 98 (funcesp -> median .)
    MEAN            reduce using rule 98 (funcesp -> median .)
    MODE            reduce using rule 98 (funcesp -> median .)
    MEDIAN          reduce using rule 98 (funcesp -> median .)
    VARIANCE        reduce using rule 98 (funcesp -> median .)
    MAX             reduce using rule 98 (funcesp -> median .)
    MIN             reduce using rule 98 (funcesp -> median .)
    STADDES         reduce using rule 98 (funcesp -> median .)
    BOXPLOT         reduce using rule 98 (funcesp -> median .)
    LINREG          reduce using rule 98 (funcesp -> median .)
    RIGHT_CUR_BRACKET reduce using rule 98 (funcesp -> median .)
    MULT            reduce using rule 98 (funcesp -> median .)
    DIV             reduce using rule 98 (funcesp -> median .)
    PLUS            reduce using rule 98 (funcesp -> median .)
    MINUS           reduce using rule 98 (funcesp -> median .)
    LESS_THAN       reduce using rule 98 (funcesp -> median .)
    GREATER_THAN    reduce using rule 98 (funcesp -> median .)
    EQUALS          reduce using rule 98 (funcesp -> median .)
    NOTEQUALS       reduce using rule 98 (funcesp -> median .)
    AND             reduce using rule 98 (funcesp -> median .)
    OR              reduce using rule 98 (funcesp -> median .)
    SEMICOLON       reduce using rule 98 (funcesp -> median .)
    RIGHT_PARENT    reduce using rule 98 (funcesp -> median .)
    COMMA           reduce using rule 98 (funcesp -> median .)
    RIGHT_SQR_BRACKET reduce using rule 98 (funcesp -> median .)


state 81

    (99) funcesp -> variance .

    ID              reduce using rule 99 (funcesp -> variance .)
    READ            reduce using rule 99 (funcesp -> variance .)
    WRITE           reduce using rule 99 (funcesp -> variance .)
    IF              reduce using rule 99 (funcesp -> variance .)
    WHILE           reduce using rule 99 (funcesp -> variance .)
    FOR             reduce using rule 99 (funcesp -> variance .)
    RETURNS         reduce using rule 99 (funcesp -> variance .)
    READ_FILE       reduce using rule 99 (funcesp -> variance .)
    MEAN            reduce using rule 99 (funcesp -> variance .)
    MODE            reduce using rule 99 (funcesp -> variance .)
    MEDIAN          reduce using rule 99 (funcesp -> variance .)
    VARIANCE        reduce using rule 99 (funcesp -> variance .)
    MAX             reduce using rule 99 (funcesp -> variance .)
    MIN             reduce using rule 99 (funcesp -> variance .)
    STADDES         reduce using rule 99 (funcesp -> variance .)
    BOXPLOT         reduce using rule 99 (funcesp -> variance .)
    LINREG          reduce using rule 99 (funcesp -> variance .)
    RIGHT_CUR_BRACKET reduce using rule 99 (funcesp -> variance .)
    MULT            reduce using rule 99 (funcesp -> variance .)
    DIV             reduce using rule 99 (funcesp -> variance .)
    PLUS            reduce using rule 99 (funcesp -> variance .)
    MINUS           reduce using rule 99 (funcesp -> variance .)
    LESS_THAN       reduce using rule 99 (funcesp -> variance .)
    GREATER_THAN    reduce using rule 99 (funcesp -> variance .)
    EQUALS          reduce using rule 99 (funcesp -> variance .)
    NOTEQUALS       reduce using rule 99 (funcesp -> variance .)
    AND             reduce using rule 99 (funcesp -> variance .)
    OR              reduce using rule 99 (funcesp -> variance .)
    SEMICOLON       reduce using rule 99 (funcesp -> variance .)
    RIGHT_PARENT    reduce using rule 99 (funcesp -> variance .)
    COMMA           reduce using rule 99 (funcesp -> variance .)
    RIGHT_SQR_BRACKET reduce using rule 99 (funcesp -> variance .)


state 82

    (100) funcesp -> max .

    ID              reduce using rule 100 (funcesp -> max .)
    READ            reduce using rule 100 (funcesp -> max .)
    WRITE           reduce using rule 100 (funcesp -> max .)
    IF              reduce using rule 100 (funcesp -> max .)
    WHILE           reduce using rule 100 (funcesp -> max .)
    FOR             reduce using rule 100 (funcesp -> max .)
    RETURNS         reduce using rule 100 (funcesp -> max .)
    READ_FILE       reduce using rule 100 (funcesp -> max .)
    MEAN            reduce using rule 100 (funcesp -> max .)
    MODE            reduce using rule 100 (funcesp -> max .)
    MEDIAN          reduce using rule 100 (funcesp -> max .)
    VARIANCE        reduce using rule 100 (funcesp -> max .)
    MAX             reduce using rule 100 (funcesp -> max .)
    MIN             reduce using rule 100 (funcesp -> max .)
    STADDES         reduce using rule 100 (funcesp -> max .)
    BOXPLOT         reduce using rule 100 (funcesp -> max .)
    LINREG          reduce using rule 100 (funcesp -> max .)
    RIGHT_CUR_BRACKET reduce using rule 100 (funcesp -> max .)
    MULT            reduce using rule 100 (funcesp -> max .)
    DIV             reduce using rule 100 (funcesp -> max .)
    PLUS            reduce using rule 100 (funcesp -> max .)
    MINUS           reduce using rule 100 (funcesp -> max .)
    LESS_THAN       reduce using rule 100 (funcesp -> max .)
    GREATER_THAN    reduce using rule 100 (funcesp -> max .)
    EQUALS          reduce using rule 100 (funcesp -> max .)
    NOTEQUALS       reduce using rule 100 (funcesp -> max .)
    AND             reduce using rule 100 (funcesp -> max .)
    OR              reduce using rule 100 (funcesp -> max .)
    SEMICOLON       reduce using rule 100 (funcesp -> max .)
    RIGHT_PARENT    reduce using rule 100 (funcesp -> max .)
    COMMA           reduce using rule 100 (funcesp -> max .)
    RIGHT_SQR_BRACKET reduce using rule 100 (funcesp -> max .)


state 83

    (101) funcesp -> min .

    ID              reduce using rule 101 (funcesp -> min .)
    READ            reduce using rule 101 (funcesp -> min .)
    WRITE           reduce using rule 101 (funcesp -> min .)
    IF              reduce using rule 101 (funcesp -> min .)
    WHILE           reduce using rule 101 (funcesp -> min .)
    FOR             reduce using rule 101 (funcesp -> min .)
    RETURNS         reduce using rule 101 (funcesp -> min .)
    READ_FILE       reduce using rule 101 (funcesp -> min .)
    MEAN            reduce using rule 101 (funcesp -> min .)
    MODE            reduce using rule 101 (funcesp -> min .)
    MEDIAN          reduce using rule 101 (funcesp -> min .)
    VARIANCE        reduce using rule 101 (funcesp -> min .)
    MAX             reduce using rule 101 (funcesp -> min .)
    MIN             reduce using rule 101 (funcesp -> min .)
    STADDES         reduce using rule 101 (funcesp -> min .)
    BOXPLOT         reduce using rule 101 (funcesp -> min .)
    LINREG          reduce using rule 101 (funcesp -> min .)
    RIGHT_CUR_BRACKET reduce using rule 101 (funcesp -> min .)
    MULT            reduce using rule 101 (funcesp -> min .)
    DIV             reduce using rule 101 (funcesp -> min .)
    PLUS            reduce using rule 101 (funcesp -> min .)
    MINUS           reduce using rule 101 (funcesp -> min .)
    LESS_THAN       reduce using rule 101 (funcesp -> min .)
    GREATER_THAN    reduce using rule 101 (funcesp -> min .)
    EQUALS          reduce using rule 101 (funcesp -> min .)
    NOTEQUALS       reduce using rule 101 (funcesp -> min .)
    AND             reduce using rule 101 (funcesp -> min .)
    OR              reduce using rule 101 (funcesp -> min .)
    SEMICOLON       reduce using rule 101 (funcesp -> min .)
    RIGHT_PARENT    reduce using rule 101 (funcesp -> min .)
    COMMA           reduce using rule 101 (funcesp -> min .)
    RIGHT_SQR_BRACKET reduce using rule 101 (funcesp -> min .)


state 84

    (102) funcesp -> staddes .

    ID              reduce using rule 102 (funcesp -> staddes .)
    READ            reduce using rule 102 (funcesp -> staddes .)
    WRITE           reduce using rule 102 (funcesp -> staddes .)
    IF              reduce using rule 102 (funcesp -> staddes .)
    WHILE           reduce using rule 102 (funcesp -> staddes .)
    FOR             reduce using rule 102 (funcesp -> staddes .)
    RETURNS         reduce using rule 102 (funcesp -> staddes .)
    READ_FILE       reduce using rule 102 (funcesp -> staddes .)
    MEAN            reduce using rule 102 (funcesp -> staddes .)
    MODE            reduce using rule 102 (funcesp -> staddes .)
    MEDIAN          reduce using rule 102 (funcesp -> staddes .)
    VARIANCE        reduce using rule 102 (funcesp -> staddes .)
    MAX             reduce using rule 102 (funcesp -> staddes .)
    MIN             reduce using rule 102 (funcesp -> staddes .)
    STADDES         reduce using rule 102 (funcesp -> staddes .)
    BOXPLOT         reduce using rule 102 (funcesp -> staddes .)
    LINREG          reduce using rule 102 (funcesp -> staddes .)
    RIGHT_CUR_BRACKET reduce using rule 102 (funcesp -> staddes .)
    MULT            reduce using rule 102 (funcesp -> staddes .)
    DIV             reduce using rule 102 (funcesp -> staddes .)
    PLUS            reduce using rule 102 (funcesp -> staddes .)
    MINUS           reduce using rule 102 (funcesp -> staddes .)
    LESS_THAN       reduce using rule 102 (funcesp -> staddes .)
    GREATER_THAN    reduce using rule 102 (funcesp -> staddes .)
    EQUALS          reduce using rule 102 (funcesp -> staddes .)
    NOTEQUALS       reduce using rule 102 (funcesp -> staddes .)
    AND             reduce using rule 102 (funcesp -> staddes .)
    OR              reduce using rule 102 (funcesp -> staddes .)
    SEMICOLON       reduce using rule 102 (funcesp -> staddes .)
    RIGHT_PARENT    reduce using rule 102 (funcesp -> staddes .)
    COMMA           reduce using rule 102 (funcesp -> staddes .)
    RIGHT_SQR_BRACKET reduce using rule 102 (funcesp -> staddes .)


state 85

    (103) funcesp -> boxplot .

    ID              reduce using rule 103 (funcesp -> boxplot .)
    READ            reduce using rule 103 (funcesp -> boxplot .)
    WRITE           reduce using rule 103 (funcesp -> boxplot .)
    IF              reduce using rule 103 (funcesp -> boxplot .)
    WHILE           reduce using rule 103 (funcesp -> boxplot .)
    FOR             reduce using rule 103 (funcesp -> boxplot .)
    RETURNS         reduce using rule 103 (funcesp -> boxplot .)
    READ_FILE       reduce using rule 103 (funcesp -> boxplot .)
    MEAN            reduce using rule 103 (funcesp -> boxplot .)
    MODE            reduce using rule 103 (funcesp -> boxplot .)
    MEDIAN          reduce using rule 103 (funcesp -> boxplot .)
    VARIANCE        reduce using rule 103 (funcesp -> boxplot .)
    MAX             reduce using rule 103 (funcesp -> boxplot .)
    MIN             reduce using rule 103 (funcesp -> boxplot .)
    STADDES         reduce using rule 103 (funcesp -> boxplot .)
    BOXPLOT         reduce using rule 103 (funcesp -> boxplot .)
    LINREG          reduce using rule 103 (funcesp -> boxplot .)
    RIGHT_CUR_BRACKET reduce using rule 103 (funcesp -> boxplot .)
    MULT            reduce using rule 103 (funcesp -> boxplot .)
    DIV             reduce using rule 103 (funcesp -> boxplot .)
    PLUS            reduce using rule 103 (funcesp -> boxplot .)
    MINUS           reduce using rule 103 (funcesp -> boxplot .)
    LESS_THAN       reduce using rule 103 (funcesp -> boxplot .)
    GREATER_THAN    reduce using rule 103 (funcesp -> boxplot .)
    EQUALS          reduce using rule 103 (funcesp -> boxplot .)
    NOTEQUALS       reduce using rule 103 (funcesp -> boxplot .)
    AND             reduce using rule 103 (funcesp -> boxplot .)
    OR              reduce using rule 103 (funcesp -> boxplot .)
    SEMICOLON       reduce using rule 103 (funcesp -> boxplot .)
    RIGHT_PARENT    reduce using rule 103 (funcesp -> boxplot .)
    COMMA           reduce using rule 103 (funcesp -> boxplot .)
    RIGHT_SQR_BRACKET reduce using rule 103 (funcesp -> boxplot .)


state 86

    (104) funcesp -> linreg .

    ID              reduce using rule 104 (funcesp -> linreg .)
    READ            reduce using rule 104 (funcesp -> linreg .)
    WRITE           reduce using rule 104 (funcesp -> linreg .)
    IF              reduce using rule 104 (funcesp -> linreg .)
    WHILE           reduce using rule 104 (funcesp -> linreg .)
    FOR             reduce using rule 104 (funcesp -> linreg .)
    RETURNS         reduce using rule 104 (funcesp -> linreg .)
    READ_FILE       reduce using rule 104 (funcesp -> linreg .)
    MEAN            reduce using rule 104 (funcesp -> linreg .)
    MODE            reduce using rule 104 (funcesp -> linreg .)
    MEDIAN          reduce using rule 104 (funcesp -> linreg .)
    VARIANCE        reduce using rule 104 (funcesp -> linreg .)
    MAX             reduce using rule 104 (funcesp -> linreg .)
    MIN             reduce using rule 104 (funcesp -> linreg .)
    STADDES         reduce using rule 104 (funcesp -> linreg .)
    BOXPLOT         reduce using rule 104 (funcesp -> linreg .)
    LINREG          reduce using rule 104 (funcesp -> linreg .)
    RIGHT_CUR_BRACKET reduce using rule 104 (funcesp -> linreg .)
    MULT            reduce using rule 104 (funcesp -> linreg .)
    DIV             reduce using rule 104 (funcesp -> linreg .)
    PLUS            reduce using rule 104 (funcesp -> linreg .)
    MINUS           reduce using rule 104 (funcesp -> linreg .)
    LESS_THAN       reduce using rule 104 (funcesp -> linreg .)
    GREATER_THAN    reduce using rule 104 (funcesp -> linreg .)
    EQUALS          reduce using rule 104 (funcesp -> linreg .)
    NOTEQUALS       reduce using rule 104 (funcesp -> linreg .)
    AND             reduce using rule 104 (funcesp -> linreg .)
    OR              reduce using rule 104 (funcesp -> linreg .)
    SEMICOLON       reduce using rule 104 (funcesp -> linreg .)
    RIGHT_PARENT    reduce using rule 104 (funcesp -> linreg .)
    COMMA           reduce using rule 104 (funcesp -> linreg .)
    RIGHT_SQR_BRACKET reduce using rule 104 (funcesp -> linreg .)


state 87

    (61) return -> RETURNS . exp SEMICOLON
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 116
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 88

    (14) copy -> READ_FILE . LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130


state 89

    (106) mean -> MEAN . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 131


state 90

    (107) mode -> MODE . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 132


state 91

    (108) median -> MEDIAN . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 133


state 92

    (109) variance -> VARIANCE . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 134


state 93

    (110) max -> MAX . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 135


state 94

    (111) min -> MIN . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 136


state 95

    (112) staddes -> STADDES . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 137


state 96

    (113) boxplot -> BOXPLOT . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 138


state 97

    (114) linreg -> LINREG . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 139


state 98

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT . pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (117) pnCheckTablaVar -> . empty
    (163) empty -> .

    DATAFRAME       reduce using rule 163 (empty -> .)
    INT             reduce using rule 163 (empty -> .)
    FLOAT           reduce using rule 163 (empty -> .)
    CHAR            reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCheckTablaVar                shift and go to state 140
    empty                          shift and go to state 19

state 99

    (33) idp -> ID pnCheckNameTablaVar idpp .

    SEMICOLON       reduce using rule 33 (idp -> ID pnCheckNameTablaVar idpp .)


state 100

    (34) idpp -> COMMA . ID pnCheckNameTablaVar idpp

    ID              shift and go to state 141


state 101

    (35) idpp -> empty .

    SEMICOLON       reduce using rule 35 (idpp -> empty .)


state 102

    (29) vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET .

    ARROW           reduce using rule 29 (vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET .)


state 103

    (31) vpp -> COMMA CTEI .

    RIGHT_SQR_BRACKET reduce using rule 31 (vpp -> COMMA CTEI .)


state 104

    (6) bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET . pnEndScript
    (126) pnEndScript -> . empty
    (163) empty -> .

    $end            reduce using rule 163 (empty -> .)

    pnEndScript                    shift and go to state 142
    empty                          shift and go to state 143

state 105

    (7) estatutop -> estatuto estatutop .

    RIGHT_CUR_BRACKET reduce using rule 7 (estatutop -> estatuto estatutop .)


state 106

    (56) asign -> variable ASIGN . pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (148) pnSaveOperadorAsign -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)
    CTEI            reduce using rule 163 (empty -> .)
    CTEF            reduce using rule 163 (empty -> .)
    CTEC            reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)

    pnSaveOperadorAsign            shift and go to state 144
    empty                          shift and go to state 145

state 107

    (21) llamada -> ID pnCheckFunc . LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub

    LEFT_PARENT     shift and go to state 146


state 108

    (16) variable -> ID pnSaveOperandos . indexp
    (17) indexp -> . LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET
    (18) indexp -> . empty
    (163) empty -> .

    LEFT_SQR_BRACKET shift and go to state 148
    ASIGN           reduce using rule 163 (empty -> .)
    MULT            reduce using rule 163 (empty -> .)
    DIV             reduce using rule 163 (empty -> .)
    PLUS            reduce using rule 163 (empty -> .)
    MINUS           reduce using rule 163 (empty -> .)
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    indexp                         shift and go to state 147
    empty                          shift and go to state 149

state 109

    (127) pnCheckFunc -> empty .
    (138) pnSaveOperandos -> empty .

    LEFT_PARENT     reduce using rule 127 (pnCheckFunc -> empty .)
    LEFT_SQR_BRACKET reduce using rule 138 (pnSaveOperandos -> empty .)
    ASIGN           reduce using rule 138 (pnSaveOperandos -> empty .)


state 110

    (57) lee -> READ LEFT_PARENT . variable pnCuadLee RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 151

    variable                       shift and go to state 150

state 111

    (58) escribe -> WRITE LEFT_PARENT . escribep RIGHT_PARENT SEMICOLON
    (59) escribep -> . exp pnCuadEscribe
    (60) escribep -> . LETRERO pnCuadEscribe
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LETRERO         shift and go to state 154
    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    escribep                       shift and go to state 152
    exp                            shift and go to state 153
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 112

    (91) condicion -> IF LEFT_PARENT . exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 155
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 113

    (94) ciclow -> WHILE pnSaveWhile . LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile

    LEFT_PARENT     shift and go to state 156


state 114

    (157) pnSaveWhile -> empty .

    LEFT_PARENT     reduce using rule 157 (pnSaveWhile -> empty .)


state 115

    (95) ciclof -> FOR LEFT_PARENT . ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    ID              shift and go to state 157


state 116

    (61) return -> RETURNS exp . SEMICOLON

    SEMICOLON       shift and go to state 158


state 117

    (62) exp -> exprel . pnCuadOplog logic
    (147) pnCuadOplog -> . empty
    (163) empty -> .

    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnCuadOplog                    shift and go to state 159
    empty                          shift and go to state 160

state 118

    (67) exprel -> e . pnCuadOpRelacional relacionalp
    (146) pnCuadOpRelacional -> . empty
    (163) empty -> .

    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnCuadOpRelacional             shift and go to state 161
    empty                          shift and go to state 162

state 119

    (74) e -> t . pnCuadPlMi tp
    (144) pnCuadPlMi -> . empty
    (163) empty -> .

    PLUS            reduce using rule 163 (empty -> .)
    MINUS           reduce using rule 163 (empty -> .)
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnCuadPlMi                     shift and go to state 163
    empty                          shift and go to state 164

state 120

    (79) t -> f . pnCuadMuDi fp
    (145) pnCuadMuDi -> . empty
    (163) empty -> .

    MULT            reduce using rule 163 (empty -> .)
    DIV             reduce using rule 163 (empty -> .)
    PLUS            reduce using rule 163 (empty -> .)
    MINUS           reduce using rule 163 (empty -> .)
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnCuadMuDi                     shift and go to state 165
    empty                          shift and go to state 166

state 121

    (84) f -> LEFT_PARENT . pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (136) pnSaveFondoFalso -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)
    CTEI            reduce using rule 163 (empty -> .)
    CTEF            reduce using rule 163 (empty -> .)
    CTEC            reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)

    pnSaveFondoFalso               shift and go to state 167
    empty                          shift and go to state 168

state 122

    (85) f -> CTEI . pnSaveCteI pnSaveOperandoConstante
    (133) pnSaveCteI -> . empty
    (163) empty -> .

    MULT            reduce using rule 163 (empty -> .)
    DIV             reduce using rule 163 (empty -> .)
    PLUS            reduce using rule 163 (empty -> .)
    MINUS           reduce using rule 163 (empty -> .)
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnSaveCteI                     shift and go to state 169
    empty                          shift and go to state 170

state 123

    (86) f -> CTEF . pnSaveCteF pnSaveOperandoConstante
    (134) pnSaveCteF -> . empty
    (163) empty -> .

    MULT            reduce using rule 163 (empty -> .)
    DIV             reduce using rule 163 (empty -> .)
    PLUS            reduce using rule 163 (empty -> .)
    MINUS           reduce using rule 163 (empty -> .)
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnSaveCteF                     shift and go to state 171
    empty                          shift and go to state 172

state 124

    (87) f -> CTEC . pnSaveCteC pnSaveOperandoConstante
    (135) pnSaveCteC -> . empty
    (163) empty -> .

    MULT            reduce using rule 163 (empty -> .)
    DIV             reduce using rule 163 (empty -> .)
    PLUS            reduce using rule 163 (empty -> .)
    MINUS           reduce using rule 163 (empty -> .)
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnSaveCteC                     shift and go to state 173
    empty                          shift and go to state 174

state 125

    (88) f -> variable .

    MULT            reduce using rule 88 (f -> variable .)
    DIV             reduce using rule 88 (f -> variable .)
    PLUS            reduce using rule 88 (f -> variable .)
    MINUS           reduce using rule 88 (f -> variable .)
    LESS_THAN       reduce using rule 88 (f -> variable .)
    GREATER_THAN    reduce using rule 88 (f -> variable .)
    EQUALS          reduce using rule 88 (f -> variable .)
    NOTEQUALS       reduce using rule 88 (f -> variable .)
    AND             reduce using rule 88 (f -> variable .)
    OR              reduce using rule 88 (f -> variable .)
    SEMICOLON       reduce using rule 88 (f -> variable .)
    RIGHT_PARENT    reduce using rule 88 (f -> variable .)
    COMMA           reduce using rule 88 (f -> variable .)
    RIGHT_SQR_BRACKET reduce using rule 88 (f -> variable .)


state 126

    (89) f -> llamada .

    MULT            reduce using rule 89 (f -> llamada .)
    DIV             reduce using rule 89 (f -> llamada .)
    PLUS            reduce using rule 89 (f -> llamada .)
    MINUS           reduce using rule 89 (f -> llamada .)
    LESS_THAN       reduce using rule 89 (f -> llamada .)
    GREATER_THAN    reduce using rule 89 (f -> llamada .)
    EQUALS          reduce using rule 89 (f -> llamada .)
    NOTEQUALS       reduce using rule 89 (f -> llamada .)
    AND             reduce using rule 89 (f -> llamada .)
    OR              reduce using rule 89 (f -> llamada .)
    SEMICOLON       reduce using rule 89 (f -> llamada .)
    RIGHT_PARENT    reduce using rule 89 (f -> llamada .)
    COMMA           reduce using rule 89 (f -> llamada .)
    RIGHT_SQR_BRACKET reduce using rule 89 (f -> llamada .)


state 127

    (90) f -> funcesp .

    MULT            reduce using rule 90 (f -> funcesp .)
    DIV             reduce using rule 90 (f -> funcesp .)
    PLUS            reduce using rule 90 (f -> funcesp .)
    MINUS           reduce using rule 90 (f -> funcesp .)
    LESS_THAN       reduce using rule 90 (f -> funcesp .)
    GREATER_THAN    reduce using rule 90 (f -> funcesp .)
    EQUALS          reduce using rule 90 (f -> funcesp .)
    NOTEQUALS       reduce using rule 90 (f -> funcesp .)
    AND             reduce using rule 90 (f -> funcesp .)
    OR              reduce using rule 90 (f -> funcesp .)
    SEMICOLON       reduce using rule 90 (f -> funcesp .)
    RIGHT_PARENT    reduce using rule 90 (f -> funcesp .)
    COMMA           reduce using rule 90 (f -> funcesp .)
    RIGHT_SQR_BRACKET reduce using rule 90 (f -> funcesp .)


state 128

    (16) variable -> ID . pnSaveOperandos indexp
    (21) llamada -> ID . pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (138) pnSaveOperandos -> . empty
    (127) pnCheckFunc -> . empty
    (163) empty -> .

    LEFT_SQR_BRACKET reduce using rule 163 (empty -> .)
    MULT            reduce using rule 163 (empty -> .)
    DIV             reduce using rule 163 (empty -> .)
    PLUS            reduce using rule 163 (empty -> .)
    MINUS           reduce using rule 163 (empty -> .)
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)
    LEFT_PARENT     reduce using rule 163 (empty -> .)

    pnSaveOperandos                shift and go to state 108
    pnCheckFunc                    shift and go to state 107
    empty                          shift and go to state 175

state 129

    (105) funcesp -> copy .

    MULT            reduce using rule 105 (funcesp -> copy .)
    DIV             reduce using rule 105 (funcesp -> copy .)
    PLUS            reduce using rule 105 (funcesp -> copy .)
    MINUS           reduce using rule 105 (funcesp -> copy .)
    LESS_THAN       reduce using rule 105 (funcesp -> copy .)
    GREATER_THAN    reduce using rule 105 (funcesp -> copy .)
    EQUALS          reduce using rule 105 (funcesp -> copy .)
    NOTEQUALS       reduce using rule 105 (funcesp -> copy .)
    AND             reduce using rule 105 (funcesp -> copy .)
    OR              reduce using rule 105 (funcesp -> copy .)
    SEMICOLON       reduce using rule 105 (funcesp -> copy .)
    RIGHT_PARENT    reduce using rule 105 (funcesp -> copy .)
    COMMA           reduce using rule 105 (funcesp -> copy .)
    RIGHT_SQR_BRACKET reduce using rule 105 (funcesp -> copy .)


state 130

    (14) copy -> READ_FILE LEFT_PARENT . LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LETRERO         shift and go to state 176


state 131

    (106) mean -> MEAN LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 151

    variable                       shift and go to state 177

state 132

    (107) mode -> MODE LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 151

    variable                       shift and go to state 178

state 133

    (108) median -> MEDIAN LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 151

    variable                       shift and go to state 179

state 134

    (109) variance -> VARIANCE LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 151

    variable                       shift and go to state 180

state 135

    (110) max -> MAX LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 151

    variable                       shift and go to state 181

state 136

    (111) min -> MIN LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 151

    variable                       shift and go to state 182

state 137

    (112) staddes -> STADDES LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 151

    variable                       shift and go to state 183

state 138

    (113) boxplot -> BOXPLOT LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 151

    variable                       shift and go to state 184

state 139

    (114) linreg -> LINREG LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 151

    variable                       shift and go to state 185

state 140

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar . pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (118) pnCrearListaParam -> . empty
    (163) empty -> .

    DATAFRAME       reduce using rule 163 (empty -> .)
    INT             reduce using rule 163 (empty -> .)
    FLOAT           reduce using rule 163 (empty -> .)
    CHAR            reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCrearListaParam              shift and go to state 186
    empty                          shift and go to state 187

state 141

    (34) idpp -> COMMA ID . pnCheckNameTablaVar idpp
    (120) pnCheckNameTablaVar -> . empty
    (163) empty -> .

    COMMA           reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)

    pnCheckNameTablaVar            shift and go to state 188
    empty                          shift and go to state 54

state 142

    (6) bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript .

    $end            reduce using rule 6 (bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript .)


state 143

    (126) pnEndScript -> empty .

    $end            reduce using rule 126 (pnEndScript -> empty .)


state 144

    (56) asign -> variable ASIGN pnSaveOperadorAsign . exp pnCuadAsign SEMICOLON
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    variable                       shift and go to state 125
    exp                            shift and go to state 189
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 145

    (148) pnSaveOperadorAsign -> empty .

    LEFT_PARENT     reduce using rule 148 (pnSaveOperadorAsign -> empty .)
    CTEI            reduce using rule 148 (pnSaveOperadorAsign -> empty .)
    CTEF            reduce using rule 148 (pnSaveOperadorAsign -> empty .)
    CTEC            reduce using rule 148 (pnSaveOperadorAsign -> empty .)
    ID              reduce using rule 148 (pnSaveOperadorAsign -> empty .)
    MEAN            reduce using rule 148 (pnSaveOperadorAsign -> empty .)
    MODE            reduce using rule 148 (pnSaveOperadorAsign -> empty .)
    MEDIAN          reduce using rule 148 (pnSaveOperadorAsign -> empty .)
    VARIANCE        reduce using rule 148 (pnSaveOperadorAsign -> empty .)
    MAX             reduce using rule 148 (pnSaveOperadorAsign -> empty .)
    MIN             reduce using rule 148 (pnSaveOperadorAsign -> empty .)
    STADDES         reduce using rule 148 (pnSaveOperadorAsign -> empty .)
    BOXPLOT         reduce using rule 148 (pnSaveOperadorAsign -> empty .)
    LINREG          reduce using rule 148 (pnSaveOperadorAsign -> empty .)
    READ_FILE       reduce using rule 148 (pnSaveOperadorAsign -> empty .)


state 146

    (21) llamada -> ID pnCheckFunc LEFT_PARENT . pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (128) pnGenerateEra -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)
    CTEI            reduce using rule 163 (empty -> .)
    CTEF            reduce using rule 163 (empty -> .)
    CTEC            reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnGenerateEra                  shift and go to state 190
    empty                          shift and go to state 191

state 147

    (16) variable -> ID pnSaveOperandos indexp .

    ASIGN           reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    MULT            reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    DIV             reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    PLUS            reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    MINUS           reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    LESS_THAN       reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    GREATER_THAN    reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    EQUALS          reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    NOTEQUALS       reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    AND             reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    OR              reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    SEMICOLON       reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    RIGHT_PARENT    reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    COMMA           reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    RIGHT_SQR_BRACKET reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)


state 148

    (17) indexp -> LEFT_SQR_BRACKET . exp indexpp RIGHT_SQR_BRACKET
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 192
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 149

    (18) indexp -> empty .

    ASIGN           reduce using rule 18 (indexp -> empty .)
    MULT            reduce using rule 18 (indexp -> empty .)
    DIV             reduce using rule 18 (indexp -> empty .)
    PLUS            reduce using rule 18 (indexp -> empty .)
    MINUS           reduce using rule 18 (indexp -> empty .)
    LESS_THAN       reduce using rule 18 (indexp -> empty .)
    GREATER_THAN    reduce using rule 18 (indexp -> empty .)
    EQUALS          reduce using rule 18 (indexp -> empty .)
    NOTEQUALS       reduce using rule 18 (indexp -> empty .)
    AND             reduce using rule 18 (indexp -> empty .)
    OR              reduce using rule 18 (indexp -> empty .)
    SEMICOLON       reduce using rule 18 (indexp -> empty .)
    RIGHT_PARENT    reduce using rule 18 (indexp -> empty .)
    COMMA           reduce using rule 18 (indexp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 18 (indexp -> empty .)


state 150

    (57) lee -> READ LEFT_PARENT variable . pnCuadLee RIGHT_PARENT SEMICOLON
    (151) pnCuadLee -> . empty
    (163) empty -> .

    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCuadLee                      shift and go to state 193
    empty                          shift and go to state 194

state 151

    (16) variable -> ID . pnSaveOperandos indexp
    (138) pnSaveOperandos -> . empty
    (163) empty -> .

    LEFT_SQR_BRACKET reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnSaveOperandos                shift and go to state 108
    empty                          shift and go to state 195

state 152

    (58) escribe -> WRITE LEFT_PARENT escribep . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 196


state 153

    (59) escribep -> exp . pnCuadEscribe
    (150) pnCuadEscribe -> . empty
    (163) empty -> .

    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCuadEscribe                  shift and go to state 197
    empty                          shift and go to state 198

state 154

    (60) escribep -> LETRERO . pnCuadEscribe
    (150) pnCuadEscribe -> . empty
    (163) empty -> .

    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCuadEscribe                  shift and go to state 199
    empty                          shift and go to state 198

state 155

    (91) condicion -> IF LEFT_PARENT exp . pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (154) pnCheckBoolIf -> . empty
    (163) empty -> .

    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCheckBoolIf                  shift and go to state 200
    empty                          shift and go to state 201

state 156

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT . exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 202
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 157

    (95) ciclof -> FOR LEFT_PARENT ID . pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (159) pnSaveForID -> . empty
    (163) empty -> .

    ASIGN           reduce using rule 163 (empty -> .)

    pnSaveForID                    shift and go to state 203
    empty                          shift and go to state 204

state 158

    (61) return -> RETURNS exp SEMICOLON .

    ID              reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    READ            reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    WRITE           reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    IF              reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    WHILE           reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    FOR             reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    RETURNS         reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    READ_FILE       reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MEAN            reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MODE            reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MEDIAN          reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    VARIANCE        reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MAX             reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MIN             reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    STADDES         reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    BOXPLOT         reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    LINREG          reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 61 (return -> RETURNS exp SEMICOLON .)


state 159

    (62) exp -> exprel pnCuadOplog . logic
    (63) logic -> . logicsig exprel pnCuadOplog logic
    (64) logic -> . empty
    (65) logicsig -> . AND pnSaveOperadorLog
    (66) logicsig -> . OR pnSaveOperadorLog
    (163) empty -> .

    AND             shift and go to state 208
    OR              shift and go to state 209
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    logic                          shift and go to state 205
    logicsig                       shift and go to state 206
    empty                          shift and go to state 207

state 160

    (147) pnCuadOplog -> empty .

    AND             reduce using rule 147 (pnCuadOplog -> empty .)
    OR              reduce using rule 147 (pnCuadOplog -> empty .)
    SEMICOLON       reduce using rule 147 (pnCuadOplog -> empty .)
    RIGHT_PARENT    reduce using rule 147 (pnCuadOplog -> empty .)
    COMMA           reduce using rule 147 (pnCuadOplog -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 147 (pnCuadOplog -> empty .)


state 161

    (67) exprel -> e pnCuadOpRelacional . relacionalp
    (68) relacionalp -> . relsig e pnCuadOpRelacional relacionalp
    (69) relacionalp -> . empty
    (70) relsig -> . LESS_THAN pnSaveOperadorRel
    (71) relsig -> . GREATER_THAN pnSaveOperadorRel
    (72) relsig -> . EQUALS pnSaveOperadorRel
    (73) relsig -> . NOTEQUALS pnSaveOperadorRel
    (163) empty -> .

    LESS_THAN       shift and go to state 213
    GREATER_THAN    shift and go to state 214
    EQUALS          shift and go to state 215
    NOTEQUALS       shift and go to state 216
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    relacionalp                    shift and go to state 210
    relsig                         shift and go to state 211
    empty                          shift and go to state 212

state 162

    (146) pnCuadOpRelacional -> empty .

    LESS_THAN       reduce using rule 146 (pnCuadOpRelacional -> empty .)
    GREATER_THAN    reduce using rule 146 (pnCuadOpRelacional -> empty .)
    EQUALS          reduce using rule 146 (pnCuadOpRelacional -> empty .)
    NOTEQUALS       reduce using rule 146 (pnCuadOpRelacional -> empty .)
    AND             reduce using rule 146 (pnCuadOpRelacional -> empty .)
    OR              reduce using rule 146 (pnCuadOpRelacional -> empty .)
    SEMICOLON       reduce using rule 146 (pnCuadOpRelacional -> empty .)
    RIGHT_PARENT    reduce using rule 146 (pnCuadOpRelacional -> empty .)
    COMMA           reduce using rule 146 (pnCuadOpRelacional -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 146 (pnCuadOpRelacional -> empty .)


state 163

    (74) e -> t pnCuadPlMi . tp
    (75) tp -> . tsig t pnCuadPlMi tp
    (76) tp -> . empty
    (77) tsig -> . PLUS pnSaveOperadorPlMi
    (78) tsig -> . MINUS pnSaveOperadorPlMi
    (163) empty -> .

    PLUS            shift and go to state 220
    MINUS           shift and go to state 221
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    tp                             shift and go to state 217
    tsig                           shift and go to state 218
    empty                          shift and go to state 219

state 164

    (144) pnCuadPlMi -> empty .

    PLUS            reduce using rule 144 (pnCuadPlMi -> empty .)
    MINUS           reduce using rule 144 (pnCuadPlMi -> empty .)
    LESS_THAN       reduce using rule 144 (pnCuadPlMi -> empty .)
    GREATER_THAN    reduce using rule 144 (pnCuadPlMi -> empty .)
    EQUALS          reduce using rule 144 (pnCuadPlMi -> empty .)
    NOTEQUALS       reduce using rule 144 (pnCuadPlMi -> empty .)
    AND             reduce using rule 144 (pnCuadPlMi -> empty .)
    OR              reduce using rule 144 (pnCuadPlMi -> empty .)
    SEMICOLON       reduce using rule 144 (pnCuadPlMi -> empty .)
    RIGHT_PARENT    reduce using rule 144 (pnCuadPlMi -> empty .)
    COMMA           reduce using rule 144 (pnCuadPlMi -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 144 (pnCuadPlMi -> empty .)


state 165

    (79) t -> f pnCuadMuDi . fp
    (80) fp -> . fsig f pnCuadMuDi fp
    (81) fp -> . empty
    (82) fsig -> . MULT pnSaveOperadorMuDi
    (83) fsig -> . DIV pnSaveOperadorMuDi
    (163) empty -> .

    MULT            shift and go to state 225
    DIV             shift and go to state 226
    PLUS            reduce using rule 163 (empty -> .)
    MINUS           reduce using rule 163 (empty -> .)
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    fp                             shift and go to state 222
    fsig                           shift and go to state 223
    empty                          shift and go to state 224

state 166

    (145) pnCuadMuDi -> empty .

    MULT            reduce using rule 145 (pnCuadMuDi -> empty .)
    DIV             reduce using rule 145 (pnCuadMuDi -> empty .)
    PLUS            reduce using rule 145 (pnCuadMuDi -> empty .)
    MINUS           reduce using rule 145 (pnCuadMuDi -> empty .)
    LESS_THAN       reduce using rule 145 (pnCuadMuDi -> empty .)
    GREATER_THAN    reduce using rule 145 (pnCuadMuDi -> empty .)
    EQUALS          reduce using rule 145 (pnCuadMuDi -> empty .)
    NOTEQUALS       reduce using rule 145 (pnCuadMuDi -> empty .)
    AND             reduce using rule 145 (pnCuadMuDi -> empty .)
    OR              reduce using rule 145 (pnCuadMuDi -> empty .)
    SEMICOLON       reduce using rule 145 (pnCuadMuDi -> empty .)
    RIGHT_PARENT    reduce using rule 145 (pnCuadMuDi -> empty .)
    COMMA           reduce using rule 145 (pnCuadMuDi -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 145 (pnCuadMuDi -> empty .)


state 167

    (84) f -> LEFT_PARENT pnSaveFondoFalso . exp RIGHT_PARENT pnPopFondoFalso
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 227
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 168

    (136) pnSaveFondoFalso -> empty .

    LEFT_PARENT     reduce using rule 136 (pnSaveFondoFalso -> empty .)
    CTEI            reduce using rule 136 (pnSaveFondoFalso -> empty .)
    CTEF            reduce using rule 136 (pnSaveFondoFalso -> empty .)
    CTEC            reduce using rule 136 (pnSaveFondoFalso -> empty .)
    ID              reduce using rule 136 (pnSaveFondoFalso -> empty .)
    MEAN            reduce using rule 136 (pnSaveFondoFalso -> empty .)
    MODE            reduce using rule 136 (pnSaveFondoFalso -> empty .)
    MEDIAN          reduce using rule 136 (pnSaveFondoFalso -> empty .)
    VARIANCE        reduce using rule 136 (pnSaveFondoFalso -> empty .)
    MAX             reduce using rule 136 (pnSaveFondoFalso -> empty .)
    MIN             reduce using rule 136 (pnSaveFondoFalso -> empty .)
    STADDES         reduce using rule 136 (pnSaveFondoFalso -> empty .)
    BOXPLOT         reduce using rule 136 (pnSaveFondoFalso -> empty .)
    LINREG          reduce using rule 136 (pnSaveFondoFalso -> empty .)
    READ_FILE       reduce using rule 136 (pnSaveFondoFalso -> empty .)


state 169

    (85) f -> CTEI pnSaveCteI . pnSaveOperandoConstante
    (139) pnSaveOperandoConstante -> . empty
    (163) empty -> .

    MULT            reduce using rule 163 (empty -> .)
    DIV             reduce using rule 163 (empty -> .)
    PLUS            reduce using rule 163 (empty -> .)
    MINUS           reduce using rule 163 (empty -> .)
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnSaveOperandoConstante        shift and go to state 228
    empty                          shift and go to state 229

state 170

    (133) pnSaveCteI -> empty .

    MULT            reduce using rule 133 (pnSaveCteI -> empty .)
    DIV             reduce using rule 133 (pnSaveCteI -> empty .)
    PLUS            reduce using rule 133 (pnSaveCteI -> empty .)
    MINUS           reduce using rule 133 (pnSaveCteI -> empty .)
    LESS_THAN       reduce using rule 133 (pnSaveCteI -> empty .)
    GREATER_THAN    reduce using rule 133 (pnSaveCteI -> empty .)
    EQUALS          reduce using rule 133 (pnSaveCteI -> empty .)
    NOTEQUALS       reduce using rule 133 (pnSaveCteI -> empty .)
    AND             reduce using rule 133 (pnSaveCteI -> empty .)
    OR              reduce using rule 133 (pnSaveCteI -> empty .)
    SEMICOLON       reduce using rule 133 (pnSaveCteI -> empty .)
    RIGHT_PARENT    reduce using rule 133 (pnSaveCteI -> empty .)
    COMMA           reduce using rule 133 (pnSaveCteI -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 133 (pnSaveCteI -> empty .)


state 171

    (86) f -> CTEF pnSaveCteF . pnSaveOperandoConstante
    (139) pnSaveOperandoConstante -> . empty
    (163) empty -> .

    MULT            reduce using rule 163 (empty -> .)
    DIV             reduce using rule 163 (empty -> .)
    PLUS            reduce using rule 163 (empty -> .)
    MINUS           reduce using rule 163 (empty -> .)
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnSaveOperandoConstante        shift and go to state 230
    empty                          shift and go to state 229

state 172

    (134) pnSaveCteF -> empty .

    MULT            reduce using rule 134 (pnSaveCteF -> empty .)
    DIV             reduce using rule 134 (pnSaveCteF -> empty .)
    PLUS            reduce using rule 134 (pnSaveCteF -> empty .)
    MINUS           reduce using rule 134 (pnSaveCteF -> empty .)
    LESS_THAN       reduce using rule 134 (pnSaveCteF -> empty .)
    GREATER_THAN    reduce using rule 134 (pnSaveCteF -> empty .)
    EQUALS          reduce using rule 134 (pnSaveCteF -> empty .)
    NOTEQUALS       reduce using rule 134 (pnSaveCteF -> empty .)
    AND             reduce using rule 134 (pnSaveCteF -> empty .)
    OR              reduce using rule 134 (pnSaveCteF -> empty .)
    SEMICOLON       reduce using rule 134 (pnSaveCteF -> empty .)
    RIGHT_PARENT    reduce using rule 134 (pnSaveCteF -> empty .)
    COMMA           reduce using rule 134 (pnSaveCteF -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 134 (pnSaveCteF -> empty .)


state 173

    (87) f -> CTEC pnSaveCteC . pnSaveOperandoConstante
    (139) pnSaveOperandoConstante -> . empty
    (163) empty -> .

    MULT            reduce using rule 163 (empty -> .)
    DIV             reduce using rule 163 (empty -> .)
    PLUS            reduce using rule 163 (empty -> .)
    MINUS           reduce using rule 163 (empty -> .)
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnSaveOperandoConstante        shift and go to state 231
    empty                          shift and go to state 229

state 174

    (135) pnSaveCteC -> empty .

    MULT            reduce using rule 135 (pnSaveCteC -> empty .)
    DIV             reduce using rule 135 (pnSaveCteC -> empty .)
    PLUS            reduce using rule 135 (pnSaveCteC -> empty .)
    MINUS           reduce using rule 135 (pnSaveCteC -> empty .)
    LESS_THAN       reduce using rule 135 (pnSaveCteC -> empty .)
    GREATER_THAN    reduce using rule 135 (pnSaveCteC -> empty .)
    EQUALS          reduce using rule 135 (pnSaveCteC -> empty .)
    NOTEQUALS       reduce using rule 135 (pnSaveCteC -> empty .)
    AND             reduce using rule 135 (pnSaveCteC -> empty .)
    OR              reduce using rule 135 (pnSaveCteC -> empty .)
    SEMICOLON       reduce using rule 135 (pnSaveCteC -> empty .)
    RIGHT_PARENT    reduce using rule 135 (pnSaveCteC -> empty .)
    COMMA           reduce using rule 135 (pnSaveCteC -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 135 (pnSaveCteC -> empty .)


state 175

    (138) pnSaveOperandos -> empty .
    (127) pnCheckFunc -> empty .

    LEFT_SQR_BRACKET reduce using rule 138 (pnSaveOperandos -> empty .)
    MULT            reduce using rule 138 (pnSaveOperandos -> empty .)
    DIV             reduce using rule 138 (pnSaveOperandos -> empty .)
    PLUS            reduce using rule 138 (pnSaveOperandos -> empty .)
    MINUS           reduce using rule 138 (pnSaveOperandos -> empty .)
    LESS_THAN       reduce using rule 138 (pnSaveOperandos -> empty .)
    GREATER_THAN    reduce using rule 138 (pnSaveOperandos -> empty .)
    EQUALS          reduce using rule 138 (pnSaveOperandos -> empty .)
    NOTEQUALS       reduce using rule 138 (pnSaveOperandos -> empty .)
    AND             reduce using rule 138 (pnSaveOperandos -> empty .)
    OR              reduce using rule 138 (pnSaveOperandos -> empty .)
    SEMICOLON       reduce using rule 138 (pnSaveOperandos -> empty .)
    RIGHT_PARENT    reduce using rule 138 (pnSaveOperandos -> empty .)
    COMMA           reduce using rule 138 (pnSaveOperandos -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 138 (pnSaveOperandos -> empty .)
    LEFT_PARENT     reduce using rule 127 (pnCheckFunc -> empty .)


state 176

    (14) copy -> READ_FILE LEFT_PARENT LETRERO . pnCuadCopy RIGHT_PARENT SEMICOLON
    (152) pnCuadCopy -> . empty
    (163) empty -> .

    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCuadCopy                     shift and go to state 232
    empty                          shift and go to state 233

state 177

    (106) mean -> MEAN LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (153) pnCuadFuncEsp -> . empty
    (163) empty -> .

    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 234
    empty                          shift and go to state 235

state 178

    (107) mode -> MODE LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (153) pnCuadFuncEsp -> . empty
    (163) empty -> .

    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 236
    empty                          shift and go to state 235

state 179

    (108) median -> MEDIAN LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (153) pnCuadFuncEsp -> . empty
    (163) empty -> .

    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 237
    empty                          shift and go to state 235

state 180

    (109) variance -> VARIANCE LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (153) pnCuadFuncEsp -> . empty
    (163) empty -> .

    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 238
    empty                          shift and go to state 235

state 181

    (110) max -> MAX LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (153) pnCuadFuncEsp -> . empty
    (163) empty -> .

    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 239
    empty                          shift and go to state 235

state 182

    (111) min -> MIN LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (153) pnCuadFuncEsp -> . empty
    (163) empty -> .

    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 240
    empty                          shift and go to state 235

state 183

    (112) staddes -> STADDES LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (153) pnCuadFuncEsp -> . empty
    (163) empty -> .

    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 241
    empty                          shift and go to state 235

state 184

    (113) boxplot -> BOXPLOT LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (153) pnCuadFuncEsp -> . empty
    (163) empty -> .

    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 242
    empty                          shift and go to state 235

state 185

    (114) linreg -> LINREG LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (153) pnCuadFuncEsp -> . empty
    (163) empty -> .

    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 243
    empty                          shift and go to state 235

state 186

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam . param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (39) param -> . paramlist
    (40) param -> . empty
    (41) paramlist -> . tipoparam ARROW ID pnAddParametersTablaVar paramlistp
    (163) empty -> .
    (42) tipoparam -> . tipo_simp
    (43) tipoparam -> . DATAFRAME pnSaveTypeVar
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    DATAFRAME       shift and go to state 249
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28

    param                          shift and go to state 244
    paramlist                      shift and go to state 245
    empty                          shift and go to state 246
    tipoparam                      shift and go to state 247
    tipo_simp                      shift and go to state 248

state 187

    (118) pnCrearListaParam -> empty .

    DATAFRAME       reduce using rule 118 (pnCrearListaParam -> empty .)
    INT             reduce using rule 118 (pnCrearListaParam -> empty .)
    FLOAT           reduce using rule 118 (pnCrearListaParam -> empty .)
    CHAR            reduce using rule 118 (pnCrearListaParam -> empty .)
    RIGHT_PARENT    reduce using rule 118 (pnCrearListaParam -> empty .)


state 188

    (34) idpp -> COMMA ID pnCheckNameTablaVar . idpp
    (34) idpp -> . COMMA ID pnCheckNameTablaVar idpp
    (35) idpp -> . empty
    (163) empty -> .

    COMMA           shift and go to state 100
    SEMICOLON       reduce using rule 163 (empty -> .)

    idpp                           shift and go to state 250
    empty                          shift and go to state 101

state 189

    (56) asign -> variable ASIGN pnSaveOperadorAsign exp . pnCuadAsign SEMICOLON
    (149) pnCuadAsign -> . empty
    (163) empty -> .

    SEMICOLON       reduce using rule 163 (empty -> .)

    pnCuadAsign                    shift and go to state 251
    empty                          shift and go to state 252

state 190

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra . expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (22) expp -> . exp pnCuadParametro exppp
    (23) expp -> . empty
    (62) exp -> . exprel pnCuadOplog logic
    (163) empty -> .
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    expp                           shift and go to state 253
    exp                            shift and go to state 254
    empty                          shift and go to state 255
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 191

    (128) pnGenerateEra -> empty .

    LEFT_PARENT     reduce using rule 128 (pnGenerateEra -> empty .)
    CTEI            reduce using rule 128 (pnGenerateEra -> empty .)
    CTEF            reduce using rule 128 (pnGenerateEra -> empty .)
    CTEC            reduce using rule 128 (pnGenerateEra -> empty .)
    ID              reduce using rule 128 (pnGenerateEra -> empty .)
    MEAN            reduce using rule 128 (pnGenerateEra -> empty .)
    MODE            reduce using rule 128 (pnGenerateEra -> empty .)
    MEDIAN          reduce using rule 128 (pnGenerateEra -> empty .)
    VARIANCE        reduce using rule 128 (pnGenerateEra -> empty .)
    MAX             reduce using rule 128 (pnGenerateEra -> empty .)
    MIN             reduce using rule 128 (pnGenerateEra -> empty .)
    STADDES         reduce using rule 128 (pnGenerateEra -> empty .)
    BOXPLOT         reduce using rule 128 (pnGenerateEra -> empty .)
    LINREG          reduce using rule 128 (pnGenerateEra -> empty .)
    READ_FILE       reduce using rule 128 (pnGenerateEra -> empty .)
    RIGHT_PARENT    reduce using rule 128 (pnGenerateEra -> empty .)


state 192

    (17) indexp -> LEFT_SQR_BRACKET exp . indexpp RIGHT_SQR_BRACKET
    (19) indexpp -> . COMMA exp
    (20) indexpp -> . empty
    (163) empty -> .

    COMMA           shift and go to state 257
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    indexpp                        shift and go to state 256
    empty                          shift and go to state 258

state 193

    (57) lee -> READ LEFT_PARENT variable pnCuadLee . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 259


state 194

    (151) pnCuadLee -> empty .

    RIGHT_PARENT    reduce using rule 151 (pnCuadLee -> empty .)


state 195

    (138) pnSaveOperandos -> empty .

    LEFT_SQR_BRACKET reduce using rule 138 (pnSaveOperandos -> empty .)
    RIGHT_PARENT    reduce using rule 138 (pnSaveOperandos -> empty .)


state 196

    (58) escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 260


state 197

    (59) escribep -> exp pnCuadEscribe .

    RIGHT_PARENT    reduce using rule 59 (escribep -> exp pnCuadEscribe .)


state 198

    (150) pnCuadEscribe -> empty .

    RIGHT_PARENT    reduce using rule 150 (pnCuadEscribe -> empty .)


state 199

    (60) escribep -> LETRERO pnCuadEscribe .

    RIGHT_PARENT    reduce using rule 60 (escribep -> LETRERO pnCuadEscribe .)


state 200

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf . RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf

    RIGHT_PARENT    shift and go to state 261


state 201

    (154) pnCheckBoolIf -> empty .

    RIGHT_PARENT    reduce using rule 154 (pnCheckBoolIf -> empty .)


state 202

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp . pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (154) pnCheckBoolIf -> . empty
    (163) empty -> .

    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCheckBoolIf                  shift and go to state 262
    empty                          shift and go to state 201

state 203

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID . ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    ASIGN           shift and go to state 263


state 204

    (159) pnSaveForID -> empty .

    ASIGN           reduce using rule 159 (pnSaveForID -> empty .)


state 205

    (62) exp -> exprel pnCuadOplog logic .

    SEMICOLON       reduce using rule 62 (exp -> exprel pnCuadOplog logic .)
    RIGHT_PARENT    reduce using rule 62 (exp -> exprel pnCuadOplog logic .)
    COMMA           reduce using rule 62 (exp -> exprel pnCuadOplog logic .)
    RIGHT_SQR_BRACKET reduce using rule 62 (exp -> exprel pnCuadOplog logic .)


state 206

    (63) logic -> logicsig . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exprel                         shift and go to state 264
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 207

    (64) logic -> empty .

    SEMICOLON       reduce using rule 64 (logic -> empty .)
    RIGHT_PARENT    reduce using rule 64 (logic -> empty .)
    COMMA           reduce using rule 64 (logic -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 64 (logic -> empty .)


state 208

    (65) logicsig -> AND . pnSaveOperadorLog
    (143) pnSaveOperadorLog -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)
    CTEI            reduce using rule 163 (empty -> .)
    CTEF            reduce using rule 163 (empty -> .)
    CTEC            reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)

    pnSaveOperadorLog              shift and go to state 265
    empty                          shift and go to state 266

state 209

    (66) logicsig -> OR . pnSaveOperadorLog
    (143) pnSaveOperadorLog -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)
    CTEI            reduce using rule 163 (empty -> .)
    CTEF            reduce using rule 163 (empty -> .)
    CTEC            reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)

    pnSaveOperadorLog              shift and go to state 267
    empty                          shift and go to state 266

state 210

    (67) exprel -> e pnCuadOpRelacional relacionalp .

    AND             reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    OR              reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    SEMICOLON       reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    RIGHT_PARENT    reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    COMMA           reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    RIGHT_SQR_BRACKET reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)


state 211

    (68) relacionalp -> relsig . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    e                              shift and go to state 268
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 212

    (69) relacionalp -> empty .

    AND             reduce using rule 69 (relacionalp -> empty .)
    OR              reduce using rule 69 (relacionalp -> empty .)
    SEMICOLON       reduce using rule 69 (relacionalp -> empty .)
    RIGHT_PARENT    reduce using rule 69 (relacionalp -> empty .)
    COMMA           reduce using rule 69 (relacionalp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 69 (relacionalp -> empty .)


state 213

    (70) relsig -> LESS_THAN . pnSaveOperadorRel
    (142) pnSaveOperadorRel -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)
    CTEI            reduce using rule 163 (empty -> .)
    CTEF            reduce using rule 163 (empty -> .)
    CTEC            reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)

    pnSaveOperadorRel              shift and go to state 269
    empty                          shift and go to state 270

state 214

    (71) relsig -> GREATER_THAN . pnSaveOperadorRel
    (142) pnSaveOperadorRel -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)
    CTEI            reduce using rule 163 (empty -> .)
    CTEF            reduce using rule 163 (empty -> .)
    CTEC            reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)

    pnSaveOperadorRel              shift and go to state 271
    empty                          shift and go to state 270

state 215

    (72) relsig -> EQUALS . pnSaveOperadorRel
    (142) pnSaveOperadorRel -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)
    CTEI            reduce using rule 163 (empty -> .)
    CTEF            reduce using rule 163 (empty -> .)
    CTEC            reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)

    pnSaveOperadorRel              shift and go to state 272
    empty                          shift and go to state 270

state 216

    (73) relsig -> NOTEQUALS . pnSaveOperadorRel
    (142) pnSaveOperadorRel -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)
    CTEI            reduce using rule 163 (empty -> .)
    CTEF            reduce using rule 163 (empty -> .)
    CTEC            reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)

    pnSaveOperadorRel              shift and go to state 273
    empty                          shift and go to state 270

state 217

    (74) e -> t pnCuadPlMi tp .

    LESS_THAN       reduce using rule 74 (e -> t pnCuadPlMi tp .)
    GREATER_THAN    reduce using rule 74 (e -> t pnCuadPlMi tp .)
    EQUALS          reduce using rule 74 (e -> t pnCuadPlMi tp .)
    NOTEQUALS       reduce using rule 74 (e -> t pnCuadPlMi tp .)
    AND             reduce using rule 74 (e -> t pnCuadPlMi tp .)
    OR              reduce using rule 74 (e -> t pnCuadPlMi tp .)
    SEMICOLON       reduce using rule 74 (e -> t pnCuadPlMi tp .)
    RIGHT_PARENT    reduce using rule 74 (e -> t pnCuadPlMi tp .)
    COMMA           reduce using rule 74 (e -> t pnCuadPlMi tp .)
    RIGHT_SQR_BRACKET reduce using rule 74 (e -> t pnCuadPlMi tp .)


state 218

    (75) tp -> tsig . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    t                              shift and go to state 274
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 219

    (76) tp -> empty .

    LESS_THAN       reduce using rule 76 (tp -> empty .)
    GREATER_THAN    reduce using rule 76 (tp -> empty .)
    EQUALS          reduce using rule 76 (tp -> empty .)
    NOTEQUALS       reduce using rule 76 (tp -> empty .)
    AND             reduce using rule 76 (tp -> empty .)
    OR              reduce using rule 76 (tp -> empty .)
    SEMICOLON       reduce using rule 76 (tp -> empty .)
    RIGHT_PARENT    reduce using rule 76 (tp -> empty .)
    COMMA           reduce using rule 76 (tp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 76 (tp -> empty .)


state 220

    (77) tsig -> PLUS . pnSaveOperadorPlMi
    (140) pnSaveOperadorPlMi -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)
    CTEI            reduce using rule 163 (empty -> .)
    CTEF            reduce using rule 163 (empty -> .)
    CTEC            reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)

    pnSaveOperadorPlMi             shift and go to state 275
    empty                          shift and go to state 276

state 221

    (78) tsig -> MINUS . pnSaveOperadorPlMi
    (140) pnSaveOperadorPlMi -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)
    CTEI            reduce using rule 163 (empty -> .)
    CTEF            reduce using rule 163 (empty -> .)
    CTEC            reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)

    pnSaveOperadorPlMi             shift and go to state 277
    empty                          shift and go to state 276

state 222

    (79) t -> f pnCuadMuDi fp .

    PLUS            reduce using rule 79 (t -> f pnCuadMuDi fp .)
    MINUS           reduce using rule 79 (t -> f pnCuadMuDi fp .)
    LESS_THAN       reduce using rule 79 (t -> f pnCuadMuDi fp .)
    GREATER_THAN    reduce using rule 79 (t -> f pnCuadMuDi fp .)
    EQUALS          reduce using rule 79 (t -> f pnCuadMuDi fp .)
    NOTEQUALS       reduce using rule 79 (t -> f pnCuadMuDi fp .)
    AND             reduce using rule 79 (t -> f pnCuadMuDi fp .)
    OR              reduce using rule 79 (t -> f pnCuadMuDi fp .)
    SEMICOLON       reduce using rule 79 (t -> f pnCuadMuDi fp .)
    RIGHT_PARENT    reduce using rule 79 (t -> f pnCuadMuDi fp .)
    COMMA           reduce using rule 79 (t -> f pnCuadMuDi fp .)
    RIGHT_SQR_BRACKET reduce using rule 79 (t -> f pnCuadMuDi fp .)


state 223

    (80) fp -> fsig . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    f                              shift and go to state 278
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 224

    (81) fp -> empty .

    PLUS            reduce using rule 81 (fp -> empty .)
    MINUS           reduce using rule 81 (fp -> empty .)
    LESS_THAN       reduce using rule 81 (fp -> empty .)
    GREATER_THAN    reduce using rule 81 (fp -> empty .)
    EQUALS          reduce using rule 81 (fp -> empty .)
    NOTEQUALS       reduce using rule 81 (fp -> empty .)
    AND             reduce using rule 81 (fp -> empty .)
    OR              reduce using rule 81 (fp -> empty .)
    SEMICOLON       reduce using rule 81 (fp -> empty .)
    RIGHT_PARENT    reduce using rule 81 (fp -> empty .)
    COMMA           reduce using rule 81 (fp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 81 (fp -> empty .)


state 225

    (82) fsig -> MULT . pnSaveOperadorMuDi
    (141) pnSaveOperadorMuDi -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)
    CTEI            reduce using rule 163 (empty -> .)
    CTEF            reduce using rule 163 (empty -> .)
    CTEC            reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)

    pnSaveOperadorMuDi             shift and go to state 279
    empty                          shift and go to state 280

state 226

    (83) fsig -> DIV . pnSaveOperadorMuDi
    (141) pnSaveOperadorMuDi -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)
    CTEI            reduce using rule 163 (empty -> .)
    CTEF            reduce using rule 163 (empty -> .)
    CTEC            reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)

    pnSaveOperadorMuDi             shift and go to state 281
    empty                          shift and go to state 280

state 227

    (84) f -> LEFT_PARENT pnSaveFondoFalso exp . RIGHT_PARENT pnPopFondoFalso

    RIGHT_PARENT    shift and go to state 282


state 228

    (85) f -> CTEI pnSaveCteI pnSaveOperandoConstante .

    MULT            reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    DIV             reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    PLUS            reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    MINUS           reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    LESS_THAN       reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    GREATER_THAN    reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    EQUALS          reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    NOTEQUALS       reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    AND             reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    OR              reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    SEMICOLON       reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    RIGHT_PARENT    reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    COMMA           reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    RIGHT_SQR_BRACKET reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)


state 229

    (139) pnSaveOperandoConstante -> empty .

    MULT            reduce using rule 139 (pnSaveOperandoConstante -> empty .)
    DIV             reduce using rule 139 (pnSaveOperandoConstante -> empty .)
    PLUS            reduce using rule 139 (pnSaveOperandoConstante -> empty .)
    MINUS           reduce using rule 139 (pnSaveOperandoConstante -> empty .)
    LESS_THAN       reduce using rule 139 (pnSaveOperandoConstante -> empty .)
    GREATER_THAN    reduce using rule 139 (pnSaveOperandoConstante -> empty .)
    EQUALS          reduce using rule 139 (pnSaveOperandoConstante -> empty .)
    NOTEQUALS       reduce using rule 139 (pnSaveOperandoConstante -> empty .)
    AND             reduce using rule 139 (pnSaveOperandoConstante -> empty .)
    OR              reduce using rule 139 (pnSaveOperandoConstante -> empty .)
    SEMICOLON       reduce using rule 139 (pnSaveOperandoConstante -> empty .)
    RIGHT_PARENT    reduce using rule 139 (pnSaveOperandoConstante -> empty .)
    COMMA           reduce using rule 139 (pnSaveOperandoConstante -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 139 (pnSaveOperandoConstante -> empty .)


state 230

    (86) f -> CTEF pnSaveCteF pnSaveOperandoConstante .

    MULT            reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    DIV             reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    PLUS            reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    MINUS           reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    LESS_THAN       reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    GREATER_THAN    reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    EQUALS          reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    NOTEQUALS       reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    AND             reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    OR              reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    SEMICOLON       reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    RIGHT_PARENT    reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    COMMA           reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    RIGHT_SQR_BRACKET reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)


state 231

    (87) f -> CTEC pnSaveCteC pnSaveOperandoConstante .

    MULT            reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    DIV             reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    PLUS            reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    MINUS           reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    LESS_THAN       reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    GREATER_THAN    reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    EQUALS          reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    NOTEQUALS       reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    AND             reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    OR              reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    SEMICOLON       reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    RIGHT_PARENT    reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    COMMA           reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    RIGHT_SQR_BRACKET reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)


state 232

    (14) copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 283


state 233

    (152) pnCuadCopy -> empty .

    RIGHT_PARENT    reduce using rule 152 (pnCuadCopy -> empty .)


state 234

    (106) mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 284


state 235

    (153) pnCuadFuncEsp -> empty .

    RIGHT_PARENT    reduce using rule 153 (pnCuadFuncEsp -> empty .)


state 236

    (107) mode -> MODE LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 285


state 237

    (108) median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 286


state 238

    (109) variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 287


state 239

    (110) max -> MAX LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 288


state 240

    (111) min -> MIN LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 289


state 241

    (112) staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 290


state 242

    (113) boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 291


state 243

    (114) linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 292


state 244

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param . RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    RIGHT_PARENT    shift and go to state 293


state 245

    (39) param -> paramlist .

    RIGHT_PARENT    reduce using rule 39 (param -> paramlist .)


state 246

    (40) param -> empty .

    RIGHT_PARENT    reduce using rule 40 (param -> empty .)


state 247

    (41) paramlist -> tipoparam . ARROW ID pnAddParametersTablaVar paramlistp

    ARROW           shift and go to state 294


state 248

    (42) tipoparam -> tipo_simp .

    ARROW           reduce using rule 42 (tipoparam -> tipo_simp .)


state 249

    (43) tipoparam -> DATAFRAME . pnSaveTypeVar
    (119) pnSaveTypeVar -> . empty
    (163) empty -> .

    ARROW           reduce using rule 163 (empty -> .)

    pnSaveTypeVar                  shift and go to state 295
    empty                          shift and go to state 35

state 250

    (34) idpp -> COMMA ID pnCheckNameTablaVar idpp .

    SEMICOLON       reduce using rule 34 (idpp -> COMMA ID pnCheckNameTablaVar idpp .)


state 251

    (56) asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign . SEMICOLON

    SEMICOLON       shift and go to state 296


state 252

    (149) pnCuadAsign -> empty .

    SEMICOLON       reduce using rule 149 (pnCuadAsign -> empty .)


state 253

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp . RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub

    RIGHT_PARENT    shift and go to state 297


state 254

    (22) expp -> exp . pnCuadParametro exppp
    (129) pnCuadParametro -> . empty
    (163) empty -> .

    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCuadParametro                shift and go to state 298
    empty                          shift and go to state 299

state 255

    (23) expp -> empty .

    RIGHT_PARENT    reduce using rule 23 (expp -> empty .)


state 256

    (17) indexp -> LEFT_SQR_BRACKET exp indexpp . RIGHT_SQR_BRACKET

    RIGHT_SQR_BRACKET shift and go to state 300


state 257

    (19) indexpp -> COMMA . exp
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 301
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 258

    (20) indexpp -> empty .

    RIGHT_SQR_BRACKET reduce using rule 20 (indexpp -> empty .)


state 259

    (57) lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 302


state 260

    (58) escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)


state 261

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT . IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf

    IF_TRUE         shift and go to state 303


state 262

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf . RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile

    RIGHT_PARENT    shift and go to state 304


state 263

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN . exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 305
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 264

    (63) logic -> logicsig exprel . pnCuadOplog logic
    (147) pnCuadOplog -> . empty
    (163) empty -> .

    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnCuadOplog                    shift and go to state 306
    empty                          shift and go to state 160

state 265

    (65) logicsig -> AND pnSaveOperadorLog .

    LEFT_PARENT     reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    CTEI            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    CTEF            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    CTEC            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    ID              reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MEAN            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MODE            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MEDIAN          reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    VARIANCE        reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MAX             reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MIN             reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    STADDES         reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    BOXPLOT         reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    LINREG          reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    READ_FILE       reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)


state 266

    (143) pnSaveOperadorLog -> empty .

    LEFT_PARENT     reduce using rule 143 (pnSaveOperadorLog -> empty .)
    CTEI            reduce using rule 143 (pnSaveOperadorLog -> empty .)
    CTEF            reduce using rule 143 (pnSaveOperadorLog -> empty .)
    CTEC            reduce using rule 143 (pnSaveOperadorLog -> empty .)
    ID              reduce using rule 143 (pnSaveOperadorLog -> empty .)
    MEAN            reduce using rule 143 (pnSaveOperadorLog -> empty .)
    MODE            reduce using rule 143 (pnSaveOperadorLog -> empty .)
    MEDIAN          reduce using rule 143 (pnSaveOperadorLog -> empty .)
    VARIANCE        reduce using rule 143 (pnSaveOperadorLog -> empty .)
    MAX             reduce using rule 143 (pnSaveOperadorLog -> empty .)
    MIN             reduce using rule 143 (pnSaveOperadorLog -> empty .)
    STADDES         reduce using rule 143 (pnSaveOperadorLog -> empty .)
    BOXPLOT         reduce using rule 143 (pnSaveOperadorLog -> empty .)
    LINREG          reduce using rule 143 (pnSaveOperadorLog -> empty .)
    READ_FILE       reduce using rule 143 (pnSaveOperadorLog -> empty .)


state 267

    (66) logicsig -> OR pnSaveOperadorLog .

    LEFT_PARENT     reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    CTEI            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    CTEF            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    CTEC            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    ID              reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MEAN            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MODE            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MEDIAN          reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    VARIANCE        reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MAX             reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MIN             reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    STADDES         reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    BOXPLOT         reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    LINREG          reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    READ_FILE       reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)


state 268

    (68) relacionalp -> relsig e . pnCuadOpRelacional relacionalp
    (146) pnCuadOpRelacional -> . empty
    (163) empty -> .

    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnCuadOpRelacional             shift and go to state 307
    empty                          shift and go to state 162

state 269

    (70) relsig -> LESS_THAN pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    CTEI            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    CTEF            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    CTEC            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    ID              reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MEAN            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MODE            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MEDIAN          reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    VARIANCE        reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MAX             reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MIN             reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    STADDES         reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    LINREG          reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    READ_FILE       reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)


state 270

    (142) pnSaveOperadorRel -> empty .

    LEFT_PARENT     reduce using rule 142 (pnSaveOperadorRel -> empty .)
    CTEI            reduce using rule 142 (pnSaveOperadorRel -> empty .)
    CTEF            reduce using rule 142 (pnSaveOperadorRel -> empty .)
    CTEC            reduce using rule 142 (pnSaveOperadorRel -> empty .)
    ID              reduce using rule 142 (pnSaveOperadorRel -> empty .)
    MEAN            reduce using rule 142 (pnSaveOperadorRel -> empty .)
    MODE            reduce using rule 142 (pnSaveOperadorRel -> empty .)
    MEDIAN          reduce using rule 142 (pnSaveOperadorRel -> empty .)
    VARIANCE        reduce using rule 142 (pnSaveOperadorRel -> empty .)
    MAX             reduce using rule 142 (pnSaveOperadorRel -> empty .)
    MIN             reduce using rule 142 (pnSaveOperadorRel -> empty .)
    STADDES         reduce using rule 142 (pnSaveOperadorRel -> empty .)
    BOXPLOT         reduce using rule 142 (pnSaveOperadorRel -> empty .)
    LINREG          reduce using rule 142 (pnSaveOperadorRel -> empty .)
    READ_FILE       reduce using rule 142 (pnSaveOperadorRel -> empty .)


state 271

    (71) relsig -> GREATER_THAN pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    CTEI            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    CTEF            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    CTEC            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    ID              reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MEAN            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MODE            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MEDIAN          reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    VARIANCE        reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MAX             reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MIN             reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    STADDES         reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    LINREG          reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    READ_FILE       reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)


state 272

    (72) relsig -> EQUALS pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    CTEI            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    CTEF            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    CTEC            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    ID              reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MEAN            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MODE            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MEDIAN          reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    VARIANCE        reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MAX             reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MIN             reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    STADDES         reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    LINREG          reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    READ_FILE       reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)


state 273

    (73) relsig -> NOTEQUALS pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    CTEI            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    CTEF            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    CTEC            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    ID              reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MEAN            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MODE            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MEDIAN          reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    VARIANCE        reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MAX             reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MIN             reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    STADDES         reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    LINREG          reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    READ_FILE       reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)


state 274

    (75) tp -> tsig t . pnCuadPlMi tp
    (144) pnCuadPlMi -> . empty
    (163) empty -> .

    PLUS            reduce using rule 163 (empty -> .)
    MINUS           reduce using rule 163 (empty -> .)
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnCuadPlMi                     shift and go to state 308
    empty                          shift and go to state 164

state 275

    (77) tsig -> PLUS pnSaveOperadorPlMi .

    LEFT_PARENT     reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    CTEI            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    CTEF            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    CTEC            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    ID              reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MEAN            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MODE            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MEDIAN          reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    VARIANCE        reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MAX             reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MIN             reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    STADDES         reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    BOXPLOT         reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    LINREG          reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    READ_FILE       reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)


state 276

    (140) pnSaveOperadorPlMi -> empty .

    LEFT_PARENT     reduce using rule 140 (pnSaveOperadorPlMi -> empty .)
    CTEI            reduce using rule 140 (pnSaveOperadorPlMi -> empty .)
    CTEF            reduce using rule 140 (pnSaveOperadorPlMi -> empty .)
    CTEC            reduce using rule 140 (pnSaveOperadorPlMi -> empty .)
    ID              reduce using rule 140 (pnSaveOperadorPlMi -> empty .)
    MEAN            reduce using rule 140 (pnSaveOperadorPlMi -> empty .)
    MODE            reduce using rule 140 (pnSaveOperadorPlMi -> empty .)
    MEDIAN          reduce using rule 140 (pnSaveOperadorPlMi -> empty .)
    VARIANCE        reduce using rule 140 (pnSaveOperadorPlMi -> empty .)
    MAX             reduce using rule 140 (pnSaveOperadorPlMi -> empty .)
    MIN             reduce using rule 140 (pnSaveOperadorPlMi -> empty .)
    STADDES         reduce using rule 140 (pnSaveOperadorPlMi -> empty .)
    BOXPLOT         reduce using rule 140 (pnSaveOperadorPlMi -> empty .)
    LINREG          reduce using rule 140 (pnSaveOperadorPlMi -> empty .)
    READ_FILE       reduce using rule 140 (pnSaveOperadorPlMi -> empty .)


state 277

    (78) tsig -> MINUS pnSaveOperadorPlMi .

    LEFT_PARENT     reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    CTEI            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    CTEF            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    CTEC            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    ID              reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MEAN            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MODE            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MEDIAN          reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    VARIANCE        reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MAX             reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MIN             reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    STADDES         reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    BOXPLOT         reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    LINREG          reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    READ_FILE       reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)


state 278

    (80) fp -> fsig f . pnCuadMuDi fp
    (145) pnCuadMuDi -> . empty
    (163) empty -> .

    MULT            reduce using rule 163 (empty -> .)
    DIV             reduce using rule 163 (empty -> .)
    PLUS            reduce using rule 163 (empty -> .)
    MINUS           reduce using rule 163 (empty -> .)
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnCuadMuDi                     shift and go to state 309
    empty                          shift and go to state 166

state 279

    (82) fsig -> MULT pnSaveOperadorMuDi .

    LEFT_PARENT     reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    CTEI            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    CTEF            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    CTEC            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    ID              reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MEAN            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MODE            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MEDIAN          reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    VARIANCE        reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MAX             reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MIN             reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    STADDES         reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    BOXPLOT         reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    LINREG          reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    READ_FILE       reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)


state 280

    (141) pnSaveOperadorMuDi -> empty .

    LEFT_PARENT     reduce using rule 141 (pnSaveOperadorMuDi -> empty .)
    CTEI            reduce using rule 141 (pnSaveOperadorMuDi -> empty .)
    CTEF            reduce using rule 141 (pnSaveOperadorMuDi -> empty .)
    CTEC            reduce using rule 141 (pnSaveOperadorMuDi -> empty .)
    ID              reduce using rule 141 (pnSaveOperadorMuDi -> empty .)
    MEAN            reduce using rule 141 (pnSaveOperadorMuDi -> empty .)
    MODE            reduce using rule 141 (pnSaveOperadorMuDi -> empty .)
    MEDIAN          reduce using rule 141 (pnSaveOperadorMuDi -> empty .)
    VARIANCE        reduce using rule 141 (pnSaveOperadorMuDi -> empty .)
    MAX             reduce using rule 141 (pnSaveOperadorMuDi -> empty .)
    MIN             reduce using rule 141 (pnSaveOperadorMuDi -> empty .)
    STADDES         reduce using rule 141 (pnSaveOperadorMuDi -> empty .)
    BOXPLOT         reduce using rule 141 (pnSaveOperadorMuDi -> empty .)
    LINREG          reduce using rule 141 (pnSaveOperadorMuDi -> empty .)
    READ_FILE       reduce using rule 141 (pnSaveOperadorMuDi -> empty .)


state 281

    (83) fsig -> DIV pnSaveOperadorMuDi .

    LEFT_PARENT     reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    CTEI            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    CTEF            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    CTEC            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    ID              reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MEAN            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MODE            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MEDIAN          reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    VARIANCE        reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MAX             reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MIN             reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    STADDES         reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    BOXPLOT         reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    LINREG          reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    READ_FILE       reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)


state 282

    (84) f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT . pnPopFondoFalso
    (137) pnPopFondoFalso -> . empty
    (163) empty -> .

    MULT            reduce using rule 163 (empty -> .)
    DIV             reduce using rule 163 (empty -> .)
    PLUS            reduce using rule 163 (empty -> .)
    MINUS           reduce using rule 163 (empty -> .)
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnPopFondoFalso                shift and go to state 310
    empty                          shift and go to state 311

state 283

    (14) copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 312


state 284

    (106) mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 313


state 285

    (107) mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 314


state 286

    (108) median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 315


state 287

    (109) variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 316


state 288

    (110) max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 317


state 289

    (111) min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 318


state 290

    (112) staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 319


state 291

    (113) boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 320


state 292

    (114) linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 321


state 293

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT . LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    LEFT_CUR_BRACKET shift and go to state 322


state 294

    (41) paramlist -> tipoparam ARROW . ID pnAddParametersTablaVar paramlistp

    ID              shift and go to state 323


state 295

    (43) tipoparam -> DATAFRAME pnSaveTypeVar .

    ARROW           reduce using rule 43 (tipoparam -> DATAFRAME pnSaveTypeVar .)


state 296

    (56) asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .

    ID              reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    READ            reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    WRITE           reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    IF              reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    WHILE           reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    FOR             reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    RETURNS         reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    READ_FILE       reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MEAN            reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MODE            reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MEDIAN          reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    VARIANCE        reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MAX             reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MIN             reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    STADDES         reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    BOXPLOT         reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    LINREG          reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)


state 297

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT . pnCheckNoParam SEMICOLON pnCuadGoSub
    (131) pnCheckNoParam -> . empty
    (163) empty -> .

    SEMICOLON       reduce using rule 163 (empty -> .)

    pnCheckNoParam                 shift and go to state 324
    empty                          shift and go to state 325

state 298

    (22) expp -> exp pnCuadParametro . exppp
    (24) exppp -> . COMMA pnUpdateK exp pnCuadParametro exppp
    (25) exppp -> . empty
    (163) empty -> .

    COMMA           shift and go to state 327
    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    exppp                          shift and go to state 326
    empty                          shift and go to state 328

state 299

    (129) pnCuadParametro -> empty .

    COMMA           reduce using rule 129 (pnCuadParametro -> empty .)
    RIGHT_PARENT    reduce using rule 129 (pnCuadParametro -> empty .)


state 300

    (17) indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .

    ASIGN           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    MULT            reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    DIV             reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    PLUS            reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    MINUS           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    LESS_THAN       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    GREATER_THAN    reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    EQUALS          reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    NOTEQUALS       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    AND             reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    OR              reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    SEMICOLON       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    RIGHT_PARENT    reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    COMMA           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    RIGHT_SQR_BRACKET reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)


state 301

    (19) indexpp -> COMMA exp .

    RIGHT_SQR_BRACKET reduce using rule 19 (indexpp -> COMMA exp .)


state 302

    (57) lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)


state 303

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf

    LEFT_CUR_BRACKET shift and go to state 329


state 304

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile

    LEFT_CUR_BRACKET shift and go to state 330


state 305

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp . pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (160) pnCreateVControl -> . empty
    (163) empty -> .

    COMMA           reduce using rule 163 (empty -> .)

    pnCreateVControl               shift and go to state 331
    empty                          shift and go to state 332

state 306

    (63) logic -> logicsig exprel pnCuadOplog . logic
    (63) logic -> . logicsig exprel pnCuadOplog logic
    (64) logic -> . empty
    (65) logicsig -> . AND pnSaveOperadorLog
    (66) logicsig -> . OR pnSaveOperadorLog
    (163) empty -> .

    AND             shift and go to state 208
    OR              shift and go to state 209
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    logicsig                       shift and go to state 206
    logic                          shift and go to state 333
    empty                          shift and go to state 207

state 307

    (68) relacionalp -> relsig e pnCuadOpRelacional . relacionalp
    (68) relacionalp -> . relsig e pnCuadOpRelacional relacionalp
    (69) relacionalp -> . empty
    (70) relsig -> . LESS_THAN pnSaveOperadorRel
    (71) relsig -> . GREATER_THAN pnSaveOperadorRel
    (72) relsig -> . EQUALS pnSaveOperadorRel
    (73) relsig -> . NOTEQUALS pnSaveOperadorRel
    (163) empty -> .

    LESS_THAN       shift and go to state 213
    GREATER_THAN    shift and go to state 214
    EQUALS          shift and go to state 215
    NOTEQUALS       shift and go to state 216
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    relsig                         shift and go to state 211
    relacionalp                    shift and go to state 334
    empty                          shift and go to state 212

state 308

    (75) tp -> tsig t pnCuadPlMi . tp
    (75) tp -> . tsig t pnCuadPlMi tp
    (76) tp -> . empty
    (77) tsig -> . PLUS pnSaveOperadorPlMi
    (78) tsig -> . MINUS pnSaveOperadorPlMi
    (163) empty -> .

    PLUS            shift and go to state 220
    MINUS           shift and go to state 221
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    tsig                           shift and go to state 218
    tp                             shift and go to state 335
    empty                          shift and go to state 219

state 309

    (80) fp -> fsig f pnCuadMuDi . fp
    (80) fp -> . fsig f pnCuadMuDi fp
    (81) fp -> . empty
    (82) fsig -> . MULT pnSaveOperadorMuDi
    (83) fsig -> . DIV pnSaveOperadorMuDi
    (163) empty -> .

    MULT            shift and go to state 225
    DIV             shift and go to state 226
    PLUS            reduce using rule 163 (empty -> .)
    MINUS           reduce using rule 163 (empty -> .)
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    fsig                           shift and go to state 223
    fp                             shift and go to state 336
    empty                          shift and go to state 224

state 310

    (84) f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .

    MULT            reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    DIV             reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    PLUS            reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    MINUS           reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    LESS_THAN       reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    GREATER_THAN    reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    EQUALS          reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    NOTEQUALS       reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    AND             reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    OR              reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    SEMICOLON       reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    RIGHT_PARENT    reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    COMMA           reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    RIGHT_SQR_BRACKET reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)


state 311

    (137) pnPopFondoFalso -> empty .

    MULT            reduce using rule 137 (pnPopFondoFalso -> empty .)
    DIV             reduce using rule 137 (pnPopFondoFalso -> empty .)
    PLUS            reduce using rule 137 (pnPopFondoFalso -> empty .)
    MINUS           reduce using rule 137 (pnPopFondoFalso -> empty .)
    LESS_THAN       reduce using rule 137 (pnPopFondoFalso -> empty .)
    GREATER_THAN    reduce using rule 137 (pnPopFondoFalso -> empty .)
    EQUALS          reduce using rule 137 (pnPopFondoFalso -> empty .)
    NOTEQUALS       reduce using rule 137 (pnPopFondoFalso -> empty .)
    AND             reduce using rule 137 (pnPopFondoFalso -> empty .)
    OR              reduce using rule 137 (pnPopFondoFalso -> empty .)
    SEMICOLON       reduce using rule 137 (pnPopFondoFalso -> empty .)
    RIGHT_PARENT    reduce using rule 137 (pnPopFondoFalso -> empty .)
    COMMA           reduce using rule 137 (pnPopFondoFalso -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 137 (pnPopFondoFalso -> empty .)


state 312

    (14) copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)


state 313

    (106) mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 314

    (107) mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 315

    (108) median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 316

    (109) variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 317

    (110) max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 318

    (111) min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 319

    (112) staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 320

    (113) boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 321

    (114) linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 322

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET . varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (163) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 163 (empty -> .)
    READ            reduce using rule 163 (empty -> .)
    WRITE           reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    FOR             reduce using rule 163 (empty -> .)
    RETURNS         reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)

    varp                           shift and go to state 337
    var                            shift and go to state 10
    empty                          shift and go to state 11

state 323

    (41) paramlist -> tipoparam ARROW ID . pnAddParametersTablaVar paramlistp
    (122) pnAddParametersTablaVar -> . empty
    (163) empty -> .

    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnAddParametersTablaVar        shift and go to state 338
    empty                          shift and go to state 339

state 324

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam . SEMICOLON pnCuadGoSub

    SEMICOLON       shift and go to state 340


state 325

    (131) pnCheckNoParam -> empty .

    SEMICOLON       reduce using rule 131 (pnCheckNoParam -> empty .)


state 326

    (22) expp -> exp pnCuadParametro exppp .

    RIGHT_PARENT    reduce using rule 22 (expp -> exp pnCuadParametro exppp .)


state 327

    (24) exppp -> COMMA . pnUpdateK exp pnCuadParametro exppp
    (130) pnUpdateK -> . empty
    (163) empty -> .

    LEFT_PARENT     reduce using rule 163 (empty -> .)
    CTEI            reduce using rule 163 (empty -> .)
    CTEF            reduce using rule 163 (empty -> .)
    CTEC            reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)

    pnUpdateK                      shift and go to state 341
    empty                          shift and go to state 342

state 328

    (25) exppp -> empty .

    RIGHT_PARENT    reduce using rule 25 (exppp -> empty .)


state 329

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (163) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatutop                      shift and go to state 343
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 330

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET pnEndWhile
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (163) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatutop                      shift and go to state 344
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 331

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl . COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    COMMA           shift and go to state 345


state 332

    (160) pnCreateVControl -> empty .

    COMMA           reduce using rule 160 (pnCreateVControl -> empty .)


state 333

    (63) logic -> logicsig exprel pnCuadOplog logic .

    SEMICOLON       reduce using rule 63 (logic -> logicsig exprel pnCuadOplog logic .)
    RIGHT_PARENT    reduce using rule 63 (logic -> logicsig exprel pnCuadOplog logic .)
    COMMA           reduce using rule 63 (logic -> logicsig exprel pnCuadOplog logic .)
    RIGHT_SQR_BRACKET reduce using rule 63 (logic -> logicsig exprel pnCuadOplog logic .)


state 334

    (68) relacionalp -> relsig e pnCuadOpRelacional relacionalp .

    AND             reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    OR              reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    SEMICOLON       reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    RIGHT_PARENT    reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    COMMA           reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    RIGHT_SQR_BRACKET reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)


state 335

    (75) tp -> tsig t pnCuadPlMi tp .

    LESS_THAN       reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    GREATER_THAN    reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    EQUALS          reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    NOTEQUALS       reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    AND             reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    OR              reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    SEMICOLON       reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    RIGHT_PARENT    reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    COMMA           reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    RIGHT_SQR_BRACKET reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)


state 336

    (80) fp -> fsig f pnCuadMuDi fp .

    PLUS            reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    MINUS           reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    LESS_THAN       reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    GREATER_THAN    reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    EQUALS          reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    NOTEQUALS       reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    AND             reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    OR              reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    SEMICOLON       reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    RIGHT_PARENT    reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    COMMA           reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    RIGHT_SQR_BRACKET reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)


state 337

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp . pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (124) pnDirecIniFunc -> . empty
    (163) empty -> .

    ID              reduce using rule 163 (empty -> .)
    READ            reduce using rule 163 (empty -> .)
    WRITE           reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    FOR             reduce using rule 163 (empty -> .)
    RETURNS         reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)

    pnDirecIniFunc                 shift and go to state 346
    empty                          shift and go to state 347

state 338

    (41) paramlist -> tipoparam ARROW ID pnAddParametersTablaVar . paramlistp
    (44) paramlistp -> . COMMA paramlist
    (45) paramlistp -> . empty
    (163) empty -> .

    COMMA           shift and go to state 349
    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    paramlistp                     shift and go to state 348
    empty                          shift and go to state 350

state 339

    (122) pnAddParametersTablaVar -> empty .

    COMMA           reduce using rule 122 (pnAddParametersTablaVar -> empty .)
    RIGHT_PARENT    reduce using rule 122 (pnAddParametersTablaVar -> empty .)


state 340

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON . pnCuadGoSub
    (132) pnCuadGoSub -> . empty
    (163) empty -> .

    ID              reduce using rule 163 (empty -> .)
    READ            reduce using rule 163 (empty -> .)
    WRITE           reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    FOR             reduce using rule 163 (empty -> .)
    RETURNS         reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)
    MULT            reduce using rule 163 (empty -> .)
    DIV             reduce using rule 163 (empty -> .)
    PLUS            reduce using rule 163 (empty -> .)
    MINUS           reduce using rule 163 (empty -> .)
    LESS_THAN       reduce using rule 163 (empty -> .)
    GREATER_THAN    reduce using rule 163 (empty -> .)
    EQUALS          reduce using rule 163 (empty -> .)
    NOTEQUALS       reduce using rule 163 (empty -> .)
    AND             reduce using rule 163 (empty -> .)
    OR              reduce using rule 163 (empty -> .)
    SEMICOLON       reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)
    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 163 (empty -> .)

    pnCuadGoSub                    shift and go to state 351
    empty                          shift and go to state 352

state 341

    (24) exppp -> COMMA pnUpdateK . exp pnCuadParametro exppp
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 353
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 342

    (130) pnUpdateK -> empty .

    LEFT_PARENT     reduce using rule 130 (pnUpdateK -> empty .)
    CTEI            reduce using rule 130 (pnUpdateK -> empty .)
    CTEF            reduce using rule 130 (pnUpdateK -> empty .)
    CTEC            reduce using rule 130 (pnUpdateK -> empty .)
    ID              reduce using rule 130 (pnUpdateK -> empty .)
    MEAN            reduce using rule 130 (pnUpdateK -> empty .)
    MODE            reduce using rule 130 (pnUpdateK -> empty .)
    MEDIAN          reduce using rule 130 (pnUpdateK -> empty .)
    VARIANCE        reduce using rule 130 (pnUpdateK -> empty .)
    MAX             reduce using rule 130 (pnUpdateK -> empty .)
    MIN             reduce using rule 130 (pnUpdateK -> empty .)
    STADDES         reduce using rule 130 (pnUpdateK -> empty .)
    BOXPLOT         reduce using rule 130 (pnUpdateK -> empty .)
    LINREG          reduce using rule 130 (pnUpdateK -> empty .)
    READ_FILE       reduce using rule 130 (pnUpdateK -> empty .)


state 343

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET falsop pnEndIf

    RIGHT_CUR_BRACKET shift and go to state 354


state 344

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET pnEndWhile

    RIGHT_CUR_BRACKET shift and go to state 355


state 345

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA . exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 356
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 346

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc . estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (163) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatutop                      shift and go to state 357
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 347

    (124) pnDirecIniFunc -> empty .

    ID              reduce using rule 124 (pnDirecIniFunc -> empty .)
    READ            reduce using rule 124 (pnDirecIniFunc -> empty .)
    WRITE           reduce using rule 124 (pnDirecIniFunc -> empty .)
    IF              reduce using rule 124 (pnDirecIniFunc -> empty .)
    WHILE           reduce using rule 124 (pnDirecIniFunc -> empty .)
    FOR             reduce using rule 124 (pnDirecIniFunc -> empty .)
    RETURNS         reduce using rule 124 (pnDirecIniFunc -> empty .)
    READ_FILE       reduce using rule 124 (pnDirecIniFunc -> empty .)
    MEAN            reduce using rule 124 (pnDirecIniFunc -> empty .)
    MODE            reduce using rule 124 (pnDirecIniFunc -> empty .)
    MEDIAN          reduce using rule 124 (pnDirecIniFunc -> empty .)
    VARIANCE        reduce using rule 124 (pnDirecIniFunc -> empty .)
    MAX             reduce using rule 124 (pnDirecIniFunc -> empty .)
    MIN             reduce using rule 124 (pnDirecIniFunc -> empty .)
    STADDES         reduce using rule 124 (pnDirecIniFunc -> empty .)
    BOXPLOT         reduce using rule 124 (pnDirecIniFunc -> empty .)
    LINREG          reduce using rule 124 (pnDirecIniFunc -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 124 (pnDirecIniFunc -> empty .)


state 348

    (41) paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp .

    RIGHT_PARENT    reduce using rule 41 (paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp .)


state 349

    (44) paramlistp -> COMMA . paramlist
    (41) paramlist -> . tipoparam ARROW ID pnAddParametersTablaVar paramlistp
    (42) tipoparam -> . tipo_simp
    (43) tipoparam -> . DATAFRAME pnSaveTypeVar
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    DATAFRAME       shift and go to state 249
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28

    paramlist                      shift and go to state 358
    tipoparam                      shift and go to state 247
    tipo_simp                      shift and go to state 248

state 350

    (45) paramlistp -> empty .

    RIGHT_PARENT    reduce using rule 45 (paramlistp -> empty .)


state 351

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .

    ID              reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    READ            reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    WRITE           reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    IF              reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    WHILE           reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    FOR             reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    RETURNS         reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    READ_FILE       reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    MEAN            reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    MODE            reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    MEDIAN          reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    VARIANCE        reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    MAX             reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    MIN             reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    STADDES         reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    BOXPLOT         reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    LINREG          reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    RIGHT_CUR_BRACKET reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    MULT            reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    DIV             reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    PLUS            reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    MINUS           reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    LESS_THAN       reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    GREATER_THAN    reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    EQUALS          reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    NOTEQUALS       reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    AND             reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    OR              reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    SEMICOLON       reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    RIGHT_PARENT    reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    COMMA           reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    RIGHT_SQR_BRACKET reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)


state 352

    (132) pnCuadGoSub -> empty .

    ID              reduce using rule 132 (pnCuadGoSub -> empty .)
    READ            reduce using rule 132 (pnCuadGoSub -> empty .)
    WRITE           reduce using rule 132 (pnCuadGoSub -> empty .)
    IF              reduce using rule 132 (pnCuadGoSub -> empty .)
    WHILE           reduce using rule 132 (pnCuadGoSub -> empty .)
    FOR             reduce using rule 132 (pnCuadGoSub -> empty .)
    RETURNS         reduce using rule 132 (pnCuadGoSub -> empty .)
    READ_FILE       reduce using rule 132 (pnCuadGoSub -> empty .)
    MEAN            reduce using rule 132 (pnCuadGoSub -> empty .)
    MODE            reduce using rule 132 (pnCuadGoSub -> empty .)
    MEDIAN          reduce using rule 132 (pnCuadGoSub -> empty .)
    VARIANCE        reduce using rule 132 (pnCuadGoSub -> empty .)
    MAX             reduce using rule 132 (pnCuadGoSub -> empty .)
    MIN             reduce using rule 132 (pnCuadGoSub -> empty .)
    STADDES         reduce using rule 132 (pnCuadGoSub -> empty .)
    BOXPLOT         reduce using rule 132 (pnCuadGoSub -> empty .)
    LINREG          reduce using rule 132 (pnCuadGoSub -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 132 (pnCuadGoSub -> empty .)
    MULT            reduce using rule 132 (pnCuadGoSub -> empty .)
    DIV             reduce using rule 132 (pnCuadGoSub -> empty .)
    PLUS            reduce using rule 132 (pnCuadGoSub -> empty .)
    MINUS           reduce using rule 132 (pnCuadGoSub -> empty .)
    LESS_THAN       reduce using rule 132 (pnCuadGoSub -> empty .)
    GREATER_THAN    reduce using rule 132 (pnCuadGoSub -> empty .)
    EQUALS          reduce using rule 132 (pnCuadGoSub -> empty .)
    NOTEQUALS       reduce using rule 132 (pnCuadGoSub -> empty .)
    AND             reduce using rule 132 (pnCuadGoSub -> empty .)
    OR              reduce using rule 132 (pnCuadGoSub -> empty .)
    SEMICOLON       reduce using rule 132 (pnCuadGoSub -> empty .)
    RIGHT_PARENT    reduce using rule 132 (pnCuadGoSub -> empty .)
    COMMA           reduce using rule 132 (pnCuadGoSub -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 132 (pnCuadGoSub -> empty .)


state 353

    (24) exppp -> COMMA pnUpdateK exp . pnCuadParametro exppp
    (129) pnCuadParametro -> . empty
    (163) empty -> .

    COMMA           reduce using rule 163 (empty -> .)
    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCuadParametro                shift and go to state 359
    empty                          shift and go to state 299

state 354

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET . falsop pnEndIf
    (92) falsop -> . IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (93) falsop -> . empty
    (163) empty -> .

    IF_FALSE        shift and go to state 361
    ID              reduce using rule 163 (empty -> .)
    READ            reduce using rule 163 (empty -> .)
    WRITE           reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    FOR             reduce using rule 163 (empty -> .)
    RETURNS         reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)

    falsop                         shift and go to state 360
    empty                          shift and go to state 362

state 355

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET . pnEndWhile
    (158) pnEndWhile -> . empty
    (163) empty -> .

    ID              reduce using rule 163 (empty -> .)
    READ            reduce using rule 163 (empty -> .)
    WRITE           reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    FOR             reduce using rule 163 (empty -> .)
    RETURNS         reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)

    pnEndWhile                     shift and go to state 363
    empty                          shift and go to state 364

state 356

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp . pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (161) pnCompControlFinal -> . empty
    (163) empty -> .

    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    pnCompControlFinal             shift and go to state 365
    empty                          shift and go to state 366

state 357

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop . RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    RIGHT_CUR_BRACKET shift and go to state 367


state 358

    (44) paramlistp -> COMMA paramlist .

    RIGHT_PARENT    reduce using rule 44 (paramlistp -> COMMA paramlist .)


state 359

    (24) exppp -> COMMA pnUpdateK exp pnCuadParametro . exppp
    (24) exppp -> . COMMA pnUpdateK exp pnCuadParametro exppp
    (25) exppp -> . empty
    (163) empty -> .

    COMMA           shift and go to state 327
    RIGHT_PARENT    reduce using rule 163 (empty -> .)

    exppp                          shift and go to state 368
    empty                          shift and go to state 328

state 360

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop . pnEndIf
    (156) pnEndIf -> . empty
    (163) empty -> .

    ID              reduce using rule 163 (empty -> .)
    READ            reduce using rule 163 (empty -> .)
    WRITE           reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    FOR             reduce using rule 163 (empty -> .)
    RETURNS         reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)

    pnEndIf                        shift and go to state 369
    empty                          shift and go to state 370

state 361

    (92) falsop -> IF_FALSE . pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (155) pnElseIf -> . empty
    (163) empty -> .

    LEFT_CUR_BRACKET reduce using rule 163 (empty -> .)

    pnElseIf                       shift and go to state 371
    empty                          shift and go to state 372

state 362

    (93) falsop -> empty .

    ID              reduce using rule 93 (falsop -> empty .)
    READ            reduce using rule 93 (falsop -> empty .)
    WRITE           reduce using rule 93 (falsop -> empty .)
    IF              reduce using rule 93 (falsop -> empty .)
    WHILE           reduce using rule 93 (falsop -> empty .)
    FOR             reduce using rule 93 (falsop -> empty .)
    RETURNS         reduce using rule 93 (falsop -> empty .)
    READ_FILE       reduce using rule 93 (falsop -> empty .)
    MEAN            reduce using rule 93 (falsop -> empty .)
    MODE            reduce using rule 93 (falsop -> empty .)
    MEDIAN          reduce using rule 93 (falsop -> empty .)
    VARIANCE        reduce using rule 93 (falsop -> empty .)
    MAX             reduce using rule 93 (falsop -> empty .)
    MIN             reduce using rule 93 (falsop -> empty .)
    STADDES         reduce using rule 93 (falsop -> empty .)
    BOXPLOT         reduce using rule 93 (falsop -> empty .)
    LINREG          reduce using rule 93 (falsop -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 93 (falsop -> empty .)


state 363

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .

    ID              reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    READ            reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    WRITE           reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    IF              reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    WHILE           reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    FOR             reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    RETURNS         reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    READ_FILE       reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MEAN            reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MODE            reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MEDIAN          reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    VARIANCE        reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MAX             reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MIN             reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    STADDES         reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    BOXPLOT         reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    LINREG          reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    RIGHT_CUR_BRACKET reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)


state 364

    (158) pnEndWhile -> empty .

    ID              reduce using rule 158 (pnEndWhile -> empty .)
    READ            reduce using rule 158 (pnEndWhile -> empty .)
    WRITE           reduce using rule 158 (pnEndWhile -> empty .)
    IF              reduce using rule 158 (pnEndWhile -> empty .)
    WHILE           reduce using rule 158 (pnEndWhile -> empty .)
    FOR             reduce using rule 158 (pnEndWhile -> empty .)
    RETURNS         reduce using rule 158 (pnEndWhile -> empty .)
    READ_FILE       reduce using rule 158 (pnEndWhile -> empty .)
    MEAN            reduce using rule 158 (pnEndWhile -> empty .)
    MODE            reduce using rule 158 (pnEndWhile -> empty .)
    MEDIAN          reduce using rule 158 (pnEndWhile -> empty .)
    VARIANCE        reduce using rule 158 (pnEndWhile -> empty .)
    MAX             reduce using rule 158 (pnEndWhile -> empty .)
    MIN             reduce using rule 158 (pnEndWhile -> empty .)
    STADDES         reduce using rule 158 (pnEndWhile -> empty .)
    BOXPLOT         reduce using rule 158 (pnEndWhile -> empty .)
    LINREG          reduce using rule 158 (pnEndWhile -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 158 (pnEndWhile -> empty .)


state 365

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal . RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    RIGHT_PARENT    shift and go to state 373


state 366

    (161) pnCompControlFinal -> empty .

    RIGHT_PARENT    reduce using rule 161 (pnCompControlFinal -> empty .)


state 367

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET . pnCountVarsINTOResources pnCloseCurrentFunction
    (123) pnCountVarsINTOResources -> . empty
    (163) empty -> .

    FUNC            reduce using rule 163 (empty -> .)
    DO              reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    READ            reduce using rule 163 (empty -> .)
    WRITE           reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    FOR             reduce using rule 163 (empty -> .)
    RETURNS         reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)

    pnCountVarsINTOResources       shift and go to state 374
    empty                          shift and go to state 375

state 368

    (24) exppp -> COMMA pnUpdateK exp pnCuadParametro exppp .

    RIGHT_PARENT    reduce using rule 24 (exppp -> COMMA pnUpdateK exp pnCuadParametro exppp .)


state 369

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .

    ID              reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    READ            reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    WRITE           reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    IF              reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    WHILE           reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    FOR             reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    RETURNS         reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    READ_FILE       reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MEAN            reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MODE            reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MEDIAN          reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    VARIANCE        reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MAX             reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MIN             reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    STADDES         reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    BOXPLOT         reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    LINREG          reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    RIGHT_CUR_BRACKET reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)


state 370

    (156) pnEndIf -> empty .

    ID              reduce using rule 156 (pnEndIf -> empty .)
    READ            reduce using rule 156 (pnEndIf -> empty .)
    WRITE           reduce using rule 156 (pnEndIf -> empty .)
    IF              reduce using rule 156 (pnEndIf -> empty .)
    WHILE           reduce using rule 156 (pnEndIf -> empty .)
    FOR             reduce using rule 156 (pnEndIf -> empty .)
    RETURNS         reduce using rule 156 (pnEndIf -> empty .)
    READ_FILE       reduce using rule 156 (pnEndIf -> empty .)
    MEAN            reduce using rule 156 (pnEndIf -> empty .)
    MODE            reduce using rule 156 (pnEndIf -> empty .)
    MEDIAN          reduce using rule 156 (pnEndIf -> empty .)
    VARIANCE        reduce using rule 156 (pnEndIf -> empty .)
    MAX             reduce using rule 156 (pnEndIf -> empty .)
    MIN             reduce using rule 156 (pnEndIf -> empty .)
    STADDES         reduce using rule 156 (pnEndIf -> empty .)
    BOXPLOT         reduce using rule 156 (pnEndIf -> empty .)
    LINREG          reduce using rule 156 (pnEndIf -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 156 (pnEndIf -> empty .)


state 371

    (92) falsop -> IF_FALSE pnElseIf . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_CUR_BRACKET shift and go to state 376


state 372

    (155) pnElseIf -> empty .

    LEFT_CUR_BRACKET reduce using rule 155 (pnElseIf -> empty .)


state 373

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    LEFT_CUR_BRACKET shift and go to state 377


state 374

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources . pnCloseCurrentFunction
    (125) pnCloseCurrentFunction -> . empty
    (163) empty -> .

    FUNC            reduce using rule 163 (empty -> .)
    DO              reduce using rule 163 (empty -> .)
    ID              reduce using rule 163 (empty -> .)
    READ            reduce using rule 163 (empty -> .)
    WRITE           reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    FOR             reduce using rule 163 (empty -> .)
    RETURNS         reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)

    pnCloseCurrentFunction         shift and go to state 378
    empty                          shift and go to state 379

state 375

    (123) pnCountVarsINTOResources -> empty .

    FUNC            reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    DO              reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    ID              reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    READ            reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    WRITE           reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    IF              reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    WHILE           reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    FOR             reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    RETURNS         reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    READ_FILE       reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    MEAN            reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    MODE            reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    MEDIAN          reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    VARIANCE        reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    MAX             reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    MIN             reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    STADDES         reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    BOXPLOT         reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    LINREG          reduce using rule 123 (pnCountVarsINTOResources -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 123 (pnCountVarsINTOResources -> empty .)


state 376

    (92) falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (163) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatutop                      shift and go to state 380
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 377

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET pnEndFor
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (163) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatutop                      shift and go to state 381
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 378

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .

    FUNC            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    DO              reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    ID              reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    READ            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    WRITE           reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    IF              reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    WHILE           reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    FOR             reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    RETURNS         reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    READ_FILE       reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MEAN            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MODE            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MEDIAN          reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    VARIANCE        reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MAX             reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MIN             reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    STADDES         reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    BOXPLOT         reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    LINREG          reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    RIGHT_CUR_BRACKET reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)


state 379

    (125) pnCloseCurrentFunction -> empty .

    FUNC            reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    DO              reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    ID              reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    READ            reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    WRITE           reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    IF              reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    WHILE           reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    FOR             reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    RETURNS         reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    READ_FILE       reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    MEAN            reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    MODE            reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    MEDIAN          reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    VARIANCE        reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    MAX             reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    MIN             reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    STADDES         reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    BOXPLOT         reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    LINREG          reduce using rule 125 (pnCloseCurrentFunction -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 125 (pnCloseCurrentFunction -> empty .)


state 380

    (92) falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET

    RIGHT_CUR_BRACKET shift and go to state 382


state 381

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET pnEndFor

    RIGHT_CUR_BRACKET shift and go to state 383


state 382

    (92) falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .

    ID              reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ            reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WRITE           reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    IF              reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WHILE           reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    FOR             reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RETURNS         reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ_FILE       reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEAN            reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MODE            reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEDIAN          reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    VARIANCE        reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MAX             reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MIN             reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    STADDES         reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    BOXPLOT         reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    LINREG          reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RIGHT_CUR_BRACKET reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)


state 383

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET . pnEndFor
    (162) pnEndFor -> . empty
    (163) empty -> .

    ID              reduce using rule 163 (empty -> .)
    READ            reduce using rule 163 (empty -> .)
    WRITE           reduce using rule 163 (empty -> .)
    IF              reduce using rule 163 (empty -> .)
    WHILE           reduce using rule 163 (empty -> .)
    FOR             reduce using rule 163 (empty -> .)
    RETURNS         reduce using rule 163 (empty -> .)
    READ_FILE       reduce using rule 163 (empty -> .)
    MEAN            reduce using rule 163 (empty -> .)
    MODE            reduce using rule 163 (empty -> .)
    MEDIAN          reduce using rule 163 (empty -> .)
    VARIANCE        reduce using rule 163 (empty -> .)
    MAX             reduce using rule 163 (empty -> .)
    MIN             reduce using rule 163 (empty -> .)
    STADDES         reduce using rule 163 (empty -> .)
    BOXPLOT         reduce using rule 163 (empty -> .)
    LINREG          reduce using rule 163 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 163 (empty -> .)

    pnEndFor                       shift and go to state 384
    empty                          shift and go to state 385

state 384

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .

    ID              reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    READ            reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    WRITE           reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    IF              reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    WHILE           reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    FOR             reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    RETURNS         reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    READ_FILE       reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MEAN            reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MODE            reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MEDIAN          reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    VARIANCE        reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MAX             reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MIN             reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    STADDES         reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    BOXPLOT         reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    LINREG          reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    RIGHT_CUR_BRACKET reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)


state 385

    (162) pnEndFor -> empty .

    ID              reduce using rule 162 (pnEndFor -> empty .)
    READ            reduce using rule 162 (pnEndFor -> empty .)
    WRITE           reduce using rule 162 (pnEndFor -> empty .)
    IF              reduce using rule 162 (pnEndFor -> empty .)
    WHILE           reduce using rule 162 (pnEndFor -> empty .)
    FOR             reduce using rule 162 (pnEndFor -> empty .)
    RETURNS         reduce using rule 162 (pnEndFor -> empty .)
    READ_FILE       reduce using rule 162 (pnEndFor -> empty .)
    MEAN            reduce using rule 162 (pnEndFor -> empty .)
    MODE            reduce using rule 162 (pnEndFor -> empty .)
    MEDIAN          reduce using rule 162 (pnEndFor -> empty .)
    VARIANCE        reduce using rule 162 (pnEndFor -> empty .)
    MAX             reduce using rule 162 (pnEndFor -> empty .)
    MIN             reduce using rule 162 (pnEndFor -> empty .)
    STADDES         reduce using rule 162 (pnEndFor -> empty .)
    BOXPLOT         reduce using rule 162 (pnEndFor -> empty .)
    LINREG          reduce using rule 162 (pnEndFor -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 162 (pnEndFor -> empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 70 resolved using rule (estatuto -> copy)
WARNING: rejected rule (funcesp -> copy) in state 70

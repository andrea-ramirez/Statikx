Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque
Rule 2     varp -> var varp
Rule 3     varp -> empty
Rule 4     funcp -> func funcp
Rule 5     funcp -> empty
Rule 6     bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript
Rule 7     estatutop -> estatuto estatutop
Rule 8     estatutop -> empty
Rule 9     tipo_simp -> INT pnSaveTypeVar
Rule 10    tipo_simp -> FLOAT pnSaveTypeVar
Rule 11    tipo_simp -> CHAR pnSaveTypeVar
Rule 12    tipo_comp -> DATAFRAME
Rule 13    tipo_comp -> file
Rule 14    copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
Rule 15    file -> ID
Rule 16    variable -> ID pnSaveOperandos indexp
Rule 17    indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET
Rule 18    indexp -> empty
Rule 19    indexpp -> COMMA exp
Rule 20    indexpp -> empty
Rule 21    llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
Rule 22    expp -> exp exppp
Rule 23    expp -> empty
Rule 24    exppp -> COMMA exp exppp
Rule 25    exppp -> empty
Rule 26    var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON
Rule 27    v -> DATAFRAME pnSaveTypeVar
Rule 28    v -> tipo_simp vp
Rule 29    vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET
Rule 30    vp -> empty
Rule 31    vpp -> COMMA CTEI
Rule 32    vpp -> empty
Rule 33    idp -> ID pnCheckNameTablaVar idpp
Rule 34    idpp -> COMMA ID pnCheckNameTablaVar idpp
Rule 35    idpp -> empty
Rule 36    func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
Rule 37    returnval -> tipo_simp
Rule 38    returnval -> VOID pnSaveTypeVar
Rule 39    param -> paramlist
Rule 40    param -> empty
Rule 41    paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp
Rule 42    tipoparam -> tipo_simp
Rule 43    tipoparam -> DATAFRAME pnSaveTypeVar
Rule 44    paramlistp -> COMMA paramlist
Rule 45    paramlistp -> empty
Rule 46    estatuto -> asign
Rule 47    estatuto -> llamada
Rule 48    estatuto -> lee
Rule 49    estatuto -> escribe
Rule 50    estatuto -> condicion
Rule 51    estatuto -> ciclow
Rule 52    estatuto -> ciclof
Rule 53    estatuto -> funcesp
Rule 54    estatuto -> return
Rule 55    estatuto -> copy
Rule 56    asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
Rule 57    lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
Rule 58    escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
Rule 59    escribep -> exp pnCuadEscribe
Rule 60    escribep -> LETRERO pnCuadEscribe
Rule 61    return -> RETURNS exp SEMICOLON
Rule 62    exp -> exprel pnCuadOplog logic
Rule 63    logic -> logicsig exprel pnCuadOplog logic
Rule 64    logic -> empty
Rule 65    logicsig -> AND pnSaveOperadorLog
Rule 66    logicsig -> OR pnSaveOperadorLog
Rule 67    exprel -> e pnCuadOpRelacional relacionalp
Rule 68    relacionalp -> relsig e pnCuadOpRelacional relacionalp
Rule 69    relacionalp -> empty
Rule 70    relsig -> LESS_THAN pnSaveOperadorRel
Rule 71    relsig -> GREATER_THAN pnSaveOperadorRel
Rule 72    relsig -> EQUALS pnSaveOperadorRel
Rule 73    relsig -> NOTEQUALS pnSaveOperadorRel
Rule 74    e -> t pnCuadPlMi tp
Rule 75    tp -> tsig t pnCuadPlMi tp
Rule 76    tp -> empty
Rule 77    tsig -> PLUS pnSaveOperadorPlMi
Rule 78    tsig -> MINUS pnSaveOperadorPlMi
Rule 79    t -> f pnCuadMuDi fp
Rule 80    fp -> fsig f pnCuadMuDi fp
Rule 81    fp -> empty
Rule 82    fsig -> MULT pnSaveOperadorMuDi
Rule 83    fsig -> DIV pnSaveOperadorMuDi
Rule 84    f -> LEFT_PARENT exp RIGHT_PARENT
Rule 85    f -> CTEI pnSaveCteI pnSaveOperandoConstante
Rule 86    f -> CTEF pnSaveCteF pnSaveOperandoConstante
Rule 87    f -> CTEC pnSaveCteC pnSaveOperandoConstante
Rule 88    f -> variable
Rule 89    f -> llamada
Rule 90    f -> funcesp
Rule 91    condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
Rule 92    falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
Rule 93    falsop -> empty
Rule 94    ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
Rule 95    ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
Rule 96    funcesp -> mean
Rule 97    funcesp -> mode
Rule 98    funcesp -> median
Rule 99    funcesp -> variance
Rule 100   funcesp -> max
Rule 101   funcesp -> min
Rule 102   funcesp -> staddes
Rule 103   funcesp -> boxplot
Rule 104   funcesp -> linreg
Rule 105   funcesp -> copy
Rule 106   mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 107   mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 108   median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 109   variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 110   max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 111   min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 112   staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 113   boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 114   linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 115   pnCrearDirFunc -> empty
Rule 116   pnScriptFuncDir -> empty
Rule 117   pnCheckTablaVar -> empty
Rule 118   pnSaveTypeVar -> empty
Rule 119   pnCheckNameTablaVar -> empty
Rule 120   pnAddFuncinDir -> empty
Rule 121   pnAddParametersTablaVar -> empty
Rule 122   pnCloseCurrentFunction -> empty
Rule 123   pnEndScript -> empty
Rule 124   pnSaveCteI -> empty
Rule 125   pnSaveCteF -> empty
Rule 126   pnSaveCteC -> empty
Rule 127   pnSaveOperandos -> empty
Rule 128   pnSaveOperandoConstante -> empty
Rule 129   pnSaveOperadorPlMi -> empty
Rule 130   pnSaveOperadorMuDi -> empty
Rule 131   pnSaveOperadorRel -> empty
Rule 132   pnSaveOperadorLog -> empty
Rule 133   pnCuadPlMi -> empty
Rule 134   pnCuadMuDi -> empty
Rule 135   pnCuadOpRelacional -> empty
Rule 136   pnCuadOplog -> empty
Rule 137   pnSaveOperadorAsign -> empty
Rule 138   pnCuadAsign -> empty
Rule 139   pnSaveEscribe -> empty
Rule 140   pnCuadEscribe -> empty
Rule 141   pnSaveLeer -> empty
Rule 142   pnCuadLee -> empty
Rule 143   pnSaveCopy -> empty
Rule 144   pnCuadCopy -> empty
Rule 145   pnSaveFuncEsp -> empty
Rule 146   pnCuadFuncEsp -> empty
Rule 147   empty -> <empty>

Terminals, with rules where they appear

AND                  : 65
ARROW                : 26 36 41
ASIGN                : 56
BOXPLOT              : 113
CHAR                 : 11
COMMA                : 19 24 31 34 44
COMMENT              : 
CTEC                 : 87
CTEF                 : 86
CTEI                 : 29 31 85
DATAFRAME            : 12 27 43
DIV                  : 83
DO                   : 6
EQUALS               : 72
FLOAT                : 10
FOR                  : 95
FUNC                 : 36
GREATER_THAN         : 71
ID                   : 1 15 16 21 33 34 36 41
IF                   : 91
IF_FALSE             : 92
IF_TRUE              : 91
INT                  : 9
LEFT_CUR_BRACKET     : 6 36 91 92 94 95
LEFT_PARENT          : 14 21 36 57 58 84 91 94 95 106 107 108 109 110 111 112 113 114
LEFT_SQR_BRACKET     : 17 29
LESS_THAN            : 70
LETRERO              : 14 60
LINREG               : 114
MAX                  : 110
MEAN                 : 106
MEDIAN               : 108
MIN                  : 111
MINUS                : 78
MODE                 : 107
MULT                 : 82
NOTEQUALS            : 73
OR                   : 66
PLUS                 : 77
READ                 : 57
READ_FILE            : 14
RETURNS              : 61
RIGHT_CUR_BRACKET    : 6 36 91 92 94 95
RIGHT_PARENT         : 14 21 36 57 58 84 91 94 95 106 107 108 109 110 111 112 113 114
RIGHT_SQR_BRACKET    : 17 29
SCRIPT               : 1
SEMICOLON            : 1 14 21 26 56 57 58 61 106 107 108 109 110 111 112 113 114
STADDES              : 112
VAR                  : 26
VARIANCE             : 109
VOID                 : 38
WHILE                : 94
WRITE                : 58
error                : 

Nonterminals, with rules where they appear

asign                : 46 95
bloque               : 1
boxplot              : 103
ciclof               : 52
ciclow               : 51
condicion            : 50
copy                 : 55 105
e                    : 67 68
empty                : 3 5 8 18 20 23 25 30 32 35 40 45 64 69 76 81 93 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146
escribe              : 49
escribep             : 58
estatuto             : 7
estatutop            : 6 7 36 91 92 94 95
exp                  : 17 19 22 24 56 59 61 84 91 94 95
expp                 : 21
exppp                : 22 24
exprel               : 62 63
f                    : 79 80
falsop               : 91
file                 : 13
fp                   : 79 80
fsig                 : 80
func                 : 4
funcesp              : 53 90
funcp                : 1 4 6
idp                  : 26
idpp                 : 33 34
indexp               : 16
indexpp              : 17
lee                  : 48
linreg               : 104
llamada              : 47 89
logic                : 62 63
logicsig             : 63
max                  : 100
mean                 : 96
median               : 98
min                  : 101
mode                 : 97
param                : 36
paramlist            : 39 44
paramlistp           : 41
pnAddFuncinDir       : 36
pnAddParametersTablaVar : 41
pnCheckNameTablaVar  : 33 34
pnCheckTablaVar      : 26 36
pnCloseCurrentFunction : 36
pnCrearDirFunc       : 1
pnCuadAsign          : 56
pnCuadCopy           : 14
pnCuadEscribe        : 59 60
pnCuadFuncEsp        : 106 107 108 109 110 111 112 113 114
pnCuadLee            : 57
pnCuadMuDi           : 79 80
pnCuadOpRelacional   : 67 68
pnCuadOplog          : 62 63
pnCuadPlMi           : 74 75
pnEndScript          : 6
pnSaveCopy           : 14
pnSaveCteC           : 87
pnSaveCteF           : 86
pnSaveCteI           : 85
pnSaveEscribe        : 58
pnSaveFuncEsp        : 106 107 108 109 110 111 112 113 114
pnSaveLeer           : 57
pnSaveOperadorAsign  : 56
pnSaveOperadorLog    : 65 66
pnSaveOperadorMuDi   : 82 83
pnSaveOperadorPlMi   : 77 78
pnSaveOperadorRel    : 70 71 72 73
pnSaveOperandoConstante : 85 86 87
pnSaveOperandos      : 16
pnSaveTypeVar        : 9 10 11 27 38 43
pnScriptFuncDir      : 1
programa             : 0
relacionalp          : 67 68
relsig               : 68
return               : 54
returnval            : 36
staddes              : 102
t                    : 74 75
tipo_comp            : 
tipo_simp            : 28 37 42
tipoparam            : 41
tp                   : 74 75
tsig                 : 75
v                    : 26
var                  : 2
variable             : 56 57 88 106 107 108 109 110 111 112 113 114
variance             : 99
varp                 : 1 2 6 36
vp                   : 28
vpp                  : 29

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque

    SCRIPT          shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> SCRIPT . pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque
    (115) pnCrearDirFunc -> . empty
    (147) empty -> .

    ID              reduce using rule 147 (empty -> .)

    pnCrearDirFunc                 shift and go to state 3
    empty                          shift and go to state 4

state 3

    (1) programa -> SCRIPT pnCrearDirFunc . ID pnScriptFuncDir SEMICOLON varp funcp bloque

    ID              shift and go to state 5


state 4

    (115) pnCrearDirFunc -> empty .

    ID              reduce using rule 115 (pnCrearDirFunc -> empty .)


state 5

    (1) programa -> SCRIPT pnCrearDirFunc ID . pnScriptFuncDir SEMICOLON varp funcp bloque
    (116) pnScriptFuncDir -> . empty
    (147) empty -> .

    SEMICOLON       reduce using rule 147 (empty -> .)

    pnScriptFuncDir                shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir . SEMICOLON varp funcp bloque

    SEMICOLON       shift and go to state 8


state 7

    (116) pnScriptFuncDir -> empty .

    SEMICOLON       reduce using rule 116 (pnScriptFuncDir -> empty .)


state 8

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON . varp funcp bloque
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (147) empty -> .

    VAR             shift and go to state 12
    FUNC            reduce using rule 147 (empty -> .)
    DO              reduce using rule 147 (empty -> .)

    varp                           shift and go to state 9
    var                            shift and go to state 10
    empty                          shift and go to state 11

state 9

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp . funcp bloque
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (147) empty -> .

    FUNC            shift and go to state 16
    DO              reduce using rule 147 (empty -> .)

    funcp                          shift and go to state 13
    func                           shift and go to state 14
    empty                          shift and go to state 15

state 10

    (2) varp -> var . varp
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (147) empty -> .

    VAR             shift and go to state 12
    FUNC            reduce using rule 147 (empty -> .)
    DO              reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    READ            reduce using rule 147 (empty -> .)
    WRITE           reduce using rule 147 (empty -> .)
    IF              reduce using rule 147 (empty -> .)
    WHILE           reduce using rule 147 (empty -> .)
    FOR             reduce using rule 147 (empty -> .)
    RETURNS         reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 147 (empty -> .)

    var                            shift and go to state 10
    varp                           shift and go to state 17
    empty                          shift and go to state 11

state 11

    (3) varp -> empty .

    FUNC            reduce using rule 3 (varp -> empty .)
    DO              reduce using rule 3 (varp -> empty .)
    ID              reduce using rule 3 (varp -> empty .)
    READ            reduce using rule 3 (varp -> empty .)
    WRITE           reduce using rule 3 (varp -> empty .)
    IF              reduce using rule 3 (varp -> empty .)
    WHILE           reduce using rule 3 (varp -> empty .)
    FOR             reduce using rule 3 (varp -> empty .)
    RETURNS         reduce using rule 3 (varp -> empty .)
    READ_FILE       reduce using rule 3 (varp -> empty .)
    MEAN            reduce using rule 3 (varp -> empty .)
    MODE            reduce using rule 3 (varp -> empty .)
    MEDIAN          reduce using rule 3 (varp -> empty .)
    VARIANCE        reduce using rule 3 (varp -> empty .)
    MAX             reduce using rule 3 (varp -> empty .)
    MIN             reduce using rule 3 (varp -> empty .)
    STADDES         reduce using rule 3 (varp -> empty .)
    BOXPLOT         reduce using rule 3 (varp -> empty .)
    LINREG          reduce using rule 3 (varp -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 3 (varp -> empty .)


state 12

    (26) var -> VAR . pnCheckTablaVar v ARROW idp SEMICOLON
    (117) pnCheckTablaVar -> . empty
    (147) empty -> .

    DATAFRAME       reduce using rule 147 (empty -> .)
    INT             reduce using rule 147 (empty -> .)
    FLOAT           reduce using rule 147 (empty -> .)
    CHAR            reduce using rule 147 (empty -> .)

    pnCheckTablaVar                shift and go to state 18
    empty                          shift and go to state 19

state 13

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp . bloque
    (6) bloque -> . DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript

    DO              shift and go to state 21

    bloque                         shift and go to state 20

state 14

    (4) funcp -> func . funcp
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (147) empty -> .

    FUNC            shift and go to state 16
    DO              reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    READ            reduce using rule 147 (empty -> .)
    WRITE           reduce using rule 147 (empty -> .)
    IF              reduce using rule 147 (empty -> .)
    WHILE           reduce using rule 147 (empty -> .)
    FOR             reduce using rule 147 (empty -> .)
    RETURNS         reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 147 (empty -> .)

    func                           shift and go to state 14
    funcp                          shift and go to state 22
    empty                          shift and go to state 15

state 15

    (5) funcp -> empty .

    DO              reduce using rule 5 (funcp -> empty .)
    ID              reduce using rule 5 (funcp -> empty .)
    READ            reduce using rule 5 (funcp -> empty .)
    WRITE           reduce using rule 5 (funcp -> empty .)
    IF              reduce using rule 5 (funcp -> empty .)
    WHILE           reduce using rule 5 (funcp -> empty .)
    FOR             reduce using rule 5 (funcp -> empty .)
    RETURNS         reduce using rule 5 (funcp -> empty .)
    READ_FILE       reduce using rule 5 (funcp -> empty .)
    MEAN            reduce using rule 5 (funcp -> empty .)
    MODE            reduce using rule 5 (funcp -> empty .)
    MEDIAN          reduce using rule 5 (funcp -> empty .)
    VARIANCE        reduce using rule 5 (funcp -> empty .)
    MAX             reduce using rule 5 (funcp -> empty .)
    MIN             reduce using rule 5 (funcp -> empty .)
    STADDES         reduce using rule 5 (funcp -> empty .)
    BOXPLOT         reduce using rule 5 (funcp -> empty .)
    LINREG          reduce using rule 5 (funcp -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 5 (funcp -> empty .)


state 16

    (36) func -> FUNC . returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (37) returnval -> . tipo_simp
    (38) returnval -> . VOID pnSaveTypeVar
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    VOID            shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28

    returnval                      shift and go to state 23
    tipo_simp                      shift and go to state 24

state 17

    (2) varp -> var varp .

    FUNC            reduce using rule 2 (varp -> var varp .)
    DO              reduce using rule 2 (varp -> var varp .)
    ID              reduce using rule 2 (varp -> var varp .)
    READ            reduce using rule 2 (varp -> var varp .)
    WRITE           reduce using rule 2 (varp -> var varp .)
    IF              reduce using rule 2 (varp -> var varp .)
    WHILE           reduce using rule 2 (varp -> var varp .)
    FOR             reduce using rule 2 (varp -> var varp .)
    RETURNS         reduce using rule 2 (varp -> var varp .)
    READ_FILE       reduce using rule 2 (varp -> var varp .)
    MEAN            reduce using rule 2 (varp -> var varp .)
    MODE            reduce using rule 2 (varp -> var varp .)
    MEDIAN          reduce using rule 2 (varp -> var varp .)
    VARIANCE        reduce using rule 2 (varp -> var varp .)
    MAX             reduce using rule 2 (varp -> var varp .)
    MIN             reduce using rule 2 (varp -> var varp .)
    STADDES         reduce using rule 2 (varp -> var varp .)
    BOXPLOT         reduce using rule 2 (varp -> var varp .)
    LINREG          reduce using rule 2 (varp -> var varp .)
    RIGHT_CUR_BRACKET reduce using rule 2 (varp -> var varp .)


state 18

    (26) var -> VAR pnCheckTablaVar . v ARROW idp SEMICOLON
    (27) v -> . DATAFRAME pnSaveTypeVar
    (28) v -> . tipo_simp vp
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    DATAFRAME       shift and go to state 30
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28

    v                              shift and go to state 29
    tipo_simp                      shift and go to state 31

state 19

    (117) pnCheckTablaVar -> empty .

    DATAFRAME       reduce using rule 117 (pnCheckTablaVar -> empty .)
    INT             reduce using rule 117 (pnCheckTablaVar -> empty .)
    FLOAT           reduce using rule 117 (pnCheckTablaVar -> empty .)
    CHAR            reduce using rule 117 (pnCheckTablaVar -> empty .)
    RIGHT_PARENT    reduce using rule 117 (pnCheckTablaVar -> empty .)


state 20

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque .

    $end            reduce using rule 1 (programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque .)


state 21

    (6) bloque -> DO . LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript

    LEFT_CUR_BRACKET shift and go to state 32


state 22

    (4) funcp -> func funcp .

    DO              reduce using rule 4 (funcp -> func funcp .)
    ID              reduce using rule 4 (funcp -> func funcp .)
    READ            reduce using rule 4 (funcp -> func funcp .)
    WRITE           reduce using rule 4 (funcp -> func funcp .)
    IF              reduce using rule 4 (funcp -> func funcp .)
    WHILE           reduce using rule 4 (funcp -> func funcp .)
    FOR             reduce using rule 4 (funcp -> func funcp .)
    RETURNS         reduce using rule 4 (funcp -> func funcp .)
    READ_FILE       reduce using rule 4 (funcp -> func funcp .)
    MEAN            reduce using rule 4 (funcp -> func funcp .)
    MODE            reduce using rule 4 (funcp -> func funcp .)
    MEDIAN          reduce using rule 4 (funcp -> func funcp .)
    VARIANCE        reduce using rule 4 (funcp -> func funcp .)
    MAX             reduce using rule 4 (funcp -> func funcp .)
    MIN             reduce using rule 4 (funcp -> func funcp .)
    STADDES         reduce using rule 4 (funcp -> func funcp .)
    BOXPLOT         reduce using rule 4 (funcp -> func funcp .)
    LINREG          reduce using rule 4 (funcp -> func funcp .)
    RIGHT_CUR_BRACKET reduce using rule 4 (funcp -> func funcp .)


state 23

    (36) func -> FUNC returnval . ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction

    ARROW           shift and go to state 33


state 24

    (37) returnval -> tipo_simp .

    ARROW           reduce using rule 37 (returnval -> tipo_simp .)


state 25

    (38) returnval -> VOID . pnSaveTypeVar
    (118) pnSaveTypeVar -> . empty
    (147) empty -> .

    ARROW           reduce using rule 147 (empty -> .)

    pnSaveTypeVar                  shift and go to state 34
    empty                          shift and go to state 35

state 26

    (9) tipo_simp -> INT . pnSaveTypeVar
    (118) pnSaveTypeVar -> . empty
    (147) empty -> .

    ARROW           reduce using rule 147 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnSaveTypeVar                  shift and go to state 36
    empty                          shift and go to state 35

state 27

    (10) tipo_simp -> FLOAT . pnSaveTypeVar
    (118) pnSaveTypeVar -> . empty
    (147) empty -> .

    ARROW           reduce using rule 147 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnSaveTypeVar                  shift and go to state 37
    empty                          shift and go to state 35

state 28

    (11) tipo_simp -> CHAR . pnSaveTypeVar
    (118) pnSaveTypeVar -> . empty
    (147) empty -> .

    ARROW           reduce using rule 147 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnSaveTypeVar                  shift and go to state 38
    empty                          shift and go to state 35

state 29

    (26) var -> VAR pnCheckTablaVar v . ARROW idp SEMICOLON

    ARROW           shift and go to state 39


state 30

    (27) v -> DATAFRAME . pnSaveTypeVar
    (118) pnSaveTypeVar -> . empty
    (147) empty -> .

    ARROW           reduce using rule 147 (empty -> .)

    pnSaveTypeVar                  shift and go to state 40
    empty                          shift and go to state 35

state 31

    (28) v -> tipo_simp . vp
    (29) vp -> . LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET
    (30) vp -> . empty
    (147) empty -> .

    LEFT_SQR_BRACKET shift and go to state 42
    ARROW           reduce using rule 147 (empty -> .)

    vp                             shift and go to state 41
    empty                          shift and go to state 43

state 32

    (6) bloque -> DO LEFT_CUR_BRACKET . varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (147) empty -> .

    VAR             shift and go to state 12
    FUNC            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    READ            reduce using rule 147 (empty -> .)
    WRITE           reduce using rule 147 (empty -> .)
    IF              reduce using rule 147 (empty -> .)
    WHILE           reduce using rule 147 (empty -> .)
    FOR             reduce using rule 147 (empty -> .)
    RETURNS         reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 147 (empty -> .)

    varp                           shift and go to state 44
    var                            shift and go to state 10
    empty                          shift and go to state 11

state 33

    (36) func -> FUNC returnval ARROW . ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction

    ID              shift and go to state 45


state 34

    (38) returnval -> VOID pnSaveTypeVar .

    ARROW           reduce using rule 38 (returnval -> VOID pnSaveTypeVar .)


state 35

    (118) pnSaveTypeVar -> empty .

    ARROW           reduce using rule 118 (pnSaveTypeVar -> empty .)
    LEFT_SQR_BRACKET reduce using rule 118 (pnSaveTypeVar -> empty .)


state 36

    (9) tipo_simp -> INT pnSaveTypeVar .

    ARROW           reduce using rule 9 (tipo_simp -> INT pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 9 (tipo_simp -> INT pnSaveTypeVar .)


state 37

    (10) tipo_simp -> FLOAT pnSaveTypeVar .

    ARROW           reduce using rule 10 (tipo_simp -> FLOAT pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 10 (tipo_simp -> FLOAT pnSaveTypeVar .)


state 38

    (11) tipo_simp -> CHAR pnSaveTypeVar .

    ARROW           reduce using rule 11 (tipo_simp -> CHAR pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 11 (tipo_simp -> CHAR pnSaveTypeVar .)


state 39

    (26) var -> VAR pnCheckTablaVar v ARROW . idp SEMICOLON
    (33) idp -> . ID pnCheckNameTablaVar idpp

    ID              shift and go to state 47

    idp                            shift and go to state 46

state 40

    (27) v -> DATAFRAME pnSaveTypeVar .

    ARROW           reduce using rule 27 (v -> DATAFRAME pnSaveTypeVar .)


state 41

    (28) v -> tipo_simp vp .

    ARROW           reduce using rule 28 (v -> tipo_simp vp .)


state 42

    (29) vp -> LEFT_SQR_BRACKET . CTEI vpp RIGHT_SQR_BRACKET

    CTEI            shift and go to state 48


state 43

    (30) vp -> empty .

    ARROW           reduce using rule 30 (vp -> empty .)


state 44

    (6) bloque -> DO LEFT_CUR_BRACKET varp . funcp estatutop RIGHT_CUR_BRACKET pnEndScript
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (147) empty -> .

    FUNC            shift and go to state 16
    ID              reduce using rule 147 (empty -> .)
    READ            reduce using rule 147 (empty -> .)
    WRITE           reduce using rule 147 (empty -> .)
    IF              reduce using rule 147 (empty -> .)
    WHILE           reduce using rule 147 (empty -> .)
    FOR             reduce using rule 147 (empty -> .)
    RETURNS         reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 147 (empty -> .)

    funcp                          shift and go to state 49
    func                           shift and go to state 14
    empty                          shift and go to state 15

state 45

    (36) func -> FUNC returnval ARROW ID . pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (120) pnAddFuncinDir -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)

    pnAddFuncinDir                 shift and go to state 50
    empty                          shift and go to state 51

state 46

    (26) var -> VAR pnCheckTablaVar v ARROW idp . SEMICOLON

    SEMICOLON       shift and go to state 52


state 47

    (33) idp -> ID . pnCheckNameTablaVar idpp
    (119) pnCheckNameTablaVar -> . empty
    (147) empty -> .

    COMMA           reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)

    pnCheckNameTablaVar            shift and go to state 53
    empty                          shift and go to state 54

state 48

    (29) vp -> LEFT_SQR_BRACKET CTEI . vpp RIGHT_SQR_BRACKET
    (31) vpp -> . COMMA CTEI
    (32) vpp -> . empty
    (147) empty -> .

    COMMA           shift and go to state 56
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    vpp                            shift and go to state 55
    empty                          shift and go to state 57

state 49

    (6) bloque -> DO LEFT_CUR_BRACKET varp funcp . estatutop RIGHT_CUR_BRACKET pnEndScript
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (147) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (57) lee -> . READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (94) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (95) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 147 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatutop                      shift and go to state 58
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 50

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir . LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction

    LEFT_PARENT     shift and go to state 98


state 51

    (120) pnAddFuncinDir -> empty .

    LEFT_PARENT     reduce using rule 120 (pnAddFuncinDir -> empty .)


state 52

    (26) var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .

    VAR             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    FUNC            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    DO              reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    ID              reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    READ            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    WRITE           reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    IF              reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    WHILE           reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    FOR             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    RETURNS         reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    READ_FILE       reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MEAN            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MODE            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MEDIAN          reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    VARIANCE        reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MAX             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MIN             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    STADDES         reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    BOXPLOT         reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    LINREG          reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)


state 53

    (33) idp -> ID pnCheckNameTablaVar . idpp
    (34) idpp -> . COMMA ID pnCheckNameTablaVar idpp
    (35) idpp -> . empty
    (147) empty -> .

    COMMA           shift and go to state 100
    SEMICOLON       reduce using rule 147 (empty -> .)

    idpp                           shift and go to state 99
    empty                          shift and go to state 101

state 54

    (119) pnCheckNameTablaVar -> empty .

    COMMA           reduce using rule 119 (pnCheckNameTablaVar -> empty .)
    SEMICOLON       reduce using rule 119 (pnCheckNameTablaVar -> empty .)


state 55

    (29) vp -> LEFT_SQR_BRACKET CTEI vpp . RIGHT_SQR_BRACKET

    RIGHT_SQR_BRACKET shift and go to state 102


state 56

    (31) vpp -> COMMA . CTEI

    CTEI            shift and go to state 103


state 57

    (32) vpp -> empty .

    RIGHT_SQR_BRACKET reduce using rule 32 (vpp -> empty .)


state 58

    (6) bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop . RIGHT_CUR_BRACKET pnEndScript

    RIGHT_CUR_BRACKET shift and go to state 104


state 59

    (7) estatutop -> estatuto . estatutop
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (147) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (57) lee -> . READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (94) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (95) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 147 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatuto                       shift and go to state 59
    estatutop                      shift and go to state 105
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 60

    (8) estatutop -> empty .

    RIGHT_CUR_BRACKET reduce using rule 8 (estatutop -> empty .)


state 61

    (46) estatuto -> asign .

    ID              reduce using rule 46 (estatuto -> asign .)
    READ            reduce using rule 46 (estatuto -> asign .)
    WRITE           reduce using rule 46 (estatuto -> asign .)
    IF              reduce using rule 46 (estatuto -> asign .)
    WHILE           reduce using rule 46 (estatuto -> asign .)
    FOR             reduce using rule 46 (estatuto -> asign .)
    RETURNS         reduce using rule 46 (estatuto -> asign .)
    READ_FILE       reduce using rule 46 (estatuto -> asign .)
    MEAN            reduce using rule 46 (estatuto -> asign .)
    MODE            reduce using rule 46 (estatuto -> asign .)
    MEDIAN          reduce using rule 46 (estatuto -> asign .)
    VARIANCE        reduce using rule 46 (estatuto -> asign .)
    MAX             reduce using rule 46 (estatuto -> asign .)
    MIN             reduce using rule 46 (estatuto -> asign .)
    STADDES         reduce using rule 46 (estatuto -> asign .)
    BOXPLOT         reduce using rule 46 (estatuto -> asign .)
    LINREG          reduce using rule 46 (estatuto -> asign .)
    RIGHT_CUR_BRACKET reduce using rule 46 (estatuto -> asign .)


state 62

    (47) estatuto -> llamada .

    ID              reduce using rule 47 (estatuto -> llamada .)
    READ            reduce using rule 47 (estatuto -> llamada .)
    WRITE           reduce using rule 47 (estatuto -> llamada .)
    IF              reduce using rule 47 (estatuto -> llamada .)
    WHILE           reduce using rule 47 (estatuto -> llamada .)
    FOR             reduce using rule 47 (estatuto -> llamada .)
    RETURNS         reduce using rule 47 (estatuto -> llamada .)
    READ_FILE       reduce using rule 47 (estatuto -> llamada .)
    MEAN            reduce using rule 47 (estatuto -> llamada .)
    MODE            reduce using rule 47 (estatuto -> llamada .)
    MEDIAN          reduce using rule 47 (estatuto -> llamada .)
    VARIANCE        reduce using rule 47 (estatuto -> llamada .)
    MAX             reduce using rule 47 (estatuto -> llamada .)
    MIN             reduce using rule 47 (estatuto -> llamada .)
    STADDES         reduce using rule 47 (estatuto -> llamada .)
    BOXPLOT         reduce using rule 47 (estatuto -> llamada .)
    LINREG          reduce using rule 47 (estatuto -> llamada .)
    RIGHT_CUR_BRACKET reduce using rule 47 (estatuto -> llamada .)


state 63

    (48) estatuto -> lee .

    ID              reduce using rule 48 (estatuto -> lee .)
    READ            reduce using rule 48 (estatuto -> lee .)
    WRITE           reduce using rule 48 (estatuto -> lee .)
    IF              reduce using rule 48 (estatuto -> lee .)
    WHILE           reduce using rule 48 (estatuto -> lee .)
    FOR             reduce using rule 48 (estatuto -> lee .)
    RETURNS         reduce using rule 48 (estatuto -> lee .)
    READ_FILE       reduce using rule 48 (estatuto -> lee .)
    MEAN            reduce using rule 48 (estatuto -> lee .)
    MODE            reduce using rule 48 (estatuto -> lee .)
    MEDIAN          reduce using rule 48 (estatuto -> lee .)
    VARIANCE        reduce using rule 48 (estatuto -> lee .)
    MAX             reduce using rule 48 (estatuto -> lee .)
    MIN             reduce using rule 48 (estatuto -> lee .)
    STADDES         reduce using rule 48 (estatuto -> lee .)
    BOXPLOT         reduce using rule 48 (estatuto -> lee .)
    LINREG          reduce using rule 48 (estatuto -> lee .)
    RIGHT_CUR_BRACKET reduce using rule 48 (estatuto -> lee .)


state 64

    (49) estatuto -> escribe .

    ID              reduce using rule 49 (estatuto -> escribe .)
    READ            reduce using rule 49 (estatuto -> escribe .)
    WRITE           reduce using rule 49 (estatuto -> escribe .)
    IF              reduce using rule 49 (estatuto -> escribe .)
    WHILE           reduce using rule 49 (estatuto -> escribe .)
    FOR             reduce using rule 49 (estatuto -> escribe .)
    RETURNS         reduce using rule 49 (estatuto -> escribe .)
    READ_FILE       reduce using rule 49 (estatuto -> escribe .)
    MEAN            reduce using rule 49 (estatuto -> escribe .)
    MODE            reduce using rule 49 (estatuto -> escribe .)
    MEDIAN          reduce using rule 49 (estatuto -> escribe .)
    VARIANCE        reduce using rule 49 (estatuto -> escribe .)
    MAX             reduce using rule 49 (estatuto -> escribe .)
    MIN             reduce using rule 49 (estatuto -> escribe .)
    STADDES         reduce using rule 49 (estatuto -> escribe .)
    BOXPLOT         reduce using rule 49 (estatuto -> escribe .)
    LINREG          reduce using rule 49 (estatuto -> escribe .)
    RIGHT_CUR_BRACKET reduce using rule 49 (estatuto -> escribe .)


state 65

    (50) estatuto -> condicion .

    ID              reduce using rule 50 (estatuto -> condicion .)
    READ            reduce using rule 50 (estatuto -> condicion .)
    WRITE           reduce using rule 50 (estatuto -> condicion .)
    IF              reduce using rule 50 (estatuto -> condicion .)
    WHILE           reduce using rule 50 (estatuto -> condicion .)
    FOR             reduce using rule 50 (estatuto -> condicion .)
    RETURNS         reduce using rule 50 (estatuto -> condicion .)
    READ_FILE       reduce using rule 50 (estatuto -> condicion .)
    MEAN            reduce using rule 50 (estatuto -> condicion .)
    MODE            reduce using rule 50 (estatuto -> condicion .)
    MEDIAN          reduce using rule 50 (estatuto -> condicion .)
    VARIANCE        reduce using rule 50 (estatuto -> condicion .)
    MAX             reduce using rule 50 (estatuto -> condicion .)
    MIN             reduce using rule 50 (estatuto -> condicion .)
    STADDES         reduce using rule 50 (estatuto -> condicion .)
    BOXPLOT         reduce using rule 50 (estatuto -> condicion .)
    LINREG          reduce using rule 50 (estatuto -> condicion .)
    RIGHT_CUR_BRACKET reduce using rule 50 (estatuto -> condicion .)


state 66

    (51) estatuto -> ciclow .

    ID              reduce using rule 51 (estatuto -> ciclow .)
    READ            reduce using rule 51 (estatuto -> ciclow .)
    WRITE           reduce using rule 51 (estatuto -> ciclow .)
    IF              reduce using rule 51 (estatuto -> ciclow .)
    WHILE           reduce using rule 51 (estatuto -> ciclow .)
    FOR             reduce using rule 51 (estatuto -> ciclow .)
    RETURNS         reduce using rule 51 (estatuto -> ciclow .)
    READ_FILE       reduce using rule 51 (estatuto -> ciclow .)
    MEAN            reduce using rule 51 (estatuto -> ciclow .)
    MODE            reduce using rule 51 (estatuto -> ciclow .)
    MEDIAN          reduce using rule 51 (estatuto -> ciclow .)
    VARIANCE        reduce using rule 51 (estatuto -> ciclow .)
    MAX             reduce using rule 51 (estatuto -> ciclow .)
    MIN             reduce using rule 51 (estatuto -> ciclow .)
    STADDES         reduce using rule 51 (estatuto -> ciclow .)
    BOXPLOT         reduce using rule 51 (estatuto -> ciclow .)
    LINREG          reduce using rule 51 (estatuto -> ciclow .)
    RIGHT_CUR_BRACKET reduce using rule 51 (estatuto -> ciclow .)


state 67

    (52) estatuto -> ciclof .

    ID              reduce using rule 52 (estatuto -> ciclof .)
    READ            reduce using rule 52 (estatuto -> ciclof .)
    WRITE           reduce using rule 52 (estatuto -> ciclof .)
    IF              reduce using rule 52 (estatuto -> ciclof .)
    WHILE           reduce using rule 52 (estatuto -> ciclof .)
    FOR             reduce using rule 52 (estatuto -> ciclof .)
    RETURNS         reduce using rule 52 (estatuto -> ciclof .)
    READ_FILE       reduce using rule 52 (estatuto -> ciclof .)
    MEAN            reduce using rule 52 (estatuto -> ciclof .)
    MODE            reduce using rule 52 (estatuto -> ciclof .)
    MEDIAN          reduce using rule 52 (estatuto -> ciclof .)
    VARIANCE        reduce using rule 52 (estatuto -> ciclof .)
    MAX             reduce using rule 52 (estatuto -> ciclof .)
    MIN             reduce using rule 52 (estatuto -> ciclof .)
    STADDES         reduce using rule 52 (estatuto -> ciclof .)
    BOXPLOT         reduce using rule 52 (estatuto -> ciclof .)
    LINREG          reduce using rule 52 (estatuto -> ciclof .)
    RIGHT_CUR_BRACKET reduce using rule 52 (estatuto -> ciclof .)


state 68

    (53) estatuto -> funcesp .

    ID              reduce using rule 53 (estatuto -> funcesp .)
    READ            reduce using rule 53 (estatuto -> funcesp .)
    WRITE           reduce using rule 53 (estatuto -> funcesp .)
    IF              reduce using rule 53 (estatuto -> funcesp .)
    WHILE           reduce using rule 53 (estatuto -> funcesp .)
    FOR             reduce using rule 53 (estatuto -> funcesp .)
    RETURNS         reduce using rule 53 (estatuto -> funcesp .)
    READ_FILE       reduce using rule 53 (estatuto -> funcesp .)
    MEAN            reduce using rule 53 (estatuto -> funcesp .)
    MODE            reduce using rule 53 (estatuto -> funcesp .)
    MEDIAN          reduce using rule 53 (estatuto -> funcesp .)
    VARIANCE        reduce using rule 53 (estatuto -> funcesp .)
    MAX             reduce using rule 53 (estatuto -> funcesp .)
    MIN             reduce using rule 53 (estatuto -> funcesp .)
    STADDES         reduce using rule 53 (estatuto -> funcesp .)
    BOXPLOT         reduce using rule 53 (estatuto -> funcesp .)
    LINREG          reduce using rule 53 (estatuto -> funcesp .)
    RIGHT_CUR_BRACKET reduce using rule 53 (estatuto -> funcesp .)


state 69

    (54) estatuto -> return .

    ID              reduce using rule 54 (estatuto -> return .)
    READ            reduce using rule 54 (estatuto -> return .)
    WRITE           reduce using rule 54 (estatuto -> return .)
    IF              reduce using rule 54 (estatuto -> return .)
    WHILE           reduce using rule 54 (estatuto -> return .)
    FOR             reduce using rule 54 (estatuto -> return .)
    RETURNS         reduce using rule 54 (estatuto -> return .)
    READ_FILE       reduce using rule 54 (estatuto -> return .)
    MEAN            reduce using rule 54 (estatuto -> return .)
    MODE            reduce using rule 54 (estatuto -> return .)
    MEDIAN          reduce using rule 54 (estatuto -> return .)
    VARIANCE        reduce using rule 54 (estatuto -> return .)
    MAX             reduce using rule 54 (estatuto -> return .)
    MIN             reduce using rule 54 (estatuto -> return .)
    STADDES         reduce using rule 54 (estatuto -> return .)
    BOXPLOT         reduce using rule 54 (estatuto -> return .)
    LINREG          reduce using rule 54 (estatuto -> return .)
    RIGHT_CUR_BRACKET reduce using rule 54 (estatuto -> return .)


state 70

    (55) estatuto -> copy .
    (105) funcesp -> copy .

  ! reduce/reduce conflict for ID resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for READ resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for WRITE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for IF resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for WHILE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for FOR resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for RETURNS resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for READ_FILE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MEAN resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MODE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MEDIAN resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for VARIANCE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MAX resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MIN resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for STADDES resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for BOXPLOT resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for LINREG resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for RIGHT_CUR_BRACKET resolved using rule 55 (estatuto -> copy .)
    ID              reduce using rule 55 (estatuto -> copy .)
    READ            reduce using rule 55 (estatuto -> copy .)
    WRITE           reduce using rule 55 (estatuto -> copy .)
    IF              reduce using rule 55 (estatuto -> copy .)
    WHILE           reduce using rule 55 (estatuto -> copy .)
    FOR             reduce using rule 55 (estatuto -> copy .)
    RETURNS         reduce using rule 55 (estatuto -> copy .)
    READ_FILE       reduce using rule 55 (estatuto -> copy .)
    MEAN            reduce using rule 55 (estatuto -> copy .)
    MODE            reduce using rule 55 (estatuto -> copy .)
    MEDIAN          reduce using rule 55 (estatuto -> copy .)
    VARIANCE        reduce using rule 55 (estatuto -> copy .)
    MAX             reduce using rule 55 (estatuto -> copy .)
    MIN             reduce using rule 55 (estatuto -> copy .)
    STADDES         reduce using rule 55 (estatuto -> copy .)
    BOXPLOT         reduce using rule 55 (estatuto -> copy .)
    LINREG          reduce using rule 55 (estatuto -> copy .)
    RIGHT_CUR_BRACKET reduce using rule 55 (estatuto -> copy .)

  ! ID              [ reduce using rule 105 (funcesp -> copy .) ]
  ! READ            [ reduce using rule 105 (funcesp -> copy .) ]
  ! WRITE           [ reduce using rule 105 (funcesp -> copy .) ]
  ! IF              [ reduce using rule 105 (funcesp -> copy .) ]
  ! WHILE           [ reduce using rule 105 (funcesp -> copy .) ]
  ! FOR             [ reduce using rule 105 (funcesp -> copy .) ]
  ! RETURNS         [ reduce using rule 105 (funcesp -> copy .) ]
  ! READ_FILE       [ reduce using rule 105 (funcesp -> copy .) ]
  ! MEAN            [ reduce using rule 105 (funcesp -> copy .) ]
  ! MODE            [ reduce using rule 105 (funcesp -> copy .) ]
  ! MEDIAN          [ reduce using rule 105 (funcesp -> copy .) ]
  ! VARIANCE        [ reduce using rule 105 (funcesp -> copy .) ]
  ! MAX             [ reduce using rule 105 (funcesp -> copy .) ]
  ! MIN             [ reduce using rule 105 (funcesp -> copy .) ]
  ! STADDES         [ reduce using rule 105 (funcesp -> copy .) ]
  ! BOXPLOT         [ reduce using rule 105 (funcesp -> copy .) ]
  ! LINREG          [ reduce using rule 105 (funcesp -> copy .) ]
  ! RIGHT_CUR_BRACKET [ reduce using rule 105 (funcesp -> copy .) ]


state 71

    (56) asign -> variable . ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON

    ASIGN           shift and go to state 106


state 72

    (21) llamada -> ID . LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (16) variable -> ID . pnSaveOperandos indexp
    (127) pnSaveOperandos -> . empty
    (147) empty -> .

    LEFT_PARENT     shift and go to state 107
    LEFT_SQR_BRACKET reduce using rule 147 (empty -> .)
    ASIGN           reduce using rule 147 (empty -> .)

    pnSaveOperandos                shift and go to state 108
    empty                          shift and go to state 109

state 73

    (57) lee -> READ . pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (141) pnSaveLeer -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)

    pnSaveLeer                     shift and go to state 110
    empty                          shift and go to state 111

state 74

    (58) escribe -> WRITE . pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (139) pnSaveEscribe -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)

    pnSaveEscribe                  shift and go to state 112
    empty                          shift and go to state 113

state 75

    (91) condicion -> IF . LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop

    LEFT_PARENT     shift and go to state 114


state 76

    (94) ciclow -> WHILE . LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_PARENT     shift and go to state 115


state 77

    (95) ciclof -> FOR . LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_PARENT     shift and go to state 116


state 78

    (96) funcesp -> mean .

    ID              reduce using rule 96 (funcesp -> mean .)
    READ            reduce using rule 96 (funcesp -> mean .)
    WRITE           reduce using rule 96 (funcesp -> mean .)
    IF              reduce using rule 96 (funcesp -> mean .)
    WHILE           reduce using rule 96 (funcesp -> mean .)
    FOR             reduce using rule 96 (funcesp -> mean .)
    RETURNS         reduce using rule 96 (funcesp -> mean .)
    READ_FILE       reduce using rule 96 (funcesp -> mean .)
    MEAN            reduce using rule 96 (funcesp -> mean .)
    MODE            reduce using rule 96 (funcesp -> mean .)
    MEDIAN          reduce using rule 96 (funcesp -> mean .)
    VARIANCE        reduce using rule 96 (funcesp -> mean .)
    MAX             reduce using rule 96 (funcesp -> mean .)
    MIN             reduce using rule 96 (funcesp -> mean .)
    STADDES         reduce using rule 96 (funcesp -> mean .)
    BOXPLOT         reduce using rule 96 (funcesp -> mean .)
    LINREG          reduce using rule 96 (funcesp -> mean .)
    RIGHT_CUR_BRACKET reduce using rule 96 (funcesp -> mean .)
    MULT            reduce using rule 96 (funcesp -> mean .)
    DIV             reduce using rule 96 (funcesp -> mean .)
    PLUS            reduce using rule 96 (funcesp -> mean .)
    MINUS           reduce using rule 96 (funcesp -> mean .)
    LESS_THAN       reduce using rule 96 (funcesp -> mean .)
    GREATER_THAN    reduce using rule 96 (funcesp -> mean .)
    EQUALS          reduce using rule 96 (funcesp -> mean .)
    NOTEQUALS       reduce using rule 96 (funcesp -> mean .)
    AND             reduce using rule 96 (funcesp -> mean .)
    OR              reduce using rule 96 (funcesp -> mean .)
    SEMICOLON       reduce using rule 96 (funcesp -> mean .)
    COMMA           reduce using rule 96 (funcesp -> mean .)
    RIGHT_PARENT    reduce using rule 96 (funcesp -> mean .)
    RIGHT_SQR_BRACKET reduce using rule 96 (funcesp -> mean .)


state 79

    (97) funcesp -> mode .

    ID              reduce using rule 97 (funcesp -> mode .)
    READ            reduce using rule 97 (funcesp -> mode .)
    WRITE           reduce using rule 97 (funcesp -> mode .)
    IF              reduce using rule 97 (funcesp -> mode .)
    WHILE           reduce using rule 97 (funcesp -> mode .)
    FOR             reduce using rule 97 (funcesp -> mode .)
    RETURNS         reduce using rule 97 (funcesp -> mode .)
    READ_FILE       reduce using rule 97 (funcesp -> mode .)
    MEAN            reduce using rule 97 (funcesp -> mode .)
    MODE            reduce using rule 97 (funcesp -> mode .)
    MEDIAN          reduce using rule 97 (funcesp -> mode .)
    VARIANCE        reduce using rule 97 (funcesp -> mode .)
    MAX             reduce using rule 97 (funcesp -> mode .)
    MIN             reduce using rule 97 (funcesp -> mode .)
    STADDES         reduce using rule 97 (funcesp -> mode .)
    BOXPLOT         reduce using rule 97 (funcesp -> mode .)
    LINREG          reduce using rule 97 (funcesp -> mode .)
    RIGHT_CUR_BRACKET reduce using rule 97 (funcesp -> mode .)
    MULT            reduce using rule 97 (funcesp -> mode .)
    DIV             reduce using rule 97 (funcesp -> mode .)
    PLUS            reduce using rule 97 (funcesp -> mode .)
    MINUS           reduce using rule 97 (funcesp -> mode .)
    LESS_THAN       reduce using rule 97 (funcesp -> mode .)
    GREATER_THAN    reduce using rule 97 (funcesp -> mode .)
    EQUALS          reduce using rule 97 (funcesp -> mode .)
    NOTEQUALS       reduce using rule 97 (funcesp -> mode .)
    AND             reduce using rule 97 (funcesp -> mode .)
    OR              reduce using rule 97 (funcesp -> mode .)
    SEMICOLON       reduce using rule 97 (funcesp -> mode .)
    COMMA           reduce using rule 97 (funcesp -> mode .)
    RIGHT_PARENT    reduce using rule 97 (funcesp -> mode .)
    RIGHT_SQR_BRACKET reduce using rule 97 (funcesp -> mode .)


state 80

    (98) funcesp -> median .

    ID              reduce using rule 98 (funcesp -> median .)
    READ            reduce using rule 98 (funcesp -> median .)
    WRITE           reduce using rule 98 (funcesp -> median .)
    IF              reduce using rule 98 (funcesp -> median .)
    WHILE           reduce using rule 98 (funcesp -> median .)
    FOR             reduce using rule 98 (funcesp -> median .)
    RETURNS         reduce using rule 98 (funcesp -> median .)
    READ_FILE       reduce using rule 98 (funcesp -> median .)
    MEAN            reduce using rule 98 (funcesp -> median .)
    MODE            reduce using rule 98 (funcesp -> median .)
    MEDIAN          reduce using rule 98 (funcesp -> median .)
    VARIANCE        reduce using rule 98 (funcesp -> median .)
    MAX             reduce using rule 98 (funcesp -> median .)
    MIN             reduce using rule 98 (funcesp -> median .)
    STADDES         reduce using rule 98 (funcesp -> median .)
    BOXPLOT         reduce using rule 98 (funcesp -> median .)
    LINREG          reduce using rule 98 (funcesp -> median .)
    RIGHT_CUR_BRACKET reduce using rule 98 (funcesp -> median .)
    MULT            reduce using rule 98 (funcesp -> median .)
    DIV             reduce using rule 98 (funcesp -> median .)
    PLUS            reduce using rule 98 (funcesp -> median .)
    MINUS           reduce using rule 98 (funcesp -> median .)
    LESS_THAN       reduce using rule 98 (funcesp -> median .)
    GREATER_THAN    reduce using rule 98 (funcesp -> median .)
    EQUALS          reduce using rule 98 (funcesp -> median .)
    NOTEQUALS       reduce using rule 98 (funcesp -> median .)
    AND             reduce using rule 98 (funcesp -> median .)
    OR              reduce using rule 98 (funcesp -> median .)
    SEMICOLON       reduce using rule 98 (funcesp -> median .)
    COMMA           reduce using rule 98 (funcesp -> median .)
    RIGHT_PARENT    reduce using rule 98 (funcesp -> median .)
    RIGHT_SQR_BRACKET reduce using rule 98 (funcesp -> median .)


state 81

    (99) funcesp -> variance .

    ID              reduce using rule 99 (funcesp -> variance .)
    READ            reduce using rule 99 (funcesp -> variance .)
    WRITE           reduce using rule 99 (funcesp -> variance .)
    IF              reduce using rule 99 (funcesp -> variance .)
    WHILE           reduce using rule 99 (funcesp -> variance .)
    FOR             reduce using rule 99 (funcesp -> variance .)
    RETURNS         reduce using rule 99 (funcesp -> variance .)
    READ_FILE       reduce using rule 99 (funcesp -> variance .)
    MEAN            reduce using rule 99 (funcesp -> variance .)
    MODE            reduce using rule 99 (funcesp -> variance .)
    MEDIAN          reduce using rule 99 (funcesp -> variance .)
    VARIANCE        reduce using rule 99 (funcesp -> variance .)
    MAX             reduce using rule 99 (funcesp -> variance .)
    MIN             reduce using rule 99 (funcesp -> variance .)
    STADDES         reduce using rule 99 (funcesp -> variance .)
    BOXPLOT         reduce using rule 99 (funcesp -> variance .)
    LINREG          reduce using rule 99 (funcesp -> variance .)
    RIGHT_CUR_BRACKET reduce using rule 99 (funcesp -> variance .)
    MULT            reduce using rule 99 (funcesp -> variance .)
    DIV             reduce using rule 99 (funcesp -> variance .)
    PLUS            reduce using rule 99 (funcesp -> variance .)
    MINUS           reduce using rule 99 (funcesp -> variance .)
    LESS_THAN       reduce using rule 99 (funcesp -> variance .)
    GREATER_THAN    reduce using rule 99 (funcesp -> variance .)
    EQUALS          reduce using rule 99 (funcesp -> variance .)
    NOTEQUALS       reduce using rule 99 (funcesp -> variance .)
    AND             reduce using rule 99 (funcesp -> variance .)
    OR              reduce using rule 99 (funcesp -> variance .)
    SEMICOLON       reduce using rule 99 (funcesp -> variance .)
    COMMA           reduce using rule 99 (funcesp -> variance .)
    RIGHT_PARENT    reduce using rule 99 (funcesp -> variance .)
    RIGHT_SQR_BRACKET reduce using rule 99 (funcesp -> variance .)


state 82

    (100) funcesp -> max .

    ID              reduce using rule 100 (funcesp -> max .)
    READ            reduce using rule 100 (funcesp -> max .)
    WRITE           reduce using rule 100 (funcesp -> max .)
    IF              reduce using rule 100 (funcesp -> max .)
    WHILE           reduce using rule 100 (funcesp -> max .)
    FOR             reduce using rule 100 (funcesp -> max .)
    RETURNS         reduce using rule 100 (funcesp -> max .)
    READ_FILE       reduce using rule 100 (funcesp -> max .)
    MEAN            reduce using rule 100 (funcesp -> max .)
    MODE            reduce using rule 100 (funcesp -> max .)
    MEDIAN          reduce using rule 100 (funcesp -> max .)
    VARIANCE        reduce using rule 100 (funcesp -> max .)
    MAX             reduce using rule 100 (funcesp -> max .)
    MIN             reduce using rule 100 (funcesp -> max .)
    STADDES         reduce using rule 100 (funcesp -> max .)
    BOXPLOT         reduce using rule 100 (funcesp -> max .)
    LINREG          reduce using rule 100 (funcesp -> max .)
    RIGHT_CUR_BRACKET reduce using rule 100 (funcesp -> max .)
    MULT            reduce using rule 100 (funcesp -> max .)
    DIV             reduce using rule 100 (funcesp -> max .)
    PLUS            reduce using rule 100 (funcesp -> max .)
    MINUS           reduce using rule 100 (funcesp -> max .)
    LESS_THAN       reduce using rule 100 (funcesp -> max .)
    GREATER_THAN    reduce using rule 100 (funcesp -> max .)
    EQUALS          reduce using rule 100 (funcesp -> max .)
    NOTEQUALS       reduce using rule 100 (funcesp -> max .)
    AND             reduce using rule 100 (funcesp -> max .)
    OR              reduce using rule 100 (funcesp -> max .)
    SEMICOLON       reduce using rule 100 (funcesp -> max .)
    COMMA           reduce using rule 100 (funcesp -> max .)
    RIGHT_PARENT    reduce using rule 100 (funcesp -> max .)
    RIGHT_SQR_BRACKET reduce using rule 100 (funcesp -> max .)


state 83

    (101) funcesp -> min .

    ID              reduce using rule 101 (funcesp -> min .)
    READ            reduce using rule 101 (funcesp -> min .)
    WRITE           reduce using rule 101 (funcesp -> min .)
    IF              reduce using rule 101 (funcesp -> min .)
    WHILE           reduce using rule 101 (funcesp -> min .)
    FOR             reduce using rule 101 (funcesp -> min .)
    RETURNS         reduce using rule 101 (funcesp -> min .)
    READ_FILE       reduce using rule 101 (funcesp -> min .)
    MEAN            reduce using rule 101 (funcesp -> min .)
    MODE            reduce using rule 101 (funcesp -> min .)
    MEDIAN          reduce using rule 101 (funcesp -> min .)
    VARIANCE        reduce using rule 101 (funcesp -> min .)
    MAX             reduce using rule 101 (funcesp -> min .)
    MIN             reduce using rule 101 (funcesp -> min .)
    STADDES         reduce using rule 101 (funcesp -> min .)
    BOXPLOT         reduce using rule 101 (funcesp -> min .)
    LINREG          reduce using rule 101 (funcesp -> min .)
    RIGHT_CUR_BRACKET reduce using rule 101 (funcesp -> min .)
    MULT            reduce using rule 101 (funcesp -> min .)
    DIV             reduce using rule 101 (funcesp -> min .)
    PLUS            reduce using rule 101 (funcesp -> min .)
    MINUS           reduce using rule 101 (funcesp -> min .)
    LESS_THAN       reduce using rule 101 (funcesp -> min .)
    GREATER_THAN    reduce using rule 101 (funcesp -> min .)
    EQUALS          reduce using rule 101 (funcesp -> min .)
    NOTEQUALS       reduce using rule 101 (funcesp -> min .)
    AND             reduce using rule 101 (funcesp -> min .)
    OR              reduce using rule 101 (funcesp -> min .)
    SEMICOLON       reduce using rule 101 (funcesp -> min .)
    COMMA           reduce using rule 101 (funcesp -> min .)
    RIGHT_PARENT    reduce using rule 101 (funcesp -> min .)
    RIGHT_SQR_BRACKET reduce using rule 101 (funcesp -> min .)


state 84

    (102) funcesp -> staddes .

    ID              reduce using rule 102 (funcesp -> staddes .)
    READ            reduce using rule 102 (funcesp -> staddes .)
    WRITE           reduce using rule 102 (funcesp -> staddes .)
    IF              reduce using rule 102 (funcesp -> staddes .)
    WHILE           reduce using rule 102 (funcesp -> staddes .)
    FOR             reduce using rule 102 (funcesp -> staddes .)
    RETURNS         reduce using rule 102 (funcesp -> staddes .)
    READ_FILE       reduce using rule 102 (funcesp -> staddes .)
    MEAN            reduce using rule 102 (funcesp -> staddes .)
    MODE            reduce using rule 102 (funcesp -> staddes .)
    MEDIAN          reduce using rule 102 (funcesp -> staddes .)
    VARIANCE        reduce using rule 102 (funcesp -> staddes .)
    MAX             reduce using rule 102 (funcesp -> staddes .)
    MIN             reduce using rule 102 (funcesp -> staddes .)
    STADDES         reduce using rule 102 (funcesp -> staddes .)
    BOXPLOT         reduce using rule 102 (funcesp -> staddes .)
    LINREG          reduce using rule 102 (funcesp -> staddes .)
    RIGHT_CUR_BRACKET reduce using rule 102 (funcesp -> staddes .)
    MULT            reduce using rule 102 (funcesp -> staddes .)
    DIV             reduce using rule 102 (funcesp -> staddes .)
    PLUS            reduce using rule 102 (funcesp -> staddes .)
    MINUS           reduce using rule 102 (funcesp -> staddes .)
    LESS_THAN       reduce using rule 102 (funcesp -> staddes .)
    GREATER_THAN    reduce using rule 102 (funcesp -> staddes .)
    EQUALS          reduce using rule 102 (funcesp -> staddes .)
    NOTEQUALS       reduce using rule 102 (funcesp -> staddes .)
    AND             reduce using rule 102 (funcesp -> staddes .)
    OR              reduce using rule 102 (funcesp -> staddes .)
    SEMICOLON       reduce using rule 102 (funcesp -> staddes .)
    COMMA           reduce using rule 102 (funcesp -> staddes .)
    RIGHT_PARENT    reduce using rule 102 (funcesp -> staddes .)
    RIGHT_SQR_BRACKET reduce using rule 102 (funcesp -> staddes .)


state 85

    (103) funcesp -> boxplot .

    ID              reduce using rule 103 (funcesp -> boxplot .)
    READ            reduce using rule 103 (funcesp -> boxplot .)
    WRITE           reduce using rule 103 (funcesp -> boxplot .)
    IF              reduce using rule 103 (funcesp -> boxplot .)
    WHILE           reduce using rule 103 (funcesp -> boxplot .)
    FOR             reduce using rule 103 (funcesp -> boxplot .)
    RETURNS         reduce using rule 103 (funcesp -> boxplot .)
    READ_FILE       reduce using rule 103 (funcesp -> boxplot .)
    MEAN            reduce using rule 103 (funcesp -> boxplot .)
    MODE            reduce using rule 103 (funcesp -> boxplot .)
    MEDIAN          reduce using rule 103 (funcesp -> boxplot .)
    VARIANCE        reduce using rule 103 (funcesp -> boxplot .)
    MAX             reduce using rule 103 (funcesp -> boxplot .)
    MIN             reduce using rule 103 (funcesp -> boxplot .)
    STADDES         reduce using rule 103 (funcesp -> boxplot .)
    BOXPLOT         reduce using rule 103 (funcesp -> boxplot .)
    LINREG          reduce using rule 103 (funcesp -> boxplot .)
    RIGHT_CUR_BRACKET reduce using rule 103 (funcesp -> boxplot .)
    MULT            reduce using rule 103 (funcesp -> boxplot .)
    DIV             reduce using rule 103 (funcesp -> boxplot .)
    PLUS            reduce using rule 103 (funcesp -> boxplot .)
    MINUS           reduce using rule 103 (funcesp -> boxplot .)
    LESS_THAN       reduce using rule 103 (funcesp -> boxplot .)
    GREATER_THAN    reduce using rule 103 (funcesp -> boxplot .)
    EQUALS          reduce using rule 103 (funcesp -> boxplot .)
    NOTEQUALS       reduce using rule 103 (funcesp -> boxplot .)
    AND             reduce using rule 103 (funcesp -> boxplot .)
    OR              reduce using rule 103 (funcesp -> boxplot .)
    SEMICOLON       reduce using rule 103 (funcesp -> boxplot .)
    COMMA           reduce using rule 103 (funcesp -> boxplot .)
    RIGHT_PARENT    reduce using rule 103 (funcesp -> boxplot .)
    RIGHT_SQR_BRACKET reduce using rule 103 (funcesp -> boxplot .)


state 86

    (104) funcesp -> linreg .

    ID              reduce using rule 104 (funcesp -> linreg .)
    READ            reduce using rule 104 (funcesp -> linreg .)
    WRITE           reduce using rule 104 (funcesp -> linreg .)
    IF              reduce using rule 104 (funcesp -> linreg .)
    WHILE           reduce using rule 104 (funcesp -> linreg .)
    FOR             reduce using rule 104 (funcesp -> linreg .)
    RETURNS         reduce using rule 104 (funcesp -> linreg .)
    READ_FILE       reduce using rule 104 (funcesp -> linreg .)
    MEAN            reduce using rule 104 (funcesp -> linreg .)
    MODE            reduce using rule 104 (funcesp -> linreg .)
    MEDIAN          reduce using rule 104 (funcesp -> linreg .)
    VARIANCE        reduce using rule 104 (funcesp -> linreg .)
    MAX             reduce using rule 104 (funcesp -> linreg .)
    MIN             reduce using rule 104 (funcesp -> linreg .)
    STADDES         reduce using rule 104 (funcesp -> linreg .)
    BOXPLOT         reduce using rule 104 (funcesp -> linreg .)
    LINREG          reduce using rule 104 (funcesp -> linreg .)
    RIGHT_CUR_BRACKET reduce using rule 104 (funcesp -> linreg .)
    MULT            reduce using rule 104 (funcesp -> linreg .)
    DIV             reduce using rule 104 (funcesp -> linreg .)
    PLUS            reduce using rule 104 (funcesp -> linreg .)
    MINUS           reduce using rule 104 (funcesp -> linreg .)
    LESS_THAN       reduce using rule 104 (funcesp -> linreg .)
    GREATER_THAN    reduce using rule 104 (funcesp -> linreg .)
    EQUALS          reduce using rule 104 (funcesp -> linreg .)
    NOTEQUALS       reduce using rule 104 (funcesp -> linreg .)
    AND             reduce using rule 104 (funcesp -> linreg .)
    OR              reduce using rule 104 (funcesp -> linreg .)
    SEMICOLON       reduce using rule 104 (funcesp -> linreg .)
    COMMA           reduce using rule 104 (funcesp -> linreg .)
    RIGHT_PARENT    reduce using rule 104 (funcesp -> linreg .)
    RIGHT_SQR_BRACKET reduce using rule 104 (funcesp -> linreg .)


state 87

    (61) return -> RETURNS . exp SEMICOLON
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 122
    CTEI            shift and go to state 123
    CTEF            shift and go to state 124
    CTEC            shift and go to state 125
    ID              shift and go to state 129
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 117
    exprel                         shift and go to state 118
    e                              shift and go to state 119
    t                              shift and go to state 120
    f                              shift and go to state 121
    variable                       shift and go to state 126
    llamada                        shift and go to state 127
    funcesp                        shift and go to state 128
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 130

state 88

    (14) copy -> READ_FILE . pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (143) pnSaveCopy -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)

    pnSaveCopy                     shift and go to state 131
    empty                          shift and go to state 132

state 89

    (106) mean -> MEAN . pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (145) pnSaveFuncEsp -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)

    pnSaveFuncEsp                  shift and go to state 133
    empty                          shift and go to state 134

state 90

    (107) mode -> MODE . pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (145) pnSaveFuncEsp -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)

    pnSaveFuncEsp                  shift and go to state 135
    empty                          shift and go to state 134

state 91

    (108) median -> MEDIAN . pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (145) pnSaveFuncEsp -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)

    pnSaveFuncEsp                  shift and go to state 136
    empty                          shift and go to state 134

state 92

    (109) variance -> VARIANCE . pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (145) pnSaveFuncEsp -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)

    pnSaveFuncEsp                  shift and go to state 137
    empty                          shift and go to state 134

state 93

    (110) max -> MAX . pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (145) pnSaveFuncEsp -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)

    pnSaveFuncEsp                  shift and go to state 138
    empty                          shift and go to state 134

state 94

    (111) min -> MIN . pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (145) pnSaveFuncEsp -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)

    pnSaveFuncEsp                  shift and go to state 139
    empty                          shift and go to state 134

state 95

    (112) staddes -> STADDES . pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (145) pnSaveFuncEsp -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)

    pnSaveFuncEsp                  shift and go to state 140
    empty                          shift and go to state 134

state 96

    (113) boxplot -> BOXPLOT . pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (145) pnSaveFuncEsp -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)

    pnSaveFuncEsp                  shift and go to state 141
    empty                          shift and go to state 134

state 97

    (114) linreg -> LINREG . pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (145) pnSaveFuncEsp -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)

    pnSaveFuncEsp                  shift and go to state 142
    empty                          shift and go to state 134

state 98

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT . pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (117) pnCheckTablaVar -> . empty
    (147) empty -> .

    DATAFRAME       reduce using rule 147 (empty -> .)
    INT             reduce using rule 147 (empty -> .)
    FLOAT           reduce using rule 147 (empty -> .)
    CHAR            reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    pnCheckTablaVar                shift and go to state 143
    empty                          shift and go to state 19

state 99

    (33) idp -> ID pnCheckNameTablaVar idpp .

    SEMICOLON       reduce using rule 33 (idp -> ID pnCheckNameTablaVar idpp .)


state 100

    (34) idpp -> COMMA . ID pnCheckNameTablaVar idpp

    ID              shift and go to state 144


state 101

    (35) idpp -> empty .

    SEMICOLON       reduce using rule 35 (idpp -> empty .)


state 102

    (29) vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET .

    ARROW           reduce using rule 29 (vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET .)


state 103

    (31) vpp -> COMMA CTEI .

    RIGHT_SQR_BRACKET reduce using rule 31 (vpp -> COMMA CTEI .)


state 104

    (6) bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET . pnEndScript
    (123) pnEndScript -> . empty
    (147) empty -> .

    $end            reduce using rule 147 (empty -> .)

    pnEndScript                    shift and go to state 145
    empty                          shift and go to state 146

state 105

    (7) estatutop -> estatuto estatutop .

    RIGHT_CUR_BRACKET reduce using rule 7 (estatutop -> estatuto estatutop .)


state 106

    (56) asign -> variable ASIGN . pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (137) pnSaveOperadorAsign -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)
    CTEI            reduce using rule 147 (empty -> .)
    CTEF            reduce using rule 147 (empty -> .)
    CTEC            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)

    pnSaveOperadorAsign            shift and go to state 147
    empty                          shift and go to state 148

state 107

    (21) llamada -> ID LEFT_PARENT . expp RIGHT_PARENT SEMICOLON
    (22) expp -> . exp exppp
    (23) expp -> . empty
    (62) exp -> . exprel pnCuadOplog logic
    (147) empty -> .
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    LEFT_PARENT     shift and go to state 122
    CTEI            shift and go to state 123
    CTEF            shift and go to state 124
    CTEC            shift and go to state 125
    ID              shift and go to state 129
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    expp                           shift and go to state 149
    exp                            shift and go to state 150
    empty                          shift and go to state 151
    exprel                         shift and go to state 118
    e                              shift and go to state 119
    t                              shift and go to state 120
    f                              shift and go to state 121
    variable                       shift and go to state 126
    llamada                        shift and go to state 127
    funcesp                        shift and go to state 128
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 130

state 108

    (16) variable -> ID pnSaveOperandos . indexp
    (17) indexp -> . LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET
    (18) indexp -> . empty
    (147) empty -> .

    LEFT_SQR_BRACKET shift and go to state 153
    ASIGN           reduce using rule 147 (empty -> .)
    MULT            reduce using rule 147 (empty -> .)
    DIV             reduce using rule 147 (empty -> .)
    PLUS            reduce using rule 147 (empty -> .)
    MINUS           reduce using rule 147 (empty -> .)
    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    indexp                         shift and go to state 152
    empty                          shift and go to state 154

state 109

    (127) pnSaveOperandos -> empty .

    LEFT_SQR_BRACKET reduce using rule 127 (pnSaveOperandos -> empty .)
    ASIGN           reduce using rule 127 (pnSaveOperandos -> empty .)
    MULT            reduce using rule 127 (pnSaveOperandos -> empty .)
    DIV             reduce using rule 127 (pnSaveOperandos -> empty .)
    PLUS            reduce using rule 127 (pnSaveOperandos -> empty .)
    MINUS           reduce using rule 127 (pnSaveOperandos -> empty .)
    LESS_THAN       reduce using rule 127 (pnSaveOperandos -> empty .)
    GREATER_THAN    reduce using rule 127 (pnSaveOperandos -> empty .)
    EQUALS          reduce using rule 127 (pnSaveOperandos -> empty .)
    NOTEQUALS       reduce using rule 127 (pnSaveOperandos -> empty .)
    AND             reduce using rule 127 (pnSaveOperandos -> empty .)
    OR              reduce using rule 127 (pnSaveOperandos -> empty .)
    SEMICOLON       reduce using rule 127 (pnSaveOperandos -> empty .)
    COMMA           reduce using rule 127 (pnSaveOperandos -> empty .)
    RIGHT_PARENT    reduce using rule 127 (pnSaveOperandos -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 127 (pnSaveOperandos -> empty .)


state 110

    (57) lee -> READ pnSaveLeer . LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 155


state 111

    (141) pnSaveLeer -> empty .

    LEFT_PARENT     reduce using rule 141 (pnSaveLeer -> empty .)


state 112

    (58) escribe -> WRITE pnSaveEscribe . LEFT_PARENT escribep RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 156


state 113

    (139) pnSaveEscribe -> empty .

    LEFT_PARENT     reduce using rule 139 (pnSaveEscribe -> empty .)


state 114

    (91) condicion -> IF LEFT_PARENT . exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 122
    CTEI            shift and go to state 123
    CTEF            shift and go to state 124
    CTEC            shift and go to state 125
    ID              shift and go to state 129
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 157
    exprel                         shift and go to state 118
    e                              shift and go to state 119
    t                              shift and go to state 120
    f                              shift and go to state 121
    variable                       shift and go to state 126
    llamada                        shift and go to state 127
    funcesp                        shift and go to state 128
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 130

state 115

    (94) ciclow -> WHILE LEFT_PARENT . exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 122
    CTEI            shift and go to state 123
    CTEF            shift and go to state 124
    CTEC            shift and go to state 125
    ID              shift and go to state 129
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 158
    exprel                         shift and go to state 118
    e                              shift and go to state 119
    t                              shift and go to state 120
    f                              shift and go to state 121
    variable                       shift and go to state 126
    llamada                        shift and go to state 127
    funcesp                        shift and go to state 128
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 130

state 116

    (95) ciclof -> FOR LEFT_PARENT . asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 160

    asign                          shift and go to state 159
    variable                       shift and go to state 71

state 117

    (61) return -> RETURNS exp . SEMICOLON

    SEMICOLON       shift and go to state 161


state 118

    (62) exp -> exprel . pnCuadOplog logic
    (136) pnCuadOplog -> . empty
    (147) empty -> .

    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnCuadOplog                    shift and go to state 162
    empty                          shift and go to state 163

state 119

    (67) exprel -> e . pnCuadOpRelacional relacionalp
    (135) pnCuadOpRelacional -> . empty
    (147) empty -> .

    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnCuadOpRelacional             shift and go to state 164
    empty                          shift and go to state 165

state 120

    (74) e -> t . pnCuadPlMi tp
    (133) pnCuadPlMi -> . empty
    (147) empty -> .

    PLUS            reduce using rule 147 (empty -> .)
    MINUS           reduce using rule 147 (empty -> .)
    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnCuadPlMi                     shift and go to state 166
    empty                          shift and go to state 167

state 121

    (79) t -> f . pnCuadMuDi fp
    (134) pnCuadMuDi -> . empty
    (147) empty -> .

    MULT            reduce using rule 147 (empty -> .)
    DIV             reduce using rule 147 (empty -> .)
    PLUS            reduce using rule 147 (empty -> .)
    MINUS           reduce using rule 147 (empty -> .)
    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnCuadMuDi                     shift and go to state 168
    empty                          shift and go to state 169

state 122

    (84) f -> LEFT_PARENT . exp RIGHT_PARENT
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 122
    CTEI            shift and go to state 123
    CTEF            shift and go to state 124
    CTEC            shift and go to state 125
    ID              shift and go to state 129
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 170
    exprel                         shift and go to state 118
    e                              shift and go to state 119
    t                              shift and go to state 120
    f                              shift and go to state 121
    variable                       shift and go to state 126
    llamada                        shift and go to state 127
    funcesp                        shift and go to state 128
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 130

state 123

    (85) f -> CTEI . pnSaveCteI pnSaveOperandoConstante
    (124) pnSaveCteI -> . empty
    (147) empty -> .

    MULT            reduce using rule 147 (empty -> .)
    DIV             reduce using rule 147 (empty -> .)
    PLUS            reduce using rule 147 (empty -> .)
    MINUS           reduce using rule 147 (empty -> .)
    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnSaveCteI                     shift and go to state 171
    empty                          shift and go to state 172

state 124

    (86) f -> CTEF . pnSaveCteF pnSaveOperandoConstante
    (125) pnSaveCteF -> . empty
    (147) empty -> .

    MULT            reduce using rule 147 (empty -> .)
    DIV             reduce using rule 147 (empty -> .)
    PLUS            reduce using rule 147 (empty -> .)
    MINUS           reduce using rule 147 (empty -> .)
    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnSaveCteF                     shift and go to state 173
    empty                          shift and go to state 174

state 125

    (87) f -> CTEC . pnSaveCteC pnSaveOperandoConstante
    (126) pnSaveCteC -> . empty
    (147) empty -> .

    MULT            reduce using rule 147 (empty -> .)
    DIV             reduce using rule 147 (empty -> .)
    PLUS            reduce using rule 147 (empty -> .)
    MINUS           reduce using rule 147 (empty -> .)
    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnSaveCteC                     shift and go to state 175
    empty                          shift and go to state 176

state 126

    (88) f -> variable .

    MULT            reduce using rule 88 (f -> variable .)
    DIV             reduce using rule 88 (f -> variable .)
    PLUS            reduce using rule 88 (f -> variable .)
    MINUS           reduce using rule 88 (f -> variable .)
    LESS_THAN       reduce using rule 88 (f -> variable .)
    GREATER_THAN    reduce using rule 88 (f -> variable .)
    EQUALS          reduce using rule 88 (f -> variable .)
    NOTEQUALS       reduce using rule 88 (f -> variable .)
    AND             reduce using rule 88 (f -> variable .)
    OR              reduce using rule 88 (f -> variable .)
    SEMICOLON       reduce using rule 88 (f -> variable .)
    COMMA           reduce using rule 88 (f -> variable .)
    RIGHT_PARENT    reduce using rule 88 (f -> variable .)
    RIGHT_SQR_BRACKET reduce using rule 88 (f -> variable .)


state 127

    (89) f -> llamada .

    MULT            reduce using rule 89 (f -> llamada .)
    DIV             reduce using rule 89 (f -> llamada .)
    PLUS            reduce using rule 89 (f -> llamada .)
    MINUS           reduce using rule 89 (f -> llamada .)
    LESS_THAN       reduce using rule 89 (f -> llamada .)
    GREATER_THAN    reduce using rule 89 (f -> llamada .)
    EQUALS          reduce using rule 89 (f -> llamada .)
    NOTEQUALS       reduce using rule 89 (f -> llamada .)
    AND             reduce using rule 89 (f -> llamada .)
    OR              reduce using rule 89 (f -> llamada .)
    SEMICOLON       reduce using rule 89 (f -> llamada .)
    COMMA           reduce using rule 89 (f -> llamada .)
    RIGHT_PARENT    reduce using rule 89 (f -> llamada .)
    RIGHT_SQR_BRACKET reduce using rule 89 (f -> llamada .)


state 128

    (90) f -> funcesp .

    MULT            reduce using rule 90 (f -> funcesp .)
    DIV             reduce using rule 90 (f -> funcesp .)
    PLUS            reduce using rule 90 (f -> funcesp .)
    MINUS           reduce using rule 90 (f -> funcesp .)
    LESS_THAN       reduce using rule 90 (f -> funcesp .)
    GREATER_THAN    reduce using rule 90 (f -> funcesp .)
    EQUALS          reduce using rule 90 (f -> funcesp .)
    NOTEQUALS       reduce using rule 90 (f -> funcesp .)
    AND             reduce using rule 90 (f -> funcesp .)
    OR              reduce using rule 90 (f -> funcesp .)
    SEMICOLON       reduce using rule 90 (f -> funcesp .)
    COMMA           reduce using rule 90 (f -> funcesp .)
    RIGHT_PARENT    reduce using rule 90 (f -> funcesp .)
    RIGHT_SQR_BRACKET reduce using rule 90 (f -> funcesp .)


state 129

    (16) variable -> ID . pnSaveOperandos indexp
    (21) llamada -> ID . LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (127) pnSaveOperandos -> . empty
    (147) empty -> .

    LEFT_PARENT     shift and go to state 107
    LEFT_SQR_BRACKET reduce using rule 147 (empty -> .)
    MULT            reduce using rule 147 (empty -> .)
    DIV             reduce using rule 147 (empty -> .)
    PLUS            reduce using rule 147 (empty -> .)
    MINUS           reduce using rule 147 (empty -> .)
    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnSaveOperandos                shift and go to state 108
    empty                          shift and go to state 109

state 130

    (105) funcesp -> copy .

    MULT            reduce using rule 105 (funcesp -> copy .)
    DIV             reduce using rule 105 (funcesp -> copy .)
    PLUS            reduce using rule 105 (funcesp -> copy .)
    MINUS           reduce using rule 105 (funcesp -> copy .)
    LESS_THAN       reduce using rule 105 (funcesp -> copy .)
    GREATER_THAN    reduce using rule 105 (funcesp -> copy .)
    EQUALS          reduce using rule 105 (funcesp -> copy .)
    NOTEQUALS       reduce using rule 105 (funcesp -> copy .)
    AND             reduce using rule 105 (funcesp -> copy .)
    OR              reduce using rule 105 (funcesp -> copy .)
    SEMICOLON       reduce using rule 105 (funcesp -> copy .)
    COMMA           reduce using rule 105 (funcesp -> copy .)
    RIGHT_PARENT    reduce using rule 105 (funcesp -> copy .)
    RIGHT_SQR_BRACKET reduce using rule 105 (funcesp -> copy .)


state 131

    (14) copy -> READ_FILE pnSaveCopy . LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 177


state 132

    (143) pnSaveCopy -> empty .

    LEFT_PARENT     reduce using rule 143 (pnSaveCopy -> empty .)


state 133

    (106) mean -> MEAN pnSaveFuncEsp . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 178


state 134

    (145) pnSaveFuncEsp -> empty .

    LEFT_PARENT     reduce using rule 145 (pnSaveFuncEsp -> empty .)


state 135

    (107) mode -> MODE pnSaveFuncEsp . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 179


state 136

    (108) median -> MEDIAN pnSaveFuncEsp . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 180


state 137

    (109) variance -> VARIANCE pnSaveFuncEsp . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 181


state 138

    (110) max -> MAX pnSaveFuncEsp . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 182


state 139

    (111) min -> MIN pnSaveFuncEsp . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 183


state 140

    (112) staddes -> STADDES pnSaveFuncEsp . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 184


state 141

    (113) boxplot -> BOXPLOT pnSaveFuncEsp . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 185


state 142

    (114) linreg -> LINREG pnSaveFuncEsp . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 186


state 143

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar . param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (39) param -> . paramlist
    (40) param -> . empty
    (41) paramlist -> . tipoparam ARROW ID pnAddParametersTablaVar paramlistp
    (147) empty -> .
    (42) tipoparam -> . tipo_simp
    (43) tipoparam -> . DATAFRAME pnSaveTypeVar
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    DATAFRAME       shift and go to state 192
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28

    param                          shift and go to state 187
    paramlist                      shift and go to state 188
    empty                          shift and go to state 189
    tipoparam                      shift and go to state 190
    tipo_simp                      shift and go to state 191

state 144

    (34) idpp -> COMMA ID . pnCheckNameTablaVar idpp
    (119) pnCheckNameTablaVar -> . empty
    (147) empty -> .

    COMMA           reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)

    pnCheckNameTablaVar            shift and go to state 193
    empty                          shift and go to state 54

state 145

    (6) bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript .

    $end            reduce using rule 6 (bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript .)


state 146

    (123) pnEndScript -> empty .

    $end            reduce using rule 123 (pnEndScript -> empty .)


state 147

    (56) asign -> variable ASIGN pnSaveOperadorAsign . exp pnCuadAsign SEMICOLON
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 122
    CTEI            shift and go to state 123
    CTEF            shift and go to state 124
    CTEC            shift and go to state 125
    ID              shift and go to state 129
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    variable                       shift and go to state 126
    exp                            shift and go to state 194
    exprel                         shift and go to state 118
    e                              shift and go to state 119
    t                              shift and go to state 120
    f                              shift and go to state 121
    llamada                        shift and go to state 127
    funcesp                        shift and go to state 128
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 130

state 148

    (137) pnSaveOperadorAsign -> empty .

    LEFT_PARENT     reduce using rule 137 (pnSaveOperadorAsign -> empty .)
    CTEI            reduce using rule 137 (pnSaveOperadorAsign -> empty .)
    CTEF            reduce using rule 137 (pnSaveOperadorAsign -> empty .)
    CTEC            reduce using rule 137 (pnSaveOperadorAsign -> empty .)
    ID              reduce using rule 137 (pnSaveOperadorAsign -> empty .)
    MEAN            reduce using rule 137 (pnSaveOperadorAsign -> empty .)
    MODE            reduce using rule 137 (pnSaveOperadorAsign -> empty .)
    MEDIAN          reduce using rule 137 (pnSaveOperadorAsign -> empty .)
    VARIANCE        reduce using rule 137 (pnSaveOperadorAsign -> empty .)
    MAX             reduce using rule 137 (pnSaveOperadorAsign -> empty .)
    MIN             reduce using rule 137 (pnSaveOperadorAsign -> empty .)
    STADDES         reduce using rule 137 (pnSaveOperadorAsign -> empty .)
    BOXPLOT         reduce using rule 137 (pnSaveOperadorAsign -> empty .)
    LINREG          reduce using rule 137 (pnSaveOperadorAsign -> empty .)
    READ_FILE       reduce using rule 137 (pnSaveOperadorAsign -> empty .)


state 149

    (21) llamada -> ID LEFT_PARENT expp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 195


state 150

    (22) expp -> exp . exppp
    (24) exppp -> . COMMA exp exppp
    (25) exppp -> . empty
    (147) empty -> .

    COMMA           shift and go to state 197
    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    exppp                          shift and go to state 196
    empty                          shift and go to state 198

state 151

    (23) expp -> empty .

    RIGHT_PARENT    reduce using rule 23 (expp -> empty .)


state 152

    (16) variable -> ID pnSaveOperandos indexp .

    ASIGN           reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    MULT            reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    DIV             reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    PLUS            reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    MINUS           reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    LESS_THAN       reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    GREATER_THAN    reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    EQUALS          reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    NOTEQUALS       reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    AND             reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    OR              reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    SEMICOLON       reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    COMMA           reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    RIGHT_PARENT    reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    RIGHT_SQR_BRACKET reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)


state 153

    (17) indexp -> LEFT_SQR_BRACKET . exp indexpp RIGHT_SQR_BRACKET
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 122
    CTEI            shift and go to state 123
    CTEF            shift and go to state 124
    CTEC            shift and go to state 125
    ID              shift and go to state 129
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 199
    exprel                         shift and go to state 118
    e                              shift and go to state 119
    t                              shift and go to state 120
    f                              shift and go to state 121
    variable                       shift and go to state 126
    llamada                        shift and go to state 127
    funcesp                        shift and go to state 128
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 130

state 154

    (18) indexp -> empty .

    ASIGN           reduce using rule 18 (indexp -> empty .)
    MULT            reduce using rule 18 (indexp -> empty .)
    DIV             reduce using rule 18 (indexp -> empty .)
    PLUS            reduce using rule 18 (indexp -> empty .)
    MINUS           reduce using rule 18 (indexp -> empty .)
    LESS_THAN       reduce using rule 18 (indexp -> empty .)
    GREATER_THAN    reduce using rule 18 (indexp -> empty .)
    EQUALS          reduce using rule 18 (indexp -> empty .)
    NOTEQUALS       reduce using rule 18 (indexp -> empty .)
    AND             reduce using rule 18 (indexp -> empty .)
    OR              reduce using rule 18 (indexp -> empty .)
    SEMICOLON       reduce using rule 18 (indexp -> empty .)
    COMMA           reduce using rule 18 (indexp -> empty .)
    RIGHT_PARENT    reduce using rule 18 (indexp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 18 (indexp -> empty .)


state 155

    (57) lee -> READ pnSaveLeer LEFT_PARENT . variable pnCuadLee RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 160

    variable                       shift and go to state 200

state 156

    (58) escribe -> WRITE pnSaveEscribe LEFT_PARENT . escribep RIGHT_PARENT SEMICOLON
    (59) escribep -> . exp pnCuadEscribe
    (60) escribep -> . LETRERO pnCuadEscribe
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LETRERO         shift and go to state 203
    LEFT_PARENT     shift and go to state 122
    CTEI            shift and go to state 123
    CTEF            shift and go to state 124
    CTEC            shift and go to state 125
    ID              shift and go to state 129
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    escribep                       shift and go to state 201
    exp                            shift and go to state 202
    exprel                         shift and go to state 118
    e                              shift and go to state 119
    t                              shift and go to state 120
    f                              shift and go to state 121
    variable                       shift and go to state 126
    llamada                        shift and go to state 127
    funcesp                        shift and go to state 128
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 130

state 157

    (91) condicion -> IF LEFT_PARENT exp . RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop

    RIGHT_PARENT    shift and go to state 204


state 158

    (94) ciclow -> WHILE LEFT_PARENT exp . RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    RIGHT_PARENT    shift and go to state 205


state 159

    (95) ciclof -> FOR LEFT_PARENT asign . exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 122
    CTEI            shift and go to state 123
    CTEF            shift and go to state 124
    CTEC            shift and go to state 125
    ID              shift and go to state 129
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 206
    exprel                         shift and go to state 118
    e                              shift and go to state 119
    t                              shift and go to state 120
    f                              shift and go to state 121
    variable                       shift and go to state 126
    llamada                        shift and go to state 127
    funcesp                        shift and go to state 128
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 130

state 160

    (16) variable -> ID . pnSaveOperandos indexp
    (127) pnSaveOperandos -> . empty
    (147) empty -> .

    LEFT_SQR_BRACKET reduce using rule 147 (empty -> .)
    ASIGN           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    pnSaveOperandos                shift and go to state 108
    empty                          shift and go to state 109

state 161

    (61) return -> RETURNS exp SEMICOLON .

    ID              reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    READ            reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    WRITE           reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    IF              reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    WHILE           reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    FOR             reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    RETURNS         reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    READ_FILE       reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MEAN            reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MODE            reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MEDIAN          reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    VARIANCE        reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MAX             reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MIN             reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    STADDES         reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    BOXPLOT         reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    LINREG          reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 61 (return -> RETURNS exp SEMICOLON .)


state 162

    (62) exp -> exprel pnCuadOplog . logic
    (63) logic -> . logicsig exprel pnCuadOplog logic
    (64) logic -> . empty
    (65) logicsig -> . AND pnSaveOperadorLog
    (66) logicsig -> . OR pnSaveOperadorLog
    (147) empty -> .

    AND             shift and go to state 210
    OR              shift and go to state 211
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    logic                          shift and go to state 207
    logicsig                       shift and go to state 208
    empty                          shift and go to state 209

state 163

    (136) pnCuadOplog -> empty .

    AND             reduce using rule 136 (pnCuadOplog -> empty .)
    OR              reduce using rule 136 (pnCuadOplog -> empty .)
    SEMICOLON       reduce using rule 136 (pnCuadOplog -> empty .)
    COMMA           reduce using rule 136 (pnCuadOplog -> empty .)
    RIGHT_PARENT    reduce using rule 136 (pnCuadOplog -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 136 (pnCuadOplog -> empty .)


state 164

    (67) exprel -> e pnCuadOpRelacional . relacionalp
    (68) relacionalp -> . relsig e pnCuadOpRelacional relacionalp
    (69) relacionalp -> . empty
    (70) relsig -> . LESS_THAN pnSaveOperadorRel
    (71) relsig -> . GREATER_THAN pnSaveOperadorRel
    (72) relsig -> . EQUALS pnSaveOperadorRel
    (73) relsig -> . NOTEQUALS pnSaveOperadorRel
    (147) empty -> .

    LESS_THAN       shift and go to state 215
    GREATER_THAN    shift and go to state 216
    EQUALS          shift and go to state 217
    NOTEQUALS       shift and go to state 218
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    relacionalp                    shift and go to state 212
    relsig                         shift and go to state 213
    empty                          shift and go to state 214

state 165

    (135) pnCuadOpRelacional -> empty .

    LESS_THAN       reduce using rule 135 (pnCuadOpRelacional -> empty .)
    GREATER_THAN    reduce using rule 135 (pnCuadOpRelacional -> empty .)
    EQUALS          reduce using rule 135 (pnCuadOpRelacional -> empty .)
    NOTEQUALS       reduce using rule 135 (pnCuadOpRelacional -> empty .)
    AND             reduce using rule 135 (pnCuadOpRelacional -> empty .)
    OR              reduce using rule 135 (pnCuadOpRelacional -> empty .)
    SEMICOLON       reduce using rule 135 (pnCuadOpRelacional -> empty .)
    COMMA           reduce using rule 135 (pnCuadOpRelacional -> empty .)
    RIGHT_PARENT    reduce using rule 135 (pnCuadOpRelacional -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 135 (pnCuadOpRelacional -> empty .)


state 166

    (74) e -> t pnCuadPlMi . tp
    (75) tp -> . tsig t pnCuadPlMi tp
    (76) tp -> . empty
    (77) tsig -> . PLUS pnSaveOperadorPlMi
    (78) tsig -> . MINUS pnSaveOperadorPlMi
    (147) empty -> .

    PLUS            shift and go to state 222
    MINUS           shift and go to state 223
    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    tp                             shift and go to state 219
    tsig                           shift and go to state 220
    empty                          shift and go to state 221

state 167

    (133) pnCuadPlMi -> empty .

    PLUS            reduce using rule 133 (pnCuadPlMi -> empty .)
    MINUS           reduce using rule 133 (pnCuadPlMi -> empty .)
    LESS_THAN       reduce using rule 133 (pnCuadPlMi -> empty .)
    GREATER_THAN    reduce using rule 133 (pnCuadPlMi -> empty .)
    EQUALS          reduce using rule 133 (pnCuadPlMi -> empty .)
    NOTEQUALS       reduce using rule 133 (pnCuadPlMi -> empty .)
    AND             reduce using rule 133 (pnCuadPlMi -> empty .)
    OR              reduce using rule 133 (pnCuadPlMi -> empty .)
    SEMICOLON       reduce using rule 133 (pnCuadPlMi -> empty .)
    COMMA           reduce using rule 133 (pnCuadPlMi -> empty .)
    RIGHT_PARENT    reduce using rule 133 (pnCuadPlMi -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 133 (pnCuadPlMi -> empty .)


state 168

    (79) t -> f pnCuadMuDi . fp
    (80) fp -> . fsig f pnCuadMuDi fp
    (81) fp -> . empty
    (82) fsig -> . MULT pnSaveOperadorMuDi
    (83) fsig -> . DIV pnSaveOperadorMuDi
    (147) empty -> .

    MULT            shift and go to state 227
    DIV             shift and go to state 228
    PLUS            reduce using rule 147 (empty -> .)
    MINUS           reduce using rule 147 (empty -> .)
    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    fp                             shift and go to state 224
    fsig                           shift and go to state 225
    empty                          shift and go to state 226

state 169

    (134) pnCuadMuDi -> empty .

    MULT            reduce using rule 134 (pnCuadMuDi -> empty .)
    DIV             reduce using rule 134 (pnCuadMuDi -> empty .)
    PLUS            reduce using rule 134 (pnCuadMuDi -> empty .)
    MINUS           reduce using rule 134 (pnCuadMuDi -> empty .)
    LESS_THAN       reduce using rule 134 (pnCuadMuDi -> empty .)
    GREATER_THAN    reduce using rule 134 (pnCuadMuDi -> empty .)
    EQUALS          reduce using rule 134 (pnCuadMuDi -> empty .)
    NOTEQUALS       reduce using rule 134 (pnCuadMuDi -> empty .)
    AND             reduce using rule 134 (pnCuadMuDi -> empty .)
    OR              reduce using rule 134 (pnCuadMuDi -> empty .)
    SEMICOLON       reduce using rule 134 (pnCuadMuDi -> empty .)
    COMMA           reduce using rule 134 (pnCuadMuDi -> empty .)
    RIGHT_PARENT    reduce using rule 134 (pnCuadMuDi -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 134 (pnCuadMuDi -> empty .)


state 170

    (84) f -> LEFT_PARENT exp . RIGHT_PARENT

    RIGHT_PARENT    shift and go to state 229


state 171

    (85) f -> CTEI pnSaveCteI . pnSaveOperandoConstante
    (128) pnSaveOperandoConstante -> . empty
    (147) empty -> .

    MULT            reduce using rule 147 (empty -> .)
    DIV             reduce using rule 147 (empty -> .)
    PLUS            reduce using rule 147 (empty -> .)
    MINUS           reduce using rule 147 (empty -> .)
    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnSaveOperandoConstante        shift and go to state 230
    empty                          shift and go to state 231

state 172

    (124) pnSaveCteI -> empty .

    MULT            reduce using rule 124 (pnSaveCteI -> empty .)
    DIV             reduce using rule 124 (pnSaveCteI -> empty .)
    PLUS            reduce using rule 124 (pnSaveCteI -> empty .)
    MINUS           reduce using rule 124 (pnSaveCteI -> empty .)
    LESS_THAN       reduce using rule 124 (pnSaveCteI -> empty .)
    GREATER_THAN    reduce using rule 124 (pnSaveCteI -> empty .)
    EQUALS          reduce using rule 124 (pnSaveCteI -> empty .)
    NOTEQUALS       reduce using rule 124 (pnSaveCteI -> empty .)
    AND             reduce using rule 124 (pnSaveCteI -> empty .)
    OR              reduce using rule 124 (pnSaveCteI -> empty .)
    SEMICOLON       reduce using rule 124 (pnSaveCteI -> empty .)
    COMMA           reduce using rule 124 (pnSaveCteI -> empty .)
    RIGHT_PARENT    reduce using rule 124 (pnSaveCteI -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 124 (pnSaveCteI -> empty .)


state 173

    (86) f -> CTEF pnSaveCteF . pnSaveOperandoConstante
    (128) pnSaveOperandoConstante -> . empty
    (147) empty -> .

    MULT            reduce using rule 147 (empty -> .)
    DIV             reduce using rule 147 (empty -> .)
    PLUS            reduce using rule 147 (empty -> .)
    MINUS           reduce using rule 147 (empty -> .)
    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnSaveOperandoConstante        shift and go to state 232
    empty                          shift and go to state 231

state 174

    (125) pnSaveCteF -> empty .

    MULT            reduce using rule 125 (pnSaveCteF -> empty .)
    DIV             reduce using rule 125 (pnSaveCteF -> empty .)
    PLUS            reduce using rule 125 (pnSaveCteF -> empty .)
    MINUS           reduce using rule 125 (pnSaveCteF -> empty .)
    LESS_THAN       reduce using rule 125 (pnSaveCteF -> empty .)
    GREATER_THAN    reduce using rule 125 (pnSaveCteF -> empty .)
    EQUALS          reduce using rule 125 (pnSaveCteF -> empty .)
    NOTEQUALS       reduce using rule 125 (pnSaveCteF -> empty .)
    AND             reduce using rule 125 (pnSaveCteF -> empty .)
    OR              reduce using rule 125 (pnSaveCteF -> empty .)
    SEMICOLON       reduce using rule 125 (pnSaveCteF -> empty .)
    COMMA           reduce using rule 125 (pnSaveCteF -> empty .)
    RIGHT_PARENT    reduce using rule 125 (pnSaveCteF -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 125 (pnSaveCteF -> empty .)


state 175

    (87) f -> CTEC pnSaveCteC . pnSaveOperandoConstante
    (128) pnSaveOperandoConstante -> . empty
    (147) empty -> .

    MULT            reduce using rule 147 (empty -> .)
    DIV             reduce using rule 147 (empty -> .)
    PLUS            reduce using rule 147 (empty -> .)
    MINUS           reduce using rule 147 (empty -> .)
    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnSaveOperandoConstante        shift and go to state 233
    empty                          shift and go to state 231

state 176

    (126) pnSaveCteC -> empty .

    MULT            reduce using rule 126 (pnSaveCteC -> empty .)
    DIV             reduce using rule 126 (pnSaveCteC -> empty .)
    PLUS            reduce using rule 126 (pnSaveCteC -> empty .)
    MINUS           reduce using rule 126 (pnSaveCteC -> empty .)
    LESS_THAN       reduce using rule 126 (pnSaveCteC -> empty .)
    GREATER_THAN    reduce using rule 126 (pnSaveCteC -> empty .)
    EQUALS          reduce using rule 126 (pnSaveCteC -> empty .)
    NOTEQUALS       reduce using rule 126 (pnSaveCteC -> empty .)
    AND             reduce using rule 126 (pnSaveCteC -> empty .)
    OR              reduce using rule 126 (pnSaveCteC -> empty .)
    SEMICOLON       reduce using rule 126 (pnSaveCteC -> empty .)
    COMMA           reduce using rule 126 (pnSaveCteC -> empty .)
    RIGHT_PARENT    reduce using rule 126 (pnSaveCteC -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 126 (pnSaveCteC -> empty .)


state 177

    (14) copy -> READ_FILE pnSaveCopy LEFT_PARENT . LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LETRERO         shift and go to state 234


state 178

    (106) mean -> MEAN pnSaveFuncEsp LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 160

    variable                       shift and go to state 235

state 179

    (107) mode -> MODE pnSaveFuncEsp LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 160

    variable                       shift and go to state 236

state 180

    (108) median -> MEDIAN pnSaveFuncEsp LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 160

    variable                       shift and go to state 237

state 181

    (109) variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 160

    variable                       shift and go to state 238

state 182

    (110) max -> MAX pnSaveFuncEsp LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 160

    variable                       shift and go to state 239

state 183

    (111) min -> MIN pnSaveFuncEsp LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 160

    variable                       shift and go to state 240

state 184

    (112) staddes -> STADDES pnSaveFuncEsp LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 160

    variable                       shift and go to state 241

state 185

    (113) boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 160

    variable                       shift and go to state 242

state 186

    (114) linreg -> LINREG pnSaveFuncEsp LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 160

    variable                       shift and go to state 243

state 187

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param . RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction

    RIGHT_PARENT    shift and go to state 244


state 188

    (39) param -> paramlist .

    RIGHT_PARENT    reduce using rule 39 (param -> paramlist .)


state 189

    (40) param -> empty .

    RIGHT_PARENT    reduce using rule 40 (param -> empty .)


state 190

    (41) paramlist -> tipoparam . ARROW ID pnAddParametersTablaVar paramlistp

    ARROW           shift and go to state 245


state 191

    (42) tipoparam -> tipo_simp .

    ARROW           reduce using rule 42 (tipoparam -> tipo_simp .)


state 192

    (43) tipoparam -> DATAFRAME . pnSaveTypeVar
    (118) pnSaveTypeVar -> . empty
    (147) empty -> .

    ARROW           reduce using rule 147 (empty -> .)

    pnSaveTypeVar                  shift and go to state 246
    empty                          shift and go to state 35

state 193

    (34) idpp -> COMMA ID pnCheckNameTablaVar . idpp
    (34) idpp -> . COMMA ID pnCheckNameTablaVar idpp
    (35) idpp -> . empty
    (147) empty -> .

    COMMA           shift and go to state 100
    SEMICOLON       reduce using rule 147 (empty -> .)

    idpp                           shift and go to state 247
    empty                          shift and go to state 101

state 194

    (56) asign -> variable ASIGN pnSaveOperadorAsign exp . pnCuadAsign SEMICOLON
    (138) pnCuadAsign -> . empty
    (147) empty -> .

    SEMICOLON       reduce using rule 147 (empty -> .)

    pnCuadAsign                    shift and go to state 248
    empty                          shift and go to state 249

state 195

    (21) llamada -> ID LEFT_PARENT expp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 250


state 196

    (22) expp -> exp exppp .

    RIGHT_PARENT    reduce using rule 22 (expp -> exp exppp .)


state 197

    (24) exppp -> COMMA . exp exppp
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 122
    CTEI            shift and go to state 123
    CTEF            shift and go to state 124
    CTEC            shift and go to state 125
    ID              shift and go to state 129
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 251
    exprel                         shift and go to state 118
    e                              shift and go to state 119
    t                              shift and go to state 120
    f                              shift and go to state 121
    variable                       shift and go to state 126
    llamada                        shift and go to state 127
    funcesp                        shift and go to state 128
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 130

state 198

    (25) exppp -> empty .

    RIGHT_PARENT    reduce using rule 25 (exppp -> empty .)


state 199

    (17) indexp -> LEFT_SQR_BRACKET exp . indexpp RIGHT_SQR_BRACKET
    (19) indexpp -> . COMMA exp
    (20) indexpp -> . empty
    (147) empty -> .

    COMMA           shift and go to state 253
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    indexpp                        shift and go to state 252
    empty                          shift and go to state 254

state 200

    (57) lee -> READ pnSaveLeer LEFT_PARENT variable . pnCuadLee RIGHT_PARENT SEMICOLON
    (142) pnCuadLee -> . empty
    (147) empty -> .

    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    pnCuadLee                      shift and go to state 255
    empty                          shift and go to state 256

state 201

    (58) escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 257


state 202

    (59) escribep -> exp . pnCuadEscribe
    (140) pnCuadEscribe -> . empty
    (147) empty -> .

    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    pnCuadEscribe                  shift and go to state 258
    empty                          shift and go to state 259

state 203

    (60) escribep -> LETRERO . pnCuadEscribe
    (140) pnCuadEscribe -> . empty
    (147) empty -> .

    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    pnCuadEscribe                  shift and go to state 260
    empty                          shift and go to state 259

state 204

    (91) condicion -> IF LEFT_PARENT exp RIGHT_PARENT . IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop

    IF_TRUE         shift and go to state 261


state 205

    (94) ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_CUR_BRACKET shift and go to state 262


state 206

    (95) ciclof -> FOR LEFT_PARENT asign exp . RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    RIGHT_PARENT    shift and go to state 263


state 207

    (62) exp -> exprel pnCuadOplog logic .

    SEMICOLON       reduce using rule 62 (exp -> exprel pnCuadOplog logic .)
    COMMA           reduce using rule 62 (exp -> exprel pnCuadOplog logic .)
    RIGHT_PARENT    reduce using rule 62 (exp -> exprel pnCuadOplog logic .)
    RIGHT_SQR_BRACKET reduce using rule 62 (exp -> exprel pnCuadOplog logic .)


state 208

    (63) logic -> logicsig . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 122
    CTEI            shift and go to state 123
    CTEF            shift and go to state 124
    CTEC            shift and go to state 125
    ID              shift and go to state 129
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exprel                         shift and go to state 264
    e                              shift and go to state 119
    t                              shift and go to state 120
    f                              shift and go to state 121
    variable                       shift and go to state 126
    llamada                        shift and go to state 127
    funcesp                        shift and go to state 128
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 130

state 209

    (64) logic -> empty .

    SEMICOLON       reduce using rule 64 (logic -> empty .)
    COMMA           reduce using rule 64 (logic -> empty .)
    RIGHT_PARENT    reduce using rule 64 (logic -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 64 (logic -> empty .)


state 210

    (65) logicsig -> AND . pnSaveOperadorLog
    (132) pnSaveOperadorLog -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)
    CTEI            reduce using rule 147 (empty -> .)
    CTEF            reduce using rule 147 (empty -> .)
    CTEC            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)

    pnSaveOperadorLog              shift and go to state 265
    empty                          shift and go to state 266

state 211

    (66) logicsig -> OR . pnSaveOperadorLog
    (132) pnSaveOperadorLog -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)
    CTEI            reduce using rule 147 (empty -> .)
    CTEF            reduce using rule 147 (empty -> .)
    CTEC            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)

    pnSaveOperadorLog              shift and go to state 267
    empty                          shift and go to state 266

state 212

    (67) exprel -> e pnCuadOpRelacional relacionalp .

    AND             reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    OR              reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    SEMICOLON       reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    COMMA           reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    RIGHT_PARENT    reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    RIGHT_SQR_BRACKET reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)


state 213

    (68) relacionalp -> relsig . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 122
    CTEI            shift and go to state 123
    CTEF            shift and go to state 124
    CTEC            shift and go to state 125
    ID              shift and go to state 129
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    e                              shift and go to state 268
    t                              shift and go to state 120
    f                              shift and go to state 121
    variable                       shift and go to state 126
    llamada                        shift and go to state 127
    funcesp                        shift and go to state 128
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 130

state 214

    (69) relacionalp -> empty .

    AND             reduce using rule 69 (relacionalp -> empty .)
    OR              reduce using rule 69 (relacionalp -> empty .)
    SEMICOLON       reduce using rule 69 (relacionalp -> empty .)
    COMMA           reduce using rule 69 (relacionalp -> empty .)
    RIGHT_PARENT    reduce using rule 69 (relacionalp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 69 (relacionalp -> empty .)


state 215

    (70) relsig -> LESS_THAN . pnSaveOperadorRel
    (131) pnSaveOperadorRel -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)
    CTEI            reduce using rule 147 (empty -> .)
    CTEF            reduce using rule 147 (empty -> .)
    CTEC            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)

    pnSaveOperadorRel              shift and go to state 269
    empty                          shift and go to state 270

state 216

    (71) relsig -> GREATER_THAN . pnSaveOperadorRel
    (131) pnSaveOperadorRel -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)
    CTEI            reduce using rule 147 (empty -> .)
    CTEF            reduce using rule 147 (empty -> .)
    CTEC            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)

    pnSaveOperadorRel              shift and go to state 271
    empty                          shift and go to state 270

state 217

    (72) relsig -> EQUALS . pnSaveOperadorRel
    (131) pnSaveOperadorRel -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)
    CTEI            reduce using rule 147 (empty -> .)
    CTEF            reduce using rule 147 (empty -> .)
    CTEC            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)

    pnSaveOperadorRel              shift and go to state 272
    empty                          shift and go to state 270

state 218

    (73) relsig -> NOTEQUALS . pnSaveOperadorRel
    (131) pnSaveOperadorRel -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)
    CTEI            reduce using rule 147 (empty -> .)
    CTEF            reduce using rule 147 (empty -> .)
    CTEC            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)

    pnSaveOperadorRel              shift and go to state 273
    empty                          shift and go to state 270

state 219

    (74) e -> t pnCuadPlMi tp .

    LESS_THAN       reduce using rule 74 (e -> t pnCuadPlMi tp .)
    GREATER_THAN    reduce using rule 74 (e -> t pnCuadPlMi tp .)
    EQUALS          reduce using rule 74 (e -> t pnCuadPlMi tp .)
    NOTEQUALS       reduce using rule 74 (e -> t pnCuadPlMi tp .)
    AND             reduce using rule 74 (e -> t pnCuadPlMi tp .)
    OR              reduce using rule 74 (e -> t pnCuadPlMi tp .)
    SEMICOLON       reduce using rule 74 (e -> t pnCuadPlMi tp .)
    COMMA           reduce using rule 74 (e -> t pnCuadPlMi tp .)
    RIGHT_PARENT    reduce using rule 74 (e -> t pnCuadPlMi tp .)
    RIGHT_SQR_BRACKET reduce using rule 74 (e -> t pnCuadPlMi tp .)


state 220

    (75) tp -> tsig . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 122
    CTEI            shift and go to state 123
    CTEF            shift and go to state 124
    CTEC            shift and go to state 125
    ID              shift and go to state 129
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    t                              shift and go to state 274
    f                              shift and go to state 121
    variable                       shift and go to state 126
    llamada                        shift and go to state 127
    funcesp                        shift and go to state 128
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 130

state 221

    (76) tp -> empty .

    LESS_THAN       reduce using rule 76 (tp -> empty .)
    GREATER_THAN    reduce using rule 76 (tp -> empty .)
    EQUALS          reduce using rule 76 (tp -> empty .)
    NOTEQUALS       reduce using rule 76 (tp -> empty .)
    AND             reduce using rule 76 (tp -> empty .)
    OR              reduce using rule 76 (tp -> empty .)
    SEMICOLON       reduce using rule 76 (tp -> empty .)
    COMMA           reduce using rule 76 (tp -> empty .)
    RIGHT_PARENT    reduce using rule 76 (tp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 76 (tp -> empty .)


state 222

    (77) tsig -> PLUS . pnSaveOperadorPlMi
    (129) pnSaveOperadorPlMi -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)
    CTEI            reduce using rule 147 (empty -> .)
    CTEF            reduce using rule 147 (empty -> .)
    CTEC            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)

    pnSaveOperadorPlMi             shift and go to state 275
    empty                          shift and go to state 276

state 223

    (78) tsig -> MINUS . pnSaveOperadorPlMi
    (129) pnSaveOperadorPlMi -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)
    CTEI            reduce using rule 147 (empty -> .)
    CTEF            reduce using rule 147 (empty -> .)
    CTEC            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)

    pnSaveOperadorPlMi             shift and go to state 277
    empty                          shift and go to state 276

state 224

    (79) t -> f pnCuadMuDi fp .

    PLUS            reduce using rule 79 (t -> f pnCuadMuDi fp .)
    MINUS           reduce using rule 79 (t -> f pnCuadMuDi fp .)
    LESS_THAN       reduce using rule 79 (t -> f pnCuadMuDi fp .)
    GREATER_THAN    reduce using rule 79 (t -> f pnCuadMuDi fp .)
    EQUALS          reduce using rule 79 (t -> f pnCuadMuDi fp .)
    NOTEQUALS       reduce using rule 79 (t -> f pnCuadMuDi fp .)
    AND             reduce using rule 79 (t -> f pnCuadMuDi fp .)
    OR              reduce using rule 79 (t -> f pnCuadMuDi fp .)
    SEMICOLON       reduce using rule 79 (t -> f pnCuadMuDi fp .)
    COMMA           reduce using rule 79 (t -> f pnCuadMuDi fp .)
    RIGHT_PARENT    reduce using rule 79 (t -> f pnCuadMuDi fp .)
    RIGHT_SQR_BRACKET reduce using rule 79 (t -> f pnCuadMuDi fp .)


state 225

    (80) fp -> fsig . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 122
    CTEI            shift and go to state 123
    CTEF            shift and go to state 124
    CTEC            shift and go to state 125
    ID              shift and go to state 129
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    f                              shift and go to state 278
    variable                       shift and go to state 126
    llamada                        shift and go to state 127
    funcesp                        shift and go to state 128
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 130

state 226

    (81) fp -> empty .

    PLUS            reduce using rule 81 (fp -> empty .)
    MINUS           reduce using rule 81 (fp -> empty .)
    LESS_THAN       reduce using rule 81 (fp -> empty .)
    GREATER_THAN    reduce using rule 81 (fp -> empty .)
    EQUALS          reduce using rule 81 (fp -> empty .)
    NOTEQUALS       reduce using rule 81 (fp -> empty .)
    AND             reduce using rule 81 (fp -> empty .)
    OR              reduce using rule 81 (fp -> empty .)
    SEMICOLON       reduce using rule 81 (fp -> empty .)
    COMMA           reduce using rule 81 (fp -> empty .)
    RIGHT_PARENT    reduce using rule 81 (fp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 81 (fp -> empty .)


state 227

    (82) fsig -> MULT . pnSaveOperadorMuDi
    (130) pnSaveOperadorMuDi -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)
    CTEI            reduce using rule 147 (empty -> .)
    CTEF            reduce using rule 147 (empty -> .)
    CTEC            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)

    pnSaveOperadorMuDi             shift and go to state 279
    empty                          shift and go to state 280

state 228

    (83) fsig -> DIV . pnSaveOperadorMuDi
    (130) pnSaveOperadorMuDi -> . empty
    (147) empty -> .

    LEFT_PARENT     reduce using rule 147 (empty -> .)
    CTEI            reduce using rule 147 (empty -> .)
    CTEF            reduce using rule 147 (empty -> .)
    CTEC            reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)

    pnSaveOperadorMuDi             shift and go to state 281
    empty                          shift and go to state 280

state 229

    (84) f -> LEFT_PARENT exp RIGHT_PARENT .

    MULT            reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    DIV             reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    PLUS            reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    MINUS           reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    LESS_THAN       reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    GREATER_THAN    reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    EQUALS          reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    NOTEQUALS       reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    AND             reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    OR              reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    SEMICOLON       reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    COMMA           reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    RIGHT_PARENT    reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    RIGHT_SQR_BRACKET reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)


state 230

    (85) f -> CTEI pnSaveCteI pnSaveOperandoConstante .

    MULT            reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    DIV             reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    PLUS            reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    MINUS           reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    LESS_THAN       reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    GREATER_THAN    reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    EQUALS          reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    NOTEQUALS       reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    AND             reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    OR              reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    SEMICOLON       reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    COMMA           reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    RIGHT_PARENT    reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    RIGHT_SQR_BRACKET reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)


state 231

    (128) pnSaveOperandoConstante -> empty .

    MULT            reduce using rule 128 (pnSaveOperandoConstante -> empty .)
    DIV             reduce using rule 128 (pnSaveOperandoConstante -> empty .)
    PLUS            reduce using rule 128 (pnSaveOperandoConstante -> empty .)
    MINUS           reduce using rule 128 (pnSaveOperandoConstante -> empty .)
    LESS_THAN       reduce using rule 128 (pnSaveOperandoConstante -> empty .)
    GREATER_THAN    reduce using rule 128 (pnSaveOperandoConstante -> empty .)
    EQUALS          reduce using rule 128 (pnSaveOperandoConstante -> empty .)
    NOTEQUALS       reduce using rule 128 (pnSaveOperandoConstante -> empty .)
    AND             reduce using rule 128 (pnSaveOperandoConstante -> empty .)
    OR              reduce using rule 128 (pnSaveOperandoConstante -> empty .)
    SEMICOLON       reduce using rule 128 (pnSaveOperandoConstante -> empty .)
    COMMA           reduce using rule 128 (pnSaveOperandoConstante -> empty .)
    RIGHT_PARENT    reduce using rule 128 (pnSaveOperandoConstante -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 128 (pnSaveOperandoConstante -> empty .)


state 232

    (86) f -> CTEF pnSaveCteF pnSaveOperandoConstante .

    MULT            reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    DIV             reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    PLUS            reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    MINUS           reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    LESS_THAN       reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    GREATER_THAN    reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    EQUALS          reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    NOTEQUALS       reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    AND             reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    OR              reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    SEMICOLON       reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    COMMA           reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    RIGHT_PARENT    reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    RIGHT_SQR_BRACKET reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)


state 233

    (87) f -> CTEC pnSaveCteC pnSaveOperandoConstante .

    MULT            reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    DIV             reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    PLUS            reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    MINUS           reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    LESS_THAN       reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    GREATER_THAN    reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    EQUALS          reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    NOTEQUALS       reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    AND             reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    OR              reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    SEMICOLON       reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    COMMA           reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    RIGHT_PARENT    reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    RIGHT_SQR_BRACKET reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)


state 234

    (14) copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO . pnCuadCopy RIGHT_PARENT SEMICOLON
    (144) pnCuadCopy -> . empty
    (147) empty -> .

    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    pnCuadCopy                     shift and go to state 282
    empty                          shift and go to state 283

state 235

    (106) mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (146) pnCuadFuncEsp -> . empty
    (147) empty -> .

    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 284
    empty                          shift and go to state 285

state 236

    (107) mode -> MODE pnSaveFuncEsp LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (146) pnCuadFuncEsp -> . empty
    (147) empty -> .

    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 286
    empty                          shift and go to state 285

state 237

    (108) median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (146) pnCuadFuncEsp -> . empty
    (147) empty -> .

    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 287
    empty                          shift and go to state 285

state 238

    (109) variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (146) pnCuadFuncEsp -> . empty
    (147) empty -> .

    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 288
    empty                          shift and go to state 285

state 239

    (110) max -> MAX pnSaveFuncEsp LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (146) pnCuadFuncEsp -> . empty
    (147) empty -> .

    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 289
    empty                          shift and go to state 285

state 240

    (111) min -> MIN pnSaveFuncEsp LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (146) pnCuadFuncEsp -> . empty
    (147) empty -> .

    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 290
    empty                          shift and go to state 285

state 241

    (112) staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (146) pnCuadFuncEsp -> . empty
    (147) empty -> .

    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 291
    empty                          shift and go to state 285

state 242

    (113) boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (146) pnCuadFuncEsp -> . empty
    (147) empty -> .

    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 292
    empty                          shift and go to state 285

state 243

    (114) linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (146) pnCuadFuncEsp -> . empty
    (147) empty -> .

    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 293
    empty                          shift and go to state 285

state 244

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT . LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction

    LEFT_CUR_BRACKET shift and go to state 294


state 245

    (41) paramlist -> tipoparam ARROW . ID pnAddParametersTablaVar paramlistp

    ID              shift and go to state 295


state 246

    (43) tipoparam -> DATAFRAME pnSaveTypeVar .

    ARROW           reduce using rule 43 (tipoparam -> DATAFRAME pnSaveTypeVar .)


state 247

    (34) idpp -> COMMA ID pnCheckNameTablaVar idpp .

    SEMICOLON       reduce using rule 34 (idpp -> COMMA ID pnCheckNameTablaVar idpp .)


state 248

    (56) asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign . SEMICOLON

    SEMICOLON       shift and go to state 296


state 249

    (138) pnCuadAsign -> empty .

    SEMICOLON       reduce using rule 138 (pnCuadAsign -> empty .)


state 250

    (21) llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)


state 251

    (24) exppp -> COMMA exp . exppp
    (24) exppp -> . COMMA exp exppp
    (25) exppp -> . empty
    (147) empty -> .

    COMMA           shift and go to state 197
    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    exppp                          shift and go to state 297
    empty                          shift and go to state 198

state 252

    (17) indexp -> LEFT_SQR_BRACKET exp indexpp . RIGHT_SQR_BRACKET

    RIGHT_SQR_BRACKET shift and go to state 298


state 253

    (19) indexpp -> COMMA . exp
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 122
    CTEI            shift and go to state 123
    CTEF            shift and go to state 124
    CTEC            shift and go to state 125
    ID              shift and go to state 129
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 299
    exprel                         shift and go to state 118
    e                              shift and go to state 119
    t                              shift and go to state 120
    f                              shift and go to state 121
    variable                       shift and go to state 126
    llamada                        shift and go to state 127
    funcesp                        shift and go to state 128
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 130

state 254

    (20) indexpp -> empty .

    RIGHT_SQR_BRACKET reduce using rule 20 (indexpp -> empty .)


state 255

    (57) lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 300


state 256

    (142) pnCuadLee -> empty .

    RIGHT_PARENT    reduce using rule 142 (pnCuadLee -> empty .)


state 257

    (58) escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 301


state 258

    (59) escribep -> exp pnCuadEscribe .

    RIGHT_PARENT    reduce using rule 59 (escribep -> exp pnCuadEscribe .)


state 259

    (140) pnCuadEscribe -> empty .

    RIGHT_PARENT    reduce using rule 140 (pnCuadEscribe -> empty .)


state 260

    (60) escribep -> LETRERO pnCuadEscribe .

    RIGHT_PARENT    reduce using rule 60 (escribep -> LETRERO pnCuadEscribe .)


state 261

    (91) condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop

    LEFT_CUR_BRACKET shift and go to state 302


state 262

    (94) ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (147) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (57) lee -> . READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (94) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (95) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 147 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatutop                      shift and go to state 303
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 263

    (95) ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_CUR_BRACKET shift and go to state 304


state 264

    (63) logic -> logicsig exprel . pnCuadOplog logic
    (136) pnCuadOplog -> . empty
    (147) empty -> .

    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnCuadOplog                    shift and go to state 305
    empty                          shift and go to state 163

state 265

    (65) logicsig -> AND pnSaveOperadorLog .

    LEFT_PARENT     reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    CTEI            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    CTEF            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    CTEC            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    ID              reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MEAN            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MODE            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MEDIAN          reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    VARIANCE        reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MAX             reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MIN             reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    STADDES         reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    BOXPLOT         reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    LINREG          reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    READ_FILE       reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)


state 266

    (132) pnSaveOperadorLog -> empty .

    LEFT_PARENT     reduce using rule 132 (pnSaveOperadorLog -> empty .)
    CTEI            reduce using rule 132 (pnSaveOperadorLog -> empty .)
    CTEF            reduce using rule 132 (pnSaveOperadorLog -> empty .)
    CTEC            reduce using rule 132 (pnSaveOperadorLog -> empty .)
    ID              reduce using rule 132 (pnSaveOperadorLog -> empty .)
    MEAN            reduce using rule 132 (pnSaveOperadorLog -> empty .)
    MODE            reduce using rule 132 (pnSaveOperadorLog -> empty .)
    MEDIAN          reduce using rule 132 (pnSaveOperadorLog -> empty .)
    VARIANCE        reduce using rule 132 (pnSaveOperadorLog -> empty .)
    MAX             reduce using rule 132 (pnSaveOperadorLog -> empty .)
    MIN             reduce using rule 132 (pnSaveOperadorLog -> empty .)
    STADDES         reduce using rule 132 (pnSaveOperadorLog -> empty .)
    BOXPLOT         reduce using rule 132 (pnSaveOperadorLog -> empty .)
    LINREG          reduce using rule 132 (pnSaveOperadorLog -> empty .)
    READ_FILE       reduce using rule 132 (pnSaveOperadorLog -> empty .)


state 267

    (66) logicsig -> OR pnSaveOperadorLog .

    LEFT_PARENT     reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    CTEI            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    CTEF            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    CTEC            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    ID              reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MEAN            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MODE            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MEDIAN          reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    VARIANCE        reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MAX             reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MIN             reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    STADDES         reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    BOXPLOT         reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    LINREG          reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    READ_FILE       reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)


state 268

    (68) relacionalp -> relsig e . pnCuadOpRelacional relacionalp
    (135) pnCuadOpRelacional -> . empty
    (147) empty -> .

    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnCuadOpRelacional             shift and go to state 306
    empty                          shift and go to state 165

state 269

    (70) relsig -> LESS_THAN pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    CTEI            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    CTEF            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    CTEC            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    ID              reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MEAN            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MODE            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MEDIAN          reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    VARIANCE        reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MAX             reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MIN             reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    STADDES         reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    LINREG          reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    READ_FILE       reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)


state 270

    (131) pnSaveOperadorRel -> empty .

    LEFT_PARENT     reduce using rule 131 (pnSaveOperadorRel -> empty .)
    CTEI            reduce using rule 131 (pnSaveOperadorRel -> empty .)
    CTEF            reduce using rule 131 (pnSaveOperadorRel -> empty .)
    CTEC            reduce using rule 131 (pnSaveOperadorRel -> empty .)
    ID              reduce using rule 131 (pnSaveOperadorRel -> empty .)
    MEAN            reduce using rule 131 (pnSaveOperadorRel -> empty .)
    MODE            reduce using rule 131 (pnSaveOperadorRel -> empty .)
    MEDIAN          reduce using rule 131 (pnSaveOperadorRel -> empty .)
    VARIANCE        reduce using rule 131 (pnSaveOperadorRel -> empty .)
    MAX             reduce using rule 131 (pnSaveOperadorRel -> empty .)
    MIN             reduce using rule 131 (pnSaveOperadorRel -> empty .)
    STADDES         reduce using rule 131 (pnSaveOperadorRel -> empty .)
    BOXPLOT         reduce using rule 131 (pnSaveOperadorRel -> empty .)
    LINREG          reduce using rule 131 (pnSaveOperadorRel -> empty .)
    READ_FILE       reduce using rule 131 (pnSaveOperadorRel -> empty .)


state 271

    (71) relsig -> GREATER_THAN pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    CTEI            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    CTEF            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    CTEC            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    ID              reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MEAN            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MODE            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MEDIAN          reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    VARIANCE        reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MAX             reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MIN             reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    STADDES         reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    LINREG          reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    READ_FILE       reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)


state 272

    (72) relsig -> EQUALS pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    CTEI            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    CTEF            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    CTEC            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    ID              reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MEAN            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MODE            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MEDIAN          reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    VARIANCE        reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MAX             reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MIN             reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    STADDES         reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    LINREG          reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    READ_FILE       reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)


state 273

    (73) relsig -> NOTEQUALS pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    CTEI            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    CTEF            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    CTEC            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    ID              reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MEAN            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MODE            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MEDIAN          reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    VARIANCE        reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MAX             reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MIN             reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    STADDES         reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    LINREG          reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    READ_FILE       reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)


state 274

    (75) tp -> tsig t . pnCuadPlMi tp
    (133) pnCuadPlMi -> . empty
    (147) empty -> .

    PLUS            reduce using rule 147 (empty -> .)
    MINUS           reduce using rule 147 (empty -> .)
    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnCuadPlMi                     shift and go to state 307
    empty                          shift and go to state 167

state 275

    (77) tsig -> PLUS pnSaveOperadorPlMi .

    LEFT_PARENT     reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    CTEI            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    CTEF            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    CTEC            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    ID              reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MEAN            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MODE            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MEDIAN          reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    VARIANCE        reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MAX             reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MIN             reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    STADDES         reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    BOXPLOT         reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    LINREG          reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    READ_FILE       reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)


state 276

    (129) pnSaveOperadorPlMi -> empty .

    LEFT_PARENT     reduce using rule 129 (pnSaveOperadorPlMi -> empty .)
    CTEI            reduce using rule 129 (pnSaveOperadorPlMi -> empty .)
    CTEF            reduce using rule 129 (pnSaveOperadorPlMi -> empty .)
    CTEC            reduce using rule 129 (pnSaveOperadorPlMi -> empty .)
    ID              reduce using rule 129 (pnSaveOperadorPlMi -> empty .)
    MEAN            reduce using rule 129 (pnSaveOperadorPlMi -> empty .)
    MODE            reduce using rule 129 (pnSaveOperadorPlMi -> empty .)
    MEDIAN          reduce using rule 129 (pnSaveOperadorPlMi -> empty .)
    VARIANCE        reduce using rule 129 (pnSaveOperadorPlMi -> empty .)
    MAX             reduce using rule 129 (pnSaveOperadorPlMi -> empty .)
    MIN             reduce using rule 129 (pnSaveOperadorPlMi -> empty .)
    STADDES         reduce using rule 129 (pnSaveOperadorPlMi -> empty .)
    BOXPLOT         reduce using rule 129 (pnSaveOperadorPlMi -> empty .)
    LINREG          reduce using rule 129 (pnSaveOperadorPlMi -> empty .)
    READ_FILE       reduce using rule 129 (pnSaveOperadorPlMi -> empty .)


state 277

    (78) tsig -> MINUS pnSaveOperadorPlMi .

    LEFT_PARENT     reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    CTEI            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    CTEF            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    CTEC            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    ID              reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MEAN            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MODE            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MEDIAN          reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    VARIANCE        reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MAX             reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MIN             reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    STADDES         reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    BOXPLOT         reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    LINREG          reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    READ_FILE       reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)


state 278

    (80) fp -> fsig f . pnCuadMuDi fp
    (134) pnCuadMuDi -> . empty
    (147) empty -> .

    MULT            reduce using rule 147 (empty -> .)
    DIV             reduce using rule 147 (empty -> .)
    PLUS            reduce using rule 147 (empty -> .)
    MINUS           reduce using rule 147 (empty -> .)
    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    pnCuadMuDi                     shift and go to state 308
    empty                          shift and go to state 169

state 279

    (82) fsig -> MULT pnSaveOperadorMuDi .

    LEFT_PARENT     reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    CTEI            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    CTEF            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    CTEC            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    ID              reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MEAN            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MODE            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MEDIAN          reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    VARIANCE        reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MAX             reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MIN             reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    STADDES         reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    BOXPLOT         reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    LINREG          reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    READ_FILE       reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)


state 280

    (130) pnSaveOperadorMuDi -> empty .

    LEFT_PARENT     reduce using rule 130 (pnSaveOperadorMuDi -> empty .)
    CTEI            reduce using rule 130 (pnSaveOperadorMuDi -> empty .)
    CTEF            reduce using rule 130 (pnSaveOperadorMuDi -> empty .)
    CTEC            reduce using rule 130 (pnSaveOperadorMuDi -> empty .)
    ID              reduce using rule 130 (pnSaveOperadorMuDi -> empty .)
    MEAN            reduce using rule 130 (pnSaveOperadorMuDi -> empty .)
    MODE            reduce using rule 130 (pnSaveOperadorMuDi -> empty .)
    MEDIAN          reduce using rule 130 (pnSaveOperadorMuDi -> empty .)
    VARIANCE        reduce using rule 130 (pnSaveOperadorMuDi -> empty .)
    MAX             reduce using rule 130 (pnSaveOperadorMuDi -> empty .)
    MIN             reduce using rule 130 (pnSaveOperadorMuDi -> empty .)
    STADDES         reduce using rule 130 (pnSaveOperadorMuDi -> empty .)
    BOXPLOT         reduce using rule 130 (pnSaveOperadorMuDi -> empty .)
    LINREG          reduce using rule 130 (pnSaveOperadorMuDi -> empty .)
    READ_FILE       reduce using rule 130 (pnSaveOperadorMuDi -> empty .)


state 281

    (83) fsig -> DIV pnSaveOperadorMuDi .

    LEFT_PARENT     reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    CTEI            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    CTEF            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    CTEC            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    ID              reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MEAN            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MODE            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MEDIAN          reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    VARIANCE        reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MAX             reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MIN             reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    STADDES         reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    BOXPLOT         reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    LINREG          reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    READ_FILE       reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)


state 282

    (14) copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 309


state 283

    (144) pnCuadCopy -> empty .

    RIGHT_PARENT    reduce using rule 144 (pnCuadCopy -> empty .)


state 284

    (106) mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 310


state 285

    (146) pnCuadFuncEsp -> empty .

    RIGHT_PARENT    reduce using rule 146 (pnCuadFuncEsp -> empty .)


state 286

    (107) mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 311


state 287

    (108) median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 312


state 288

    (109) variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 313


state 289

    (110) max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 314


state 290

    (111) min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 315


state 291

    (112) staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 316


state 292

    (113) boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 317


state 293

    (114) linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 318


state 294

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET . varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (147) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 147 (empty -> .)
    READ            reduce using rule 147 (empty -> .)
    WRITE           reduce using rule 147 (empty -> .)
    IF              reduce using rule 147 (empty -> .)
    WHILE           reduce using rule 147 (empty -> .)
    FOR             reduce using rule 147 (empty -> .)
    RETURNS         reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 147 (empty -> .)

    varp                           shift and go to state 319
    var                            shift and go to state 10
    empty                          shift and go to state 11

state 295

    (41) paramlist -> tipoparam ARROW ID . pnAddParametersTablaVar paramlistp
    (121) pnAddParametersTablaVar -> . empty
    (147) empty -> .

    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    pnAddParametersTablaVar        shift and go to state 320
    empty                          shift and go to state 321

state 296

    (56) asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .

    ID              reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    READ            reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    WRITE           reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    IF              reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    WHILE           reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    FOR             reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    RETURNS         reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    READ_FILE       reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MEAN            reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MODE            reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MEDIAN          reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    VARIANCE        reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MAX             reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MIN             reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    STADDES         reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    BOXPLOT         reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    LINREG          reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    LEFT_PARENT     reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    CTEI            reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    CTEF            reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    CTEC            reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)


state 297

    (24) exppp -> COMMA exp exppp .

    RIGHT_PARENT    reduce using rule 24 (exppp -> COMMA exp exppp .)


state 298

    (17) indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .

    ASIGN           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    MULT            reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    DIV             reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    PLUS            reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    MINUS           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    LESS_THAN       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    GREATER_THAN    reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    EQUALS          reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    NOTEQUALS       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    AND             reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    OR              reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    SEMICOLON       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    COMMA           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    RIGHT_PARENT    reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    RIGHT_SQR_BRACKET reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)


state 299

    (19) indexpp -> COMMA exp .

    RIGHT_SQR_BRACKET reduce using rule 19 (indexpp -> COMMA exp .)


state 300

    (57) lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 322


state 301

    (58) escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 58 (escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)


state 302

    (91) condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET falsop
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (147) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (57) lee -> . READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (94) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (95) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 147 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatutop                      shift and go to state 323
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 303

    (94) ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET

    RIGHT_CUR_BRACKET shift and go to state 324


state 304

    (95) ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (147) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (57) lee -> . READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (94) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (95) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 147 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    asign                          shift and go to state 61
    estatutop                      shift and go to state 325
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 305

    (63) logic -> logicsig exprel pnCuadOplog . logic
    (63) logic -> . logicsig exprel pnCuadOplog logic
    (64) logic -> . empty
    (65) logicsig -> . AND pnSaveOperadorLog
    (66) logicsig -> . OR pnSaveOperadorLog
    (147) empty -> .

    AND             shift and go to state 210
    OR              shift and go to state 211
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    logicsig                       shift and go to state 208
    logic                          shift and go to state 326
    empty                          shift and go to state 209

state 306

    (68) relacionalp -> relsig e pnCuadOpRelacional . relacionalp
    (68) relacionalp -> . relsig e pnCuadOpRelacional relacionalp
    (69) relacionalp -> . empty
    (70) relsig -> . LESS_THAN pnSaveOperadorRel
    (71) relsig -> . GREATER_THAN pnSaveOperadorRel
    (72) relsig -> . EQUALS pnSaveOperadorRel
    (73) relsig -> . NOTEQUALS pnSaveOperadorRel
    (147) empty -> .

    LESS_THAN       shift and go to state 215
    GREATER_THAN    shift and go to state 216
    EQUALS          shift and go to state 217
    NOTEQUALS       shift and go to state 218
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    relsig                         shift and go to state 213
    relacionalp                    shift and go to state 327
    empty                          shift and go to state 214

state 307

    (75) tp -> tsig t pnCuadPlMi . tp
    (75) tp -> . tsig t pnCuadPlMi tp
    (76) tp -> . empty
    (77) tsig -> . PLUS pnSaveOperadorPlMi
    (78) tsig -> . MINUS pnSaveOperadorPlMi
    (147) empty -> .

    PLUS            shift and go to state 222
    MINUS           shift and go to state 223
    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    tsig                           shift and go to state 220
    tp                             shift and go to state 328
    empty                          shift and go to state 221

state 308

    (80) fp -> fsig f pnCuadMuDi . fp
    (80) fp -> . fsig f pnCuadMuDi fp
    (81) fp -> . empty
    (82) fsig -> . MULT pnSaveOperadorMuDi
    (83) fsig -> . DIV pnSaveOperadorMuDi
    (147) empty -> .

    MULT            shift and go to state 227
    DIV             shift and go to state 228
    PLUS            reduce using rule 147 (empty -> .)
    MINUS           reduce using rule 147 (empty -> .)
    LESS_THAN       reduce using rule 147 (empty -> .)
    GREATER_THAN    reduce using rule 147 (empty -> .)
    EQUALS          reduce using rule 147 (empty -> .)
    NOTEQUALS       reduce using rule 147 (empty -> .)
    AND             reduce using rule 147 (empty -> .)
    OR              reduce using rule 147 (empty -> .)
    SEMICOLON       reduce using rule 147 (empty -> .)
    COMMA           reduce using rule 147 (empty -> .)
    RIGHT_PARENT    reduce using rule 147 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 147 (empty -> .)

    fsig                           shift and go to state 225
    fp                             shift and go to state 329
    empty                          shift and go to state 226

state 309

    (14) copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 330


state 310

    (106) mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 331


state 311

    (107) mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 332


state 312

    (108) median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 333


state 313

    (109) variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 334


state 314

    (110) max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 335


state 315

    (111) min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 336


state 316

    (112) staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 337


state 317

    (113) boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 338


state 318

    (114) linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 339


state 319

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp . estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (147) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (57) lee -> . READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (94) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (95) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 147 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatutop                      shift and go to state 340
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 320

    (41) paramlist -> tipoparam ARROW ID pnAddParametersTablaVar . paramlistp
    (44) paramlistp -> . COMMA paramlist
    (45) paramlistp -> . empty
    (147) empty -> .

    COMMA           shift and go to state 342
    RIGHT_PARENT    reduce using rule 147 (empty -> .)

    paramlistp                     shift and go to state 341
    empty                          shift and go to state 343

state 321

    (121) pnAddParametersTablaVar -> empty .

    COMMA           reduce using rule 121 (pnAddParametersTablaVar -> empty .)
    RIGHT_PARENT    reduce using rule 121 (pnAddParametersTablaVar -> empty .)


state 322

    (57) lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 57 (lee -> READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)


state 323

    (91) condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET falsop

    RIGHT_CUR_BRACKET shift and go to state 344


state 324

    (94) ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .

    ID              reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ            reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WRITE           reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    IF              reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WHILE           reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    FOR             reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RETURNS         reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ_FILE       reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEAN            reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MODE            reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEDIAN          reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    VARIANCE        reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MAX             reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MIN             reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    STADDES         reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    BOXPLOT         reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    LINREG          reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RIGHT_CUR_BRACKET reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)


state 325

    (95) ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET

    RIGHT_CUR_BRACKET shift and go to state 345


state 326

    (63) logic -> logicsig exprel pnCuadOplog logic .

    SEMICOLON       reduce using rule 63 (logic -> logicsig exprel pnCuadOplog logic .)
    COMMA           reduce using rule 63 (logic -> logicsig exprel pnCuadOplog logic .)
    RIGHT_PARENT    reduce using rule 63 (logic -> logicsig exprel pnCuadOplog logic .)
    RIGHT_SQR_BRACKET reduce using rule 63 (logic -> logicsig exprel pnCuadOplog logic .)


state 327

    (68) relacionalp -> relsig e pnCuadOpRelacional relacionalp .

    AND             reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    OR              reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    SEMICOLON       reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    COMMA           reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    RIGHT_PARENT    reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    RIGHT_SQR_BRACKET reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)


state 328

    (75) tp -> tsig t pnCuadPlMi tp .

    LESS_THAN       reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    GREATER_THAN    reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    EQUALS          reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    NOTEQUALS       reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    AND             reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    OR              reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    SEMICOLON       reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    COMMA           reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    RIGHT_PARENT    reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    RIGHT_SQR_BRACKET reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)


state 329

    (80) fp -> fsig f pnCuadMuDi fp .

    PLUS            reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    MINUS           reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    LESS_THAN       reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    GREATER_THAN    reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    EQUALS          reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    NOTEQUALS       reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    AND             reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    OR              reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    SEMICOLON       reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    COMMA           reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    RIGHT_PARENT    reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    RIGHT_SQR_BRACKET reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)


state 330

    (14) copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 14 (copy -> READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)


state 331

    (106) mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 106 (mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 332

    (107) mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 107 (mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 333

    (108) median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 108 (median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 334

    (109) variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 109 (variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 335

    (110) max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 110 (max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 336

    (111) min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 111 (min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 337

    (112) staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 112 (staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 338

    (113) boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 113 (boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 339

    (114) linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 114 (linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 340

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop . RIGHT_CUR_BRACKET pnCloseCurrentFunction

    RIGHT_CUR_BRACKET shift and go to state 346


state 341

    (41) paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp .

    RIGHT_PARENT    reduce using rule 41 (paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp .)


state 342

    (44) paramlistp -> COMMA . paramlist
    (41) paramlist -> . tipoparam ARROW ID pnAddParametersTablaVar paramlistp
    (42) tipoparam -> . tipo_simp
    (43) tipoparam -> . DATAFRAME pnSaveTypeVar
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    DATAFRAME       shift and go to state 192
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28

    paramlist                      shift and go to state 347
    tipoparam                      shift and go to state 190
    tipo_simp                      shift and go to state 191

state 343

    (45) paramlistp -> empty .

    RIGHT_PARENT    reduce using rule 45 (paramlistp -> empty .)


state 344

    (91) condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET . falsop
    (92) falsop -> . IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (93) falsop -> . empty
    (147) empty -> .

    IF_FALSE        shift and go to state 349
    ID              reduce using rule 147 (empty -> .)
    READ            reduce using rule 147 (empty -> .)
    WRITE           reduce using rule 147 (empty -> .)
    IF              reduce using rule 147 (empty -> .)
    WHILE           reduce using rule 147 (empty -> .)
    FOR             reduce using rule 147 (empty -> .)
    RETURNS         reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 147 (empty -> .)

    falsop                         shift and go to state 348
    empty                          shift and go to state 350

state 345

    (95) ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .

    ID              reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ            reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WRITE           reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    IF              reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WHILE           reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    FOR             reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RETURNS         reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ_FILE       reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEAN            reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MODE            reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEDIAN          reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    VARIANCE        reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MAX             reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MIN             reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    STADDES         reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    BOXPLOT         reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    LINREG          reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RIGHT_CUR_BRACKET reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)


state 346

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET . pnCloseCurrentFunction
    (122) pnCloseCurrentFunction -> . empty
    (147) empty -> .

    FUNC            reduce using rule 147 (empty -> .)
    DO              reduce using rule 147 (empty -> .)
    ID              reduce using rule 147 (empty -> .)
    READ            reduce using rule 147 (empty -> .)
    WRITE           reduce using rule 147 (empty -> .)
    IF              reduce using rule 147 (empty -> .)
    WHILE           reduce using rule 147 (empty -> .)
    FOR             reduce using rule 147 (empty -> .)
    RETURNS         reduce using rule 147 (empty -> .)
    READ_FILE       reduce using rule 147 (empty -> .)
    MEAN            reduce using rule 147 (empty -> .)
    MODE            reduce using rule 147 (empty -> .)
    MEDIAN          reduce using rule 147 (empty -> .)
    VARIANCE        reduce using rule 147 (empty -> .)
    MAX             reduce using rule 147 (empty -> .)
    MIN             reduce using rule 147 (empty -> .)
    STADDES         reduce using rule 147 (empty -> .)
    BOXPLOT         reduce using rule 147 (empty -> .)
    LINREG          reduce using rule 147 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 147 (empty -> .)

    pnCloseCurrentFunction         shift and go to state 351
    empty                          shift and go to state 352

state 347

    (44) paramlistp -> COMMA paramlist .

    RIGHT_PARENT    reduce using rule 44 (paramlistp -> COMMA paramlist .)


state 348

    (91) condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .

    ID              reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    READ            reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    WRITE           reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    IF              reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    WHILE           reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    FOR             reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    RETURNS         reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    READ_FILE       reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    MEAN            reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    MODE            reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    MEDIAN          reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    VARIANCE        reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    MAX             reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    MIN             reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    STADDES         reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    BOXPLOT         reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    LINREG          reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    RIGHT_CUR_BRACKET reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)


state 349

    (92) falsop -> IF_FALSE . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_CUR_BRACKET shift and go to state 353


state 350

    (93) falsop -> empty .

    ID              reduce using rule 93 (falsop -> empty .)
    READ            reduce using rule 93 (falsop -> empty .)
    WRITE           reduce using rule 93 (falsop -> empty .)
    IF              reduce using rule 93 (falsop -> empty .)
    WHILE           reduce using rule 93 (falsop -> empty .)
    FOR             reduce using rule 93 (falsop -> empty .)
    RETURNS         reduce using rule 93 (falsop -> empty .)
    READ_FILE       reduce using rule 93 (falsop -> empty .)
    MEAN            reduce using rule 93 (falsop -> empty .)
    MODE            reduce using rule 93 (falsop -> empty .)
    MEDIAN          reduce using rule 93 (falsop -> empty .)
    VARIANCE        reduce using rule 93 (falsop -> empty .)
    MAX             reduce using rule 93 (falsop -> empty .)
    MIN             reduce using rule 93 (falsop -> empty .)
    STADDES         reduce using rule 93 (falsop -> empty .)
    BOXPLOT         reduce using rule 93 (falsop -> empty .)
    LINREG          reduce using rule 93 (falsop -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 93 (falsop -> empty .)


state 351

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .

    FUNC            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    DO              reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    ID              reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    READ            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    WRITE           reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    IF              reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    WHILE           reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    FOR             reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    RETURNS         reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    READ_FILE       reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    MEAN            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    MODE            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    MEDIAN          reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    VARIANCE        reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    MAX             reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    MIN             reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    STADDES         reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    BOXPLOT         reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    LINREG          reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    RIGHT_CUR_BRACKET reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)


state 352

    (122) pnCloseCurrentFunction -> empty .

    FUNC            reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    DO              reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    ID              reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    READ            reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    WRITE           reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    IF              reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    WHILE           reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    FOR             reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    RETURNS         reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    READ_FILE       reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    MEAN            reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    MODE            reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    MEDIAN          reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    VARIANCE        reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    MAX             reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    MIN             reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    STADDES         reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    BOXPLOT         reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    LINREG          reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 122 (pnCloseCurrentFunction -> empty .)


state 353

    (92) falsop -> IF_FALSE LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (147) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (57) lee -> . READ pnSaveLeer LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (94) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (95) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE pnSaveCopy LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 147 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatutop                      shift and go to state 354
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 354

    (92) falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET

    RIGHT_CUR_BRACKET shift and go to state 355


state 355

    (92) falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .

    ID              reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ            reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WRITE           reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    IF              reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WHILE           reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    FOR             reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RETURNS         reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ_FILE       reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEAN            reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MODE            reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEDIAN          reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    VARIANCE        reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MAX             reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MIN             reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    STADDES         reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    BOXPLOT         reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    LINREG          reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RIGHT_CUR_BRACKET reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 70 resolved using rule (estatuto -> copy)
WARNING: rejected rule (funcesp -> copy) in state 70

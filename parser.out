Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> SCRIPT ID SEMICOLON varp funcp bloque
Rule 2     varp -> var varp
Rule 3     varp -> empty
Rule 4     funcp -> func funcp
Rule 5     funcp -> empty
Rule 6     bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET
Rule 7     estatutop -> estatuto estatutop
Rule 8     estatutop -> empty
Rule 9     tipo_simp -> INT
Rule 10    tipo_simp -> FLOAT
Rule 11    tipo_simp -> CHAR
Rule 12    tipo_comp -> DATAFRAME
Rule 13    tipo_comp -> file
Rule 14    copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON
Rule 15    file -> ID
Rule 16    variable -> ID indexp
Rule 17    indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET
Rule 18    indexp -> empty
Rule 19    indexpp -> COMMA exp
Rule 20    indexpp -> empty
Rule 21    llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
Rule 22    expp -> exp exppp
Rule 23    expp -> empty
Rule 24    exppp -> COMMA exp exppp
Rule 25    exppp -> empty
Rule 26    var -> VAR v ARROW idp SEMICOLON
Rule 27    v -> DATAFRAME
Rule 28    v -> tipo_simp vp
Rule 29    vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET
Rule 30    vp -> empty
Rule 31    vpp -> COMMA CTEI
Rule 32    vpp -> empty
Rule 33    idp -> ID idpp
Rule 34    idpp -> COMMA ID idpp
Rule 35    idpp -> empty
Rule 36    func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET
Rule 37    returnval -> tipo_simp
Rule 38    returnval -> VOID
Rule 39    param -> tipo_simp ARROW ID paramp
Rule 40    param -> empty
Rule 41    paramp -> COMMA param paramp
Rule 42    paramp -> empty
Rule 43    estatuto -> asign
Rule 44    estatuto -> llamada
Rule 45    estatuto -> lee
Rule 46    estatuto -> escribe
Rule 47    estatuto -> condicion
Rule 48    estatuto -> ciclow
Rule 49    estatuto -> ciclof
Rule 50    estatuto -> funcesp
Rule 51    estatuto -> return
Rule 52    estatuto -> copy
Rule 53    asign -> variable ASIGN exp SEMICOLON
Rule 54    lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 55    escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
Rule 56    escribep -> exp
Rule 57    escribep -> LETRERO
Rule 58    return -> RETURNS exp SEMICOLON
Rule 59    exp -> exprel logic
Rule 60    logic -> logicsig exprel logic
Rule 61    logic -> empty
Rule 62    logicsig -> AND
Rule 63    logicsig -> OR
Rule 64    exprel -> e relacionalp
Rule 65    relacionalp -> relsig e relacionalp
Rule 66    relacionalp -> empty
Rule 67    relsig -> LESS_THAN
Rule 68    relsig -> GREATER_THAN
Rule 69    relsig -> EQUALS
Rule 70    relsig -> NOTEQUALS
Rule 71    e -> t tp
Rule 72    tp -> tsig t tp
Rule 73    tp -> empty
Rule 74    tsig -> PLUS
Rule 75    tsig -> MINUS
Rule 76    t -> f fp
Rule 77    fp -> fsig f fp
Rule 78    fp -> empty
Rule 79    fsig -> MULT
Rule 80    fsig -> DIV
Rule 81    f -> LEFT_PARENT exp RIGHT_PARENT
Rule 82    f -> CTEI
Rule 83    f -> CTEF
Rule 84    f -> CTEC
Rule 85    f -> variable
Rule 86    f -> llamada
Rule 87    f -> funcesp
Rule 88    condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
Rule 89    falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
Rule 90    falsop -> empty
Rule 91    ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
Rule 92    ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
Rule 93    funcesp -> mean
Rule 94    funcesp -> mode
Rule 95    funcesp -> median
Rule 96    funcesp -> variance
Rule 97    funcesp -> max
Rule 98    funcesp -> min
Rule 99    funcesp -> staddes
Rule 100   funcesp -> boxplot
Rule 101   funcesp -> linreg
Rule 102   funcesp -> copy
Rule 103   mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 104   mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 105   median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 106   variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 107   max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 108   min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 109   staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 110   boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 111   linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 112   empty -> <empty>

Terminals, with rules where they appear

AND                  : 62
ARROW                : 26 36 39
ASIGN                : 53
BOXPLOT              : 110
CHAR                 : 11
COMMA                : 19 24 31 34 41
COMMENT              : 
CTEC                 : 84
CTEF                 : 83
CTEI                 : 29 31 82
DATAFRAME            : 12 27
DIV                  : 80
DO                   : 6
EQUALS               : 69
FLOAT                : 10
FOR                  : 92
FUNC                 : 36
GREATER_THAN         : 68
ID                   : 1 15 16 21 33 34 36 39
IF                   : 88
IF_FALSE             : 89
IF_TRUE              : 88
INT                  : 9
LEFT_CUR_BRACKET     : 6 36 88 89 91 92
LEFT_PARENT          : 14 21 36 54 55 81 88 91 92 103 104 105 106 107 108 109 110 111
LEFT_SQR_BRACKET     : 17 29
LESS_THAN            : 67
LETRERO              : 14 57
LINREG               : 111
MAX                  : 107
MEAN                 : 103
MEDIAN               : 105
MIN                  : 108
MINUS                : 75
MODE                 : 104
MULT                 : 79
NOTEQUALS            : 70
OR                   : 63
PLUS                 : 74
READ                 : 54
READ_FILE            : 14
RETURNS              : 58
RIGHT_CUR_BRACKET    : 6 36 88 89 91 92
RIGHT_PARENT         : 14 21 36 54 55 81 88 91 92 103 104 105 106 107 108 109 110 111
RIGHT_SQR_BRACKET    : 17 29
SCRIPT               : 1
SEMICOLON            : 1 14 21 26 53 54 55 58 103 104 105 106 107 108 109 110 111
STADDES              : 109
VAR                  : 26
VARIANCE             : 106
VOID                 : 38
WHILE                : 91
WRITE                : 55
error                : 

Nonterminals, with rules where they appear

asign                : 43 92
bloque               : 1
boxplot              : 100
ciclof               : 49
ciclow               : 48
condicion            : 47
copy                 : 52 102
e                    : 64 65
empty                : 3 5 8 18 20 23 25 30 32 35 40 42 61 66 73 78 90
escribe              : 46
escribep             : 55
estatuto             : 7
estatutop            : 6 7 36 88 89 91 92
exp                  : 17 19 22 24 53 56 58 81 88 91 92
expp                 : 21
exppp                : 22 24
exprel               : 59 60
f                    : 76 77
falsop               : 88
file                 : 13
fp                   : 76 77
fsig                 : 77
func                 : 4
funcesp              : 50 87
funcp                : 1 4 6
idp                  : 26
idpp                 : 33 34
indexp               : 16
indexpp              : 17
lee                  : 45
linreg               : 101
llamada              : 44 86
logic                : 59 60
logicsig             : 60
max                  : 97
mean                 : 93
median               : 95
min                  : 98
mode                 : 94
param                : 36 41
paramp               : 39 41
programa             : 0
relacionalp          : 64 65
relsig               : 65
return               : 51
returnval            : 36
staddes              : 99
t                    : 71 72
tipo_comp            : 
tipo_simp            : 28 37 39
tp                   : 71 72
tsig                 : 72
v                    : 26
var                  : 2
variable             : 53 54 85 103 104 105 106 107 108 109 110 111
variance             : 96
varp                 : 1 2 6 36
vp                   : 28
vpp                  : 29

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . SCRIPT ID SEMICOLON varp funcp bloque

    SCRIPT          shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> SCRIPT . ID SEMICOLON varp funcp bloque

    ID              shift and go to state 3


state 3

    (1) programa -> SCRIPT ID . SEMICOLON varp funcp bloque

    SEMICOLON       shift and go to state 4


state 4

    (1) programa -> SCRIPT ID SEMICOLON . varp funcp bloque
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR v ARROW idp SEMICOLON
    (112) empty -> .

    VAR             shift and go to state 8
    FUNC            reduce using rule 112 (empty -> .)
    DO              reduce using rule 112 (empty -> .)

    varp                           shift and go to state 5
    var                            shift and go to state 6
    empty                          shift and go to state 7

state 5

    (1) programa -> SCRIPT ID SEMICOLON varp . funcp bloque
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET
    (112) empty -> .

    FUNC            shift and go to state 12
    DO              reduce using rule 112 (empty -> .)

    funcp                          shift and go to state 9
    func                           shift and go to state 10
    empty                          shift and go to state 11

state 6

    (2) varp -> var . varp
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR v ARROW idp SEMICOLON
    (112) empty -> .

    VAR             shift and go to state 8
    FUNC            reduce using rule 112 (empty -> .)
    DO              reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    READ            reduce using rule 112 (empty -> .)
    WRITE           reduce using rule 112 (empty -> .)
    IF              reduce using rule 112 (empty -> .)
    WHILE           reduce using rule 112 (empty -> .)
    FOR             reduce using rule 112 (empty -> .)
    RETURNS         reduce using rule 112 (empty -> .)
    READ_FILE       reduce using rule 112 (empty -> .)
    MEAN            reduce using rule 112 (empty -> .)
    MODE            reduce using rule 112 (empty -> .)
    MEDIAN          reduce using rule 112 (empty -> .)
    VARIANCE        reduce using rule 112 (empty -> .)
    MAX             reduce using rule 112 (empty -> .)
    MIN             reduce using rule 112 (empty -> .)
    STADDES         reduce using rule 112 (empty -> .)
    BOXPLOT         reduce using rule 112 (empty -> .)
    LINREG          reduce using rule 112 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 112 (empty -> .)

    var                            shift and go to state 6
    varp                           shift and go to state 13
    empty                          shift and go to state 7

state 7

    (3) varp -> empty .

    FUNC            reduce using rule 3 (varp -> empty .)
    DO              reduce using rule 3 (varp -> empty .)
    ID              reduce using rule 3 (varp -> empty .)
    READ            reduce using rule 3 (varp -> empty .)
    WRITE           reduce using rule 3 (varp -> empty .)
    IF              reduce using rule 3 (varp -> empty .)
    WHILE           reduce using rule 3 (varp -> empty .)
    FOR             reduce using rule 3 (varp -> empty .)
    RETURNS         reduce using rule 3 (varp -> empty .)
    READ_FILE       reduce using rule 3 (varp -> empty .)
    MEAN            reduce using rule 3 (varp -> empty .)
    MODE            reduce using rule 3 (varp -> empty .)
    MEDIAN          reduce using rule 3 (varp -> empty .)
    VARIANCE        reduce using rule 3 (varp -> empty .)
    MAX             reduce using rule 3 (varp -> empty .)
    MIN             reduce using rule 3 (varp -> empty .)
    STADDES         reduce using rule 3 (varp -> empty .)
    BOXPLOT         reduce using rule 3 (varp -> empty .)
    LINREG          reduce using rule 3 (varp -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 3 (varp -> empty .)


state 8

    (26) var -> VAR . v ARROW idp SEMICOLON
    (27) v -> . DATAFRAME
    (28) v -> . tipo_simp vp
    (9) tipo_simp -> . INT
    (10) tipo_simp -> . FLOAT
    (11) tipo_simp -> . CHAR

    DATAFRAME       shift and go to state 15
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    v                              shift and go to state 14
    tipo_simp                      shift and go to state 16

state 9

    (1) programa -> SCRIPT ID SEMICOLON varp funcp . bloque
    (6) bloque -> . DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET

    DO              shift and go to state 21

    bloque                         shift and go to state 20

state 10

    (4) funcp -> func . funcp
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET
    (112) empty -> .

    FUNC            shift and go to state 12
    DO              reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    READ            reduce using rule 112 (empty -> .)
    WRITE           reduce using rule 112 (empty -> .)
    IF              reduce using rule 112 (empty -> .)
    WHILE           reduce using rule 112 (empty -> .)
    FOR             reduce using rule 112 (empty -> .)
    RETURNS         reduce using rule 112 (empty -> .)
    READ_FILE       reduce using rule 112 (empty -> .)
    MEAN            reduce using rule 112 (empty -> .)
    MODE            reduce using rule 112 (empty -> .)
    MEDIAN          reduce using rule 112 (empty -> .)
    VARIANCE        reduce using rule 112 (empty -> .)
    MAX             reduce using rule 112 (empty -> .)
    MIN             reduce using rule 112 (empty -> .)
    STADDES         reduce using rule 112 (empty -> .)
    BOXPLOT         reduce using rule 112 (empty -> .)
    LINREG          reduce using rule 112 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 112 (empty -> .)

    func                           shift and go to state 10
    funcp                          shift and go to state 22
    empty                          shift and go to state 11

state 11

    (5) funcp -> empty .

    DO              reduce using rule 5 (funcp -> empty .)
    ID              reduce using rule 5 (funcp -> empty .)
    READ            reduce using rule 5 (funcp -> empty .)
    WRITE           reduce using rule 5 (funcp -> empty .)
    IF              reduce using rule 5 (funcp -> empty .)
    WHILE           reduce using rule 5 (funcp -> empty .)
    FOR             reduce using rule 5 (funcp -> empty .)
    RETURNS         reduce using rule 5 (funcp -> empty .)
    READ_FILE       reduce using rule 5 (funcp -> empty .)
    MEAN            reduce using rule 5 (funcp -> empty .)
    MODE            reduce using rule 5 (funcp -> empty .)
    MEDIAN          reduce using rule 5 (funcp -> empty .)
    VARIANCE        reduce using rule 5 (funcp -> empty .)
    MAX             reduce using rule 5 (funcp -> empty .)
    MIN             reduce using rule 5 (funcp -> empty .)
    STADDES         reduce using rule 5 (funcp -> empty .)
    BOXPLOT         reduce using rule 5 (funcp -> empty .)
    LINREG          reduce using rule 5 (funcp -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 5 (funcp -> empty .)


state 12

    (36) func -> FUNC . returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET
    (37) returnval -> . tipo_simp
    (38) returnval -> . VOID
    (9) tipo_simp -> . INT
    (10) tipo_simp -> . FLOAT
    (11) tipo_simp -> . CHAR

    VOID            shift and go to state 25
    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19

    returnval                      shift and go to state 23
    tipo_simp                      shift and go to state 24

state 13

    (2) varp -> var varp .

    FUNC            reduce using rule 2 (varp -> var varp .)
    DO              reduce using rule 2 (varp -> var varp .)
    ID              reduce using rule 2 (varp -> var varp .)
    READ            reduce using rule 2 (varp -> var varp .)
    WRITE           reduce using rule 2 (varp -> var varp .)
    IF              reduce using rule 2 (varp -> var varp .)
    WHILE           reduce using rule 2 (varp -> var varp .)
    FOR             reduce using rule 2 (varp -> var varp .)
    RETURNS         reduce using rule 2 (varp -> var varp .)
    READ_FILE       reduce using rule 2 (varp -> var varp .)
    MEAN            reduce using rule 2 (varp -> var varp .)
    MODE            reduce using rule 2 (varp -> var varp .)
    MEDIAN          reduce using rule 2 (varp -> var varp .)
    VARIANCE        reduce using rule 2 (varp -> var varp .)
    MAX             reduce using rule 2 (varp -> var varp .)
    MIN             reduce using rule 2 (varp -> var varp .)
    STADDES         reduce using rule 2 (varp -> var varp .)
    BOXPLOT         reduce using rule 2 (varp -> var varp .)
    LINREG          reduce using rule 2 (varp -> var varp .)
    RIGHT_CUR_BRACKET reduce using rule 2 (varp -> var varp .)


state 14

    (26) var -> VAR v . ARROW idp SEMICOLON

    ARROW           shift and go to state 26


state 15

    (27) v -> DATAFRAME .

    ARROW           reduce using rule 27 (v -> DATAFRAME .)


state 16

    (28) v -> tipo_simp . vp
    (29) vp -> . LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET
    (30) vp -> . empty
    (112) empty -> .

    LEFT_SQR_BRACKET shift and go to state 28
    ARROW           reduce using rule 112 (empty -> .)

    vp                             shift and go to state 27
    empty                          shift and go to state 29

state 17

    (9) tipo_simp -> INT .

    LEFT_SQR_BRACKET reduce using rule 9 (tipo_simp -> INT .)
    ARROW           reduce using rule 9 (tipo_simp -> INT .)


state 18

    (10) tipo_simp -> FLOAT .

    LEFT_SQR_BRACKET reduce using rule 10 (tipo_simp -> FLOAT .)
    ARROW           reduce using rule 10 (tipo_simp -> FLOAT .)


state 19

    (11) tipo_simp -> CHAR .

    LEFT_SQR_BRACKET reduce using rule 11 (tipo_simp -> CHAR .)
    ARROW           reduce using rule 11 (tipo_simp -> CHAR .)


state 20

    (1) programa -> SCRIPT ID SEMICOLON varp funcp bloque .

    $end            reduce using rule 1 (programa -> SCRIPT ID SEMICOLON varp funcp bloque .)


state 21

    (6) bloque -> DO . LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET

    LEFT_CUR_BRACKET shift and go to state 30


state 22

    (4) funcp -> func funcp .

    DO              reduce using rule 4 (funcp -> func funcp .)
    ID              reduce using rule 4 (funcp -> func funcp .)
    READ            reduce using rule 4 (funcp -> func funcp .)
    WRITE           reduce using rule 4 (funcp -> func funcp .)
    IF              reduce using rule 4 (funcp -> func funcp .)
    WHILE           reduce using rule 4 (funcp -> func funcp .)
    FOR             reduce using rule 4 (funcp -> func funcp .)
    RETURNS         reduce using rule 4 (funcp -> func funcp .)
    READ_FILE       reduce using rule 4 (funcp -> func funcp .)
    MEAN            reduce using rule 4 (funcp -> func funcp .)
    MODE            reduce using rule 4 (funcp -> func funcp .)
    MEDIAN          reduce using rule 4 (funcp -> func funcp .)
    VARIANCE        reduce using rule 4 (funcp -> func funcp .)
    MAX             reduce using rule 4 (funcp -> func funcp .)
    MIN             reduce using rule 4 (funcp -> func funcp .)
    STADDES         reduce using rule 4 (funcp -> func funcp .)
    BOXPLOT         reduce using rule 4 (funcp -> func funcp .)
    LINREG          reduce using rule 4 (funcp -> func funcp .)
    RIGHT_CUR_BRACKET reduce using rule 4 (funcp -> func funcp .)


state 23

    (36) func -> FUNC returnval . ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET

    ARROW           shift and go to state 31


state 24

    (37) returnval -> tipo_simp .

    ARROW           reduce using rule 37 (returnval -> tipo_simp .)


state 25

    (38) returnval -> VOID .

    ARROW           reduce using rule 38 (returnval -> VOID .)


state 26

    (26) var -> VAR v ARROW . idp SEMICOLON
    (33) idp -> . ID idpp

    ID              shift and go to state 33

    idp                            shift and go to state 32

state 27

    (28) v -> tipo_simp vp .

    ARROW           reduce using rule 28 (v -> tipo_simp vp .)


state 28

    (29) vp -> LEFT_SQR_BRACKET . CTEI vpp RIGHT_SQR_BRACKET

    CTEI            shift and go to state 34


state 29

    (30) vp -> empty .

    ARROW           reduce using rule 30 (vp -> empty .)


state 30

    (6) bloque -> DO LEFT_CUR_BRACKET . varp funcp estatutop RIGHT_CUR_BRACKET
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR v ARROW idp SEMICOLON
    (112) empty -> .

    VAR             shift and go to state 8
    FUNC            reduce using rule 112 (empty -> .)
    ID              reduce using rule 112 (empty -> .)
    READ            reduce using rule 112 (empty -> .)
    WRITE           reduce using rule 112 (empty -> .)
    IF              reduce using rule 112 (empty -> .)
    WHILE           reduce using rule 112 (empty -> .)
    FOR             reduce using rule 112 (empty -> .)
    RETURNS         reduce using rule 112 (empty -> .)
    READ_FILE       reduce using rule 112 (empty -> .)
    MEAN            reduce using rule 112 (empty -> .)
    MODE            reduce using rule 112 (empty -> .)
    MEDIAN          reduce using rule 112 (empty -> .)
    VARIANCE        reduce using rule 112 (empty -> .)
    MAX             reduce using rule 112 (empty -> .)
    MIN             reduce using rule 112 (empty -> .)
    STADDES         reduce using rule 112 (empty -> .)
    BOXPLOT         reduce using rule 112 (empty -> .)
    LINREG          reduce using rule 112 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 112 (empty -> .)

    varp                           shift and go to state 35
    var                            shift and go to state 6
    empty                          shift and go to state 7

state 31

    (36) func -> FUNC returnval ARROW . ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET

    ID              shift and go to state 36


state 32

    (26) var -> VAR v ARROW idp . SEMICOLON

    SEMICOLON       shift and go to state 37


state 33

    (33) idp -> ID . idpp
    (34) idpp -> . COMMA ID idpp
    (35) idpp -> . empty
    (112) empty -> .

    COMMA           shift and go to state 39
    SEMICOLON       reduce using rule 112 (empty -> .)

    idpp                           shift and go to state 38
    empty                          shift and go to state 40

state 34

    (29) vp -> LEFT_SQR_BRACKET CTEI . vpp RIGHT_SQR_BRACKET
    (31) vpp -> . COMMA CTEI
    (32) vpp -> . empty
    (112) empty -> .

    COMMA           shift and go to state 42
    RIGHT_SQR_BRACKET reduce using rule 112 (empty -> .)

    vpp                            shift and go to state 41
    empty                          shift and go to state 43

state 35

    (6) bloque -> DO LEFT_CUR_BRACKET varp . funcp estatutop RIGHT_CUR_BRACKET
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET
    (112) empty -> .

    FUNC            shift and go to state 12
    ID              reduce using rule 112 (empty -> .)
    READ            reduce using rule 112 (empty -> .)
    WRITE           reduce using rule 112 (empty -> .)
    IF              reduce using rule 112 (empty -> .)
    WHILE           reduce using rule 112 (empty -> .)
    FOR             reduce using rule 112 (empty -> .)
    RETURNS         reduce using rule 112 (empty -> .)
    READ_FILE       reduce using rule 112 (empty -> .)
    MEAN            reduce using rule 112 (empty -> .)
    MODE            reduce using rule 112 (empty -> .)
    MEDIAN          reduce using rule 112 (empty -> .)
    VARIANCE        reduce using rule 112 (empty -> .)
    MAX             reduce using rule 112 (empty -> .)
    MIN             reduce using rule 112 (empty -> .)
    STADDES         reduce using rule 112 (empty -> .)
    BOXPLOT         reduce using rule 112 (empty -> .)
    LINREG          reduce using rule 112 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 112 (empty -> .)

    funcp                          shift and go to state 44
    func                           shift and go to state 10
    empty                          shift and go to state 11

state 36

    (36) func -> FUNC returnval ARROW ID . LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET

    LEFT_PARENT     shift and go to state 45


state 37

    (26) var -> VAR v ARROW idp SEMICOLON .

    VAR             reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    FUNC            reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    DO              reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    ID              reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    READ            reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    WRITE           reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    IF              reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    WHILE           reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    FOR             reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    RETURNS         reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    READ_FILE       reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    MEAN            reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    MODE            reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    MEDIAN          reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    VARIANCE        reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    MAX             reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    MIN             reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    STADDES         reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    BOXPLOT         reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    LINREG          reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 26 (var -> VAR v ARROW idp SEMICOLON .)


state 38

    (33) idp -> ID idpp .

    SEMICOLON       reduce using rule 33 (idp -> ID idpp .)


state 39

    (34) idpp -> COMMA . ID idpp

    ID              shift and go to state 46


state 40

    (35) idpp -> empty .

    SEMICOLON       reduce using rule 35 (idpp -> empty .)


state 41

    (29) vp -> LEFT_SQR_BRACKET CTEI vpp . RIGHT_SQR_BRACKET

    RIGHT_SQR_BRACKET shift and go to state 47


state 42

    (31) vpp -> COMMA . CTEI

    CTEI            shift and go to state 48


state 43

    (32) vpp -> empty .

    RIGHT_SQR_BRACKET reduce using rule 32 (vpp -> empty .)


state 44

    (6) bloque -> DO LEFT_CUR_BRACKET varp funcp . estatutop RIGHT_CUR_BRACKET
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (43) estatuto -> . asign
    (44) estatuto -> . llamada
    (45) estatuto -> . lee
    (46) estatuto -> . escribe
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclow
    (49) estatuto -> . ciclof
    (50) estatuto -> . funcesp
    (51) estatuto -> . return
    (52) estatuto -> . copy
    (112) empty -> .
    (53) asign -> . variable ASIGN exp SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (54) lee -> . READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (55) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (88) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (91) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (92) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (58) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 112 (empty -> .)
    ID              shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 67
    FOR             shift and go to state 68
    RETURNS         shift and go to state 78
    READ_FILE       shift and go to state 79
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88

    estatutop                      shift and go to state 49
    estatuto                       shift and go to state 50
    empty                          shift and go to state 51
    asign                          shift and go to state 52
    llamada                        shift and go to state 53
    lee                            shift and go to state 54
    escribe                        shift and go to state 55
    condicion                      shift and go to state 56
    ciclow                         shift and go to state 57
    ciclof                         shift and go to state 58
    funcesp                        shift and go to state 59
    return                         shift and go to state 60
    copy                           shift and go to state 61
    variable                       shift and go to state 62
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77

state 45

    (36) func -> FUNC returnval ARROW ID LEFT_PARENT . param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET
    (39) param -> . tipo_simp ARROW ID paramp
    (40) param -> . empty
    (9) tipo_simp -> . INT
    (10) tipo_simp -> . FLOAT
    (11) tipo_simp -> . CHAR
    (112) empty -> .

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19
    RIGHT_PARENT    reduce using rule 112 (empty -> .)

    param                          shift and go to state 89
    tipo_simp                      shift and go to state 90
    empty                          shift and go to state 91

state 46

    (34) idpp -> COMMA ID . idpp
    (34) idpp -> . COMMA ID idpp
    (35) idpp -> . empty
    (112) empty -> .

    COMMA           shift and go to state 39
    SEMICOLON       reduce using rule 112 (empty -> .)

    idpp                           shift and go to state 92
    empty                          shift and go to state 40

state 47

    (29) vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET .

    ARROW           reduce using rule 29 (vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET .)


state 48

    (31) vpp -> COMMA CTEI .

    RIGHT_SQR_BRACKET reduce using rule 31 (vpp -> COMMA CTEI .)


state 49

    (6) bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop . RIGHT_CUR_BRACKET

    RIGHT_CUR_BRACKET shift and go to state 93


state 50

    (7) estatutop -> estatuto . estatutop
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (43) estatuto -> . asign
    (44) estatuto -> . llamada
    (45) estatuto -> . lee
    (46) estatuto -> . escribe
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclow
    (49) estatuto -> . ciclof
    (50) estatuto -> . funcesp
    (51) estatuto -> . return
    (52) estatuto -> . copy
    (112) empty -> .
    (53) asign -> . variable ASIGN exp SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (54) lee -> . READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (55) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (88) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (91) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (92) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (58) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 112 (empty -> .)
    ID              shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 67
    FOR             shift and go to state 68
    RETURNS         shift and go to state 78
    READ_FILE       shift and go to state 79
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88

    estatuto                       shift and go to state 50
    estatutop                      shift and go to state 94
    empty                          shift and go to state 51
    asign                          shift and go to state 52
    llamada                        shift and go to state 53
    lee                            shift and go to state 54
    escribe                        shift and go to state 55
    condicion                      shift and go to state 56
    ciclow                         shift and go to state 57
    ciclof                         shift and go to state 58
    funcesp                        shift and go to state 59
    return                         shift and go to state 60
    copy                           shift and go to state 61
    variable                       shift and go to state 62
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77

state 51

    (8) estatutop -> empty .

    RIGHT_CUR_BRACKET reduce using rule 8 (estatutop -> empty .)


state 52

    (43) estatuto -> asign .

    ID              reduce using rule 43 (estatuto -> asign .)
    READ            reduce using rule 43 (estatuto -> asign .)
    WRITE           reduce using rule 43 (estatuto -> asign .)
    IF              reduce using rule 43 (estatuto -> asign .)
    WHILE           reduce using rule 43 (estatuto -> asign .)
    FOR             reduce using rule 43 (estatuto -> asign .)
    RETURNS         reduce using rule 43 (estatuto -> asign .)
    READ_FILE       reduce using rule 43 (estatuto -> asign .)
    MEAN            reduce using rule 43 (estatuto -> asign .)
    MODE            reduce using rule 43 (estatuto -> asign .)
    MEDIAN          reduce using rule 43 (estatuto -> asign .)
    VARIANCE        reduce using rule 43 (estatuto -> asign .)
    MAX             reduce using rule 43 (estatuto -> asign .)
    MIN             reduce using rule 43 (estatuto -> asign .)
    STADDES         reduce using rule 43 (estatuto -> asign .)
    BOXPLOT         reduce using rule 43 (estatuto -> asign .)
    LINREG          reduce using rule 43 (estatuto -> asign .)
    RIGHT_CUR_BRACKET reduce using rule 43 (estatuto -> asign .)


state 53

    (44) estatuto -> llamada .

    ID              reduce using rule 44 (estatuto -> llamada .)
    READ            reduce using rule 44 (estatuto -> llamada .)
    WRITE           reduce using rule 44 (estatuto -> llamada .)
    IF              reduce using rule 44 (estatuto -> llamada .)
    WHILE           reduce using rule 44 (estatuto -> llamada .)
    FOR             reduce using rule 44 (estatuto -> llamada .)
    RETURNS         reduce using rule 44 (estatuto -> llamada .)
    READ_FILE       reduce using rule 44 (estatuto -> llamada .)
    MEAN            reduce using rule 44 (estatuto -> llamada .)
    MODE            reduce using rule 44 (estatuto -> llamada .)
    MEDIAN          reduce using rule 44 (estatuto -> llamada .)
    VARIANCE        reduce using rule 44 (estatuto -> llamada .)
    MAX             reduce using rule 44 (estatuto -> llamada .)
    MIN             reduce using rule 44 (estatuto -> llamada .)
    STADDES         reduce using rule 44 (estatuto -> llamada .)
    BOXPLOT         reduce using rule 44 (estatuto -> llamada .)
    LINREG          reduce using rule 44 (estatuto -> llamada .)
    RIGHT_CUR_BRACKET reduce using rule 44 (estatuto -> llamada .)


state 54

    (45) estatuto -> lee .

    ID              reduce using rule 45 (estatuto -> lee .)
    READ            reduce using rule 45 (estatuto -> lee .)
    WRITE           reduce using rule 45 (estatuto -> lee .)
    IF              reduce using rule 45 (estatuto -> lee .)
    WHILE           reduce using rule 45 (estatuto -> lee .)
    FOR             reduce using rule 45 (estatuto -> lee .)
    RETURNS         reduce using rule 45 (estatuto -> lee .)
    READ_FILE       reduce using rule 45 (estatuto -> lee .)
    MEAN            reduce using rule 45 (estatuto -> lee .)
    MODE            reduce using rule 45 (estatuto -> lee .)
    MEDIAN          reduce using rule 45 (estatuto -> lee .)
    VARIANCE        reduce using rule 45 (estatuto -> lee .)
    MAX             reduce using rule 45 (estatuto -> lee .)
    MIN             reduce using rule 45 (estatuto -> lee .)
    STADDES         reduce using rule 45 (estatuto -> lee .)
    BOXPLOT         reduce using rule 45 (estatuto -> lee .)
    LINREG          reduce using rule 45 (estatuto -> lee .)
    RIGHT_CUR_BRACKET reduce using rule 45 (estatuto -> lee .)


state 55

    (46) estatuto -> escribe .

    ID              reduce using rule 46 (estatuto -> escribe .)
    READ            reduce using rule 46 (estatuto -> escribe .)
    WRITE           reduce using rule 46 (estatuto -> escribe .)
    IF              reduce using rule 46 (estatuto -> escribe .)
    WHILE           reduce using rule 46 (estatuto -> escribe .)
    FOR             reduce using rule 46 (estatuto -> escribe .)
    RETURNS         reduce using rule 46 (estatuto -> escribe .)
    READ_FILE       reduce using rule 46 (estatuto -> escribe .)
    MEAN            reduce using rule 46 (estatuto -> escribe .)
    MODE            reduce using rule 46 (estatuto -> escribe .)
    MEDIAN          reduce using rule 46 (estatuto -> escribe .)
    VARIANCE        reduce using rule 46 (estatuto -> escribe .)
    MAX             reduce using rule 46 (estatuto -> escribe .)
    MIN             reduce using rule 46 (estatuto -> escribe .)
    STADDES         reduce using rule 46 (estatuto -> escribe .)
    BOXPLOT         reduce using rule 46 (estatuto -> escribe .)
    LINREG          reduce using rule 46 (estatuto -> escribe .)
    RIGHT_CUR_BRACKET reduce using rule 46 (estatuto -> escribe .)


state 56

    (47) estatuto -> condicion .

    ID              reduce using rule 47 (estatuto -> condicion .)
    READ            reduce using rule 47 (estatuto -> condicion .)
    WRITE           reduce using rule 47 (estatuto -> condicion .)
    IF              reduce using rule 47 (estatuto -> condicion .)
    WHILE           reduce using rule 47 (estatuto -> condicion .)
    FOR             reduce using rule 47 (estatuto -> condicion .)
    RETURNS         reduce using rule 47 (estatuto -> condicion .)
    READ_FILE       reduce using rule 47 (estatuto -> condicion .)
    MEAN            reduce using rule 47 (estatuto -> condicion .)
    MODE            reduce using rule 47 (estatuto -> condicion .)
    MEDIAN          reduce using rule 47 (estatuto -> condicion .)
    VARIANCE        reduce using rule 47 (estatuto -> condicion .)
    MAX             reduce using rule 47 (estatuto -> condicion .)
    MIN             reduce using rule 47 (estatuto -> condicion .)
    STADDES         reduce using rule 47 (estatuto -> condicion .)
    BOXPLOT         reduce using rule 47 (estatuto -> condicion .)
    LINREG          reduce using rule 47 (estatuto -> condicion .)
    RIGHT_CUR_BRACKET reduce using rule 47 (estatuto -> condicion .)


state 57

    (48) estatuto -> ciclow .

    ID              reduce using rule 48 (estatuto -> ciclow .)
    READ            reduce using rule 48 (estatuto -> ciclow .)
    WRITE           reduce using rule 48 (estatuto -> ciclow .)
    IF              reduce using rule 48 (estatuto -> ciclow .)
    WHILE           reduce using rule 48 (estatuto -> ciclow .)
    FOR             reduce using rule 48 (estatuto -> ciclow .)
    RETURNS         reduce using rule 48 (estatuto -> ciclow .)
    READ_FILE       reduce using rule 48 (estatuto -> ciclow .)
    MEAN            reduce using rule 48 (estatuto -> ciclow .)
    MODE            reduce using rule 48 (estatuto -> ciclow .)
    MEDIAN          reduce using rule 48 (estatuto -> ciclow .)
    VARIANCE        reduce using rule 48 (estatuto -> ciclow .)
    MAX             reduce using rule 48 (estatuto -> ciclow .)
    MIN             reduce using rule 48 (estatuto -> ciclow .)
    STADDES         reduce using rule 48 (estatuto -> ciclow .)
    BOXPLOT         reduce using rule 48 (estatuto -> ciclow .)
    LINREG          reduce using rule 48 (estatuto -> ciclow .)
    RIGHT_CUR_BRACKET reduce using rule 48 (estatuto -> ciclow .)


state 58

    (49) estatuto -> ciclof .

    ID              reduce using rule 49 (estatuto -> ciclof .)
    READ            reduce using rule 49 (estatuto -> ciclof .)
    WRITE           reduce using rule 49 (estatuto -> ciclof .)
    IF              reduce using rule 49 (estatuto -> ciclof .)
    WHILE           reduce using rule 49 (estatuto -> ciclof .)
    FOR             reduce using rule 49 (estatuto -> ciclof .)
    RETURNS         reduce using rule 49 (estatuto -> ciclof .)
    READ_FILE       reduce using rule 49 (estatuto -> ciclof .)
    MEAN            reduce using rule 49 (estatuto -> ciclof .)
    MODE            reduce using rule 49 (estatuto -> ciclof .)
    MEDIAN          reduce using rule 49 (estatuto -> ciclof .)
    VARIANCE        reduce using rule 49 (estatuto -> ciclof .)
    MAX             reduce using rule 49 (estatuto -> ciclof .)
    MIN             reduce using rule 49 (estatuto -> ciclof .)
    STADDES         reduce using rule 49 (estatuto -> ciclof .)
    BOXPLOT         reduce using rule 49 (estatuto -> ciclof .)
    LINREG          reduce using rule 49 (estatuto -> ciclof .)
    RIGHT_CUR_BRACKET reduce using rule 49 (estatuto -> ciclof .)


state 59

    (50) estatuto -> funcesp .

    ID              reduce using rule 50 (estatuto -> funcesp .)
    READ            reduce using rule 50 (estatuto -> funcesp .)
    WRITE           reduce using rule 50 (estatuto -> funcesp .)
    IF              reduce using rule 50 (estatuto -> funcesp .)
    WHILE           reduce using rule 50 (estatuto -> funcesp .)
    FOR             reduce using rule 50 (estatuto -> funcesp .)
    RETURNS         reduce using rule 50 (estatuto -> funcesp .)
    READ_FILE       reduce using rule 50 (estatuto -> funcesp .)
    MEAN            reduce using rule 50 (estatuto -> funcesp .)
    MODE            reduce using rule 50 (estatuto -> funcesp .)
    MEDIAN          reduce using rule 50 (estatuto -> funcesp .)
    VARIANCE        reduce using rule 50 (estatuto -> funcesp .)
    MAX             reduce using rule 50 (estatuto -> funcesp .)
    MIN             reduce using rule 50 (estatuto -> funcesp .)
    STADDES         reduce using rule 50 (estatuto -> funcesp .)
    BOXPLOT         reduce using rule 50 (estatuto -> funcesp .)
    LINREG          reduce using rule 50 (estatuto -> funcesp .)
    RIGHT_CUR_BRACKET reduce using rule 50 (estatuto -> funcesp .)


state 60

    (51) estatuto -> return .

    ID              reduce using rule 51 (estatuto -> return .)
    READ            reduce using rule 51 (estatuto -> return .)
    WRITE           reduce using rule 51 (estatuto -> return .)
    IF              reduce using rule 51 (estatuto -> return .)
    WHILE           reduce using rule 51 (estatuto -> return .)
    FOR             reduce using rule 51 (estatuto -> return .)
    RETURNS         reduce using rule 51 (estatuto -> return .)
    READ_FILE       reduce using rule 51 (estatuto -> return .)
    MEAN            reduce using rule 51 (estatuto -> return .)
    MODE            reduce using rule 51 (estatuto -> return .)
    MEDIAN          reduce using rule 51 (estatuto -> return .)
    VARIANCE        reduce using rule 51 (estatuto -> return .)
    MAX             reduce using rule 51 (estatuto -> return .)
    MIN             reduce using rule 51 (estatuto -> return .)
    STADDES         reduce using rule 51 (estatuto -> return .)
    BOXPLOT         reduce using rule 51 (estatuto -> return .)
    LINREG          reduce using rule 51 (estatuto -> return .)
    RIGHT_CUR_BRACKET reduce using rule 51 (estatuto -> return .)


state 61

    (52) estatuto -> copy .
    (102) funcesp -> copy .

  ! reduce/reduce conflict for ID resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for READ resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for WRITE resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for IF resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for WHILE resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for FOR resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for RETURNS resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for READ_FILE resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for MEAN resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for MODE resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for MEDIAN resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for VARIANCE resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for MAX resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for MIN resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for STADDES resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for BOXPLOT resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for LINREG resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for RIGHT_CUR_BRACKET resolved using rule 52 (estatuto -> copy .)
    ID              reduce using rule 52 (estatuto -> copy .)
    READ            reduce using rule 52 (estatuto -> copy .)
    WRITE           reduce using rule 52 (estatuto -> copy .)
    IF              reduce using rule 52 (estatuto -> copy .)
    WHILE           reduce using rule 52 (estatuto -> copy .)
    FOR             reduce using rule 52 (estatuto -> copy .)
    RETURNS         reduce using rule 52 (estatuto -> copy .)
    READ_FILE       reduce using rule 52 (estatuto -> copy .)
    MEAN            reduce using rule 52 (estatuto -> copy .)
    MODE            reduce using rule 52 (estatuto -> copy .)
    MEDIAN          reduce using rule 52 (estatuto -> copy .)
    VARIANCE        reduce using rule 52 (estatuto -> copy .)
    MAX             reduce using rule 52 (estatuto -> copy .)
    MIN             reduce using rule 52 (estatuto -> copy .)
    STADDES         reduce using rule 52 (estatuto -> copy .)
    BOXPLOT         reduce using rule 52 (estatuto -> copy .)
    LINREG          reduce using rule 52 (estatuto -> copy .)
    RIGHT_CUR_BRACKET reduce using rule 52 (estatuto -> copy .)

  ! ID              [ reduce using rule 102 (funcesp -> copy .) ]
  ! READ            [ reduce using rule 102 (funcesp -> copy .) ]
  ! WRITE           [ reduce using rule 102 (funcesp -> copy .) ]
  ! IF              [ reduce using rule 102 (funcesp -> copy .) ]
  ! WHILE           [ reduce using rule 102 (funcesp -> copy .) ]
  ! FOR             [ reduce using rule 102 (funcesp -> copy .) ]
  ! RETURNS         [ reduce using rule 102 (funcesp -> copy .) ]
  ! READ_FILE       [ reduce using rule 102 (funcesp -> copy .) ]
  ! MEAN            [ reduce using rule 102 (funcesp -> copy .) ]
  ! MODE            [ reduce using rule 102 (funcesp -> copy .) ]
  ! MEDIAN          [ reduce using rule 102 (funcesp -> copy .) ]
  ! VARIANCE        [ reduce using rule 102 (funcesp -> copy .) ]
  ! MAX             [ reduce using rule 102 (funcesp -> copy .) ]
  ! MIN             [ reduce using rule 102 (funcesp -> copy .) ]
  ! STADDES         [ reduce using rule 102 (funcesp -> copy .) ]
  ! BOXPLOT         [ reduce using rule 102 (funcesp -> copy .) ]
  ! LINREG          [ reduce using rule 102 (funcesp -> copy .) ]
  ! RIGHT_CUR_BRACKET [ reduce using rule 102 (funcesp -> copy .) ]


state 62

    (53) asign -> variable . ASIGN exp SEMICOLON

    ASIGN           shift and go to state 95


state 63

    (21) llamada -> ID . LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (16) variable -> ID . indexp
    (17) indexp -> . LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET
    (18) indexp -> . empty
    (112) empty -> .

    LEFT_PARENT     shift and go to state 96
    LEFT_SQR_BRACKET shift and go to state 98
    ASIGN           reduce using rule 112 (empty -> .)

    indexp                         shift and go to state 97
    empty                          shift and go to state 99

state 64

    (54) lee -> READ . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 100


state 65

    (55) escribe -> WRITE . LEFT_PARENT escribep RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 101


state 66

    (88) condicion -> IF . LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop

    LEFT_PARENT     shift and go to state 102


state 67

    (91) ciclow -> WHILE . LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_PARENT     shift and go to state 103


state 68

    (92) ciclof -> FOR . LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_PARENT     shift and go to state 104


state 69

    (93) funcesp -> mean .

    ID              reduce using rule 93 (funcesp -> mean .)
    READ            reduce using rule 93 (funcesp -> mean .)
    WRITE           reduce using rule 93 (funcesp -> mean .)
    IF              reduce using rule 93 (funcesp -> mean .)
    WHILE           reduce using rule 93 (funcesp -> mean .)
    FOR             reduce using rule 93 (funcesp -> mean .)
    RETURNS         reduce using rule 93 (funcesp -> mean .)
    READ_FILE       reduce using rule 93 (funcesp -> mean .)
    MEAN            reduce using rule 93 (funcesp -> mean .)
    MODE            reduce using rule 93 (funcesp -> mean .)
    MEDIAN          reduce using rule 93 (funcesp -> mean .)
    VARIANCE        reduce using rule 93 (funcesp -> mean .)
    MAX             reduce using rule 93 (funcesp -> mean .)
    MIN             reduce using rule 93 (funcesp -> mean .)
    STADDES         reduce using rule 93 (funcesp -> mean .)
    BOXPLOT         reduce using rule 93 (funcesp -> mean .)
    LINREG          reduce using rule 93 (funcesp -> mean .)
    RIGHT_CUR_BRACKET reduce using rule 93 (funcesp -> mean .)
    MULT            reduce using rule 93 (funcesp -> mean .)
    DIV             reduce using rule 93 (funcesp -> mean .)
    PLUS            reduce using rule 93 (funcesp -> mean .)
    MINUS           reduce using rule 93 (funcesp -> mean .)
    LESS_THAN       reduce using rule 93 (funcesp -> mean .)
    GREATER_THAN    reduce using rule 93 (funcesp -> mean .)
    EQUALS          reduce using rule 93 (funcesp -> mean .)
    NOTEQUALS       reduce using rule 93 (funcesp -> mean .)
    AND             reduce using rule 93 (funcesp -> mean .)
    OR              reduce using rule 93 (funcesp -> mean .)
    SEMICOLON       reduce using rule 93 (funcesp -> mean .)
    COMMA           reduce using rule 93 (funcesp -> mean .)
    RIGHT_PARENT    reduce using rule 93 (funcesp -> mean .)
    RIGHT_SQR_BRACKET reduce using rule 93 (funcesp -> mean .)


state 70

    (94) funcesp -> mode .

    ID              reduce using rule 94 (funcesp -> mode .)
    READ            reduce using rule 94 (funcesp -> mode .)
    WRITE           reduce using rule 94 (funcesp -> mode .)
    IF              reduce using rule 94 (funcesp -> mode .)
    WHILE           reduce using rule 94 (funcesp -> mode .)
    FOR             reduce using rule 94 (funcesp -> mode .)
    RETURNS         reduce using rule 94 (funcesp -> mode .)
    READ_FILE       reduce using rule 94 (funcesp -> mode .)
    MEAN            reduce using rule 94 (funcesp -> mode .)
    MODE            reduce using rule 94 (funcesp -> mode .)
    MEDIAN          reduce using rule 94 (funcesp -> mode .)
    VARIANCE        reduce using rule 94 (funcesp -> mode .)
    MAX             reduce using rule 94 (funcesp -> mode .)
    MIN             reduce using rule 94 (funcesp -> mode .)
    STADDES         reduce using rule 94 (funcesp -> mode .)
    BOXPLOT         reduce using rule 94 (funcesp -> mode .)
    LINREG          reduce using rule 94 (funcesp -> mode .)
    RIGHT_CUR_BRACKET reduce using rule 94 (funcesp -> mode .)
    MULT            reduce using rule 94 (funcesp -> mode .)
    DIV             reduce using rule 94 (funcesp -> mode .)
    PLUS            reduce using rule 94 (funcesp -> mode .)
    MINUS           reduce using rule 94 (funcesp -> mode .)
    LESS_THAN       reduce using rule 94 (funcesp -> mode .)
    GREATER_THAN    reduce using rule 94 (funcesp -> mode .)
    EQUALS          reduce using rule 94 (funcesp -> mode .)
    NOTEQUALS       reduce using rule 94 (funcesp -> mode .)
    AND             reduce using rule 94 (funcesp -> mode .)
    OR              reduce using rule 94 (funcesp -> mode .)
    SEMICOLON       reduce using rule 94 (funcesp -> mode .)
    COMMA           reduce using rule 94 (funcesp -> mode .)
    RIGHT_PARENT    reduce using rule 94 (funcesp -> mode .)
    RIGHT_SQR_BRACKET reduce using rule 94 (funcesp -> mode .)


state 71

    (95) funcesp -> median .

    ID              reduce using rule 95 (funcesp -> median .)
    READ            reduce using rule 95 (funcesp -> median .)
    WRITE           reduce using rule 95 (funcesp -> median .)
    IF              reduce using rule 95 (funcesp -> median .)
    WHILE           reduce using rule 95 (funcesp -> median .)
    FOR             reduce using rule 95 (funcesp -> median .)
    RETURNS         reduce using rule 95 (funcesp -> median .)
    READ_FILE       reduce using rule 95 (funcesp -> median .)
    MEAN            reduce using rule 95 (funcesp -> median .)
    MODE            reduce using rule 95 (funcesp -> median .)
    MEDIAN          reduce using rule 95 (funcesp -> median .)
    VARIANCE        reduce using rule 95 (funcesp -> median .)
    MAX             reduce using rule 95 (funcesp -> median .)
    MIN             reduce using rule 95 (funcesp -> median .)
    STADDES         reduce using rule 95 (funcesp -> median .)
    BOXPLOT         reduce using rule 95 (funcesp -> median .)
    LINREG          reduce using rule 95 (funcesp -> median .)
    RIGHT_CUR_BRACKET reduce using rule 95 (funcesp -> median .)
    MULT            reduce using rule 95 (funcesp -> median .)
    DIV             reduce using rule 95 (funcesp -> median .)
    PLUS            reduce using rule 95 (funcesp -> median .)
    MINUS           reduce using rule 95 (funcesp -> median .)
    LESS_THAN       reduce using rule 95 (funcesp -> median .)
    GREATER_THAN    reduce using rule 95 (funcesp -> median .)
    EQUALS          reduce using rule 95 (funcesp -> median .)
    NOTEQUALS       reduce using rule 95 (funcesp -> median .)
    AND             reduce using rule 95 (funcesp -> median .)
    OR              reduce using rule 95 (funcesp -> median .)
    SEMICOLON       reduce using rule 95 (funcesp -> median .)
    COMMA           reduce using rule 95 (funcesp -> median .)
    RIGHT_PARENT    reduce using rule 95 (funcesp -> median .)
    RIGHT_SQR_BRACKET reduce using rule 95 (funcesp -> median .)


state 72

    (96) funcesp -> variance .

    ID              reduce using rule 96 (funcesp -> variance .)
    READ            reduce using rule 96 (funcesp -> variance .)
    WRITE           reduce using rule 96 (funcesp -> variance .)
    IF              reduce using rule 96 (funcesp -> variance .)
    WHILE           reduce using rule 96 (funcesp -> variance .)
    FOR             reduce using rule 96 (funcesp -> variance .)
    RETURNS         reduce using rule 96 (funcesp -> variance .)
    READ_FILE       reduce using rule 96 (funcesp -> variance .)
    MEAN            reduce using rule 96 (funcesp -> variance .)
    MODE            reduce using rule 96 (funcesp -> variance .)
    MEDIAN          reduce using rule 96 (funcesp -> variance .)
    VARIANCE        reduce using rule 96 (funcesp -> variance .)
    MAX             reduce using rule 96 (funcesp -> variance .)
    MIN             reduce using rule 96 (funcesp -> variance .)
    STADDES         reduce using rule 96 (funcesp -> variance .)
    BOXPLOT         reduce using rule 96 (funcesp -> variance .)
    LINREG          reduce using rule 96 (funcesp -> variance .)
    RIGHT_CUR_BRACKET reduce using rule 96 (funcesp -> variance .)
    MULT            reduce using rule 96 (funcesp -> variance .)
    DIV             reduce using rule 96 (funcesp -> variance .)
    PLUS            reduce using rule 96 (funcesp -> variance .)
    MINUS           reduce using rule 96 (funcesp -> variance .)
    LESS_THAN       reduce using rule 96 (funcesp -> variance .)
    GREATER_THAN    reduce using rule 96 (funcesp -> variance .)
    EQUALS          reduce using rule 96 (funcesp -> variance .)
    NOTEQUALS       reduce using rule 96 (funcesp -> variance .)
    AND             reduce using rule 96 (funcesp -> variance .)
    OR              reduce using rule 96 (funcesp -> variance .)
    SEMICOLON       reduce using rule 96 (funcesp -> variance .)
    COMMA           reduce using rule 96 (funcesp -> variance .)
    RIGHT_PARENT    reduce using rule 96 (funcesp -> variance .)
    RIGHT_SQR_BRACKET reduce using rule 96 (funcesp -> variance .)


state 73

    (97) funcesp -> max .

    ID              reduce using rule 97 (funcesp -> max .)
    READ            reduce using rule 97 (funcesp -> max .)
    WRITE           reduce using rule 97 (funcesp -> max .)
    IF              reduce using rule 97 (funcesp -> max .)
    WHILE           reduce using rule 97 (funcesp -> max .)
    FOR             reduce using rule 97 (funcesp -> max .)
    RETURNS         reduce using rule 97 (funcesp -> max .)
    READ_FILE       reduce using rule 97 (funcesp -> max .)
    MEAN            reduce using rule 97 (funcesp -> max .)
    MODE            reduce using rule 97 (funcesp -> max .)
    MEDIAN          reduce using rule 97 (funcesp -> max .)
    VARIANCE        reduce using rule 97 (funcesp -> max .)
    MAX             reduce using rule 97 (funcesp -> max .)
    MIN             reduce using rule 97 (funcesp -> max .)
    STADDES         reduce using rule 97 (funcesp -> max .)
    BOXPLOT         reduce using rule 97 (funcesp -> max .)
    LINREG          reduce using rule 97 (funcesp -> max .)
    RIGHT_CUR_BRACKET reduce using rule 97 (funcesp -> max .)
    MULT            reduce using rule 97 (funcesp -> max .)
    DIV             reduce using rule 97 (funcesp -> max .)
    PLUS            reduce using rule 97 (funcesp -> max .)
    MINUS           reduce using rule 97 (funcesp -> max .)
    LESS_THAN       reduce using rule 97 (funcesp -> max .)
    GREATER_THAN    reduce using rule 97 (funcesp -> max .)
    EQUALS          reduce using rule 97 (funcesp -> max .)
    NOTEQUALS       reduce using rule 97 (funcesp -> max .)
    AND             reduce using rule 97 (funcesp -> max .)
    OR              reduce using rule 97 (funcesp -> max .)
    SEMICOLON       reduce using rule 97 (funcesp -> max .)
    COMMA           reduce using rule 97 (funcesp -> max .)
    RIGHT_PARENT    reduce using rule 97 (funcesp -> max .)
    RIGHT_SQR_BRACKET reduce using rule 97 (funcesp -> max .)


state 74

    (98) funcesp -> min .

    ID              reduce using rule 98 (funcesp -> min .)
    READ            reduce using rule 98 (funcesp -> min .)
    WRITE           reduce using rule 98 (funcesp -> min .)
    IF              reduce using rule 98 (funcesp -> min .)
    WHILE           reduce using rule 98 (funcesp -> min .)
    FOR             reduce using rule 98 (funcesp -> min .)
    RETURNS         reduce using rule 98 (funcesp -> min .)
    READ_FILE       reduce using rule 98 (funcesp -> min .)
    MEAN            reduce using rule 98 (funcesp -> min .)
    MODE            reduce using rule 98 (funcesp -> min .)
    MEDIAN          reduce using rule 98 (funcesp -> min .)
    VARIANCE        reduce using rule 98 (funcesp -> min .)
    MAX             reduce using rule 98 (funcesp -> min .)
    MIN             reduce using rule 98 (funcesp -> min .)
    STADDES         reduce using rule 98 (funcesp -> min .)
    BOXPLOT         reduce using rule 98 (funcesp -> min .)
    LINREG          reduce using rule 98 (funcesp -> min .)
    RIGHT_CUR_BRACKET reduce using rule 98 (funcesp -> min .)
    MULT            reduce using rule 98 (funcesp -> min .)
    DIV             reduce using rule 98 (funcesp -> min .)
    PLUS            reduce using rule 98 (funcesp -> min .)
    MINUS           reduce using rule 98 (funcesp -> min .)
    LESS_THAN       reduce using rule 98 (funcesp -> min .)
    GREATER_THAN    reduce using rule 98 (funcesp -> min .)
    EQUALS          reduce using rule 98 (funcesp -> min .)
    NOTEQUALS       reduce using rule 98 (funcesp -> min .)
    AND             reduce using rule 98 (funcesp -> min .)
    OR              reduce using rule 98 (funcesp -> min .)
    SEMICOLON       reduce using rule 98 (funcesp -> min .)
    COMMA           reduce using rule 98 (funcesp -> min .)
    RIGHT_PARENT    reduce using rule 98 (funcesp -> min .)
    RIGHT_SQR_BRACKET reduce using rule 98 (funcesp -> min .)


state 75

    (99) funcesp -> staddes .

    ID              reduce using rule 99 (funcesp -> staddes .)
    READ            reduce using rule 99 (funcesp -> staddes .)
    WRITE           reduce using rule 99 (funcesp -> staddes .)
    IF              reduce using rule 99 (funcesp -> staddes .)
    WHILE           reduce using rule 99 (funcesp -> staddes .)
    FOR             reduce using rule 99 (funcesp -> staddes .)
    RETURNS         reduce using rule 99 (funcesp -> staddes .)
    READ_FILE       reduce using rule 99 (funcesp -> staddes .)
    MEAN            reduce using rule 99 (funcesp -> staddes .)
    MODE            reduce using rule 99 (funcesp -> staddes .)
    MEDIAN          reduce using rule 99 (funcesp -> staddes .)
    VARIANCE        reduce using rule 99 (funcesp -> staddes .)
    MAX             reduce using rule 99 (funcesp -> staddes .)
    MIN             reduce using rule 99 (funcesp -> staddes .)
    STADDES         reduce using rule 99 (funcesp -> staddes .)
    BOXPLOT         reduce using rule 99 (funcesp -> staddes .)
    LINREG          reduce using rule 99 (funcesp -> staddes .)
    RIGHT_CUR_BRACKET reduce using rule 99 (funcesp -> staddes .)
    MULT            reduce using rule 99 (funcesp -> staddes .)
    DIV             reduce using rule 99 (funcesp -> staddes .)
    PLUS            reduce using rule 99 (funcesp -> staddes .)
    MINUS           reduce using rule 99 (funcesp -> staddes .)
    LESS_THAN       reduce using rule 99 (funcesp -> staddes .)
    GREATER_THAN    reduce using rule 99 (funcesp -> staddes .)
    EQUALS          reduce using rule 99 (funcesp -> staddes .)
    NOTEQUALS       reduce using rule 99 (funcesp -> staddes .)
    AND             reduce using rule 99 (funcesp -> staddes .)
    OR              reduce using rule 99 (funcesp -> staddes .)
    SEMICOLON       reduce using rule 99 (funcesp -> staddes .)
    COMMA           reduce using rule 99 (funcesp -> staddes .)
    RIGHT_PARENT    reduce using rule 99 (funcesp -> staddes .)
    RIGHT_SQR_BRACKET reduce using rule 99 (funcesp -> staddes .)


state 76

    (100) funcesp -> boxplot .

    ID              reduce using rule 100 (funcesp -> boxplot .)
    READ            reduce using rule 100 (funcesp -> boxplot .)
    WRITE           reduce using rule 100 (funcesp -> boxplot .)
    IF              reduce using rule 100 (funcesp -> boxplot .)
    WHILE           reduce using rule 100 (funcesp -> boxplot .)
    FOR             reduce using rule 100 (funcesp -> boxplot .)
    RETURNS         reduce using rule 100 (funcesp -> boxplot .)
    READ_FILE       reduce using rule 100 (funcesp -> boxplot .)
    MEAN            reduce using rule 100 (funcesp -> boxplot .)
    MODE            reduce using rule 100 (funcesp -> boxplot .)
    MEDIAN          reduce using rule 100 (funcesp -> boxplot .)
    VARIANCE        reduce using rule 100 (funcesp -> boxplot .)
    MAX             reduce using rule 100 (funcesp -> boxplot .)
    MIN             reduce using rule 100 (funcesp -> boxplot .)
    STADDES         reduce using rule 100 (funcesp -> boxplot .)
    BOXPLOT         reduce using rule 100 (funcesp -> boxplot .)
    LINREG          reduce using rule 100 (funcesp -> boxplot .)
    RIGHT_CUR_BRACKET reduce using rule 100 (funcesp -> boxplot .)
    MULT            reduce using rule 100 (funcesp -> boxplot .)
    DIV             reduce using rule 100 (funcesp -> boxplot .)
    PLUS            reduce using rule 100 (funcesp -> boxplot .)
    MINUS           reduce using rule 100 (funcesp -> boxplot .)
    LESS_THAN       reduce using rule 100 (funcesp -> boxplot .)
    GREATER_THAN    reduce using rule 100 (funcesp -> boxplot .)
    EQUALS          reduce using rule 100 (funcesp -> boxplot .)
    NOTEQUALS       reduce using rule 100 (funcesp -> boxplot .)
    AND             reduce using rule 100 (funcesp -> boxplot .)
    OR              reduce using rule 100 (funcesp -> boxplot .)
    SEMICOLON       reduce using rule 100 (funcesp -> boxplot .)
    COMMA           reduce using rule 100 (funcesp -> boxplot .)
    RIGHT_PARENT    reduce using rule 100 (funcesp -> boxplot .)
    RIGHT_SQR_BRACKET reduce using rule 100 (funcesp -> boxplot .)


state 77

    (101) funcesp -> linreg .

    ID              reduce using rule 101 (funcesp -> linreg .)
    READ            reduce using rule 101 (funcesp -> linreg .)
    WRITE           reduce using rule 101 (funcesp -> linreg .)
    IF              reduce using rule 101 (funcesp -> linreg .)
    WHILE           reduce using rule 101 (funcesp -> linreg .)
    FOR             reduce using rule 101 (funcesp -> linreg .)
    RETURNS         reduce using rule 101 (funcesp -> linreg .)
    READ_FILE       reduce using rule 101 (funcesp -> linreg .)
    MEAN            reduce using rule 101 (funcesp -> linreg .)
    MODE            reduce using rule 101 (funcesp -> linreg .)
    MEDIAN          reduce using rule 101 (funcesp -> linreg .)
    VARIANCE        reduce using rule 101 (funcesp -> linreg .)
    MAX             reduce using rule 101 (funcesp -> linreg .)
    MIN             reduce using rule 101 (funcesp -> linreg .)
    STADDES         reduce using rule 101 (funcesp -> linreg .)
    BOXPLOT         reduce using rule 101 (funcesp -> linreg .)
    LINREG          reduce using rule 101 (funcesp -> linreg .)
    RIGHT_CUR_BRACKET reduce using rule 101 (funcesp -> linreg .)
    MULT            reduce using rule 101 (funcesp -> linreg .)
    DIV             reduce using rule 101 (funcesp -> linreg .)
    PLUS            reduce using rule 101 (funcesp -> linreg .)
    MINUS           reduce using rule 101 (funcesp -> linreg .)
    LESS_THAN       reduce using rule 101 (funcesp -> linreg .)
    GREATER_THAN    reduce using rule 101 (funcesp -> linreg .)
    EQUALS          reduce using rule 101 (funcesp -> linreg .)
    NOTEQUALS       reduce using rule 101 (funcesp -> linreg .)
    AND             reduce using rule 101 (funcesp -> linreg .)
    OR              reduce using rule 101 (funcesp -> linreg .)
    SEMICOLON       reduce using rule 101 (funcesp -> linreg .)
    COMMA           reduce using rule 101 (funcesp -> linreg .)
    RIGHT_PARENT    reduce using rule 101 (funcesp -> linreg .)
    RIGHT_SQR_BRACKET reduce using rule 101 (funcesp -> linreg .)


state 78

    (58) return -> RETURNS . exp SEMICOLON
    (59) exp -> . exprel logic
    (64) exprel -> . e relacionalp
    (71) e -> . t tp
    (76) t -> . f fp
    (81) f -> . LEFT_PARENT exp RIGHT_PARENT
    (82) f -> . CTEI
    (83) f -> . CTEF
    (84) f -> . CTEC
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 110
    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    ID              shift and go to state 117
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88
    READ_FILE       shift and go to state 79

    exp                            shift and go to state 105
    exprel                         shift and go to state 106
    e                              shift and go to state 107
    t                              shift and go to state 108
    f                              shift and go to state 109
    variable                       shift and go to state 114
    llamada                        shift and go to state 115
    funcesp                        shift and go to state 116
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77
    copy                           shift and go to state 118

state 79

    (14) copy -> READ_FILE . LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 119


state 80

    (103) mean -> MEAN . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 120


state 81

    (104) mode -> MODE . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121


state 82

    (105) median -> MEDIAN . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 122


state 83

    (106) variance -> VARIANCE . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 123


state 84

    (107) max -> MAX . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 124


state 85

    (108) min -> MIN . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 125


state 86

    (109) staddes -> STADDES . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 126


state 87

    (110) boxplot -> BOXPLOT . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 127


state 88

    (111) linreg -> LINREG . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 128


state 89

    (36) func -> FUNC returnval ARROW ID LEFT_PARENT param . RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET

    RIGHT_PARENT    shift and go to state 129


state 90

    (39) param -> tipo_simp . ARROW ID paramp

    ARROW           shift and go to state 130


state 91

    (40) param -> empty .

    RIGHT_PARENT    reduce using rule 40 (param -> empty .)
    COMMA           reduce using rule 40 (param -> empty .)


state 92

    (34) idpp -> COMMA ID idpp .

    SEMICOLON       reduce using rule 34 (idpp -> COMMA ID idpp .)


state 93

    (6) bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET .

    $end            reduce using rule 6 (bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET .)


state 94

    (7) estatutop -> estatuto estatutop .

    RIGHT_CUR_BRACKET reduce using rule 7 (estatutop -> estatuto estatutop .)


state 95

    (53) asign -> variable ASIGN . exp SEMICOLON
    (59) exp -> . exprel logic
    (64) exprel -> . e relacionalp
    (71) e -> . t tp
    (76) t -> . f fp
    (81) f -> . LEFT_PARENT exp RIGHT_PARENT
    (82) f -> . CTEI
    (83) f -> . CTEF
    (84) f -> . CTEC
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 110
    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    ID              shift and go to state 117
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88
    READ_FILE       shift and go to state 79

    variable                       shift and go to state 114
    exp                            shift and go to state 131
    exprel                         shift and go to state 106
    e                              shift and go to state 107
    t                              shift and go to state 108
    f                              shift and go to state 109
    llamada                        shift and go to state 115
    funcesp                        shift and go to state 116
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77
    copy                           shift and go to state 118

state 96

    (21) llamada -> ID LEFT_PARENT . expp RIGHT_PARENT SEMICOLON
    (22) expp -> . exp exppp
    (23) expp -> . empty
    (59) exp -> . exprel logic
    (112) empty -> .
    (64) exprel -> . e relacionalp
    (71) e -> . t tp
    (76) t -> . f fp
    (81) f -> . LEFT_PARENT exp RIGHT_PARENT
    (82) f -> . CTEI
    (83) f -> . CTEF
    (84) f -> . CTEC
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    reduce using rule 112 (empty -> .)
    LEFT_PARENT     shift and go to state 110
    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    ID              shift and go to state 117
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88
    READ_FILE       shift and go to state 79

    expp                           shift and go to state 132
    exp                            shift and go to state 133
    empty                          shift and go to state 134
    exprel                         shift and go to state 106
    e                              shift and go to state 107
    t                              shift and go to state 108
    f                              shift and go to state 109
    variable                       shift and go to state 114
    llamada                        shift and go to state 115
    funcesp                        shift and go to state 116
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77
    copy                           shift and go to state 118

state 97

    (16) variable -> ID indexp .

    ASIGN           reduce using rule 16 (variable -> ID indexp .)
    MULT            reduce using rule 16 (variable -> ID indexp .)
    DIV             reduce using rule 16 (variable -> ID indexp .)
    PLUS            reduce using rule 16 (variable -> ID indexp .)
    MINUS           reduce using rule 16 (variable -> ID indexp .)
    LESS_THAN       reduce using rule 16 (variable -> ID indexp .)
    GREATER_THAN    reduce using rule 16 (variable -> ID indexp .)
    EQUALS          reduce using rule 16 (variable -> ID indexp .)
    NOTEQUALS       reduce using rule 16 (variable -> ID indexp .)
    AND             reduce using rule 16 (variable -> ID indexp .)
    OR              reduce using rule 16 (variable -> ID indexp .)
    SEMICOLON       reduce using rule 16 (variable -> ID indexp .)
    COMMA           reduce using rule 16 (variable -> ID indexp .)
    RIGHT_PARENT    reduce using rule 16 (variable -> ID indexp .)
    RIGHT_SQR_BRACKET reduce using rule 16 (variable -> ID indexp .)


state 98

    (17) indexp -> LEFT_SQR_BRACKET . exp indexpp RIGHT_SQR_BRACKET
    (59) exp -> . exprel logic
    (64) exprel -> . e relacionalp
    (71) e -> . t tp
    (76) t -> . f fp
    (81) f -> . LEFT_PARENT exp RIGHT_PARENT
    (82) f -> . CTEI
    (83) f -> . CTEF
    (84) f -> . CTEC
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 110
    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    ID              shift and go to state 117
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88
    READ_FILE       shift and go to state 79

    exp                            shift and go to state 135
    exprel                         shift and go to state 106
    e                              shift and go to state 107
    t                              shift and go to state 108
    f                              shift and go to state 109
    variable                       shift and go to state 114
    llamada                        shift and go to state 115
    funcesp                        shift and go to state 116
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77
    copy                           shift and go to state 118

state 99

    (18) indexp -> empty .

    ASIGN           reduce using rule 18 (indexp -> empty .)
    MULT            reduce using rule 18 (indexp -> empty .)
    DIV             reduce using rule 18 (indexp -> empty .)
    PLUS            reduce using rule 18 (indexp -> empty .)
    MINUS           reduce using rule 18 (indexp -> empty .)
    LESS_THAN       reduce using rule 18 (indexp -> empty .)
    GREATER_THAN    reduce using rule 18 (indexp -> empty .)
    EQUALS          reduce using rule 18 (indexp -> empty .)
    NOTEQUALS       reduce using rule 18 (indexp -> empty .)
    AND             reduce using rule 18 (indexp -> empty .)
    OR              reduce using rule 18 (indexp -> empty .)
    SEMICOLON       reduce using rule 18 (indexp -> empty .)
    COMMA           reduce using rule 18 (indexp -> empty .)
    RIGHT_PARENT    reduce using rule 18 (indexp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 18 (indexp -> empty .)


state 100

    (54) lee -> READ LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 137

    variable                       shift and go to state 136

state 101

    (55) escribe -> WRITE LEFT_PARENT . escribep RIGHT_PARENT SEMICOLON
    (56) escribep -> . exp
    (57) escribep -> . LETRERO
    (59) exp -> . exprel logic
    (64) exprel -> . e relacionalp
    (71) e -> . t tp
    (76) t -> . f fp
    (81) f -> . LEFT_PARENT exp RIGHT_PARENT
    (82) f -> . CTEI
    (83) f -> . CTEF
    (84) f -> . CTEC
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LETRERO         shift and go to state 140
    LEFT_PARENT     shift and go to state 110
    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    ID              shift and go to state 117
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88
    READ_FILE       shift and go to state 79

    escribep                       shift and go to state 138
    exp                            shift and go to state 139
    exprel                         shift and go to state 106
    e                              shift and go to state 107
    t                              shift and go to state 108
    f                              shift and go to state 109
    variable                       shift and go to state 114
    llamada                        shift and go to state 115
    funcesp                        shift and go to state 116
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77
    copy                           shift and go to state 118

state 102

    (88) condicion -> IF LEFT_PARENT . exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (59) exp -> . exprel logic
    (64) exprel -> . e relacionalp
    (71) e -> . t tp
    (76) t -> . f fp
    (81) f -> . LEFT_PARENT exp RIGHT_PARENT
    (82) f -> . CTEI
    (83) f -> . CTEF
    (84) f -> . CTEC
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 110
    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    ID              shift and go to state 117
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88
    READ_FILE       shift and go to state 79

    exp                            shift and go to state 141
    exprel                         shift and go to state 106
    e                              shift and go to state 107
    t                              shift and go to state 108
    f                              shift and go to state 109
    variable                       shift and go to state 114
    llamada                        shift and go to state 115
    funcesp                        shift and go to state 116
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77
    copy                           shift and go to state 118

state 103

    (91) ciclow -> WHILE LEFT_PARENT . exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (59) exp -> . exprel logic
    (64) exprel -> . e relacionalp
    (71) e -> . t tp
    (76) t -> . f fp
    (81) f -> . LEFT_PARENT exp RIGHT_PARENT
    (82) f -> . CTEI
    (83) f -> . CTEF
    (84) f -> . CTEC
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 110
    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    ID              shift and go to state 117
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88
    READ_FILE       shift and go to state 79

    exp                            shift and go to state 142
    exprel                         shift and go to state 106
    e                              shift and go to state 107
    t                              shift and go to state 108
    f                              shift and go to state 109
    variable                       shift and go to state 114
    llamada                        shift and go to state 115
    funcesp                        shift and go to state 116
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77
    copy                           shift and go to state 118

state 104

    (92) ciclof -> FOR LEFT_PARENT . asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (53) asign -> . variable ASIGN exp SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 137

    asign                          shift and go to state 143
    variable                       shift and go to state 62

state 105

    (58) return -> RETURNS exp . SEMICOLON

    SEMICOLON       shift and go to state 144


state 106

    (59) exp -> exprel . logic
    (60) logic -> . logicsig exprel logic
    (61) logic -> . empty
    (62) logicsig -> . AND
    (63) logicsig -> . OR
    (112) empty -> .

    AND             shift and go to state 148
    OR              shift and go to state 149
    SEMICOLON       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    RIGHT_PARENT    reduce using rule 112 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 112 (empty -> .)

    logic                          shift and go to state 145
    logicsig                       shift and go to state 146
    empty                          shift and go to state 147

state 107

    (64) exprel -> e . relacionalp
    (65) relacionalp -> . relsig e relacionalp
    (66) relacionalp -> . empty
    (67) relsig -> . LESS_THAN
    (68) relsig -> . GREATER_THAN
    (69) relsig -> . EQUALS
    (70) relsig -> . NOTEQUALS
    (112) empty -> .

    LESS_THAN       shift and go to state 153
    GREATER_THAN    shift and go to state 154
    EQUALS          shift and go to state 155
    NOTEQUALS       shift and go to state 156
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    RIGHT_PARENT    reduce using rule 112 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 112 (empty -> .)

    relacionalp                    shift and go to state 150
    relsig                         shift and go to state 151
    empty                          shift and go to state 152

state 108

    (71) e -> t . tp
    (72) tp -> . tsig t tp
    (73) tp -> . empty
    (74) tsig -> . PLUS
    (75) tsig -> . MINUS
    (112) empty -> .

    PLUS            shift and go to state 160
    MINUS           shift and go to state 161
    LESS_THAN       reduce using rule 112 (empty -> .)
    GREATER_THAN    reduce using rule 112 (empty -> .)
    EQUALS          reduce using rule 112 (empty -> .)
    NOTEQUALS       reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    RIGHT_PARENT    reduce using rule 112 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 112 (empty -> .)

    tp                             shift and go to state 157
    tsig                           shift and go to state 158
    empty                          shift and go to state 159

state 109

    (76) t -> f . fp
    (77) fp -> . fsig f fp
    (78) fp -> . empty
    (79) fsig -> . MULT
    (80) fsig -> . DIV
    (112) empty -> .

    MULT            shift and go to state 165
    DIV             shift and go to state 166
    PLUS            reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    LESS_THAN       reduce using rule 112 (empty -> .)
    GREATER_THAN    reduce using rule 112 (empty -> .)
    EQUALS          reduce using rule 112 (empty -> .)
    NOTEQUALS       reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    RIGHT_PARENT    reduce using rule 112 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 112 (empty -> .)

    fp                             shift and go to state 162
    fsig                           shift and go to state 163
    empty                          shift and go to state 164

state 110

    (81) f -> LEFT_PARENT . exp RIGHT_PARENT
    (59) exp -> . exprel logic
    (64) exprel -> . e relacionalp
    (71) e -> . t tp
    (76) t -> . f fp
    (81) f -> . LEFT_PARENT exp RIGHT_PARENT
    (82) f -> . CTEI
    (83) f -> . CTEF
    (84) f -> . CTEC
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 110
    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    ID              shift and go to state 117
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88
    READ_FILE       shift and go to state 79

    exp                            shift and go to state 167
    exprel                         shift and go to state 106
    e                              shift and go to state 107
    t                              shift and go to state 108
    f                              shift and go to state 109
    variable                       shift and go to state 114
    llamada                        shift and go to state 115
    funcesp                        shift and go to state 116
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77
    copy                           shift and go to state 118

state 111

    (82) f -> CTEI .

    MULT            reduce using rule 82 (f -> CTEI .)
    DIV             reduce using rule 82 (f -> CTEI .)
    PLUS            reduce using rule 82 (f -> CTEI .)
    MINUS           reduce using rule 82 (f -> CTEI .)
    LESS_THAN       reduce using rule 82 (f -> CTEI .)
    GREATER_THAN    reduce using rule 82 (f -> CTEI .)
    EQUALS          reduce using rule 82 (f -> CTEI .)
    NOTEQUALS       reduce using rule 82 (f -> CTEI .)
    AND             reduce using rule 82 (f -> CTEI .)
    OR              reduce using rule 82 (f -> CTEI .)
    SEMICOLON       reduce using rule 82 (f -> CTEI .)
    COMMA           reduce using rule 82 (f -> CTEI .)
    RIGHT_PARENT    reduce using rule 82 (f -> CTEI .)
    RIGHT_SQR_BRACKET reduce using rule 82 (f -> CTEI .)


state 112

    (83) f -> CTEF .

    MULT            reduce using rule 83 (f -> CTEF .)
    DIV             reduce using rule 83 (f -> CTEF .)
    PLUS            reduce using rule 83 (f -> CTEF .)
    MINUS           reduce using rule 83 (f -> CTEF .)
    LESS_THAN       reduce using rule 83 (f -> CTEF .)
    GREATER_THAN    reduce using rule 83 (f -> CTEF .)
    EQUALS          reduce using rule 83 (f -> CTEF .)
    NOTEQUALS       reduce using rule 83 (f -> CTEF .)
    AND             reduce using rule 83 (f -> CTEF .)
    OR              reduce using rule 83 (f -> CTEF .)
    SEMICOLON       reduce using rule 83 (f -> CTEF .)
    COMMA           reduce using rule 83 (f -> CTEF .)
    RIGHT_PARENT    reduce using rule 83 (f -> CTEF .)
    RIGHT_SQR_BRACKET reduce using rule 83 (f -> CTEF .)


state 113

    (84) f -> CTEC .

    MULT            reduce using rule 84 (f -> CTEC .)
    DIV             reduce using rule 84 (f -> CTEC .)
    PLUS            reduce using rule 84 (f -> CTEC .)
    MINUS           reduce using rule 84 (f -> CTEC .)
    LESS_THAN       reduce using rule 84 (f -> CTEC .)
    GREATER_THAN    reduce using rule 84 (f -> CTEC .)
    EQUALS          reduce using rule 84 (f -> CTEC .)
    NOTEQUALS       reduce using rule 84 (f -> CTEC .)
    AND             reduce using rule 84 (f -> CTEC .)
    OR              reduce using rule 84 (f -> CTEC .)
    SEMICOLON       reduce using rule 84 (f -> CTEC .)
    COMMA           reduce using rule 84 (f -> CTEC .)
    RIGHT_PARENT    reduce using rule 84 (f -> CTEC .)
    RIGHT_SQR_BRACKET reduce using rule 84 (f -> CTEC .)


state 114

    (85) f -> variable .

    MULT            reduce using rule 85 (f -> variable .)
    DIV             reduce using rule 85 (f -> variable .)
    PLUS            reduce using rule 85 (f -> variable .)
    MINUS           reduce using rule 85 (f -> variable .)
    LESS_THAN       reduce using rule 85 (f -> variable .)
    GREATER_THAN    reduce using rule 85 (f -> variable .)
    EQUALS          reduce using rule 85 (f -> variable .)
    NOTEQUALS       reduce using rule 85 (f -> variable .)
    AND             reduce using rule 85 (f -> variable .)
    OR              reduce using rule 85 (f -> variable .)
    SEMICOLON       reduce using rule 85 (f -> variable .)
    COMMA           reduce using rule 85 (f -> variable .)
    RIGHT_PARENT    reduce using rule 85 (f -> variable .)
    RIGHT_SQR_BRACKET reduce using rule 85 (f -> variable .)


state 115

    (86) f -> llamada .

    MULT            reduce using rule 86 (f -> llamada .)
    DIV             reduce using rule 86 (f -> llamada .)
    PLUS            reduce using rule 86 (f -> llamada .)
    MINUS           reduce using rule 86 (f -> llamada .)
    LESS_THAN       reduce using rule 86 (f -> llamada .)
    GREATER_THAN    reduce using rule 86 (f -> llamada .)
    EQUALS          reduce using rule 86 (f -> llamada .)
    NOTEQUALS       reduce using rule 86 (f -> llamada .)
    AND             reduce using rule 86 (f -> llamada .)
    OR              reduce using rule 86 (f -> llamada .)
    SEMICOLON       reduce using rule 86 (f -> llamada .)
    COMMA           reduce using rule 86 (f -> llamada .)
    RIGHT_PARENT    reduce using rule 86 (f -> llamada .)
    RIGHT_SQR_BRACKET reduce using rule 86 (f -> llamada .)


state 116

    (87) f -> funcesp .

    MULT            reduce using rule 87 (f -> funcesp .)
    DIV             reduce using rule 87 (f -> funcesp .)
    PLUS            reduce using rule 87 (f -> funcesp .)
    MINUS           reduce using rule 87 (f -> funcesp .)
    LESS_THAN       reduce using rule 87 (f -> funcesp .)
    GREATER_THAN    reduce using rule 87 (f -> funcesp .)
    EQUALS          reduce using rule 87 (f -> funcesp .)
    NOTEQUALS       reduce using rule 87 (f -> funcesp .)
    AND             reduce using rule 87 (f -> funcesp .)
    OR              reduce using rule 87 (f -> funcesp .)
    SEMICOLON       reduce using rule 87 (f -> funcesp .)
    COMMA           reduce using rule 87 (f -> funcesp .)
    RIGHT_PARENT    reduce using rule 87 (f -> funcesp .)
    RIGHT_SQR_BRACKET reduce using rule 87 (f -> funcesp .)


state 117

    (16) variable -> ID . indexp
    (21) llamada -> ID . LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (17) indexp -> . LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET
    (18) indexp -> . empty
    (112) empty -> .

    LEFT_PARENT     shift and go to state 96
    LEFT_SQR_BRACKET shift and go to state 98
    MULT            reduce using rule 112 (empty -> .)
    DIV             reduce using rule 112 (empty -> .)
    PLUS            reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    LESS_THAN       reduce using rule 112 (empty -> .)
    GREATER_THAN    reduce using rule 112 (empty -> .)
    EQUALS          reduce using rule 112 (empty -> .)
    NOTEQUALS       reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    RIGHT_PARENT    reduce using rule 112 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 112 (empty -> .)

    indexp                         shift and go to state 97
    empty                          shift and go to state 99

state 118

    (102) funcesp -> copy .

    MULT            reduce using rule 102 (funcesp -> copy .)
    DIV             reduce using rule 102 (funcesp -> copy .)
    PLUS            reduce using rule 102 (funcesp -> copy .)
    MINUS           reduce using rule 102 (funcesp -> copy .)
    LESS_THAN       reduce using rule 102 (funcesp -> copy .)
    GREATER_THAN    reduce using rule 102 (funcesp -> copy .)
    EQUALS          reduce using rule 102 (funcesp -> copy .)
    NOTEQUALS       reduce using rule 102 (funcesp -> copy .)
    AND             reduce using rule 102 (funcesp -> copy .)
    OR              reduce using rule 102 (funcesp -> copy .)
    SEMICOLON       reduce using rule 102 (funcesp -> copy .)
    COMMA           reduce using rule 102 (funcesp -> copy .)
    RIGHT_PARENT    reduce using rule 102 (funcesp -> copy .)
    RIGHT_SQR_BRACKET reduce using rule 102 (funcesp -> copy .)


state 119

    (14) copy -> READ_FILE LEFT_PARENT . LETRERO RIGHT_PARENT SEMICOLON

    LETRERO         shift and go to state 168


state 120

    (103) mean -> MEAN LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 137

    variable                       shift and go to state 169

state 121

    (104) mode -> MODE LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 137

    variable                       shift and go to state 170

state 122

    (105) median -> MEDIAN LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 137

    variable                       shift and go to state 171

state 123

    (106) variance -> VARIANCE LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 137

    variable                       shift and go to state 172

state 124

    (107) max -> MAX LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 137

    variable                       shift and go to state 173

state 125

    (108) min -> MIN LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 137

    variable                       shift and go to state 174

state 126

    (109) staddes -> STADDES LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 137

    variable                       shift and go to state 175

state 127

    (110) boxplot -> BOXPLOT LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 137

    variable                       shift and go to state 176

state 128

    (111) linreg -> LINREG LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 137

    variable                       shift and go to state 177

state 129

    (36) func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT . LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET

    LEFT_CUR_BRACKET shift and go to state 178


state 130

    (39) param -> tipo_simp ARROW . ID paramp

    ID              shift and go to state 179


state 131

    (53) asign -> variable ASIGN exp . SEMICOLON

    SEMICOLON       shift and go to state 180


state 132

    (21) llamada -> ID LEFT_PARENT expp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 181


state 133

    (22) expp -> exp . exppp
    (24) exppp -> . COMMA exp exppp
    (25) exppp -> . empty
    (112) empty -> .

    COMMA           shift and go to state 183
    RIGHT_PARENT    reduce using rule 112 (empty -> .)

    exppp                          shift and go to state 182
    empty                          shift and go to state 184

state 134

    (23) expp -> empty .

    RIGHT_PARENT    reduce using rule 23 (expp -> empty .)


state 135

    (17) indexp -> LEFT_SQR_BRACKET exp . indexpp RIGHT_SQR_BRACKET
    (19) indexpp -> . COMMA exp
    (20) indexpp -> . empty
    (112) empty -> .

    COMMA           shift and go to state 186
    RIGHT_SQR_BRACKET reduce using rule 112 (empty -> .)

    indexpp                        shift and go to state 185
    empty                          shift and go to state 187

state 136

    (54) lee -> READ LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 188


state 137

    (16) variable -> ID . indexp
    (17) indexp -> . LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET
    (18) indexp -> . empty
    (112) empty -> .

    LEFT_SQR_BRACKET shift and go to state 98
    RIGHT_PARENT    reduce using rule 112 (empty -> .)
    ASIGN           reduce using rule 112 (empty -> .)

    indexp                         shift and go to state 97
    empty                          shift and go to state 99

state 138

    (55) escribe -> WRITE LEFT_PARENT escribep . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 189


state 139

    (56) escribep -> exp .

    RIGHT_PARENT    reduce using rule 56 (escribep -> exp .)


state 140

    (57) escribep -> LETRERO .

    RIGHT_PARENT    reduce using rule 57 (escribep -> LETRERO .)


state 141

    (88) condicion -> IF LEFT_PARENT exp . RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop

    RIGHT_PARENT    shift and go to state 190


state 142

    (91) ciclow -> WHILE LEFT_PARENT exp . RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    RIGHT_PARENT    shift and go to state 191


state 143

    (92) ciclof -> FOR LEFT_PARENT asign . exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (59) exp -> . exprel logic
    (64) exprel -> . e relacionalp
    (71) e -> . t tp
    (76) t -> . f fp
    (81) f -> . LEFT_PARENT exp RIGHT_PARENT
    (82) f -> . CTEI
    (83) f -> . CTEF
    (84) f -> . CTEC
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 110
    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    ID              shift and go to state 117
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88
    READ_FILE       shift and go to state 79

    exp                            shift and go to state 192
    exprel                         shift and go to state 106
    e                              shift and go to state 107
    t                              shift and go to state 108
    f                              shift and go to state 109
    variable                       shift and go to state 114
    llamada                        shift and go to state 115
    funcesp                        shift and go to state 116
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77
    copy                           shift and go to state 118

state 144

    (58) return -> RETURNS exp SEMICOLON .

    ID              reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    READ            reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    WRITE           reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    IF              reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    WHILE           reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    FOR             reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    RETURNS         reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    READ_FILE       reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    MEAN            reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    MODE            reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    MEDIAN          reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    VARIANCE        reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    MAX             reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    MIN             reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    STADDES         reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    BOXPLOT         reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    LINREG          reduce using rule 58 (return -> RETURNS exp SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 58 (return -> RETURNS exp SEMICOLON .)


state 145

    (59) exp -> exprel logic .

    SEMICOLON       reduce using rule 59 (exp -> exprel logic .)
    COMMA           reduce using rule 59 (exp -> exprel logic .)
    RIGHT_PARENT    reduce using rule 59 (exp -> exprel logic .)
    RIGHT_SQR_BRACKET reduce using rule 59 (exp -> exprel logic .)


state 146

    (60) logic -> logicsig . exprel logic
    (64) exprel -> . e relacionalp
    (71) e -> . t tp
    (76) t -> . f fp
    (81) f -> . LEFT_PARENT exp RIGHT_PARENT
    (82) f -> . CTEI
    (83) f -> . CTEF
    (84) f -> . CTEC
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 110
    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    ID              shift and go to state 117
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88
    READ_FILE       shift and go to state 79

    exprel                         shift and go to state 193
    e                              shift and go to state 107
    t                              shift and go to state 108
    f                              shift and go to state 109
    variable                       shift and go to state 114
    llamada                        shift and go to state 115
    funcesp                        shift and go to state 116
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77
    copy                           shift and go to state 118

state 147

    (61) logic -> empty .

    SEMICOLON       reduce using rule 61 (logic -> empty .)
    COMMA           reduce using rule 61 (logic -> empty .)
    RIGHT_PARENT    reduce using rule 61 (logic -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 61 (logic -> empty .)


state 148

    (62) logicsig -> AND .

    LEFT_PARENT     reduce using rule 62 (logicsig -> AND .)
    CTEI            reduce using rule 62 (logicsig -> AND .)
    CTEF            reduce using rule 62 (logicsig -> AND .)
    CTEC            reduce using rule 62 (logicsig -> AND .)
    ID              reduce using rule 62 (logicsig -> AND .)
    MEAN            reduce using rule 62 (logicsig -> AND .)
    MODE            reduce using rule 62 (logicsig -> AND .)
    MEDIAN          reduce using rule 62 (logicsig -> AND .)
    VARIANCE        reduce using rule 62 (logicsig -> AND .)
    MAX             reduce using rule 62 (logicsig -> AND .)
    MIN             reduce using rule 62 (logicsig -> AND .)
    STADDES         reduce using rule 62 (logicsig -> AND .)
    BOXPLOT         reduce using rule 62 (logicsig -> AND .)
    LINREG          reduce using rule 62 (logicsig -> AND .)
    READ_FILE       reduce using rule 62 (logicsig -> AND .)


state 149

    (63) logicsig -> OR .

    LEFT_PARENT     reduce using rule 63 (logicsig -> OR .)
    CTEI            reduce using rule 63 (logicsig -> OR .)
    CTEF            reduce using rule 63 (logicsig -> OR .)
    CTEC            reduce using rule 63 (logicsig -> OR .)
    ID              reduce using rule 63 (logicsig -> OR .)
    MEAN            reduce using rule 63 (logicsig -> OR .)
    MODE            reduce using rule 63 (logicsig -> OR .)
    MEDIAN          reduce using rule 63 (logicsig -> OR .)
    VARIANCE        reduce using rule 63 (logicsig -> OR .)
    MAX             reduce using rule 63 (logicsig -> OR .)
    MIN             reduce using rule 63 (logicsig -> OR .)
    STADDES         reduce using rule 63 (logicsig -> OR .)
    BOXPLOT         reduce using rule 63 (logicsig -> OR .)
    LINREG          reduce using rule 63 (logicsig -> OR .)
    READ_FILE       reduce using rule 63 (logicsig -> OR .)


state 150

    (64) exprel -> e relacionalp .

    AND             reduce using rule 64 (exprel -> e relacionalp .)
    OR              reduce using rule 64 (exprel -> e relacionalp .)
    SEMICOLON       reduce using rule 64 (exprel -> e relacionalp .)
    COMMA           reduce using rule 64 (exprel -> e relacionalp .)
    RIGHT_PARENT    reduce using rule 64 (exprel -> e relacionalp .)
    RIGHT_SQR_BRACKET reduce using rule 64 (exprel -> e relacionalp .)


state 151

    (65) relacionalp -> relsig . e relacionalp
    (71) e -> . t tp
    (76) t -> . f fp
    (81) f -> . LEFT_PARENT exp RIGHT_PARENT
    (82) f -> . CTEI
    (83) f -> . CTEF
    (84) f -> . CTEC
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 110
    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    ID              shift and go to state 117
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88
    READ_FILE       shift and go to state 79

    e                              shift and go to state 194
    t                              shift and go to state 108
    f                              shift and go to state 109
    variable                       shift and go to state 114
    llamada                        shift and go to state 115
    funcesp                        shift and go to state 116
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77
    copy                           shift and go to state 118

state 152

    (66) relacionalp -> empty .

    AND             reduce using rule 66 (relacionalp -> empty .)
    OR              reduce using rule 66 (relacionalp -> empty .)
    SEMICOLON       reduce using rule 66 (relacionalp -> empty .)
    COMMA           reduce using rule 66 (relacionalp -> empty .)
    RIGHT_PARENT    reduce using rule 66 (relacionalp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 66 (relacionalp -> empty .)


state 153

    (67) relsig -> LESS_THAN .

    LEFT_PARENT     reduce using rule 67 (relsig -> LESS_THAN .)
    CTEI            reduce using rule 67 (relsig -> LESS_THAN .)
    CTEF            reduce using rule 67 (relsig -> LESS_THAN .)
    CTEC            reduce using rule 67 (relsig -> LESS_THAN .)
    ID              reduce using rule 67 (relsig -> LESS_THAN .)
    MEAN            reduce using rule 67 (relsig -> LESS_THAN .)
    MODE            reduce using rule 67 (relsig -> LESS_THAN .)
    MEDIAN          reduce using rule 67 (relsig -> LESS_THAN .)
    VARIANCE        reduce using rule 67 (relsig -> LESS_THAN .)
    MAX             reduce using rule 67 (relsig -> LESS_THAN .)
    MIN             reduce using rule 67 (relsig -> LESS_THAN .)
    STADDES         reduce using rule 67 (relsig -> LESS_THAN .)
    BOXPLOT         reduce using rule 67 (relsig -> LESS_THAN .)
    LINREG          reduce using rule 67 (relsig -> LESS_THAN .)
    READ_FILE       reduce using rule 67 (relsig -> LESS_THAN .)


state 154

    (68) relsig -> GREATER_THAN .

    LEFT_PARENT     reduce using rule 68 (relsig -> GREATER_THAN .)
    CTEI            reduce using rule 68 (relsig -> GREATER_THAN .)
    CTEF            reduce using rule 68 (relsig -> GREATER_THAN .)
    CTEC            reduce using rule 68 (relsig -> GREATER_THAN .)
    ID              reduce using rule 68 (relsig -> GREATER_THAN .)
    MEAN            reduce using rule 68 (relsig -> GREATER_THAN .)
    MODE            reduce using rule 68 (relsig -> GREATER_THAN .)
    MEDIAN          reduce using rule 68 (relsig -> GREATER_THAN .)
    VARIANCE        reduce using rule 68 (relsig -> GREATER_THAN .)
    MAX             reduce using rule 68 (relsig -> GREATER_THAN .)
    MIN             reduce using rule 68 (relsig -> GREATER_THAN .)
    STADDES         reduce using rule 68 (relsig -> GREATER_THAN .)
    BOXPLOT         reduce using rule 68 (relsig -> GREATER_THAN .)
    LINREG          reduce using rule 68 (relsig -> GREATER_THAN .)
    READ_FILE       reduce using rule 68 (relsig -> GREATER_THAN .)


state 155

    (69) relsig -> EQUALS .

    LEFT_PARENT     reduce using rule 69 (relsig -> EQUALS .)
    CTEI            reduce using rule 69 (relsig -> EQUALS .)
    CTEF            reduce using rule 69 (relsig -> EQUALS .)
    CTEC            reduce using rule 69 (relsig -> EQUALS .)
    ID              reduce using rule 69 (relsig -> EQUALS .)
    MEAN            reduce using rule 69 (relsig -> EQUALS .)
    MODE            reduce using rule 69 (relsig -> EQUALS .)
    MEDIAN          reduce using rule 69 (relsig -> EQUALS .)
    VARIANCE        reduce using rule 69 (relsig -> EQUALS .)
    MAX             reduce using rule 69 (relsig -> EQUALS .)
    MIN             reduce using rule 69 (relsig -> EQUALS .)
    STADDES         reduce using rule 69 (relsig -> EQUALS .)
    BOXPLOT         reduce using rule 69 (relsig -> EQUALS .)
    LINREG          reduce using rule 69 (relsig -> EQUALS .)
    READ_FILE       reduce using rule 69 (relsig -> EQUALS .)


state 156

    (70) relsig -> NOTEQUALS .

    LEFT_PARENT     reduce using rule 70 (relsig -> NOTEQUALS .)
    CTEI            reduce using rule 70 (relsig -> NOTEQUALS .)
    CTEF            reduce using rule 70 (relsig -> NOTEQUALS .)
    CTEC            reduce using rule 70 (relsig -> NOTEQUALS .)
    ID              reduce using rule 70 (relsig -> NOTEQUALS .)
    MEAN            reduce using rule 70 (relsig -> NOTEQUALS .)
    MODE            reduce using rule 70 (relsig -> NOTEQUALS .)
    MEDIAN          reduce using rule 70 (relsig -> NOTEQUALS .)
    VARIANCE        reduce using rule 70 (relsig -> NOTEQUALS .)
    MAX             reduce using rule 70 (relsig -> NOTEQUALS .)
    MIN             reduce using rule 70 (relsig -> NOTEQUALS .)
    STADDES         reduce using rule 70 (relsig -> NOTEQUALS .)
    BOXPLOT         reduce using rule 70 (relsig -> NOTEQUALS .)
    LINREG          reduce using rule 70 (relsig -> NOTEQUALS .)
    READ_FILE       reduce using rule 70 (relsig -> NOTEQUALS .)


state 157

    (71) e -> t tp .

    LESS_THAN       reduce using rule 71 (e -> t tp .)
    GREATER_THAN    reduce using rule 71 (e -> t tp .)
    EQUALS          reduce using rule 71 (e -> t tp .)
    NOTEQUALS       reduce using rule 71 (e -> t tp .)
    AND             reduce using rule 71 (e -> t tp .)
    OR              reduce using rule 71 (e -> t tp .)
    SEMICOLON       reduce using rule 71 (e -> t tp .)
    COMMA           reduce using rule 71 (e -> t tp .)
    RIGHT_PARENT    reduce using rule 71 (e -> t tp .)
    RIGHT_SQR_BRACKET reduce using rule 71 (e -> t tp .)


state 158

    (72) tp -> tsig . t tp
    (76) t -> . f fp
    (81) f -> . LEFT_PARENT exp RIGHT_PARENT
    (82) f -> . CTEI
    (83) f -> . CTEF
    (84) f -> . CTEC
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 110
    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    ID              shift and go to state 117
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88
    READ_FILE       shift and go to state 79

    t                              shift and go to state 195
    f                              shift and go to state 109
    variable                       shift and go to state 114
    llamada                        shift and go to state 115
    funcesp                        shift and go to state 116
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77
    copy                           shift and go to state 118

state 159

    (73) tp -> empty .

    LESS_THAN       reduce using rule 73 (tp -> empty .)
    GREATER_THAN    reduce using rule 73 (tp -> empty .)
    EQUALS          reduce using rule 73 (tp -> empty .)
    NOTEQUALS       reduce using rule 73 (tp -> empty .)
    AND             reduce using rule 73 (tp -> empty .)
    OR              reduce using rule 73 (tp -> empty .)
    SEMICOLON       reduce using rule 73 (tp -> empty .)
    COMMA           reduce using rule 73 (tp -> empty .)
    RIGHT_PARENT    reduce using rule 73 (tp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 73 (tp -> empty .)


state 160

    (74) tsig -> PLUS .

    LEFT_PARENT     reduce using rule 74 (tsig -> PLUS .)
    CTEI            reduce using rule 74 (tsig -> PLUS .)
    CTEF            reduce using rule 74 (tsig -> PLUS .)
    CTEC            reduce using rule 74 (tsig -> PLUS .)
    ID              reduce using rule 74 (tsig -> PLUS .)
    MEAN            reduce using rule 74 (tsig -> PLUS .)
    MODE            reduce using rule 74 (tsig -> PLUS .)
    MEDIAN          reduce using rule 74 (tsig -> PLUS .)
    VARIANCE        reduce using rule 74 (tsig -> PLUS .)
    MAX             reduce using rule 74 (tsig -> PLUS .)
    MIN             reduce using rule 74 (tsig -> PLUS .)
    STADDES         reduce using rule 74 (tsig -> PLUS .)
    BOXPLOT         reduce using rule 74 (tsig -> PLUS .)
    LINREG          reduce using rule 74 (tsig -> PLUS .)
    READ_FILE       reduce using rule 74 (tsig -> PLUS .)


state 161

    (75) tsig -> MINUS .

    LEFT_PARENT     reduce using rule 75 (tsig -> MINUS .)
    CTEI            reduce using rule 75 (tsig -> MINUS .)
    CTEF            reduce using rule 75 (tsig -> MINUS .)
    CTEC            reduce using rule 75 (tsig -> MINUS .)
    ID              reduce using rule 75 (tsig -> MINUS .)
    MEAN            reduce using rule 75 (tsig -> MINUS .)
    MODE            reduce using rule 75 (tsig -> MINUS .)
    MEDIAN          reduce using rule 75 (tsig -> MINUS .)
    VARIANCE        reduce using rule 75 (tsig -> MINUS .)
    MAX             reduce using rule 75 (tsig -> MINUS .)
    MIN             reduce using rule 75 (tsig -> MINUS .)
    STADDES         reduce using rule 75 (tsig -> MINUS .)
    BOXPLOT         reduce using rule 75 (tsig -> MINUS .)
    LINREG          reduce using rule 75 (tsig -> MINUS .)
    READ_FILE       reduce using rule 75 (tsig -> MINUS .)


state 162

    (76) t -> f fp .

    PLUS            reduce using rule 76 (t -> f fp .)
    MINUS           reduce using rule 76 (t -> f fp .)
    LESS_THAN       reduce using rule 76 (t -> f fp .)
    GREATER_THAN    reduce using rule 76 (t -> f fp .)
    EQUALS          reduce using rule 76 (t -> f fp .)
    NOTEQUALS       reduce using rule 76 (t -> f fp .)
    AND             reduce using rule 76 (t -> f fp .)
    OR              reduce using rule 76 (t -> f fp .)
    SEMICOLON       reduce using rule 76 (t -> f fp .)
    COMMA           reduce using rule 76 (t -> f fp .)
    RIGHT_PARENT    reduce using rule 76 (t -> f fp .)
    RIGHT_SQR_BRACKET reduce using rule 76 (t -> f fp .)


state 163

    (77) fp -> fsig . f fp
    (81) f -> . LEFT_PARENT exp RIGHT_PARENT
    (82) f -> . CTEI
    (83) f -> . CTEF
    (84) f -> . CTEC
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 110
    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    ID              shift and go to state 117
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88
    READ_FILE       shift and go to state 79

    f                              shift and go to state 196
    variable                       shift and go to state 114
    llamada                        shift and go to state 115
    funcesp                        shift and go to state 116
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77
    copy                           shift and go to state 118

state 164

    (78) fp -> empty .

    PLUS            reduce using rule 78 (fp -> empty .)
    MINUS           reduce using rule 78 (fp -> empty .)
    LESS_THAN       reduce using rule 78 (fp -> empty .)
    GREATER_THAN    reduce using rule 78 (fp -> empty .)
    EQUALS          reduce using rule 78 (fp -> empty .)
    NOTEQUALS       reduce using rule 78 (fp -> empty .)
    AND             reduce using rule 78 (fp -> empty .)
    OR              reduce using rule 78 (fp -> empty .)
    SEMICOLON       reduce using rule 78 (fp -> empty .)
    COMMA           reduce using rule 78 (fp -> empty .)
    RIGHT_PARENT    reduce using rule 78 (fp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 78 (fp -> empty .)


state 165

    (79) fsig -> MULT .

    LEFT_PARENT     reduce using rule 79 (fsig -> MULT .)
    CTEI            reduce using rule 79 (fsig -> MULT .)
    CTEF            reduce using rule 79 (fsig -> MULT .)
    CTEC            reduce using rule 79 (fsig -> MULT .)
    ID              reduce using rule 79 (fsig -> MULT .)
    MEAN            reduce using rule 79 (fsig -> MULT .)
    MODE            reduce using rule 79 (fsig -> MULT .)
    MEDIAN          reduce using rule 79 (fsig -> MULT .)
    VARIANCE        reduce using rule 79 (fsig -> MULT .)
    MAX             reduce using rule 79 (fsig -> MULT .)
    MIN             reduce using rule 79 (fsig -> MULT .)
    STADDES         reduce using rule 79 (fsig -> MULT .)
    BOXPLOT         reduce using rule 79 (fsig -> MULT .)
    LINREG          reduce using rule 79 (fsig -> MULT .)
    READ_FILE       reduce using rule 79 (fsig -> MULT .)


state 166

    (80) fsig -> DIV .

    LEFT_PARENT     reduce using rule 80 (fsig -> DIV .)
    CTEI            reduce using rule 80 (fsig -> DIV .)
    CTEF            reduce using rule 80 (fsig -> DIV .)
    CTEC            reduce using rule 80 (fsig -> DIV .)
    ID              reduce using rule 80 (fsig -> DIV .)
    MEAN            reduce using rule 80 (fsig -> DIV .)
    MODE            reduce using rule 80 (fsig -> DIV .)
    MEDIAN          reduce using rule 80 (fsig -> DIV .)
    VARIANCE        reduce using rule 80 (fsig -> DIV .)
    MAX             reduce using rule 80 (fsig -> DIV .)
    MIN             reduce using rule 80 (fsig -> DIV .)
    STADDES         reduce using rule 80 (fsig -> DIV .)
    BOXPLOT         reduce using rule 80 (fsig -> DIV .)
    LINREG          reduce using rule 80 (fsig -> DIV .)
    READ_FILE       reduce using rule 80 (fsig -> DIV .)


state 167

    (81) f -> LEFT_PARENT exp . RIGHT_PARENT

    RIGHT_PARENT    shift and go to state 197


state 168

    (14) copy -> READ_FILE LEFT_PARENT LETRERO . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 198


state 169

    (103) mean -> MEAN LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 199


state 170

    (104) mode -> MODE LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 200


state 171

    (105) median -> MEDIAN LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 201


state 172

    (106) variance -> VARIANCE LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 202


state 173

    (107) max -> MAX LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 203


state 174

    (108) min -> MIN LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 204


state 175

    (109) staddes -> STADDES LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 205


state 176

    (110) boxplot -> BOXPLOT LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 206


state 177

    (111) linreg -> LINREG LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 207


state 178

    (36) func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET . varp estatutop RIGHT_CUR_BRACKET
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR v ARROW idp SEMICOLON
    (112) empty -> .

    VAR             shift and go to state 8
    ID              reduce using rule 112 (empty -> .)
    READ            reduce using rule 112 (empty -> .)
    WRITE           reduce using rule 112 (empty -> .)
    IF              reduce using rule 112 (empty -> .)
    WHILE           reduce using rule 112 (empty -> .)
    FOR             reduce using rule 112 (empty -> .)
    RETURNS         reduce using rule 112 (empty -> .)
    READ_FILE       reduce using rule 112 (empty -> .)
    MEAN            reduce using rule 112 (empty -> .)
    MODE            reduce using rule 112 (empty -> .)
    MEDIAN          reduce using rule 112 (empty -> .)
    VARIANCE        reduce using rule 112 (empty -> .)
    MAX             reduce using rule 112 (empty -> .)
    MIN             reduce using rule 112 (empty -> .)
    STADDES         reduce using rule 112 (empty -> .)
    BOXPLOT         reduce using rule 112 (empty -> .)
    LINREG          reduce using rule 112 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 112 (empty -> .)

    varp                           shift and go to state 208
    var                            shift and go to state 6
    empty                          shift and go to state 7

state 179

    (39) param -> tipo_simp ARROW ID . paramp
    (41) paramp -> . COMMA param paramp
    (42) paramp -> . empty
    (112) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 210
    RIGHT_PARENT    reduce using rule 112 (empty -> .)

  ! COMMA           [ reduce using rule 112 (empty -> .) ]

    paramp                         shift and go to state 209
    empty                          shift and go to state 211

state 180

    (53) asign -> variable ASIGN exp SEMICOLON .

    ID              reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    READ            reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    WRITE           reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    IF              reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    WHILE           reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    FOR             reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    RETURNS         reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    READ_FILE       reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    MEAN            reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    MODE            reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    MEDIAN          reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    VARIANCE        reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    MAX             reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    MIN             reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    STADDES         reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    BOXPLOT         reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    LINREG          reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    LEFT_PARENT     reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    CTEI            reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    CTEF            reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)
    CTEC            reduce using rule 53 (asign -> variable ASIGN exp SEMICOLON .)


state 181

    (21) llamada -> ID LEFT_PARENT expp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 212


state 182

    (22) expp -> exp exppp .

    RIGHT_PARENT    reduce using rule 22 (expp -> exp exppp .)


state 183

    (24) exppp -> COMMA . exp exppp
    (59) exp -> . exprel logic
    (64) exprel -> . e relacionalp
    (71) e -> . t tp
    (76) t -> . f fp
    (81) f -> . LEFT_PARENT exp RIGHT_PARENT
    (82) f -> . CTEI
    (83) f -> . CTEF
    (84) f -> . CTEC
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 110
    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    ID              shift and go to state 117
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88
    READ_FILE       shift and go to state 79

    exp                            shift and go to state 213
    exprel                         shift and go to state 106
    e                              shift and go to state 107
    t                              shift and go to state 108
    f                              shift and go to state 109
    variable                       shift and go to state 114
    llamada                        shift and go to state 115
    funcesp                        shift and go to state 116
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77
    copy                           shift and go to state 118

state 184

    (25) exppp -> empty .

    RIGHT_PARENT    reduce using rule 25 (exppp -> empty .)


state 185

    (17) indexp -> LEFT_SQR_BRACKET exp indexpp . RIGHT_SQR_BRACKET

    RIGHT_SQR_BRACKET shift and go to state 214


state 186

    (19) indexpp -> COMMA . exp
    (59) exp -> . exprel logic
    (64) exprel -> . e relacionalp
    (71) e -> . t tp
    (76) t -> . f fp
    (81) f -> . LEFT_PARENT exp RIGHT_PARENT
    (82) f -> . CTEI
    (83) f -> . CTEF
    (84) f -> . CTEC
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 110
    CTEI            shift and go to state 111
    CTEF            shift and go to state 112
    CTEC            shift and go to state 113
    ID              shift and go to state 117
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88
    READ_FILE       shift and go to state 79

    exp                            shift and go to state 215
    exprel                         shift and go to state 106
    e                              shift and go to state 107
    t                              shift and go to state 108
    f                              shift and go to state 109
    variable                       shift and go to state 114
    llamada                        shift and go to state 115
    funcesp                        shift and go to state 116
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77
    copy                           shift and go to state 118

state 187

    (20) indexpp -> empty .

    RIGHT_SQR_BRACKET reduce using rule 20 (indexpp -> empty .)


state 188

    (54) lee -> READ LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 216


state 189

    (55) escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 217


state 190

    (88) condicion -> IF LEFT_PARENT exp RIGHT_PARENT . IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop

    IF_TRUE         shift and go to state 218


state 191

    (91) ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_CUR_BRACKET shift and go to state 219


state 192

    (92) ciclof -> FOR LEFT_PARENT asign exp . RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    RIGHT_PARENT    shift and go to state 220


state 193

    (60) logic -> logicsig exprel . logic
    (60) logic -> . logicsig exprel logic
    (61) logic -> . empty
    (62) logicsig -> . AND
    (63) logicsig -> . OR
    (112) empty -> .

    AND             shift and go to state 148
    OR              shift and go to state 149
    SEMICOLON       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    RIGHT_PARENT    reduce using rule 112 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 112 (empty -> .)

    logicsig                       shift and go to state 146
    logic                          shift and go to state 221
    empty                          shift and go to state 147

state 194

    (65) relacionalp -> relsig e . relacionalp
    (65) relacionalp -> . relsig e relacionalp
    (66) relacionalp -> . empty
    (67) relsig -> . LESS_THAN
    (68) relsig -> . GREATER_THAN
    (69) relsig -> . EQUALS
    (70) relsig -> . NOTEQUALS
    (112) empty -> .

    LESS_THAN       shift and go to state 153
    GREATER_THAN    shift and go to state 154
    EQUALS          shift and go to state 155
    NOTEQUALS       shift and go to state 156
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    RIGHT_PARENT    reduce using rule 112 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 112 (empty -> .)

    relsig                         shift and go to state 151
    relacionalp                    shift and go to state 222
    empty                          shift and go to state 152

state 195

    (72) tp -> tsig t . tp
    (72) tp -> . tsig t tp
    (73) tp -> . empty
    (74) tsig -> . PLUS
    (75) tsig -> . MINUS
    (112) empty -> .

    PLUS            shift and go to state 160
    MINUS           shift and go to state 161
    LESS_THAN       reduce using rule 112 (empty -> .)
    GREATER_THAN    reduce using rule 112 (empty -> .)
    EQUALS          reduce using rule 112 (empty -> .)
    NOTEQUALS       reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    RIGHT_PARENT    reduce using rule 112 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 112 (empty -> .)

    tsig                           shift and go to state 158
    tp                             shift and go to state 223
    empty                          shift and go to state 159

state 196

    (77) fp -> fsig f . fp
    (77) fp -> . fsig f fp
    (78) fp -> . empty
    (79) fsig -> . MULT
    (80) fsig -> . DIV
    (112) empty -> .

    MULT            shift and go to state 165
    DIV             shift and go to state 166
    PLUS            reduce using rule 112 (empty -> .)
    MINUS           reduce using rule 112 (empty -> .)
    LESS_THAN       reduce using rule 112 (empty -> .)
    GREATER_THAN    reduce using rule 112 (empty -> .)
    EQUALS          reduce using rule 112 (empty -> .)
    NOTEQUALS       reduce using rule 112 (empty -> .)
    AND             reduce using rule 112 (empty -> .)
    OR              reduce using rule 112 (empty -> .)
    SEMICOLON       reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)
    RIGHT_PARENT    reduce using rule 112 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 112 (empty -> .)

    fsig                           shift and go to state 163
    fp                             shift and go to state 224
    empty                          shift and go to state 164

state 197

    (81) f -> LEFT_PARENT exp RIGHT_PARENT .

    MULT            reduce using rule 81 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    DIV             reduce using rule 81 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    PLUS            reduce using rule 81 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    MINUS           reduce using rule 81 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    LESS_THAN       reduce using rule 81 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    GREATER_THAN    reduce using rule 81 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    EQUALS          reduce using rule 81 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    NOTEQUALS       reduce using rule 81 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    AND             reduce using rule 81 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    OR              reduce using rule 81 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    SEMICOLON       reduce using rule 81 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    COMMA           reduce using rule 81 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    RIGHT_PARENT    reduce using rule 81 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    RIGHT_SQR_BRACKET reduce using rule 81 (f -> LEFT_PARENT exp RIGHT_PARENT .)


state 198

    (14) copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 225


state 199

    (103) mean -> MEAN LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 226


state 200

    (104) mode -> MODE LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 227


state 201

    (105) median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 228


state 202

    (106) variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 229


state 203

    (107) max -> MAX LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 230


state 204

    (108) min -> MIN LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 231


state 205

    (109) staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 232


state 206

    (110) boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 233


state 207

    (111) linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 234


state 208

    (36) func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp . estatutop RIGHT_CUR_BRACKET
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (43) estatuto -> . asign
    (44) estatuto -> . llamada
    (45) estatuto -> . lee
    (46) estatuto -> . escribe
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclow
    (49) estatuto -> . ciclof
    (50) estatuto -> . funcesp
    (51) estatuto -> . return
    (52) estatuto -> . copy
    (112) empty -> .
    (53) asign -> . variable ASIGN exp SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (54) lee -> . READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (55) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (88) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (91) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (92) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (58) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 112 (empty -> .)
    ID              shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 67
    FOR             shift and go to state 68
    RETURNS         shift and go to state 78
    READ_FILE       shift and go to state 79
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88

    estatutop                      shift and go to state 235
    estatuto                       shift and go to state 50
    empty                          shift and go to state 51
    asign                          shift and go to state 52
    llamada                        shift and go to state 53
    lee                            shift and go to state 54
    escribe                        shift and go to state 55
    condicion                      shift and go to state 56
    ciclow                         shift and go to state 57
    ciclof                         shift and go to state 58
    funcesp                        shift and go to state 59
    return                         shift and go to state 60
    copy                           shift and go to state 61
    variable                       shift and go to state 62
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77

state 209

    (39) param -> tipo_simp ARROW ID paramp .

    RIGHT_PARENT    reduce using rule 39 (param -> tipo_simp ARROW ID paramp .)
    COMMA           reduce using rule 39 (param -> tipo_simp ARROW ID paramp .)


state 210

    (41) paramp -> COMMA . param paramp
    (39) param -> . tipo_simp ARROW ID paramp
    (40) param -> . empty
    (9) tipo_simp -> . INT
    (10) tipo_simp -> . FLOAT
    (11) tipo_simp -> . CHAR
    (112) empty -> .

    INT             shift and go to state 17
    FLOAT           shift and go to state 18
    CHAR            shift and go to state 19
    RIGHT_PARENT    reduce using rule 112 (empty -> .)
    COMMA           reduce using rule 112 (empty -> .)

    param                          shift and go to state 236
    tipo_simp                      shift and go to state 90
    empty                          shift and go to state 91

state 211

    (42) paramp -> empty .

    RIGHT_PARENT    reduce using rule 42 (paramp -> empty .)
    COMMA           reduce using rule 42 (paramp -> empty .)


state 212

    (21) llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)


state 213

    (24) exppp -> COMMA exp . exppp
    (24) exppp -> . COMMA exp exppp
    (25) exppp -> . empty
    (112) empty -> .

    COMMA           shift and go to state 183
    RIGHT_PARENT    reduce using rule 112 (empty -> .)

    exppp                          shift and go to state 237
    empty                          shift and go to state 184

state 214

    (17) indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .

    ASIGN           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    MULT            reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    DIV             reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    PLUS            reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    MINUS           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    LESS_THAN       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    GREATER_THAN    reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    EQUALS          reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    NOTEQUALS       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    AND             reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    OR              reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    SEMICOLON       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    COMMA           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    RIGHT_PARENT    reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    RIGHT_SQR_BRACKET reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)


state 215

    (19) indexpp -> COMMA exp .

    RIGHT_SQR_BRACKET reduce using rule 19 (indexpp -> COMMA exp .)


state 216

    (54) lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 54 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 217

    (55) escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)


state 218

    (88) condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop

    LEFT_CUR_BRACKET shift and go to state 238


state 219

    (91) ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (43) estatuto -> . asign
    (44) estatuto -> . llamada
    (45) estatuto -> . lee
    (46) estatuto -> . escribe
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclow
    (49) estatuto -> . ciclof
    (50) estatuto -> . funcesp
    (51) estatuto -> . return
    (52) estatuto -> . copy
    (112) empty -> .
    (53) asign -> . variable ASIGN exp SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (54) lee -> . READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (55) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (88) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (91) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (92) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (58) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 112 (empty -> .)
    ID              shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 67
    FOR             shift and go to state 68
    RETURNS         shift and go to state 78
    READ_FILE       shift and go to state 79
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88

    estatutop                      shift and go to state 239
    estatuto                       shift and go to state 50
    empty                          shift and go to state 51
    asign                          shift and go to state 52
    llamada                        shift and go to state 53
    lee                            shift and go to state 54
    escribe                        shift and go to state 55
    condicion                      shift and go to state 56
    ciclow                         shift and go to state 57
    ciclof                         shift and go to state 58
    funcesp                        shift and go to state 59
    return                         shift and go to state 60
    copy                           shift and go to state 61
    variable                       shift and go to state 62
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77

state 220

    (92) ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_CUR_BRACKET shift and go to state 240


state 221

    (60) logic -> logicsig exprel logic .

    SEMICOLON       reduce using rule 60 (logic -> logicsig exprel logic .)
    COMMA           reduce using rule 60 (logic -> logicsig exprel logic .)
    RIGHT_PARENT    reduce using rule 60 (logic -> logicsig exprel logic .)
    RIGHT_SQR_BRACKET reduce using rule 60 (logic -> logicsig exprel logic .)


state 222

    (65) relacionalp -> relsig e relacionalp .

    AND             reduce using rule 65 (relacionalp -> relsig e relacionalp .)
    OR              reduce using rule 65 (relacionalp -> relsig e relacionalp .)
    SEMICOLON       reduce using rule 65 (relacionalp -> relsig e relacionalp .)
    COMMA           reduce using rule 65 (relacionalp -> relsig e relacionalp .)
    RIGHT_PARENT    reduce using rule 65 (relacionalp -> relsig e relacionalp .)
    RIGHT_SQR_BRACKET reduce using rule 65 (relacionalp -> relsig e relacionalp .)


state 223

    (72) tp -> tsig t tp .

    LESS_THAN       reduce using rule 72 (tp -> tsig t tp .)
    GREATER_THAN    reduce using rule 72 (tp -> tsig t tp .)
    EQUALS          reduce using rule 72 (tp -> tsig t tp .)
    NOTEQUALS       reduce using rule 72 (tp -> tsig t tp .)
    AND             reduce using rule 72 (tp -> tsig t tp .)
    OR              reduce using rule 72 (tp -> tsig t tp .)
    SEMICOLON       reduce using rule 72 (tp -> tsig t tp .)
    COMMA           reduce using rule 72 (tp -> tsig t tp .)
    RIGHT_PARENT    reduce using rule 72 (tp -> tsig t tp .)
    RIGHT_SQR_BRACKET reduce using rule 72 (tp -> tsig t tp .)


state 224

    (77) fp -> fsig f fp .

    PLUS            reduce using rule 77 (fp -> fsig f fp .)
    MINUS           reduce using rule 77 (fp -> fsig f fp .)
    LESS_THAN       reduce using rule 77 (fp -> fsig f fp .)
    GREATER_THAN    reduce using rule 77 (fp -> fsig f fp .)
    EQUALS          reduce using rule 77 (fp -> fsig f fp .)
    NOTEQUALS       reduce using rule 77 (fp -> fsig f fp .)
    AND             reduce using rule 77 (fp -> fsig f fp .)
    OR              reduce using rule 77 (fp -> fsig f fp .)
    SEMICOLON       reduce using rule 77 (fp -> fsig f fp .)
    COMMA           reduce using rule 77 (fp -> fsig f fp .)
    RIGHT_PARENT    reduce using rule 77 (fp -> fsig f fp .)
    RIGHT_SQR_BRACKET reduce using rule 77 (fp -> fsig f fp .)


state 225

    (14) copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)


state 226

    (103) mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 103 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 227

    (104) mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 104 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 228

    (105) median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 105 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 229

    (106) variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 106 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 230

    (107) max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 107 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 231

    (108) min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 108 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 232

    (109) staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 109 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 233

    (110) boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 110 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 234

    (111) linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 111 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 235

    (36) func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop . RIGHT_CUR_BRACKET

    RIGHT_CUR_BRACKET shift and go to state 241


state 236

    (41) paramp -> COMMA param . paramp
    (41) paramp -> . COMMA param paramp
    (42) paramp -> . empty
    (112) empty -> .

  ! shift/reduce conflict for COMMA resolved as shift
    COMMA           shift and go to state 210
    RIGHT_PARENT    reduce using rule 112 (empty -> .)

  ! COMMA           [ reduce using rule 112 (empty -> .) ]

    paramp                         shift and go to state 242
    empty                          shift and go to state 211

state 237

    (24) exppp -> COMMA exp exppp .

    RIGHT_PARENT    reduce using rule 24 (exppp -> COMMA exp exppp .)


state 238

    (88) condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET falsop
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (43) estatuto -> . asign
    (44) estatuto -> . llamada
    (45) estatuto -> . lee
    (46) estatuto -> . escribe
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclow
    (49) estatuto -> . ciclof
    (50) estatuto -> . funcesp
    (51) estatuto -> . return
    (52) estatuto -> . copy
    (112) empty -> .
    (53) asign -> . variable ASIGN exp SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (54) lee -> . READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (55) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (88) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (91) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (92) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (58) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 112 (empty -> .)
    ID              shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 67
    FOR             shift and go to state 68
    RETURNS         shift and go to state 78
    READ_FILE       shift and go to state 79
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88

    estatutop                      shift and go to state 243
    estatuto                       shift and go to state 50
    empty                          shift and go to state 51
    asign                          shift and go to state 52
    llamada                        shift and go to state 53
    lee                            shift and go to state 54
    escribe                        shift and go to state 55
    condicion                      shift and go to state 56
    ciclow                         shift and go to state 57
    ciclof                         shift and go to state 58
    funcesp                        shift and go to state 59
    return                         shift and go to state 60
    copy                           shift and go to state 61
    variable                       shift and go to state 62
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77

state 239

    (91) ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET

    RIGHT_CUR_BRACKET shift and go to state 244


state 240

    (92) ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (43) estatuto -> . asign
    (44) estatuto -> . llamada
    (45) estatuto -> . lee
    (46) estatuto -> . escribe
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclow
    (49) estatuto -> . ciclof
    (50) estatuto -> . funcesp
    (51) estatuto -> . return
    (52) estatuto -> . copy
    (112) empty -> .
    (53) asign -> . variable ASIGN exp SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (54) lee -> . READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (55) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (88) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (91) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (92) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (58) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 112 (empty -> .)
    ID              shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 67
    FOR             shift and go to state 68
    RETURNS         shift and go to state 78
    READ_FILE       shift and go to state 79
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88

    asign                          shift and go to state 52
    estatutop                      shift and go to state 245
    estatuto                       shift and go to state 50
    empty                          shift and go to state 51
    llamada                        shift and go to state 53
    lee                            shift and go to state 54
    escribe                        shift and go to state 55
    condicion                      shift and go to state 56
    ciclow                         shift and go to state 57
    ciclof                         shift and go to state 58
    funcesp                        shift and go to state 59
    return                         shift and go to state 60
    copy                           shift and go to state 61
    variable                       shift and go to state 62
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77

state 241

    (36) func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .

    FUNC            reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    DO              reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    ID              reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    READ            reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    WRITE           reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    IF              reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    WHILE           reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    FOR             reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    RETURNS         reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    READ_FILE       reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    MEAN            reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    MODE            reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    MEDIAN          reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    VARIANCE        reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    MAX             reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    MIN             reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    STADDES         reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    BOXPLOT         reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    LINREG          reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)
    RIGHT_CUR_BRACKET reduce using rule 36 (func -> FUNC returnval ARROW ID LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET .)


state 242

    (41) paramp -> COMMA param paramp .

    RIGHT_PARENT    reduce using rule 41 (paramp -> COMMA param paramp .)
    COMMA           reduce using rule 41 (paramp -> COMMA param paramp .)


state 243

    (88) condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET falsop

    RIGHT_CUR_BRACKET shift and go to state 246


state 244

    (91) ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .

    ID              reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ            reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WRITE           reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    IF              reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WHILE           reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    FOR             reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RETURNS         reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ_FILE       reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEAN            reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MODE            reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEDIAN          reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    VARIANCE        reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MAX             reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MIN             reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    STADDES         reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    BOXPLOT         reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    LINREG          reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RIGHT_CUR_BRACKET reduce using rule 91 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)


state 245

    (92) ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET

    RIGHT_CUR_BRACKET shift and go to state 247


state 246

    (88) condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET . falsop
    (89) falsop -> . IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (90) falsop -> . empty
    (112) empty -> .

    IF_FALSE        shift and go to state 249
    ID              reduce using rule 112 (empty -> .)
    READ            reduce using rule 112 (empty -> .)
    WRITE           reduce using rule 112 (empty -> .)
    IF              reduce using rule 112 (empty -> .)
    WHILE           reduce using rule 112 (empty -> .)
    FOR             reduce using rule 112 (empty -> .)
    RETURNS         reduce using rule 112 (empty -> .)
    READ_FILE       reduce using rule 112 (empty -> .)
    MEAN            reduce using rule 112 (empty -> .)
    MODE            reduce using rule 112 (empty -> .)
    MEDIAN          reduce using rule 112 (empty -> .)
    VARIANCE        reduce using rule 112 (empty -> .)
    MAX             reduce using rule 112 (empty -> .)
    MIN             reduce using rule 112 (empty -> .)
    STADDES         reduce using rule 112 (empty -> .)
    BOXPLOT         reduce using rule 112 (empty -> .)
    LINREG          reduce using rule 112 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 112 (empty -> .)

    falsop                         shift and go to state 248
    empty                          shift and go to state 250

state 247

    (92) ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .

    ID              reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ            reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WRITE           reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    IF              reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WHILE           reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    FOR             reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RETURNS         reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ_FILE       reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEAN            reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MODE            reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEDIAN          reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    VARIANCE        reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MAX             reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MIN             reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    STADDES         reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    BOXPLOT         reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    LINREG          reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RIGHT_CUR_BRACKET reduce using rule 92 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)


state 248

    (88) condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .

    ID              reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    READ            reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    WRITE           reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    IF              reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    WHILE           reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    FOR             reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    RETURNS         reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    READ_FILE       reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    MEAN            reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    MODE            reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    MEDIAN          reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    VARIANCE        reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    MAX             reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    MIN             reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    STADDES         reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    BOXPLOT         reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    LINREG          reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    RIGHT_CUR_BRACKET reduce using rule 88 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)


state 249

    (89) falsop -> IF_FALSE . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_CUR_BRACKET shift and go to state 251


state 250

    (90) falsop -> empty .

    ID              reduce using rule 90 (falsop -> empty .)
    READ            reduce using rule 90 (falsop -> empty .)
    WRITE           reduce using rule 90 (falsop -> empty .)
    IF              reduce using rule 90 (falsop -> empty .)
    WHILE           reduce using rule 90 (falsop -> empty .)
    FOR             reduce using rule 90 (falsop -> empty .)
    RETURNS         reduce using rule 90 (falsop -> empty .)
    READ_FILE       reduce using rule 90 (falsop -> empty .)
    MEAN            reduce using rule 90 (falsop -> empty .)
    MODE            reduce using rule 90 (falsop -> empty .)
    MEDIAN          reduce using rule 90 (falsop -> empty .)
    VARIANCE        reduce using rule 90 (falsop -> empty .)
    MAX             reduce using rule 90 (falsop -> empty .)
    MIN             reduce using rule 90 (falsop -> empty .)
    STADDES         reduce using rule 90 (falsop -> empty .)
    BOXPLOT         reduce using rule 90 (falsop -> empty .)
    LINREG          reduce using rule 90 (falsop -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 90 (falsop -> empty .)


state 251

    (89) falsop -> IF_FALSE LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (43) estatuto -> . asign
    (44) estatuto -> . llamada
    (45) estatuto -> . lee
    (46) estatuto -> . escribe
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclow
    (49) estatuto -> . ciclof
    (50) estatuto -> . funcesp
    (51) estatuto -> . return
    (52) estatuto -> . copy
    (112) empty -> .
    (53) asign -> . variable ASIGN exp SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (54) lee -> . READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (55) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (88) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (91) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (92) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (93) funcesp -> . mean
    (94) funcesp -> . mode
    (95) funcesp -> . median
    (96) funcesp -> . variance
    (97) funcesp -> . max
    (98) funcesp -> . min
    (99) funcesp -> . staddes
    (100) funcesp -> . boxplot
    (101) funcesp -> . linreg
    (102) funcesp -> . copy
    (58) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp
    (103) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (104) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (105) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (106) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 112 (empty -> .)
    ID              shift and go to state 63
    READ            shift and go to state 64
    WRITE           shift and go to state 65
    IF              shift and go to state 66
    WHILE           shift and go to state 67
    FOR             shift and go to state 68
    RETURNS         shift and go to state 78
    READ_FILE       shift and go to state 79
    MEAN            shift and go to state 80
    MODE            shift and go to state 81
    MEDIAN          shift and go to state 82
    VARIANCE        shift and go to state 83
    MAX             shift and go to state 84
    MIN             shift and go to state 85
    STADDES         shift and go to state 86
    BOXPLOT         shift and go to state 87
    LINREG          shift and go to state 88

    estatutop                      shift and go to state 252
    estatuto                       shift and go to state 50
    empty                          shift and go to state 51
    asign                          shift and go to state 52
    llamada                        shift and go to state 53
    lee                            shift and go to state 54
    escribe                        shift and go to state 55
    condicion                      shift and go to state 56
    ciclow                         shift and go to state 57
    ciclof                         shift and go to state 58
    funcesp                        shift and go to state 59
    return                         shift and go to state 60
    copy                           shift and go to state 61
    variable                       shift and go to state 62
    mean                           shift and go to state 69
    mode                           shift and go to state 70
    median                         shift and go to state 71
    variance                       shift and go to state 72
    max                            shift and go to state 73
    min                            shift and go to state 74
    staddes                        shift and go to state 75
    boxplot                        shift and go to state 76
    linreg                         shift and go to state 77

state 252

    (89) falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET

    RIGHT_CUR_BRACKET shift and go to state 253


state 253

    (89) falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .

    ID              reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ            reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WRITE           reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    IF              reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WHILE           reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    FOR             reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RETURNS         reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ_FILE       reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEAN            reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MODE            reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEDIAN          reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    VARIANCE        reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MAX             reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MIN             reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    STADDES         reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    BOXPLOT         reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    LINREG          reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RIGHT_CUR_BRACKET reduce using rule 89 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for COMMA in state 179 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 236 resolved as shift
WARNING: reduce/reduce conflict in state 61 resolved using rule (estatuto -> copy)
WARNING: rejected rule (funcesp -> copy) in state 61

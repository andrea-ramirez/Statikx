Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque
Rule 2     varp -> var varp
Rule 3     varp -> empty
Rule 4     funcp -> func funcp
Rule 5     funcp -> empty
Rule 6     bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript
Rule 7     estatutop -> estatuto estatutop
Rule 8     estatutop -> empty
Rule 9     tipo_simp -> INT pnSaveTypeVar
Rule 10    tipo_simp -> FLOAT pnSaveTypeVar
Rule 11    tipo_simp -> CHAR pnSaveTypeVar
Rule 12    tipo_comp -> DATAFRAME
Rule 13    tipo_comp -> file
Rule 14    copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
Rule 15    file -> ID
Rule 16    variable -> ID pnSaveOperandos indexp
Rule 17    indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET
Rule 18    indexp -> empty
Rule 19    indexpp -> COMMA exp
Rule 20    indexpp -> empty
Rule 21    llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
Rule 22    expp -> exp pnCuadParametro exppp
Rule 23    expp -> empty
Rule 24    exppp -> COMMA pnUpdateK exp pnCuadParametro exppp
Rule 25    exppp -> empty
Rule 26    var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON
Rule 27    v -> DATAFRAME pnSaveTypeVar
Rule 28    v -> tipo_simp vp
Rule 29    vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar
Rule 30    vp -> empty
Rule 31    vpp -> COMMA pnArrIncDim CTEI pnArrSaveLim1
Rule 32    vpp -> empty
Rule 33    idp -> ID pnCheckNameTablaVar pnArrAddDim idpp
Rule 34    idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim idpp
Rule 35    idpp -> empty
Rule 36    func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
Rule 37    returnval -> tipo_simp
Rule 38    returnval -> VOID pnSaveTypeVar
Rule 39    param -> paramlist
Rule 40    param -> empty
Rule 41    paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp
Rule 42    tipoparam -> tipo_simp
Rule 43    tipoparam -> DATAFRAME pnSaveTypeVar
Rule 44    paramlistp -> COMMA paramlist
Rule 45    paramlistp -> empty
Rule 46    estatuto -> asign
Rule 47    estatuto -> llamada
Rule 48    estatuto -> lee
Rule 49    estatuto -> escribe
Rule 50    estatuto -> condicion
Rule 51    estatuto -> ciclow
Rule 52    estatuto -> ciclof
Rule 53    estatuto -> funcesp
Rule 54    estatuto -> return
Rule 55    estatuto -> copy
Rule 56    asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
Rule 57    lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
Rule 58    escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
Rule 59    escribep -> exp pnCuadEscribe
Rule 60    escribep -> LETRERO pnCuadEscribe
Rule 61    return -> RETURNS exp SEMICOLON
Rule 62    exp -> exprel pnCuadOplog logic
Rule 63    logic -> logicsig exprel pnCuadOplog logic
Rule 64    logic -> empty
Rule 65    logicsig -> AND pnSaveOperadorLog
Rule 66    logicsig -> OR pnSaveOperadorLog
Rule 67    exprel -> e pnCuadOpRelacional relacionalp
Rule 68    relacionalp -> relsig e pnCuadOpRelacional relacionalp
Rule 69    relacionalp -> empty
Rule 70    relsig -> LESS_THAN pnSaveOperadorRel
Rule 71    relsig -> GREATER_THAN pnSaveOperadorRel
Rule 72    relsig -> EQUALS pnSaveOperadorRel
Rule 73    relsig -> NOTEQUALS pnSaveOperadorRel
Rule 74    e -> t pnCuadPlMi tp
Rule 75    tp -> tsig t pnCuadPlMi tp
Rule 76    tp -> empty
Rule 77    tsig -> PLUS pnSaveOperadorPlMi
Rule 78    tsig -> MINUS pnSaveOperadorPlMi
Rule 79    t -> f pnCuadMuDi fp
Rule 80    fp -> fsig f pnCuadMuDi fp
Rule 81    fp -> empty
Rule 82    fsig -> MULT pnSaveOperadorMuDi
Rule 83    fsig -> DIV pnSaveOperadorMuDi
Rule 84    f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
Rule 85    f -> CTEI pnSaveCteI pnSaveOperandoConstante
Rule 86    f -> CTEF pnSaveCteF pnSaveOperandoConstante
Rule 87    f -> CTEC pnSaveCteC pnSaveOperandoConstante
Rule 88    f -> variable
Rule 89    f -> llamada
Rule 90    f -> funcesp
Rule 91    condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
Rule 92    falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
Rule 93    falsop -> empty
Rule 94    ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
Rule 95    ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
Rule 96    funcesp -> mean
Rule 97    funcesp -> mode
Rule 98    funcesp -> median
Rule 99    funcesp -> variance
Rule 100   funcesp -> max
Rule 101   funcesp -> min
Rule 102   funcesp -> staddes
Rule 103   funcesp -> boxplot
Rule 104   funcesp -> linreg
Rule 105   funcesp -> copy
Rule 106   mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 107   mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 108   median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 109   variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 110   max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 111   min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 112   staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 113   boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 114   linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 115   pnCrearDirFunc -> empty
Rule 116   pnCuadGotoMain -> empty
Rule 117   pnDirMain -> empty
Rule 118   pnScriptFuncDir -> empty
Rule 119   pnCheckTablaVar -> empty
Rule 120   pnCrearListaParam -> empty
Rule 121   pnSaveTypeVar -> empty
Rule 122   pnCheckNameTablaVar -> empty
Rule 123   pnAddFuncinDir -> empty
Rule 124   pnAddParametersTablaVar -> empty
Rule 125   pnCountVarsINTOResources -> empty
Rule 126   pnDirecIniFunc -> empty
Rule 127   pnCloseCurrentFunction -> empty
Rule 128   pnEndScript -> empty
Rule 129   pnCheckFunc -> empty
Rule 130   pnGenerateEra -> empty
Rule 131   pnCuadParametro -> empty
Rule 132   pnUpdateK -> empty
Rule 133   pnCheckNoParam -> empty
Rule 134   pnCuadGoSub -> empty
Rule 135   pnSaveCteI -> empty
Rule 136   pnSaveCteF -> empty
Rule 137   pnSaveCteC -> empty
Rule 138   pnSaveFondoFalso -> empty
Rule 139   pnPopFondoFalso -> empty
Rule 140   pnSaveOperandos -> empty
Rule 141   pnSaveOperandoConstante -> empty
Rule 142   pnSaveOperadorPlMi -> empty
Rule 143   pnSaveOperadorMuDi -> empty
Rule 144   pnSaveOperadorRel -> empty
Rule 145   pnSaveOperadorLog -> empty
Rule 146   pnCuadPlMi -> empty
Rule 147   pnCuadMuDi -> empty
Rule 148   pnCuadOpRelacional -> empty
Rule 149   pnCuadOplog -> empty
Rule 150   pnSaveOperadorAsign -> empty
Rule 151   pnCuadAsign -> empty
Rule 152   pnCuadEscribe -> empty
Rule 153   pnCuadLee -> empty
Rule 154   pnCuadCopy -> empty
Rule 155   pnCuadFuncEsp -> empty
Rule 156   pnCheckBoolIf -> empty
Rule 157   pnElseIf -> empty
Rule 158   pnEndIf -> empty
Rule 159   pnSaveWhile -> empty
Rule 160   pnEndWhile -> empty
Rule 161   pnSaveForID -> empty
Rule 162   pnCreateVControl -> empty
Rule 163   pnCompControlFinal -> empty
Rule 164   pnEndFor -> empty
Rule 165   pnArrCreateNode -> empty
Rule 166   pnArrSaveLim1 -> empty
Rule 167   pnArrIncDim -> empty
Rule 168   pnArrCuadriplificar -> empty
Rule 169   pnArrAddDim -> empty
Rule 170   empty -> <empty>

Terminals, with rules where they appear

AND                  : 65
ARROW                : 26 36 41
ASIGN                : 56 95
BOXPLOT              : 113
CHAR                 : 11
COMMA                : 19 24 31 34 44 95
COMMENT              : 
CTEC                 : 87
CTEF                 : 86
CTEI                 : 29 31 85
DATAFRAME            : 12 27 43
DIV                  : 83
DO                   : 6
EQUALS               : 72
FLOAT                : 10
FOR                  : 95
FUNC                 : 36
GREATER_THAN         : 71
ID                   : 1 15 16 21 33 34 36 41 95
IF                   : 91
IF_FALSE             : 92
IF_TRUE              : 91
INT                  : 9
LEFT_CUR_BRACKET     : 6 36 91 92 94 95
LEFT_PARENT          : 14 21 36 57 58 84 91 94 95 106 107 108 109 110 111 112 113 114
LEFT_SQR_BRACKET     : 17 29
LESS_THAN            : 70
LETRERO              : 14 60
LINREG               : 114
MAX                  : 110
MEAN                 : 106
MEDIAN               : 108
MIN                  : 111
MINUS                : 78
MODE                 : 107
MULT                 : 82
NOTEQUALS            : 73
OR                   : 66
PLUS                 : 77
READ                 : 57
READ_FILE            : 14
RETURNS              : 61
RIGHT_CUR_BRACKET    : 6 36 91 92 94 95
RIGHT_PARENT         : 14 21 36 57 58 84 91 94 95 106 107 108 109 110 111 112 113 114
RIGHT_SQR_BRACKET    : 17 29
SCRIPT               : 1
SEMICOLON            : 1 14 21 26 56 57 58 61 106 107 108 109 110 111 112 113 114
STADDES              : 112
VAR                  : 26
VARIANCE             : 109
VOID                 : 38
WHILE                : 94
WRITE                : 58
error                : 

Nonterminals, with rules where they appear

asign                : 46
bloque               : 1
boxplot              : 103
ciclof               : 52
ciclow               : 51
condicion            : 50
copy                 : 55 105
e                    : 67 68
empty                : 3 5 8 18 20 23 25 30 32 35 40 45 64 69 76 81 93 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169
escribe              : 49
escribep             : 58
estatuto             : 7
estatutop            : 6 7 36 91 92 94 95
exp                  : 17 19 22 24 56 59 61 84 91 94 95 95
expp                 : 21
exppp                : 22 24
exprel               : 62 63
f                    : 79 80
falsop               : 91
file                 : 13
fp                   : 79 80
fsig                 : 80
func                 : 4
funcesp              : 53 90
funcp                : 1 4 6
idp                  : 26
idpp                 : 33 34
indexp               : 16
indexpp              : 17
lee                  : 48
linreg               : 104
llamada              : 47 89
logic                : 62 63
logicsig             : 63
max                  : 100
mean                 : 96
median               : 98
min                  : 101
mode                 : 97
param                : 36
paramlist            : 39 44
paramlistp           : 41
pnAddFuncinDir       : 36
pnAddParametersTablaVar : 41
pnArrAddDim          : 33 34
pnArrCreateNode      : 29
pnArrCuadriplificar  : 29
pnArrIncDim          : 31
pnArrSaveLim1        : 29 31
pnCheckBoolIf        : 91 94
pnCheckFunc          : 21
pnCheckNameTablaVar  : 33 34
pnCheckNoParam       : 21
pnCheckTablaVar      : 26 36
pnCloseCurrentFunction : 36
pnCompControlFinal   : 95
pnCountVarsINTOResources : 36
pnCrearDirFunc       : 1
pnCrearListaParam    : 36
pnCreateVControl     : 95
pnCuadAsign          : 56
pnCuadCopy           : 14
pnCuadEscribe        : 59 60
pnCuadFuncEsp        : 106 107 108 109 110 111 112 113 114
pnCuadGoSub          : 21
pnCuadGotoMain       : 1
pnCuadLee            : 57
pnCuadMuDi           : 79 80
pnCuadOpRelacional   : 67 68
pnCuadOplog          : 62 63
pnCuadParametro      : 22 24
pnCuadPlMi           : 74 75
pnDirMain            : 6
pnDirecIniFunc       : 36
pnElseIf             : 92
pnEndFor             : 95
pnEndIf              : 91
pnEndScript          : 6
pnEndWhile           : 94
pnGenerateEra        : 21
pnPopFondoFalso      : 84
pnSaveCteC           : 87
pnSaveCteF           : 86
pnSaveCteI           : 85
pnSaveFondoFalso     : 84
pnSaveForID          : 95
pnSaveOperadorAsign  : 56
pnSaveOperadorLog    : 65 66
pnSaveOperadorMuDi   : 82 83
pnSaveOperadorPlMi   : 77 78
pnSaveOperadorRel    : 70 71 72 73
pnSaveOperandoConstante : 85 86 87
pnSaveOperandos      : 16
pnSaveTypeVar        : 9 10 11 27 38 43
pnSaveWhile          : 94
pnScriptFuncDir      : 1
pnUpdateK            : 24
programa             : 0
relacionalp          : 67 68
relsig               : 68
return               : 54
returnval            : 36
staddes              : 102
t                    : 74 75
tipo_comp            : 
tipo_simp            : 28 37 42
tipoparam            : 41
tp                   : 74 75
tsig                 : 75
v                    : 26
var                  : 2
variable             : 56 57 88 106 107 108 109 110 111 112 113 114
variance             : 99
varp                 : 1 2 6 36
vp                   : 28
vpp                  : 29

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque

    SCRIPT          shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> SCRIPT . pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque
    (115) pnCrearDirFunc -> . empty
    (170) empty -> .

    ID              reduce using rule 170 (empty -> .)

    pnCrearDirFunc                 shift and go to state 3
    empty                          shift and go to state 4

state 3

    (1) programa -> SCRIPT pnCrearDirFunc . ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque

    ID              shift and go to state 5


state 4

    (115) pnCrearDirFunc -> empty .

    ID              reduce using rule 115 (pnCrearDirFunc -> empty .)


state 5

    (1) programa -> SCRIPT pnCrearDirFunc ID . pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque
    (118) pnScriptFuncDir -> . empty
    (170) empty -> .

    SEMICOLON       reduce using rule 170 (empty -> .)

    pnScriptFuncDir                shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir . pnCuadGotoMain SEMICOLON varp funcp bloque
    (116) pnCuadGotoMain -> . empty
    (170) empty -> .

    SEMICOLON       reduce using rule 170 (empty -> .)

    pnCuadGotoMain                 shift and go to state 8
    empty                          shift and go to state 9

state 7

    (118) pnScriptFuncDir -> empty .

    SEMICOLON       reduce using rule 118 (pnScriptFuncDir -> empty .)


state 8

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain . SEMICOLON varp funcp bloque

    SEMICOLON       shift and go to state 10


state 9

    (116) pnCuadGotoMain -> empty .

    SEMICOLON       reduce using rule 116 (pnCuadGotoMain -> empty .)


state 10

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON . varp funcp bloque
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (170) empty -> .

    VAR             shift and go to state 14
    FUNC            reduce using rule 170 (empty -> .)
    DO              reduce using rule 170 (empty -> .)

    varp                           shift and go to state 11
    var                            shift and go to state 12
    empty                          shift and go to state 13

state 11

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp . funcp bloque
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (170) empty -> .

    FUNC            shift and go to state 18
    DO              reduce using rule 170 (empty -> .)

    funcp                          shift and go to state 15
    func                           shift and go to state 16
    empty                          shift and go to state 17

state 12

    (2) varp -> var . varp
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (170) empty -> .

    VAR             shift and go to state 14
    FUNC            reduce using rule 170 (empty -> .)
    DO              reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    READ            reduce using rule 170 (empty -> .)
    WRITE           reduce using rule 170 (empty -> .)
    IF              reduce using rule 170 (empty -> .)
    WHILE           reduce using rule 170 (empty -> .)
    FOR             reduce using rule 170 (empty -> .)
    RETURNS         reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)

    var                            shift and go to state 12
    varp                           shift and go to state 19
    empty                          shift and go to state 13

state 13

    (3) varp -> empty .

    FUNC            reduce using rule 3 (varp -> empty .)
    DO              reduce using rule 3 (varp -> empty .)
    ID              reduce using rule 3 (varp -> empty .)
    READ            reduce using rule 3 (varp -> empty .)
    WRITE           reduce using rule 3 (varp -> empty .)
    IF              reduce using rule 3 (varp -> empty .)
    WHILE           reduce using rule 3 (varp -> empty .)
    FOR             reduce using rule 3 (varp -> empty .)
    RETURNS         reduce using rule 3 (varp -> empty .)
    READ_FILE       reduce using rule 3 (varp -> empty .)
    MEAN            reduce using rule 3 (varp -> empty .)
    MODE            reduce using rule 3 (varp -> empty .)
    MEDIAN          reduce using rule 3 (varp -> empty .)
    VARIANCE        reduce using rule 3 (varp -> empty .)
    MAX             reduce using rule 3 (varp -> empty .)
    MIN             reduce using rule 3 (varp -> empty .)
    STADDES         reduce using rule 3 (varp -> empty .)
    BOXPLOT         reduce using rule 3 (varp -> empty .)
    LINREG          reduce using rule 3 (varp -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 3 (varp -> empty .)


state 14

    (26) var -> VAR . pnCheckTablaVar v ARROW idp SEMICOLON
    (119) pnCheckTablaVar -> . empty
    (170) empty -> .

    DATAFRAME       reduce using rule 170 (empty -> .)
    INT             reduce using rule 170 (empty -> .)
    FLOAT           reduce using rule 170 (empty -> .)
    CHAR            reduce using rule 170 (empty -> .)

    pnCheckTablaVar                shift and go to state 20
    empty                          shift and go to state 21

state 15

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp . bloque
    (6) bloque -> . DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript

    DO              shift and go to state 23

    bloque                         shift and go to state 22

state 16

    (4) funcp -> func . funcp
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (170) empty -> .

    FUNC            shift and go to state 18
    DO              reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    READ            reduce using rule 170 (empty -> .)
    WRITE           reduce using rule 170 (empty -> .)
    IF              reduce using rule 170 (empty -> .)
    WHILE           reduce using rule 170 (empty -> .)
    FOR             reduce using rule 170 (empty -> .)
    RETURNS         reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)

    func                           shift and go to state 16
    funcp                          shift and go to state 24
    empty                          shift and go to state 17

state 17

    (5) funcp -> empty .

    DO              reduce using rule 5 (funcp -> empty .)
    ID              reduce using rule 5 (funcp -> empty .)
    READ            reduce using rule 5 (funcp -> empty .)
    WRITE           reduce using rule 5 (funcp -> empty .)
    IF              reduce using rule 5 (funcp -> empty .)
    WHILE           reduce using rule 5 (funcp -> empty .)
    FOR             reduce using rule 5 (funcp -> empty .)
    RETURNS         reduce using rule 5 (funcp -> empty .)
    READ_FILE       reduce using rule 5 (funcp -> empty .)
    MEAN            reduce using rule 5 (funcp -> empty .)
    MODE            reduce using rule 5 (funcp -> empty .)
    MEDIAN          reduce using rule 5 (funcp -> empty .)
    VARIANCE        reduce using rule 5 (funcp -> empty .)
    MAX             reduce using rule 5 (funcp -> empty .)
    MIN             reduce using rule 5 (funcp -> empty .)
    STADDES         reduce using rule 5 (funcp -> empty .)
    BOXPLOT         reduce using rule 5 (funcp -> empty .)
    LINREG          reduce using rule 5 (funcp -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 5 (funcp -> empty .)


state 18

    (36) func -> FUNC . returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (37) returnval -> . tipo_simp
    (38) returnval -> . VOID pnSaveTypeVar
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    VOID            shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    returnval                      shift and go to state 25
    tipo_simp                      shift and go to state 26

state 19

    (2) varp -> var varp .

    FUNC            reduce using rule 2 (varp -> var varp .)
    DO              reduce using rule 2 (varp -> var varp .)
    ID              reduce using rule 2 (varp -> var varp .)
    READ            reduce using rule 2 (varp -> var varp .)
    WRITE           reduce using rule 2 (varp -> var varp .)
    IF              reduce using rule 2 (varp -> var varp .)
    WHILE           reduce using rule 2 (varp -> var varp .)
    FOR             reduce using rule 2 (varp -> var varp .)
    RETURNS         reduce using rule 2 (varp -> var varp .)
    READ_FILE       reduce using rule 2 (varp -> var varp .)
    MEAN            reduce using rule 2 (varp -> var varp .)
    MODE            reduce using rule 2 (varp -> var varp .)
    MEDIAN          reduce using rule 2 (varp -> var varp .)
    VARIANCE        reduce using rule 2 (varp -> var varp .)
    MAX             reduce using rule 2 (varp -> var varp .)
    MIN             reduce using rule 2 (varp -> var varp .)
    STADDES         reduce using rule 2 (varp -> var varp .)
    BOXPLOT         reduce using rule 2 (varp -> var varp .)
    LINREG          reduce using rule 2 (varp -> var varp .)
    RIGHT_CUR_BRACKET reduce using rule 2 (varp -> var varp .)


state 20

    (26) var -> VAR pnCheckTablaVar . v ARROW idp SEMICOLON
    (27) v -> . DATAFRAME pnSaveTypeVar
    (28) v -> . tipo_simp vp
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    DATAFRAME       shift and go to state 32
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    v                              shift and go to state 31
    tipo_simp                      shift and go to state 33

state 21

    (119) pnCheckTablaVar -> empty .

    DATAFRAME       reduce using rule 119 (pnCheckTablaVar -> empty .)
    INT             reduce using rule 119 (pnCheckTablaVar -> empty .)
    FLOAT           reduce using rule 119 (pnCheckTablaVar -> empty .)
    CHAR            reduce using rule 119 (pnCheckTablaVar -> empty .)
    RIGHT_PARENT    reduce using rule 119 (pnCheckTablaVar -> empty .)


state 22

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque .

    $end            reduce using rule 1 (programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque .)


state 23

    (6) bloque -> DO . pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript
    (117) pnDirMain -> . empty
    (170) empty -> .

    LEFT_CUR_BRACKET reduce using rule 170 (empty -> .)

    pnDirMain                      shift and go to state 34
    empty                          shift and go to state 35

state 24

    (4) funcp -> func funcp .

    DO              reduce using rule 4 (funcp -> func funcp .)
    ID              reduce using rule 4 (funcp -> func funcp .)
    READ            reduce using rule 4 (funcp -> func funcp .)
    WRITE           reduce using rule 4 (funcp -> func funcp .)
    IF              reduce using rule 4 (funcp -> func funcp .)
    WHILE           reduce using rule 4 (funcp -> func funcp .)
    FOR             reduce using rule 4 (funcp -> func funcp .)
    RETURNS         reduce using rule 4 (funcp -> func funcp .)
    READ_FILE       reduce using rule 4 (funcp -> func funcp .)
    MEAN            reduce using rule 4 (funcp -> func funcp .)
    MODE            reduce using rule 4 (funcp -> func funcp .)
    MEDIAN          reduce using rule 4 (funcp -> func funcp .)
    VARIANCE        reduce using rule 4 (funcp -> func funcp .)
    MAX             reduce using rule 4 (funcp -> func funcp .)
    MIN             reduce using rule 4 (funcp -> func funcp .)
    STADDES         reduce using rule 4 (funcp -> func funcp .)
    BOXPLOT         reduce using rule 4 (funcp -> func funcp .)
    LINREG          reduce using rule 4 (funcp -> func funcp .)
    RIGHT_CUR_BRACKET reduce using rule 4 (funcp -> func funcp .)


state 25

    (36) func -> FUNC returnval . ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    ARROW           shift and go to state 36


state 26

    (37) returnval -> tipo_simp .

    ARROW           reduce using rule 37 (returnval -> tipo_simp .)


state 27

    (38) returnval -> VOID . pnSaveTypeVar
    (121) pnSaveTypeVar -> . empty
    (170) empty -> .

    ARROW           reduce using rule 170 (empty -> .)

    pnSaveTypeVar                  shift and go to state 37
    empty                          shift and go to state 38

state 28

    (9) tipo_simp -> INT . pnSaveTypeVar
    (121) pnSaveTypeVar -> . empty
    (170) empty -> .

    ARROW           reduce using rule 170 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnSaveTypeVar                  shift and go to state 39
    empty                          shift and go to state 38

state 29

    (10) tipo_simp -> FLOAT . pnSaveTypeVar
    (121) pnSaveTypeVar -> . empty
    (170) empty -> .

    ARROW           reduce using rule 170 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnSaveTypeVar                  shift and go to state 40
    empty                          shift and go to state 38

state 30

    (11) tipo_simp -> CHAR . pnSaveTypeVar
    (121) pnSaveTypeVar -> . empty
    (170) empty -> .

    ARROW           reduce using rule 170 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnSaveTypeVar                  shift and go to state 41
    empty                          shift and go to state 38

state 31

    (26) var -> VAR pnCheckTablaVar v . ARROW idp SEMICOLON

    ARROW           shift and go to state 42


state 32

    (27) v -> DATAFRAME . pnSaveTypeVar
    (121) pnSaveTypeVar -> . empty
    (170) empty -> .

    ARROW           reduce using rule 170 (empty -> .)

    pnSaveTypeVar                  shift and go to state 43
    empty                          shift and go to state 38

state 33

    (28) v -> tipo_simp . vp
    (29) vp -> . LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar
    (30) vp -> . empty
    (170) empty -> .

    LEFT_SQR_BRACKET shift and go to state 45
    ARROW           reduce using rule 170 (empty -> .)

    vp                             shift and go to state 44
    empty                          shift and go to state 46

state 34

    (6) bloque -> DO pnDirMain . LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript

    LEFT_CUR_BRACKET shift and go to state 47


state 35

    (117) pnDirMain -> empty .

    LEFT_CUR_BRACKET reduce using rule 117 (pnDirMain -> empty .)


state 36

    (36) func -> FUNC returnval ARROW . ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    ID              shift and go to state 48


state 37

    (38) returnval -> VOID pnSaveTypeVar .

    ARROW           reduce using rule 38 (returnval -> VOID pnSaveTypeVar .)


state 38

    (121) pnSaveTypeVar -> empty .

    ARROW           reduce using rule 121 (pnSaveTypeVar -> empty .)
    LEFT_SQR_BRACKET reduce using rule 121 (pnSaveTypeVar -> empty .)


state 39

    (9) tipo_simp -> INT pnSaveTypeVar .

    ARROW           reduce using rule 9 (tipo_simp -> INT pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 9 (tipo_simp -> INT pnSaveTypeVar .)


state 40

    (10) tipo_simp -> FLOAT pnSaveTypeVar .

    ARROW           reduce using rule 10 (tipo_simp -> FLOAT pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 10 (tipo_simp -> FLOAT pnSaveTypeVar .)


state 41

    (11) tipo_simp -> CHAR pnSaveTypeVar .

    ARROW           reduce using rule 11 (tipo_simp -> CHAR pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 11 (tipo_simp -> CHAR pnSaveTypeVar .)


state 42

    (26) var -> VAR pnCheckTablaVar v ARROW . idp SEMICOLON
    (33) idp -> . ID pnCheckNameTablaVar pnArrAddDim idpp

    ID              shift and go to state 50

    idp                            shift and go to state 49

state 43

    (27) v -> DATAFRAME pnSaveTypeVar .

    ARROW           reduce using rule 27 (v -> DATAFRAME pnSaveTypeVar .)


state 44

    (28) v -> tipo_simp vp .

    ARROW           reduce using rule 28 (v -> tipo_simp vp .)


state 45

    (29) vp -> LEFT_SQR_BRACKET . pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar
    (165) pnArrCreateNode -> . empty
    (170) empty -> .

    CTEI            reduce using rule 170 (empty -> .)

    pnArrCreateNode                shift and go to state 51
    empty                          shift and go to state 52

state 46

    (30) vp -> empty .

    ARROW           reduce using rule 30 (vp -> empty .)


state 47

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET . varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (170) empty -> .

    VAR             shift and go to state 14
    FUNC            reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    READ            reduce using rule 170 (empty -> .)
    WRITE           reduce using rule 170 (empty -> .)
    IF              reduce using rule 170 (empty -> .)
    WHILE           reduce using rule 170 (empty -> .)
    FOR             reduce using rule 170 (empty -> .)
    RETURNS         reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)

    varp                           shift and go to state 53
    var                            shift and go to state 12
    empty                          shift and go to state 13

state 48

    (36) func -> FUNC returnval ARROW ID . pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (123) pnAddFuncinDir -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)

    pnAddFuncinDir                 shift and go to state 54
    empty                          shift and go to state 55

state 49

    (26) var -> VAR pnCheckTablaVar v ARROW idp . SEMICOLON

    SEMICOLON       shift and go to state 56


state 50

    (33) idp -> ID . pnCheckNameTablaVar pnArrAddDim idpp
    (122) pnCheckNameTablaVar -> . empty
    (170) empty -> .

    COMMA           reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)

    pnCheckNameTablaVar            shift and go to state 57
    empty                          shift and go to state 58

state 51

    (29) vp -> LEFT_SQR_BRACKET pnArrCreateNode . CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar

    CTEI            shift and go to state 59


state 52

    (165) pnArrCreateNode -> empty .

    CTEI            reduce using rule 165 (pnArrCreateNode -> empty .)


state 53

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET varp . funcp estatutop RIGHT_CUR_BRACKET pnEndScript
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (170) empty -> .

    FUNC            shift and go to state 18
    ID              reduce using rule 170 (empty -> .)
    READ            reduce using rule 170 (empty -> .)
    WRITE           reduce using rule 170 (empty -> .)
    IF              reduce using rule 170 (empty -> .)
    WHILE           reduce using rule 170 (empty -> .)
    FOR             reduce using rule 170 (empty -> .)
    RETURNS         reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)

    funcp                          shift and go to state 60
    func                           shift and go to state 16
    empty                          shift and go to state 17

state 54

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir . LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    LEFT_PARENT     shift and go to state 61


state 55

    (123) pnAddFuncinDir -> empty .

    LEFT_PARENT     reduce using rule 123 (pnAddFuncinDir -> empty .)


state 56

    (26) var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .

    VAR             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    FUNC            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    DO              reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    ID              reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    READ            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    WRITE           reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    IF              reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    WHILE           reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    FOR             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    RETURNS         reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    READ_FILE       reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MEAN            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MODE            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MEDIAN          reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    VARIANCE        reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MAX             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MIN             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    STADDES         reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    BOXPLOT         reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    LINREG          reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)


state 57

    (33) idp -> ID pnCheckNameTablaVar . pnArrAddDim idpp
    (169) pnArrAddDim -> . empty
    (170) empty -> .

    COMMA           reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)

    pnArrAddDim                    shift and go to state 62
    empty                          shift and go to state 63

state 58

    (122) pnCheckNameTablaVar -> empty .

    COMMA           reduce using rule 122 (pnCheckNameTablaVar -> empty .)
    SEMICOLON       reduce using rule 122 (pnCheckNameTablaVar -> empty .)


state 59

    (29) vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI . pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar
    (166) pnArrSaveLim1 -> . empty
    (170) empty -> .

    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnArrSaveLim1                  shift and go to state 64
    empty                          shift and go to state 65

state 60

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp . estatutop RIGHT_CUR_BRACKET pnEndScript
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (170) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)
    ID              shift and go to state 80
    READ            shift and go to state 81
    WRITE           shift and go to state 82
    IF              shift and go to state 83
    WHILE           shift and go to state 84
    FOR             shift and go to state 85
    RETURNS         shift and go to state 95
    READ_FILE       shift and go to state 96
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105

    estatutop                      shift and go to state 66
    estatuto                       shift and go to state 67
    empty                          shift and go to state 68
    asign                          shift and go to state 69
    llamada                        shift and go to state 70
    lee                            shift and go to state 71
    escribe                        shift and go to state 72
    condicion                      shift and go to state 73
    ciclow                         shift and go to state 74
    ciclof                         shift and go to state 75
    funcesp                        shift and go to state 76
    return                         shift and go to state 77
    copy                           shift and go to state 78
    variable                       shift and go to state 79
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94

state 61

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT . pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (119) pnCheckTablaVar -> . empty
    (170) empty -> .

    DATAFRAME       reduce using rule 170 (empty -> .)
    INT             reduce using rule 170 (empty -> .)
    FLOAT           reduce using rule 170 (empty -> .)
    CHAR            reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCheckTablaVar                shift and go to state 106
    empty                          shift and go to state 21

state 62

    (33) idp -> ID pnCheckNameTablaVar pnArrAddDim . idpp
    (34) idpp -> . COMMA ID pnCheckNameTablaVar pnArrAddDim idpp
    (35) idpp -> . empty
    (170) empty -> .

    COMMA           shift and go to state 108
    SEMICOLON       reduce using rule 170 (empty -> .)

    idpp                           shift and go to state 107
    empty                          shift and go to state 109

state 63

    (169) pnArrAddDim -> empty .

    COMMA           reduce using rule 169 (pnArrAddDim -> empty .)
    SEMICOLON       reduce using rule 169 (pnArrAddDim -> empty .)


state 64

    (29) vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 . vpp RIGHT_SQR_BRACKET pnArrCuadriplificar
    (31) vpp -> . COMMA pnArrIncDim CTEI pnArrSaveLim1
    (32) vpp -> . empty
    (170) empty -> .

    COMMA           shift and go to state 111
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    vpp                            shift and go to state 110
    empty                          shift and go to state 112

state 65

    (166) pnArrSaveLim1 -> empty .

    COMMA           reduce using rule 166 (pnArrSaveLim1 -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 166 (pnArrSaveLim1 -> empty .)


state 66

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop . RIGHT_CUR_BRACKET pnEndScript

    RIGHT_CUR_BRACKET shift and go to state 113


state 67

    (7) estatutop -> estatuto . estatutop
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (170) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)
    ID              shift and go to state 80
    READ            shift and go to state 81
    WRITE           shift and go to state 82
    IF              shift and go to state 83
    WHILE           shift and go to state 84
    FOR             shift and go to state 85
    RETURNS         shift and go to state 95
    READ_FILE       shift and go to state 96
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105

    estatuto                       shift and go to state 67
    estatutop                      shift and go to state 114
    empty                          shift and go to state 68
    asign                          shift and go to state 69
    llamada                        shift and go to state 70
    lee                            shift and go to state 71
    escribe                        shift and go to state 72
    condicion                      shift and go to state 73
    ciclow                         shift and go to state 74
    ciclof                         shift and go to state 75
    funcesp                        shift and go to state 76
    return                         shift and go to state 77
    copy                           shift and go to state 78
    variable                       shift and go to state 79
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94

state 68

    (8) estatutop -> empty .

    RIGHT_CUR_BRACKET reduce using rule 8 (estatutop -> empty .)


state 69

    (46) estatuto -> asign .

    ID              reduce using rule 46 (estatuto -> asign .)
    READ            reduce using rule 46 (estatuto -> asign .)
    WRITE           reduce using rule 46 (estatuto -> asign .)
    IF              reduce using rule 46 (estatuto -> asign .)
    WHILE           reduce using rule 46 (estatuto -> asign .)
    FOR             reduce using rule 46 (estatuto -> asign .)
    RETURNS         reduce using rule 46 (estatuto -> asign .)
    READ_FILE       reduce using rule 46 (estatuto -> asign .)
    MEAN            reduce using rule 46 (estatuto -> asign .)
    MODE            reduce using rule 46 (estatuto -> asign .)
    MEDIAN          reduce using rule 46 (estatuto -> asign .)
    VARIANCE        reduce using rule 46 (estatuto -> asign .)
    MAX             reduce using rule 46 (estatuto -> asign .)
    MIN             reduce using rule 46 (estatuto -> asign .)
    STADDES         reduce using rule 46 (estatuto -> asign .)
    BOXPLOT         reduce using rule 46 (estatuto -> asign .)
    LINREG          reduce using rule 46 (estatuto -> asign .)
    RIGHT_CUR_BRACKET reduce using rule 46 (estatuto -> asign .)


state 70

    (47) estatuto -> llamada .

    ID              reduce using rule 47 (estatuto -> llamada .)
    READ            reduce using rule 47 (estatuto -> llamada .)
    WRITE           reduce using rule 47 (estatuto -> llamada .)
    IF              reduce using rule 47 (estatuto -> llamada .)
    WHILE           reduce using rule 47 (estatuto -> llamada .)
    FOR             reduce using rule 47 (estatuto -> llamada .)
    RETURNS         reduce using rule 47 (estatuto -> llamada .)
    READ_FILE       reduce using rule 47 (estatuto -> llamada .)
    MEAN            reduce using rule 47 (estatuto -> llamada .)
    MODE            reduce using rule 47 (estatuto -> llamada .)
    MEDIAN          reduce using rule 47 (estatuto -> llamada .)
    VARIANCE        reduce using rule 47 (estatuto -> llamada .)
    MAX             reduce using rule 47 (estatuto -> llamada .)
    MIN             reduce using rule 47 (estatuto -> llamada .)
    STADDES         reduce using rule 47 (estatuto -> llamada .)
    BOXPLOT         reduce using rule 47 (estatuto -> llamada .)
    LINREG          reduce using rule 47 (estatuto -> llamada .)
    RIGHT_CUR_BRACKET reduce using rule 47 (estatuto -> llamada .)


state 71

    (48) estatuto -> lee .

    ID              reduce using rule 48 (estatuto -> lee .)
    READ            reduce using rule 48 (estatuto -> lee .)
    WRITE           reduce using rule 48 (estatuto -> lee .)
    IF              reduce using rule 48 (estatuto -> lee .)
    WHILE           reduce using rule 48 (estatuto -> lee .)
    FOR             reduce using rule 48 (estatuto -> lee .)
    RETURNS         reduce using rule 48 (estatuto -> lee .)
    READ_FILE       reduce using rule 48 (estatuto -> lee .)
    MEAN            reduce using rule 48 (estatuto -> lee .)
    MODE            reduce using rule 48 (estatuto -> lee .)
    MEDIAN          reduce using rule 48 (estatuto -> lee .)
    VARIANCE        reduce using rule 48 (estatuto -> lee .)
    MAX             reduce using rule 48 (estatuto -> lee .)
    MIN             reduce using rule 48 (estatuto -> lee .)
    STADDES         reduce using rule 48 (estatuto -> lee .)
    BOXPLOT         reduce using rule 48 (estatuto -> lee .)
    LINREG          reduce using rule 48 (estatuto -> lee .)
    RIGHT_CUR_BRACKET reduce using rule 48 (estatuto -> lee .)


state 72

    (49) estatuto -> escribe .

    ID              reduce using rule 49 (estatuto -> escribe .)
    READ            reduce using rule 49 (estatuto -> escribe .)
    WRITE           reduce using rule 49 (estatuto -> escribe .)
    IF              reduce using rule 49 (estatuto -> escribe .)
    WHILE           reduce using rule 49 (estatuto -> escribe .)
    FOR             reduce using rule 49 (estatuto -> escribe .)
    RETURNS         reduce using rule 49 (estatuto -> escribe .)
    READ_FILE       reduce using rule 49 (estatuto -> escribe .)
    MEAN            reduce using rule 49 (estatuto -> escribe .)
    MODE            reduce using rule 49 (estatuto -> escribe .)
    MEDIAN          reduce using rule 49 (estatuto -> escribe .)
    VARIANCE        reduce using rule 49 (estatuto -> escribe .)
    MAX             reduce using rule 49 (estatuto -> escribe .)
    MIN             reduce using rule 49 (estatuto -> escribe .)
    STADDES         reduce using rule 49 (estatuto -> escribe .)
    BOXPLOT         reduce using rule 49 (estatuto -> escribe .)
    LINREG          reduce using rule 49 (estatuto -> escribe .)
    RIGHT_CUR_BRACKET reduce using rule 49 (estatuto -> escribe .)


state 73

    (50) estatuto -> condicion .

    ID              reduce using rule 50 (estatuto -> condicion .)
    READ            reduce using rule 50 (estatuto -> condicion .)
    WRITE           reduce using rule 50 (estatuto -> condicion .)
    IF              reduce using rule 50 (estatuto -> condicion .)
    WHILE           reduce using rule 50 (estatuto -> condicion .)
    FOR             reduce using rule 50 (estatuto -> condicion .)
    RETURNS         reduce using rule 50 (estatuto -> condicion .)
    READ_FILE       reduce using rule 50 (estatuto -> condicion .)
    MEAN            reduce using rule 50 (estatuto -> condicion .)
    MODE            reduce using rule 50 (estatuto -> condicion .)
    MEDIAN          reduce using rule 50 (estatuto -> condicion .)
    VARIANCE        reduce using rule 50 (estatuto -> condicion .)
    MAX             reduce using rule 50 (estatuto -> condicion .)
    MIN             reduce using rule 50 (estatuto -> condicion .)
    STADDES         reduce using rule 50 (estatuto -> condicion .)
    BOXPLOT         reduce using rule 50 (estatuto -> condicion .)
    LINREG          reduce using rule 50 (estatuto -> condicion .)
    RIGHT_CUR_BRACKET reduce using rule 50 (estatuto -> condicion .)


state 74

    (51) estatuto -> ciclow .

    ID              reduce using rule 51 (estatuto -> ciclow .)
    READ            reduce using rule 51 (estatuto -> ciclow .)
    WRITE           reduce using rule 51 (estatuto -> ciclow .)
    IF              reduce using rule 51 (estatuto -> ciclow .)
    WHILE           reduce using rule 51 (estatuto -> ciclow .)
    FOR             reduce using rule 51 (estatuto -> ciclow .)
    RETURNS         reduce using rule 51 (estatuto -> ciclow .)
    READ_FILE       reduce using rule 51 (estatuto -> ciclow .)
    MEAN            reduce using rule 51 (estatuto -> ciclow .)
    MODE            reduce using rule 51 (estatuto -> ciclow .)
    MEDIAN          reduce using rule 51 (estatuto -> ciclow .)
    VARIANCE        reduce using rule 51 (estatuto -> ciclow .)
    MAX             reduce using rule 51 (estatuto -> ciclow .)
    MIN             reduce using rule 51 (estatuto -> ciclow .)
    STADDES         reduce using rule 51 (estatuto -> ciclow .)
    BOXPLOT         reduce using rule 51 (estatuto -> ciclow .)
    LINREG          reduce using rule 51 (estatuto -> ciclow .)
    RIGHT_CUR_BRACKET reduce using rule 51 (estatuto -> ciclow .)


state 75

    (52) estatuto -> ciclof .

    ID              reduce using rule 52 (estatuto -> ciclof .)
    READ            reduce using rule 52 (estatuto -> ciclof .)
    WRITE           reduce using rule 52 (estatuto -> ciclof .)
    IF              reduce using rule 52 (estatuto -> ciclof .)
    WHILE           reduce using rule 52 (estatuto -> ciclof .)
    FOR             reduce using rule 52 (estatuto -> ciclof .)
    RETURNS         reduce using rule 52 (estatuto -> ciclof .)
    READ_FILE       reduce using rule 52 (estatuto -> ciclof .)
    MEAN            reduce using rule 52 (estatuto -> ciclof .)
    MODE            reduce using rule 52 (estatuto -> ciclof .)
    MEDIAN          reduce using rule 52 (estatuto -> ciclof .)
    VARIANCE        reduce using rule 52 (estatuto -> ciclof .)
    MAX             reduce using rule 52 (estatuto -> ciclof .)
    MIN             reduce using rule 52 (estatuto -> ciclof .)
    STADDES         reduce using rule 52 (estatuto -> ciclof .)
    BOXPLOT         reduce using rule 52 (estatuto -> ciclof .)
    LINREG          reduce using rule 52 (estatuto -> ciclof .)
    RIGHT_CUR_BRACKET reduce using rule 52 (estatuto -> ciclof .)


state 76

    (53) estatuto -> funcesp .

    ID              reduce using rule 53 (estatuto -> funcesp .)
    READ            reduce using rule 53 (estatuto -> funcesp .)
    WRITE           reduce using rule 53 (estatuto -> funcesp .)
    IF              reduce using rule 53 (estatuto -> funcesp .)
    WHILE           reduce using rule 53 (estatuto -> funcesp .)
    FOR             reduce using rule 53 (estatuto -> funcesp .)
    RETURNS         reduce using rule 53 (estatuto -> funcesp .)
    READ_FILE       reduce using rule 53 (estatuto -> funcesp .)
    MEAN            reduce using rule 53 (estatuto -> funcesp .)
    MODE            reduce using rule 53 (estatuto -> funcesp .)
    MEDIAN          reduce using rule 53 (estatuto -> funcesp .)
    VARIANCE        reduce using rule 53 (estatuto -> funcesp .)
    MAX             reduce using rule 53 (estatuto -> funcesp .)
    MIN             reduce using rule 53 (estatuto -> funcesp .)
    STADDES         reduce using rule 53 (estatuto -> funcesp .)
    BOXPLOT         reduce using rule 53 (estatuto -> funcesp .)
    LINREG          reduce using rule 53 (estatuto -> funcesp .)
    RIGHT_CUR_BRACKET reduce using rule 53 (estatuto -> funcesp .)


state 77

    (54) estatuto -> return .

    ID              reduce using rule 54 (estatuto -> return .)
    READ            reduce using rule 54 (estatuto -> return .)
    WRITE           reduce using rule 54 (estatuto -> return .)
    IF              reduce using rule 54 (estatuto -> return .)
    WHILE           reduce using rule 54 (estatuto -> return .)
    FOR             reduce using rule 54 (estatuto -> return .)
    RETURNS         reduce using rule 54 (estatuto -> return .)
    READ_FILE       reduce using rule 54 (estatuto -> return .)
    MEAN            reduce using rule 54 (estatuto -> return .)
    MODE            reduce using rule 54 (estatuto -> return .)
    MEDIAN          reduce using rule 54 (estatuto -> return .)
    VARIANCE        reduce using rule 54 (estatuto -> return .)
    MAX             reduce using rule 54 (estatuto -> return .)
    MIN             reduce using rule 54 (estatuto -> return .)
    STADDES         reduce using rule 54 (estatuto -> return .)
    BOXPLOT         reduce using rule 54 (estatuto -> return .)
    LINREG          reduce using rule 54 (estatuto -> return .)
    RIGHT_CUR_BRACKET reduce using rule 54 (estatuto -> return .)


state 78

    (55) estatuto -> copy .
    (105) funcesp -> copy .

  ! reduce/reduce conflict for ID resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for READ resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for WRITE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for IF resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for WHILE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for FOR resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for RETURNS resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for READ_FILE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MEAN resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MODE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MEDIAN resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for VARIANCE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MAX resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MIN resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for STADDES resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for BOXPLOT resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for LINREG resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for RIGHT_CUR_BRACKET resolved using rule 55 (estatuto -> copy .)
    ID              reduce using rule 55 (estatuto -> copy .)
    READ            reduce using rule 55 (estatuto -> copy .)
    WRITE           reduce using rule 55 (estatuto -> copy .)
    IF              reduce using rule 55 (estatuto -> copy .)
    WHILE           reduce using rule 55 (estatuto -> copy .)
    FOR             reduce using rule 55 (estatuto -> copy .)
    RETURNS         reduce using rule 55 (estatuto -> copy .)
    READ_FILE       reduce using rule 55 (estatuto -> copy .)
    MEAN            reduce using rule 55 (estatuto -> copy .)
    MODE            reduce using rule 55 (estatuto -> copy .)
    MEDIAN          reduce using rule 55 (estatuto -> copy .)
    VARIANCE        reduce using rule 55 (estatuto -> copy .)
    MAX             reduce using rule 55 (estatuto -> copy .)
    MIN             reduce using rule 55 (estatuto -> copy .)
    STADDES         reduce using rule 55 (estatuto -> copy .)
    BOXPLOT         reduce using rule 55 (estatuto -> copy .)
    LINREG          reduce using rule 55 (estatuto -> copy .)
    RIGHT_CUR_BRACKET reduce using rule 55 (estatuto -> copy .)

  ! ID              [ reduce using rule 105 (funcesp -> copy .) ]
  ! READ            [ reduce using rule 105 (funcesp -> copy .) ]
  ! WRITE           [ reduce using rule 105 (funcesp -> copy .) ]
  ! IF              [ reduce using rule 105 (funcesp -> copy .) ]
  ! WHILE           [ reduce using rule 105 (funcesp -> copy .) ]
  ! FOR             [ reduce using rule 105 (funcesp -> copy .) ]
  ! RETURNS         [ reduce using rule 105 (funcesp -> copy .) ]
  ! READ_FILE       [ reduce using rule 105 (funcesp -> copy .) ]
  ! MEAN            [ reduce using rule 105 (funcesp -> copy .) ]
  ! MODE            [ reduce using rule 105 (funcesp -> copy .) ]
  ! MEDIAN          [ reduce using rule 105 (funcesp -> copy .) ]
  ! VARIANCE        [ reduce using rule 105 (funcesp -> copy .) ]
  ! MAX             [ reduce using rule 105 (funcesp -> copy .) ]
  ! MIN             [ reduce using rule 105 (funcesp -> copy .) ]
  ! STADDES         [ reduce using rule 105 (funcesp -> copy .) ]
  ! BOXPLOT         [ reduce using rule 105 (funcesp -> copy .) ]
  ! LINREG          [ reduce using rule 105 (funcesp -> copy .) ]
  ! RIGHT_CUR_BRACKET [ reduce using rule 105 (funcesp -> copy .) ]


state 79

    (56) asign -> variable . ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON

    ASIGN           shift and go to state 115


state 80

    (21) llamada -> ID . pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (16) variable -> ID . pnSaveOperandos indexp
    (129) pnCheckFunc -> . empty
    (140) pnSaveOperandos -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 170 (empty -> .)
    ASIGN           reduce using rule 170 (empty -> .)

    pnCheckFunc                    shift and go to state 116
    pnSaveOperandos                shift and go to state 117
    empty                          shift and go to state 118

state 81

    (57) lee -> READ . LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 119


state 82

    (58) escribe -> WRITE . LEFT_PARENT escribep RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 120


state 83

    (91) condicion -> IF . LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf

    LEFT_PARENT     shift and go to state 121


state 84

    (94) ciclow -> WHILE . pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (159) pnSaveWhile -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)

    pnSaveWhile                    shift and go to state 122
    empty                          shift and go to state 123

state 85

    (95) ciclof -> FOR . LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    LEFT_PARENT     shift and go to state 124


state 86

    (96) funcesp -> mean .

    ID              reduce using rule 96 (funcesp -> mean .)
    READ            reduce using rule 96 (funcesp -> mean .)
    WRITE           reduce using rule 96 (funcesp -> mean .)
    IF              reduce using rule 96 (funcesp -> mean .)
    WHILE           reduce using rule 96 (funcesp -> mean .)
    FOR             reduce using rule 96 (funcesp -> mean .)
    RETURNS         reduce using rule 96 (funcesp -> mean .)
    READ_FILE       reduce using rule 96 (funcesp -> mean .)
    MEAN            reduce using rule 96 (funcesp -> mean .)
    MODE            reduce using rule 96 (funcesp -> mean .)
    MEDIAN          reduce using rule 96 (funcesp -> mean .)
    VARIANCE        reduce using rule 96 (funcesp -> mean .)
    MAX             reduce using rule 96 (funcesp -> mean .)
    MIN             reduce using rule 96 (funcesp -> mean .)
    STADDES         reduce using rule 96 (funcesp -> mean .)
    BOXPLOT         reduce using rule 96 (funcesp -> mean .)
    LINREG          reduce using rule 96 (funcesp -> mean .)
    RIGHT_CUR_BRACKET reduce using rule 96 (funcesp -> mean .)
    MULT            reduce using rule 96 (funcesp -> mean .)
    DIV             reduce using rule 96 (funcesp -> mean .)
    PLUS            reduce using rule 96 (funcesp -> mean .)
    MINUS           reduce using rule 96 (funcesp -> mean .)
    LESS_THAN       reduce using rule 96 (funcesp -> mean .)
    GREATER_THAN    reduce using rule 96 (funcesp -> mean .)
    EQUALS          reduce using rule 96 (funcesp -> mean .)
    NOTEQUALS       reduce using rule 96 (funcesp -> mean .)
    AND             reduce using rule 96 (funcesp -> mean .)
    OR              reduce using rule 96 (funcesp -> mean .)
    SEMICOLON       reduce using rule 96 (funcesp -> mean .)
    RIGHT_PARENT    reduce using rule 96 (funcesp -> mean .)
    COMMA           reduce using rule 96 (funcesp -> mean .)
    RIGHT_SQR_BRACKET reduce using rule 96 (funcesp -> mean .)


state 87

    (97) funcesp -> mode .

    ID              reduce using rule 97 (funcesp -> mode .)
    READ            reduce using rule 97 (funcesp -> mode .)
    WRITE           reduce using rule 97 (funcesp -> mode .)
    IF              reduce using rule 97 (funcesp -> mode .)
    WHILE           reduce using rule 97 (funcesp -> mode .)
    FOR             reduce using rule 97 (funcesp -> mode .)
    RETURNS         reduce using rule 97 (funcesp -> mode .)
    READ_FILE       reduce using rule 97 (funcesp -> mode .)
    MEAN            reduce using rule 97 (funcesp -> mode .)
    MODE            reduce using rule 97 (funcesp -> mode .)
    MEDIAN          reduce using rule 97 (funcesp -> mode .)
    VARIANCE        reduce using rule 97 (funcesp -> mode .)
    MAX             reduce using rule 97 (funcesp -> mode .)
    MIN             reduce using rule 97 (funcesp -> mode .)
    STADDES         reduce using rule 97 (funcesp -> mode .)
    BOXPLOT         reduce using rule 97 (funcesp -> mode .)
    LINREG          reduce using rule 97 (funcesp -> mode .)
    RIGHT_CUR_BRACKET reduce using rule 97 (funcesp -> mode .)
    MULT            reduce using rule 97 (funcesp -> mode .)
    DIV             reduce using rule 97 (funcesp -> mode .)
    PLUS            reduce using rule 97 (funcesp -> mode .)
    MINUS           reduce using rule 97 (funcesp -> mode .)
    LESS_THAN       reduce using rule 97 (funcesp -> mode .)
    GREATER_THAN    reduce using rule 97 (funcesp -> mode .)
    EQUALS          reduce using rule 97 (funcesp -> mode .)
    NOTEQUALS       reduce using rule 97 (funcesp -> mode .)
    AND             reduce using rule 97 (funcesp -> mode .)
    OR              reduce using rule 97 (funcesp -> mode .)
    SEMICOLON       reduce using rule 97 (funcesp -> mode .)
    RIGHT_PARENT    reduce using rule 97 (funcesp -> mode .)
    COMMA           reduce using rule 97 (funcesp -> mode .)
    RIGHT_SQR_BRACKET reduce using rule 97 (funcesp -> mode .)


state 88

    (98) funcesp -> median .

    ID              reduce using rule 98 (funcesp -> median .)
    READ            reduce using rule 98 (funcesp -> median .)
    WRITE           reduce using rule 98 (funcesp -> median .)
    IF              reduce using rule 98 (funcesp -> median .)
    WHILE           reduce using rule 98 (funcesp -> median .)
    FOR             reduce using rule 98 (funcesp -> median .)
    RETURNS         reduce using rule 98 (funcesp -> median .)
    READ_FILE       reduce using rule 98 (funcesp -> median .)
    MEAN            reduce using rule 98 (funcesp -> median .)
    MODE            reduce using rule 98 (funcesp -> median .)
    MEDIAN          reduce using rule 98 (funcesp -> median .)
    VARIANCE        reduce using rule 98 (funcesp -> median .)
    MAX             reduce using rule 98 (funcesp -> median .)
    MIN             reduce using rule 98 (funcesp -> median .)
    STADDES         reduce using rule 98 (funcesp -> median .)
    BOXPLOT         reduce using rule 98 (funcesp -> median .)
    LINREG          reduce using rule 98 (funcesp -> median .)
    RIGHT_CUR_BRACKET reduce using rule 98 (funcesp -> median .)
    MULT            reduce using rule 98 (funcesp -> median .)
    DIV             reduce using rule 98 (funcesp -> median .)
    PLUS            reduce using rule 98 (funcesp -> median .)
    MINUS           reduce using rule 98 (funcesp -> median .)
    LESS_THAN       reduce using rule 98 (funcesp -> median .)
    GREATER_THAN    reduce using rule 98 (funcesp -> median .)
    EQUALS          reduce using rule 98 (funcesp -> median .)
    NOTEQUALS       reduce using rule 98 (funcesp -> median .)
    AND             reduce using rule 98 (funcesp -> median .)
    OR              reduce using rule 98 (funcesp -> median .)
    SEMICOLON       reduce using rule 98 (funcesp -> median .)
    RIGHT_PARENT    reduce using rule 98 (funcesp -> median .)
    COMMA           reduce using rule 98 (funcesp -> median .)
    RIGHT_SQR_BRACKET reduce using rule 98 (funcesp -> median .)


state 89

    (99) funcesp -> variance .

    ID              reduce using rule 99 (funcesp -> variance .)
    READ            reduce using rule 99 (funcesp -> variance .)
    WRITE           reduce using rule 99 (funcesp -> variance .)
    IF              reduce using rule 99 (funcesp -> variance .)
    WHILE           reduce using rule 99 (funcesp -> variance .)
    FOR             reduce using rule 99 (funcesp -> variance .)
    RETURNS         reduce using rule 99 (funcesp -> variance .)
    READ_FILE       reduce using rule 99 (funcesp -> variance .)
    MEAN            reduce using rule 99 (funcesp -> variance .)
    MODE            reduce using rule 99 (funcesp -> variance .)
    MEDIAN          reduce using rule 99 (funcesp -> variance .)
    VARIANCE        reduce using rule 99 (funcesp -> variance .)
    MAX             reduce using rule 99 (funcesp -> variance .)
    MIN             reduce using rule 99 (funcesp -> variance .)
    STADDES         reduce using rule 99 (funcesp -> variance .)
    BOXPLOT         reduce using rule 99 (funcesp -> variance .)
    LINREG          reduce using rule 99 (funcesp -> variance .)
    RIGHT_CUR_BRACKET reduce using rule 99 (funcesp -> variance .)
    MULT            reduce using rule 99 (funcesp -> variance .)
    DIV             reduce using rule 99 (funcesp -> variance .)
    PLUS            reduce using rule 99 (funcesp -> variance .)
    MINUS           reduce using rule 99 (funcesp -> variance .)
    LESS_THAN       reduce using rule 99 (funcesp -> variance .)
    GREATER_THAN    reduce using rule 99 (funcesp -> variance .)
    EQUALS          reduce using rule 99 (funcesp -> variance .)
    NOTEQUALS       reduce using rule 99 (funcesp -> variance .)
    AND             reduce using rule 99 (funcesp -> variance .)
    OR              reduce using rule 99 (funcesp -> variance .)
    SEMICOLON       reduce using rule 99 (funcesp -> variance .)
    RIGHT_PARENT    reduce using rule 99 (funcesp -> variance .)
    COMMA           reduce using rule 99 (funcesp -> variance .)
    RIGHT_SQR_BRACKET reduce using rule 99 (funcesp -> variance .)


state 90

    (100) funcesp -> max .

    ID              reduce using rule 100 (funcesp -> max .)
    READ            reduce using rule 100 (funcesp -> max .)
    WRITE           reduce using rule 100 (funcesp -> max .)
    IF              reduce using rule 100 (funcesp -> max .)
    WHILE           reduce using rule 100 (funcesp -> max .)
    FOR             reduce using rule 100 (funcesp -> max .)
    RETURNS         reduce using rule 100 (funcesp -> max .)
    READ_FILE       reduce using rule 100 (funcesp -> max .)
    MEAN            reduce using rule 100 (funcesp -> max .)
    MODE            reduce using rule 100 (funcesp -> max .)
    MEDIAN          reduce using rule 100 (funcesp -> max .)
    VARIANCE        reduce using rule 100 (funcesp -> max .)
    MAX             reduce using rule 100 (funcesp -> max .)
    MIN             reduce using rule 100 (funcesp -> max .)
    STADDES         reduce using rule 100 (funcesp -> max .)
    BOXPLOT         reduce using rule 100 (funcesp -> max .)
    LINREG          reduce using rule 100 (funcesp -> max .)
    RIGHT_CUR_BRACKET reduce using rule 100 (funcesp -> max .)
    MULT            reduce using rule 100 (funcesp -> max .)
    DIV             reduce using rule 100 (funcesp -> max .)
    PLUS            reduce using rule 100 (funcesp -> max .)
    MINUS           reduce using rule 100 (funcesp -> max .)
    LESS_THAN       reduce using rule 100 (funcesp -> max .)
    GREATER_THAN    reduce using rule 100 (funcesp -> max .)
    EQUALS          reduce using rule 100 (funcesp -> max .)
    NOTEQUALS       reduce using rule 100 (funcesp -> max .)
    AND             reduce using rule 100 (funcesp -> max .)
    OR              reduce using rule 100 (funcesp -> max .)
    SEMICOLON       reduce using rule 100 (funcesp -> max .)
    RIGHT_PARENT    reduce using rule 100 (funcesp -> max .)
    COMMA           reduce using rule 100 (funcesp -> max .)
    RIGHT_SQR_BRACKET reduce using rule 100 (funcesp -> max .)


state 91

    (101) funcesp -> min .

    ID              reduce using rule 101 (funcesp -> min .)
    READ            reduce using rule 101 (funcesp -> min .)
    WRITE           reduce using rule 101 (funcesp -> min .)
    IF              reduce using rule 101 (funcesp -> min .)
    WHILE           reduce using rule 101 (funcesp -> min .)
    FOR             reduce using rule 101 (funcesp -> min .)
    RETURNS         reduce using rule 101 (funcesp -> min .)
    READ_FILE       reduce using rule 101 (funcesp -> min .)
    MEAN            reduce using rule 101 (funcesp -> min .)
    MODE            reduce using rule 101 (funcesp -> min .)
    MEDIAN          reduce using rule 101 (funcesp -> min .)
    VARIANCE        reduce using rule 101 (funcesp -> min .)
    MAX             reduce using rule 101 (funcesp -> min .)
    MIN             reduce using rule 101 (funcesp -> min .)
    STADDES         reduce using rule 101 (funcesp -> min .)
    BOXPLOT         reduce using rule 101 (funcesp -> min .)
    LINREG          reduce using rule 101 (funcesp -> min .)
    RIGHT_CUR_BRACKET reduce using rule 101 (funcesp -> min .)
    MULT            reduce using rule 101 (funcesp -> min .)
    DIV             reduce using rule 101 (funcesp -> min .)
    PLUS            reduce using rule 101 (funcesp -> min .)
    MINUS           reduce using rule 101 (funcesp -> min .)
    LESS_THAN       reduce using rule 101 (funcesp -> min .)
    GREATER_THAN    reduce using rule 101 (funcesp -> min .)
    EQUALS          reduce using rule 101 (funcesp -> min .)
    NOTEQUALS       reduce using rule 101 (funcesp -> min .)
    AND             reduce using rule 101 (funcesp -> min .)
    OR              reduce using rule 101 (funcesp -> min .)
    SEMICOLON       reduce using rule 101 (funcesp -> min .)
    RIGHT_PARENT    reduce using rule 101 (funcesp -> min .)
    COMMA           reduce using rule 101 (funcesp -> min .)
    RIGHT_SQR_BRACKET reduce using rule 101 (funcesp -> min .)


state 92

    (102) funcesp -> staddes .

    ID              reduce using rule 102 (funcesp -> staddes .)
    READ            reduce using rule 102 (funcesp -> staddes .)
    WRITE           reduce using rule 102 (funcesp -> staddes .)
    IF              reduce using rule 102 (funcesp -> staddes .)
    WHILE           reduce using rule 102 (funcesp -> staddes .)
    FOR             reduce using rule 102 (funcesp -> staddes .)
    RETURNS         reduce using rule 102 (funcesp -> staddes .)
    READ_FILE       reduce using rule 102 (funcesp -> staddes .)
    MEAN            reduce using rule 102 (funcesp -> staddes .)
    MODE            reduce using rule 102 (funcesp -> staddes .)
    MEDIAN          reduce using rule 102 (funcesp -> staddes .)
    VARIANCE        reduce using rule 102 (funcesp -> staddes .)
    MAX             reduce using rule 102 (funcesp -> staddes .)
    MIN             reduce using rule 102 (funcesp -> staddes .)
    STADDES         reduce using rule 102 (funcesp -> staddes .)
    BOXPLOT         reduce using rule 102 (funcesp -> staddes .)
    LINREG          reduce using rule 102 (funcesp -> staddes .)
    RIGHT_CUR_BRACKET reduce using rule 102 (funcesp -> staddes .)
    MULT            reduce using rule 102 (funcesp -> staddes .)
    DIV             reduce using rule 102 (funcesp -> staddes .)
    PLUS            reduce using rule 102 (funcesp -> staddes .)
    MINUS           reduce using rule 102 (funcesp -> staddes .)
    LESS_THAN       reduce using rule 102 (funcesp -> staddes .)
    GREATER_THAN    reduce using rule 102 (funcesp -> staddes .)
    EQUALS          reduce using rule 102 (funcesp -> staddes .)
    NOTEQUALS       reduce using rule 102 (funcesp -> staddes .)
    AND             reduce using rule 102 (funcesp -> staddes .)
    OR              reduce using rule 102 (funcesp -> staddes .)
    SEMICOLON       reduce using rule 102 (funcesp -> staddes .)
    RIGHT_PARENT    reduce using rule 102 (funcesp -> staddes .)
    COMMA           reduce using rule 102 (funcesp -> staddes .)
    RIGHT_SQR_BRACKET reduce using rule 102 (funcesp -> staddes .)


state 93

    (103) funcesp -> boxplot .

    ID              reduce using rule 103 (funcesp -> boxplot .)
    READ            reduce using rule 103 (funcesp -> boxplot .)
    WRITE           reduce using rule 103 (funcesp -> boxplot .)
    IF              reduce using rule 103 (funcesp -> boxplot .)
    WHILE           reduce using rule 103 (funcesp -> boxplot .)
    FOR             reduce using rule 103 (funcesp -> boxplot .)
    RETURNS         reduce using rule 103 (funcesp -> boxplot .)
    READ_FILE       reduce using rule 103 (funcesp -> boxplot .)
    MEAN            reduce using rule 103 (funcesp -> boxplot .)
    MODE            reduce using rule 103 (funcesp -> boxplot .)
    MEDIAN          reduce using rule 103 (funcesp -> boxplot .)
    VARIANCE        reduce using rule 103 (funcesp -> boxplot .)
    MAX             reduce using rule 103 (funcesp -> boxplot .)
    MIN             reduce using rule 103 (funcesp -> boxplot .)
    STADDES         reduce using rule 103 (funcesp -> boxplot .)
    BOXPLOT         reduce using rule 103 (funcesp -> boxplot .)
    LINREG          reduce using rule 103 (funcesp -> boxplot .)
    RIGHT_CUR_BRACKET reduce using rule 103 (funcesp -> boxplot .)
    MULT            reduce using rule 103 (funcesp -> boxplot .)
    DIV             reduce using rule 103 (funcesp -> boxplot .)
    PLUS            reduce using rule 103 (funcesp -> boxplot .)
    MINUS           reduce using rule 103 (funcesp -> boxplot .)
    LESS_THAN       reduce using rule 103 (funcesp -> boxplot .)
    GREATER_THAN    reduce using rule 103 (funcesp -> boxplot .)
    EQUALS          reduce using rule 103 (funcesp -> boxplot .)
    NOTEQUALS       reduce using rule 103 (funcesp -> boxplot .)
    AND             reduce using rule 103 (funcesp -> boxplot .)
    OR              reduce using rule 103 (funcesp -> boxplot .)
    SEMICOLON       reduce using rule 103 (funcesp -> boxplot .)
    RIGHT_PARENT    reduce using rule 103 (funcesp -> boxplot .)
    COMMA           reduce using rule 103 (funcesp -> boxplot .)
    RIGHT_SQR_BRACKET reduce using rule 103 (funcesp -> boxplot .)


state 94

    (104) funcesp -> linreg .

    ID              reduce using rule 104 (funcesp -> linreg .)
    READ            reduce using rule 104 (funcesp -> linreg .)
    WRITE           reduce using rule 104 (funcesp -> linreg .)
    IF              reduce using rule 104 (funcesp -> linreg .)
    WHILE           reduce using rule 104 (funcesp -> linreg .)
    FOR             reduce using rule 104 (funcesp -> linreg .)
    RETURNS         reduce using rule 104 (funcesp -> linreg .)
    READ_FILE       reduce using rule 104 (funcesp -> linreg .)
    MEAN            reduce using rule 104 (funcesp -> linreg .)
    MODE            reduce using rule 104 (funcesp -> linreg .)
    MEDIAN          reduce using rule 104 (funcesp -> linreg .)
    VARIANCE        reduce using rule 104 (funcesp -> linreg .)
    MAX             reduce using rule 104 (funcesp -> linreg .)
    MIN             reduce using rule 104 (funcesp -> linreg .)
    STADDES         reduce using rule 104 (funcesp -> linreg .)
    BOXPLOT         reduce using rule 104 (funcesp -> linreg .)
    LINREG          reduce using rule 104 (funcesp -> linreg .)
    RIGHT_CUR_BRACKET reduce using rule 104 (funcesp -> linreg .)
    MULT            reduce using rule 104 (funcesp -> linreg .)
    DIV             reduce using rule 104 (funcesp -> linreg .)
    PLUS            reduce using rule 104 (funcesp -> linreg .)
    MINUS           reduce using rule 104 (funcesp -> linreg .)
    LESS_THAN       reduce using rule 104 (funcesp -> linreg .)
    GREATER_THAN    reduce using rule 104 (funcesp -> linreg .)
    EQUALS          reduce using rule 104 (funcesp -> linreg .)
    NOTEQUALS       reduce using rule 104 (funcesp -> linreg .)
    AND             reduce using rule 104 (funcesp -> linreg .)
    OR              reduce using rule 104 (funcesp -> linreg .)
    SEMICOLON       reduce using rule 104 (funcesp -> linreg .)
    RIGHT_PARENT    reduce using rule 104 (funcesp -> linreg .)
    COMMA           reduce using rule 104 (funcesp -> linreg .)
    RIGHT_SQR_BRACKET reduce using rule 104 (funcesp -> linreg .)


state 95

    (61) return -> RETURNS . exp SEMICOLON
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 96

    exp                            shift and go to state 125
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94
    copy                           shift and go to state 138

state 96

    (14) copy -> READ_FILE . LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 139


state 97

    (106) mean -> MEAN . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 140


state 98

    (107) mode -> MODE . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 141


state 99

    (108) median -> MEDIAN . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 142


state 100

    (109) variance -> VARIANCE . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 143


state 101

    (110) max -> MAX . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 144


state 102

    (111) min -> MIN . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 145


state 103

    (112) staddes -> STADDES . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 146


state 104

    (113) boxplot -> BOXPLOT . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 147


state 105

    (114) linreg -> LINREG . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 148


state 106

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar . pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (120) pnCrearListaParam -> . empty
    (170) empty -> .

    DATAFRAME       reduce using rule 170 (empty -> .)
    INT             reduce using rule 170 (empty -> .)
    FLOAT           reduce using rule 170 (empty -> .)
    CHAR            reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCrearListaParam              shift and go to state 149
    empty                          shift and go to state 150

state 107

    (33) idp -> ID pnCheckNameTablaVar pnArrAddDim idpp .

    SEMICOLON       reduce using rule 33 (idp -> ID pnCheckNameTablaVar pnArrAddDim idpp .)


state 108

    (34) idpp -> COMMA . ID pnCheckNameTablaVar pnArrAddDim idpp

    ID              shift and go to state 151


state 109

    (35) idpp -> empty .

    SEMICOLON       reduce using rule 35 (idpp -> empty .)


state 110

    (29) vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp . RIGHT_SQR_BRACKET pnArrCuadriplificar

    RIGHT_SQR_BRACKET shift and go to state 152


state 111

    (31) vpp -> COMMA . pnArrIncDim CTEI pnArrSaveLim1
    (167) pnArrIncDim -> . empty
    (170) empty -> .

    CTEI            reduce using rule 170 (empty -> .)

    pnArrIncDim                    shift and go to state 153
    empty                          shift and go to state 154

state 112

    (32) vpp -> empty .

    RIGHT_SQR_BRACKET reduce using rule 32 (vpp -> empty .)


state 113

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET . pnEndScript
    (128) pnEndScript -> . empty
    (170) empty -> .

    $end            reduce using rule 170 (empty -> .)

    pnEndScript                    shift and go to state 155
    empty                          shift and go to state 156

state 114

    (7) estatutop -> estatuto estatutop .

    RIGHT_CUR_BRACKET reduce using rule 7 (estatutop -> estatuto estatutop .)


state 115

    (56) asign -> variable ASIGN . pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (150) pnSaveOperadorAsign -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)
    CTEI            reduce using rule 170 (empty -> .)
    CTEF            reduce using rule 170 (empty -> .)
    CTEC            reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)

    pnSaveOperadorAsign            shift and go to state 157
    empty                          shift and go to state 158

state 116

    (21) llamada -> ID pnCheckFunc . LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub

    LEFT_PARENT     shift and go to state 159


state 117

    (16) variable -> ID pnSaveOperandos . indexp
    (17) indexp -> . LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET
    (18) indexp -> . empty
    (170) empty -> .

    LEFT_SQR_BRACKET shift and go to state 161
    ASIGN           reduce using rule 170 (empty -> .)
    MULT            reduce using rule 170 (empty -> .)
    DIV             reduce using rule 170 (empty -> .)
    PLUS            reduce using rule 170 (empty -> .)
    MINUS           reduce using rule 170 (empty -> .)
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    indexp                         shift and go to state 160
    empty                          shift and go to state 162

state 118

    (129) pnCheckFunc -> empty .
    (140) pnSaveOperandos -> empty .

    LEFT_PARENT     reduce using rule 129 (pnCheckFunc -> empty .)
    LEFT_SQR_BRACKET reduce using rule 140 (pnSaveOperandos -> empty .)
    ASIGN           reduce using rule 140 (pnSaveOperandos -> empty .)


state 119

    (57) lee -> READ LEFT_PARENT . variable pnCuadLee RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 164

    variable                       shift and go to state 163

state 120

    (58) escribe -> WRITE LEFT_PARENT . escribep RIGHT_PARENT SEMICOLON
    (59) escribep -> . exp pnCuadEscribe
    (60) escribep -> . LETRERO pnCuadEscribe
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LETRERO         shift and go to state 167
    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 96

    escribep                       shift and go to state 165
    exp                            shift and go to state 166
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94
    copy                           shift and go to state 138

state 121

    (91) condicion -> IF LEFT_PARENT . exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 96

    exp                            shift and go to state 168
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94
    copy                           shift and go to state 138

state 122

    (94) ciclow -> WHILE pnSaveWhile . LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile

    LEFT_PARENT     shift and go to state 169


state 123

    (159) pnSaveWhile -> empty .

    LEFT_PARENT     reduce using rule 159 (pnSaveWhile -> empty .)


state 124

    (95) ciclof -> FOR LEFT_PARENT . ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    ID              shift and go to state 170


state 125

    (61) return -> RETURNS exp . SEMICOLON

    SEMICOLON       shift and go to state 171


state 126

    (62) exp -> exprel . pnCuadOplog logic
    (149) pnCuadOplog -> . empty
    (170) empty -> .

    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnCuadOplog                    shift and go to state 172
    empty                          shift and go to state 173

state 127

    (67) exprel -> e . pnCuadOpRelacional relacionalp
    (148) pnCuadOpRelacional -> . empty
    (170) empty -> .

    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnCuadOpRelacional             shift and go to state 174
    empty                          shift and go to state 175

state 128

    (74) e -> t . pnCuadPlMi tp
    (146) pnCuadPlMi -> . empty
    (170) empty -> .

    PLUS            reduce using rule 170 (empty -> .)
    MINUS           reduce using rule 170 (empty -> .)
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnCuadPlMi                     shift and go to state 176
    empty                          shift and go to state 177

state 129

    (79) t -> f . pnCuadMuDi fp
    (147) pnCuadMuDi -> . empty
    (170) empty -> .

    MULT            reduce using rule 170 (empty -> .)
    DIV             reduce using rule 170 (empty -> .)
    PLUS            reduce using rule 170 (empty -> .)
    MINUS           reduce using rule 170 (empty -> .)
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnCuadMuDi                     shift and go to state 178
    empty                          shift and go to state 179

state 130

    (84) f -> LEFT_PARENT . pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (138) pnSaveFondoFalso -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)
    CTEI            reduce using rule 170 (empty -> .)
    CTEF            reduce using rule 170 (empty -> .)
    CTEC            reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)

    pnSaveFondoFalso               shift and go to state 180
    empty                          shift and go to state 181

state 131

    (85) f -> CTEI . pnSaveCteI pnSaveOperandoConstante
    (135) pnSaveCteI -> . empty
    (170) empty -> .

    MULT            reduce using rule 170 (empty -> .)
    DIV             reduce using rule 170 (empty -> .)
    PLUS            reduce using rule 170 (empty -> .)
    MINUS           reduce using rule 170 (empty -> .)
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnSaveCteI                     shift and go to state 182
    empty                          shift and go to state 183

state 132

    (86) f -> CTEF . pnSaveCteF pnSaveOperandoConstante
    (136) pnSaveCteF -> . empty
    (170) empty -> .

    MULT            reduce using rule 170 (empty -> .)
    DIV             reduce using rule 170 (empty -> .)
    PLUS            reduce using rule 170 (empty -> .)
    MINUS           reduce using rule 170 (empty -> .)
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnSaveCteF                     shift and go to state 184
    empty                          shift and go to state 185

state 133

    (87) f -> CTEC . pnSaveCteC pnSaveOperandoConstante
    (137) pnSaveCteC -> . empty
    (170) empty -> .

    MULT            reduce using rule 170 (empty -> .)
    DIV             reduce using rule 170 (empty -> .)
    PLUS            reduce using rule 170 (empty -> .)
    MINUS           reduce using rule 170 (empty -> .)
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnSaveCteC                     shift and go to state 186
    empty                          shift and go to state 187

state 134

    (88) f -> variable .

    MULT            reduce using rule 88 (f -> variable .)
    DIV             reduce using rule 88 (f -> variable .)
    PLUS            reduce using rule 88 (f -> variable .)
    MINUS           reduce using rule 88 (f -> variable .)
    LESS_THAN       reduce using rule 88 (f -> variable .)
    GREATER_THAN    reduce using rule 88 (f -> variable .)
    EQUALS          reduce using rule 88 (f -> variable .)
    NOTEQUALS       reduce using rule 88 (f -> variable .)
    AND             reduce using rule 88 (f -> variable .)
    OR              reduce using rule 88 (f -> variable .)
    SEMICOLON       reduce using rule 88 (f -> variable .)
    RIGHT_PARENT    reduce using rule 88 (f -> variable .)
    COMMA           reduce using rule 88 (f -> variable .)
    RIGHT_SQR_BRACKET reduce using rule 88 (f -> variable .)


state 135

    (89) f -> llamada .

    MULT            reduce using rule 89 (f -> llamada .)
    DIV             reduce using rule 89 (f -> llamada .)
    PLUS            reduce using rule 89 (f -> llamada .)
    MINUS           reduce using rule 89 (f -> llamada .)
    LESS_THAN       reduce using rule 89 (f -> llamada .)
    GREATER_THAN    reduce using rule 89 (f -> llamada .)
    EQUALS          reduce using rule 89 (f -> llamada .)
    NOTEQUALS       reduce using rule 89 (f -> llamada .)
    AND             reduce using rule 89 (f -> llamada .)
    OR              reduce using rule 89 (f -> llamada .)
    SEMICOLON       reduce using rule 89 (f -> llamada .)
    RIGHT_PARENT    reduce using rule 89 (f -> llamada .)
    COMMA           reduce using rule 89 (f -> llamada .)
    RIGHT_SQR_BRACKET reduce using rule 89 (f -> llamada .)


state 136

    (90) f -> funcesp .

    MULT            reduce using rule 90 (f -> funcesp .)
    DIV             reduce using rule 90 (f -> funcesp .)
    PLUS            reduce using rule 90 (f -> funcesp .)
    MINUS           reduce using rule 90 (f -> funcesp .)
    LESS_THAN       reduce using rule 90 (f -> funcesp .)
    GREATER_THAN    reduce using rule 90 (f -> funcesp .)
    EQUALS          reduce using rule 90 (f -> funcesp .)
    NOTEQUALS       reduce using rule 90 (f -> funcesp .)
    AND             reduce using rule 90 (f -> funcesp .)
    OR              reduce using rule 90 (f -> funcesp .)
    SEMICOLON       reduce using rule 90 (f -> funcesp .)
    RIGHT_PARENT    reduce using rule 90 (f -> funcesp .)
    COMMA           reduce using rule 90 (f -> funcesp .)
    RIGHT_SQR_BRACKET reduce using rule 90 (f -> funcesp .)


state 137

    (16) variable -> ID . pnSaveOperandos indexp
    (21) llamada -> ID . pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (140) pnSaveOperandos -> . empty
    (129) pnCheckFunc -> . empty
    (170) empty -> .

    LEFT_SQR_BRACKET reduce using rule 170 (empty -> .)
    MULT            reduce using rule 170 (empty -> .)
    DIV             reduce using rule 170 (empty -> .)
    PLUS            reduce using rule 170 (empty -> .)
    MINUS           reduce using rule 170 (empty -> .)
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)
    LEFT_PARENT     reduce using rule 170 (empty -> .)

    pnSaveOperandos                shift and go to state 117
    pnCheckFunc                    shift and go to state 116
    empty                          shift and go to state 188

state 138

    (105) funcesp -> copy .

    MULT            reduce using rule 105 (funcesp -> copy .)
    DIV             reduce using rule 105 (funcesp -> copy .)
    PLUS            reduce using rule 105 (funcesp -> copy .)
    MINUS           reduce using rule 105 (funcesp -> copy .)
    LESS_THAN       reduce using rule 105 (funcesp -> copy .)
    GREATER_THAN    reduce using rule 105 (funcesp -> copy .)
    EQUALS          reduce using rule 105 (funcesp -> copy .)
    NOTEQUALS       reduce using rule 105 (funcesp -> copy .)
    AND             reduce using rule 105 (funcesp -> copy .)
    OR              reduce using rule 105 (funcesp -> copy .)
    SEMICOLON       reduce using rule 105 (funcesp -> copy .)
    RIGHT_PARENT    reduce using rule 105 (funcesp -> copy .)
    COMMA           reduce using rule 105 (funcesp -> copy .)
    RIGHT_SQR_BRACKET reduce using rule 105 (funcesp -> copy .)


state 139

    (14) copy -> READ_FILE LEFT_PARENT . LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LETRERO         shift and go to state 189


state 140

    (106) mean -> MEAN LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 164

    variable                       shift and go to state 190

state 141

    (107) mode -> MODE LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 164

    variable                       shift and go to state 191

state 142

    (108) median -> MEDIAN LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 164

    variable                       shift and go to state 192

state 143

    (109) variance -> VARIANCE LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 164

    variable                       shift and go to state 193

state 144

    (110) max -> MAX LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 164

    variable                       shift and go to state 194

state 145

    (111) min -> MIN LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 164

    variable                       shift and go to state 195

state 146

    (112) staddes -> STADDES LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 164

    variable                       shift and go to state 196

state 147

    (113) boxplot -> BOXPLOT LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 164

    variable                       shift and go to state 197

state 148

    (114) linreg -> LINREG LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 164

    variable                       shift and go to state 198

state 149

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam . param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (39) param -> . paramlist
    (40) param -> . empty
    (41) paramlist -> . tipoparam ARROW ID pnAddParametersTablaVar paramlistp
    (170) empty -> .
    (42) tipoparam -> . tipo_simp
    (43) tipoparam -> . DATAFRAME pnSaveTypeVar
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    DATAFRAME       shift and go to state 204
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    param                          shift and go to state 199
    paramlist                      shift and go to state 200
    empty                          shift and go to state 201
    tipoparam                      shift and go to state 202
    tipo_simp                      shift and go to state 203

state 150

    (120) pnCrearListaParam -> empty .

    DATAFRAME       reduce using rule 120 (pnCrearListaParam -> empty .)
    INT             reduce using rule 120 (pnCrearListaParam -> empty .)
    FLOAT           reduce using rule 120 (pnCrearListaParam -> empty .)
    CHAR            reduce using rule 120 (pnCrearListaParam -> empty .)
    RIGHT_PARENT    reduce using rule 120 (pnCrearListaParam -> empty .)


state 151

    (34) idpp -> COMMA ID . pnCheckNameTablaVar pnArrAddDim idpp
    (122) pnCheckNameTablaVar -> . empty
    (170) empty -> .

    COMMA           reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)

    pnCheckNameTablaVar            shift and go to state 205
    empty                          shift and go to state 58

state 152

    (29) vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET . pnArrCuadriplificar
    (168) pnArrCuadriplificar -> . empty
    (170) empty -> .

    ARROW           reduce using rule 170 (empty -> .)

    pnArrCuadriplificar            shift and go to state 206
    empty                          shift and go to state 207

state 153

    (31) vpp -> COMMA pnArrIncDim . CTEI pnArrSaveLim1

    CTEI            shift and go to state 208


state 154

    (167) pnArrIncDim -> empty .

    CTEI            reduce using rule 167 (pnArrIncDim -> empty .)


state 155

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript .

    $end            reduce using rule 6 (bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript .)


state 156

    (128) pnEndScript -> empty .

    $end            reduce using rule 128 (pnEndScript -> empty .)


state 157

    (56) asign -> variable ASIGN pnSaveOperadorAsign . exp pnCuadAsign SEMICOLON
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 96

    variable                       shift and go to state 134
    exp                            shift and go to state 209
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94
    copy                           shift and go to state 138

state 158

    (150) pnSaveOperadorAsign -> empty .

    LEFT_PARENT     reduce using rule 150 (pnSaveOperadorAsign -> empty .)
    CTEI            reduce using rule 150 (pnSaveOperadorAsign -> empty .)
    CTEF            reduce using rule 150 (pnSaveOperadorAsign -> empty .)
    CTEC            reduce using rule 150 (pnSaveOperadorAsign -> empty .)
    ID              reduce using rule 150 (pnSaveOperadorAsign -> empty .)
    MEAN            reduce using rule 150 (pnSaveOperadorAsign -> empty .)
    MODE            reduce using rule 150 (pnSaveOperadorAsign -> empty .)
    MEDIAN          reduce using rule 150 (pnSaveOperadorAsign -> empty .)
    VARIANCE        reduce using rule 150 (pnSaveOperadorAsign -> empty .)
    MAX             reduce using rule 150 (pnSaveOperadorAsign -> empty .)
    MIN             reduce using rule 150 (pnSaveOperadorAsign -> empty .)
    STADDES         reduce using rule 150 (pnSaveOperadorAsign -> empty .)
    BOXPLOT         reduce using rule 150 (pnSaveOperadorAsign -> empty .)
    LINREG          reduce using rule 150 (pnSaveOperadorAsign -> empty .)
    READ_FILE       reduce using rule 150 (pnSaveOperadorAsign -> empty .)


state 159

    (21) llamada -> ID pnCheckFunc LEFT_PARENT . pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (130) pnGenerateEra -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)
    CTEI            reduce using rule 170 (empty -> .)
    CTEF            reduce using rule 170 (empty -> .)
    CTEC            reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnGenerateEra                  shift and go to state 210
    empty                          shift and go to state 211

state 160

    (16) variable -> ID pnSaveOperandos indexp .

    ASIGN           reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    MULT            reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    DIV             reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    PLUS            reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    MINUS           reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    LESS_THAN       reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    GREATER_THAN    reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    EQUALS          reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    NOTEQUALS       reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    AND             reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    OR              reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    SEMICOLON       reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    RIGHT_PARENT    reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    COMMA           reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    RIGHT_SQR_BRACKET reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)


state 161

    (17) indexp -> LEFT_SQR_BRACKET . exp indexpp RIGHT_SQR_BRACKET
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 96

    exp                            shift and go to state 212
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94
    copy                           shift and go to state 138

state 162

    (18) indexp -> empty .

    ASIGN           reduce using rule 18 (indexp -> empty .)
    MULT            reduce using rule 18 (indexp -> empty .)
    DIV             reduce using rule 18 (indexp -> empty .)
    PLUS            reduce using rule 18 (indexp -> empty .)
    MINUS           reduce using rule 18 (indexp -> empty .)
    LESS_THAN       reduce using rule 18 (indexp -> empty .)
    GREATER_THAN    reduce using rule 18 (indexp -> empty .)
    EQUALS          reduce using rule 18 (indexp -> empty .)
    NOTEQUALS       reduce using rule 18 (indexp -> empty .)
    AND             reduce using rule 18 (indexp -> empty .)
    OR              reduce using rule 18 (indexp -> empty .)
    SEMICOLON       reduce using rule 18 (indexp -> empty .)
    RIGHT_PARENT    reduce using rule 18 (indexp -> empty .)
    COMMA           reduce using rule 18 (indexp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 18 (indexp -> empty .)


state 163

    (57) lee -> READ LEFT_PARENT variable . pnCuadLee RIGHT_PARENT SEMICOLON
    (153) pnCuadLee -> . empty
    (170) empty -> .

    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCuadLee                      shift and go to state 213
    empty                          shift and go to state 214

state 164

    (16) variable -> ID . pnSaveOperandos indexp
    (140) pnSaveOperandos -> . empty
    (170) empty -> .

    LEFT_SQR_BRACKET reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnSaveOperandos                shift and go to state 117
    empty                          shift and go to state 215

state 165

    (58) escribe -> WRITE LEFT_PARENT escribep . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 216


state 166

    (59) escribep -> exp . pnCuadEscribe
    (152) pnCuadEscribe -> . empty
    (170) empty -> .

    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCuadEscribe                  shift and go to state 217
    empty                          shift and go to state 218

state 167

    (60) escribep -> LETRERO . pnCuadEscribe
    (152) pnCuadEscribe -> . empty
    (170) empty -> .

    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCuadEscribe                  shift and go to state 219
    empty                          shift and go to state 218

state 168

    (91) condicion -> IF LEFT_PARENT exp . pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (156) pnCheckBoolIf -> . empty
    (170) empty -> .

    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCheckBoolIf                  shift and go to state 220
    empty                          shift and go to state 221

state 169

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT . exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 96

    exp                            shift and go to state 222
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94
    copy                           shift and go to state 138

state 170

    (95) ciclof -> FOR LEFT_PARENT ID . pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (161) pnSaveForID -> . empty
    (170) empty -> .

    ASIGN           reduce using rule 170 (empty -> .)

    pnSaveForID                    shift and go to state 223
    empty                          shift and go to state 224

state 171

    (61) return -> RETURNS exp SEMICOLON .

    ID              reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    READ            reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    WRITE           reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    IF              reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    WHILE           reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    FOR             reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    RETURNS         reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    READ_FILE       reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MEAN            reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MODE            reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MEDIAN          reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    VARIANCE        reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MAX             reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MIN             reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    STADDES         reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    BOXPLOT         reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    LINREG          reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 61 (return -> RETURNS exp SEMICOLON .)


state 172

    (62) exp -> exprel pnCuadOplog . logic
    (63) logic -> . logicsig exprel pnCuadOplog logic
    (64) logic -> . empty
    (65) logicsig -> . AND pnSaveOperadorLog
    (66) logicsig -> . OR pnSaveOperadorLog
    (170) empty -> .

    AND             shift and go to state 228
    OR              shift and go to state 229
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    logic                          shift and go to state 225
    logicsig                       shift and go to state 226
    empty                          shift and go to state 227

state 173

    (149) pnCuadOplog -> empty .

    AND             reduce using rule 149 (pnCuadOplog -> empty .)
    OR              reduce using rule 149 (pnCuadOplog -> empty .)
    SEMICOLON       reduce using rule 149 (pnCuadOplog -> empty .)
    RIGHT_PARENT    reduce using rule 149 (pnCuadOplog -> empty .)
    COMMA           reduce using rule 149 (pnCuadOplog -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 149 (pnCuadOplog -> empty .)


state 174

    (67) exprel -> e pnCuadOpRelacional . relacionalp
    (68) relacionalp -> . relsig e pnCuadOpRelacional relacionalp
    (69) relacionalp -> . empty
    (70) relsig -> . LESS_THAN pnSaveOperadorRel
    (71) relsig -> . GREATER_THAN pnSaveOperadorRel
    (72) relsig -> . EQUALS pnSaveOperadorRel
    (73) relsig -> . NOTEQUALS pnSaveOperadorRel
    (170) empty -> .

    LESS_THAN       shift and go to state 233
    GREATER_THAN    shift and go to state 234
    EQUALS          shift and go to state 235
    NOTEQUALS       shift and go to state 236
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    relacionalp                    shift and go to state 230
    relsig                         shift and go to state 231
    empty                          shift and go to state 232

state 175

    (148) pnCuadOpRelacional -> empty .

    LESS_THAN       reduce using rule 148 (pnCuadOpRelacional -> empty .)
    GREATER_THAN    reduce using rule 148 (pnCuadOpRelacional -> empty .)
    EQUALS          reduce using rule 148 (pnCuadOpRelacional -> empty .)
    NOTEQUALS       reduce using rule 148 (pnCuadOpRelacional -> empty .)
    AND             reduce using rule 148 (pnCuadOpRelacional -> empty .)
    OR              reduce using rule 148 (pnCuadOpRelacional -> empty .)
    SEMICOLON       reduce using rule 148 (pnCuadOpRelacional -> empty .)
    RIGHT_PARENT    reduce using rule 148 (pnCuadOpRelacional -> empty .)
    COMMA           reduce using rule 148 (pnCuadOpRelacional -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 148 (pnCuadOpRelacional -> empty .)


state 176

    (74) e -> t pnCuadPlMi . tp
    (75) tp -> . tsig t pnCuadPlMi tp
    (76) tp -> . empty
    (77) tsig -> . PLUS pnSaveOperadorPlMi
    (78) tsig -> . MINUS pnSaveOperadorPlMi
    (170) empty -> .

    PLUS            shift and go to state 240
    MINUS           shift and go to state 241
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    tp                             shift and go to state 237
    tsig                           shift and go to state 238
    empty                          shift and go to state 239

state 177

    (146) pnCuadPlMi -> empty .

    PLUS            reduce using rule 146 (pnCuadPlMi -> empty .)
    MINUS           reduce using rule 146 (pnCuadPlMi -> empty .)
    LESS_THAN       reduce using rule 146 (pnCuadPlMi -> empty .)
    GREATER_THAN    reduce using rule 146 (pnCuadPlMi -> empty .)
    EQUALS          reduce using rule 146 (pnCuadPlMi -> empty .)
    NOTEQUALS       reduce using rule 146 (pnCuadPlMi -> empty .)
    AND             reduce using rule 146 (pnCuadPlMi -> empty .)
    OR              reduce using rule 146 (pnCuadPlMi -> empty .)
    SEMICOLON       reduce using rule 146 (pnCuadPlMi -> empty .)
    RIGHT_PARENT    reduce using rule 146 (pnCuadPlMi -> empty .)
    COMMA           reduce using rule 146 (pnCuadPlMi -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 146 (pnCuadPlMi -> empty .)


state 178

    (79) t -> f pnCuadMuDi . fp
    (80) fp -> . fsig f pnCuadMuDi fp
    (81) fp -> . empty
    (82) fsig -> . MULT pnSaveOperadorMuDi
    (83) fsig -> . DIV pnSaveOperadorMuDi
    (170) empty -> .

    MULT            shift and go to state 245
    DIV             shift and go to state 246
    PLUS            reduce using rule 170 (empty -> .)
    MINUS           reduce using rule 170 (empty -> .)
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    fp                             shift and go to state 242
    fsig                           shift and go to state 243
    empty                          shift and go to state 244

state 179

    (147) pnCuadMuDi -> empty .

    MULT            reduce using rule 147 (pnCuadMuDi -> empty .)
    DIV             reduce using rule 147 (pnCuadMuDi -> empty .)
    PLUS            reduce using rule 147 (pnCuadMuDi -> empty .)
    MINUS           reduce using rule 147 (pnCuadMuDi -> empty .)
    LESS_THAN       reduce using rule 147 (pnCuadMuDi -> empty .)
    GREATER_THAN    reduce using rule 147 (pnCuadMuDi -> empty .)
    EQUALS          reduce using rule 147 (pnCuadMuDi -> empty .)
    NOTEQUALS       reduce using rule 147 (pnCuadMuDi -> empty .)
    AND             reduce using rule 147 (pnCuadMuDi -> empty .)
    OR              reduce using rule 147 (pnCuadMuDi -> empty .)
    SEMICOLON       reduce using rule 147 (pnCuadMuDi -> empty .)
    RIGHT_PARENT    reduce using rule 147 (pnCuadMuDi -> empty .)
    COMMA           reduce using rule 147 (pnCuadMuDi -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 147 (pnCuadMuDi -> empty .)


state 180

    (84) f -> LEFT_PARENT pnSaveFondoFalso . exp RIGHT_PARENT pnPopFondoFalso
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 96

    exp                            shift and go to state 247
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94
    copy                           shift and go to state 138

state 181

    (138) pnSaveFondoFalso -> empty .

    LEFT_PARENT     reduce using rule 138 (pnSaveFondoFalso -> empty .)
    CTEI            reduce using rule 138 (pnSaveFondoFalso -> empty .)
    CTEF            reduce using rule 138 (pnSaveFondoFalso -> empty .)
    CTEC            reduce using rule 138 (pnSaveFondoFalso -> empty .)
    ID              reduce using rule 138 (pnSaveFondoFalso -> empty .)
    MEAN            reduce using rule 138 (pnSaveFondoFalso -> empty .)
    MODE            reduce using rule 138 (pnSaveFondoFalso -> empty .)
    MEDIAN          reduce using rule 138 (pnSaveFondoFalso -> empty .)
    VARIANCE        reduce using rule 138 (pnSaveFondoFalso -> empty .)
    MAX             reduce using rule 138 (pnSaveFondoFalso -> empty .)
    MIN             reduce using rule 138 (pnSaveFondoFalso -> empty .)
    STADDES         reduce using rule 138 (pnSaveFondoFalso -> empty .)
    BOXPLOT         reduce using rule 138 (pnSaveFondoFalso -> empty .)
    LINREG          reduce using rule 138 (pnSaveFondoFalso -> empty .)
    READ_FILE       reduce using rule 138 (pnSaveFondoFalso -> empty .)


state 182

    (85) f -> CTEI pnSaveCteI . pnSaveOperandoConstante
    (141) pnSaveOperandoConstante -> . empty
    (170) empty -> .

    MULT            reduce using rule 170 (empty -> .)
    DIV             reduce using rule 170 (empty -> .)
    PLUS            reduce using rule 170 (empty -> .)
    MINUS           reduce using rule 170 (empty -> .)
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnSaveOperandoConstante        shift and go to state 248
    empty                          shift and go to state 249

state 183

    (135) pnSaveCteI -> empty .

    MULT            reduce using rule 135 (pnSaveCteI -> empty .)
    DIV             reduce using rule 135 (pnSaveCteI -> empty .)
    PLUS            reduce using rule 135 (pnSaveCteI -> empty .)
    MINUS           reduce using rule 135 (pnSaveCteI -> empty .)
    LESS_THAN       reduce using rule 135 (pnSaveCteI -> empty .)
    GREATER_THAN    reduce using rule 135 (pnSaveCteI -> empty .)
    EQUALS          reduce using rule 135 (pnSaveCteI -> empty .)
    NOTEQUALS       reduce using rule 135 (pnSaveCteI -> empty .)
    AND             reduce using rule 135 (pnSaveCteI -> empty .)
    OR              reduce using rule 135 (pnSaveCteI -> empty .)
    SEMICOLON       reduce using rule 135 (pnSaveCteI -> empty .)
    RIGHT_PARENT    reduce using rule 135 (pnSaveCteI -> empty .)
    COMMA           reduce using rule 135 (pnSaveCteI -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 135 (pnSaveCteI -> empty .)


state 184

    (86) f -> CTEF pnSaveCteF . pnSaveOperandoConstante
    (141) pnSaveOperandoConstante -> . empty
    (170) empty -> .

    MULT            reduce using rule 170 (empty -> .)
    DIV             reduce using rule 170 (empty -> .)
    PLUS            reduce using rule 170 (empty -> .)
    MINUS           reduce using rule 170 (empty -> .)
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnSaveOperandoConstante        shift and go to state 250
    empty                          shift and go to state 249

state 185

    (136) pnSaveCteF -> empty .

    MULT            reduce using rule 136 (pnSaveCteF -> empty .)
    DIV             reduce using rule 136 (pnSaveCteF -> empty .)
    PLUS            reduce using rule 136 (pnSaveCteF -> empty .)
    MINUS           reduce using rule 136 (pnSaveCteF -> empty .)
    LESS_THAN       reduce using rule 136 (pnSaveCteF -> empty .)
    GREATER_THAN    reduce using rule 136 (pnSaveCteF -> empty .)
    EQUALS          reduce using rule 136 (pnSaveCteF -> empty .)
    NOTEQUALS       reduce using rule 136 (pnSaveCteF -> empty .)
    AND             reduce using rule 136 (pnSaveCteF -> empty .)
    OR              reduce using rule 136 (pnSaveCteF -> empty .)
    SEMICOLON       reduce using rule 136 (pnSaveCteF -> empty .)
    RIGHT_PARENT    reduce using rule 136 (pnSaveCteF -> empty .)
    COMMA           reduce using rule 136 (pnSaveCteF -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 136 (pnSaveCteF -> empty .)


state 186

    (87) f -> CTEC pnSaveCteC . pnSaveOperandoConstante
    (141) pnSaveOperandoConstante -> . empty
    (170) empty -> .

    MULT            reduce using rule 170 (empty -> .)
    DIV             reduce using rule 170 (empty -> .)
    PLUS            reduce using rule 170 (empty -> .)
    MINUS           reduce using rule 170 (empty -> .)
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnSaveOperandoConstante        shift and go to state 251
    empty                          shift and go to state 249

state 187

    (137) pnSaveCteC -> empty .

    MULT            reduce using rule 137 (pnSaveCteC -> empty .)
    DIV             reduce using rule 137 (pnSaveCteC -> empty .)
    PLUS            reduce using rule 137 (pnSaveCteC -> empty .)
    MINUS           reduce using rule 137 (pnSaveCteC -> empty .)
    LESS_THAN       reduce using rule 137 (pnSaveCteC -> empty .)
    GREATER_THAN    reduce using rule 137 (pnSaveCteC -> empty .)
    EQUALS          reduce using rule 137 (pnSaveCteC -> empty .)
    NOTEQUALS       reduce using rule 137 (pnSaveCteC -> empty .)
    AND             reduce using rule 137 (pnSaveCteC -> empty .)
    OR              reduce using rule 137 (pnSaveCteC -> empty .)
    SEMICOLON       reduce using rule 137 (pnSaveCteC -> empty .)
    RIGHT_PARENT    reduce using rule 137 (pnSaveCteC -> empty .)
    COMMA           reduce using rule 137 (pnSaveCteC -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 137 (pnSaveCteC -> empty .)


state 188

    (140) pnSaveOperandos -> empty .
    (129) pnCheckFunc -> empty .

    LEFT_SQR_BRACKET reduce using rule 140 (pnSaveOperandos -> empty .)
    MULT            reduce using rule 140 (pnSaveOperandos -> empty .)
    DIV             reduce using rule 140 (pnSaveOperandos -> empty .)
    PLUS            reduce using rule 140 (pnSaveOperandos -> empty .)
    MINUS           reduce using rule 140 (pnSaveOperandos -> empty .)
    LESS_THAN       reduce using rule 140 (pnSaveOperandos -> empty .)
    GREATER_THAN    reduce using rule 140 (pnSaveOperandos -> empty .)
    EQUALS          reduce using rule 140 (pnSaveOperandos -> empty .)
    NOTEQUALS       reduce using rule 140 (pnSaveOperandos -> empty .)
    AND             reduce using rule 140 (pnSaveOperandos -> empty .)
    OR              reduce using rule 140 (pnSaveOperandos -> empty .)
    SEMICOLON       reduce using rule 140 (pnSaveOperandos -> empty .)
    RIGHT_PARENT    reduce using rule 140 (pnSaveOperandos -> empty .)
    COMMA           reduce using rule 140 (pnSaveOperandos -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 140 (pnSaveOperandos -> empty .)
    LEFT_PARENT     reduce using rule 129 (pnCheckFunc -> empty .)


state 189

    (14) copy -> READ_FILE LEFT_PARENT LETRERO . pnCuadCopy RIGHT_PARENT SEMICOLON
    (154) pnCuadCopy -> . empty
    (170) empty -> .

    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCuadCopy                     shift and go to state 252
    empty                          shift and go to state 253

state 190

    (106) mean -> MEAN LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (155) pnCuadFuncEsp -> . empty
    (170) empty -> .

    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 254
    empty                          shift and go to state 255

state 191

    (107) mode -> MODE LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (155) pnCuadFuncEsp -> . empty
    (170) empty -> .

    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 256
    empty                          shift and go to state 255

state 192

    (108) median -> MEDIAN LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (155) pnCuadFuncEsp -> . empty
    (170) empty -> .

    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 257
    empty                          shift and go to state 255

state 193

    (109) variance -> VARIANCE LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (155) pnCuadFuncEsp -> . empty
    (170) empty -> .

    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 258
    empty                          shift and go to state 255

state 194

    (110) max -> MAX LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (155) pnCuadFuncEsp -> . empty
    (170) empty -> .

    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 259
    empty                          shift and go to state 255

state 195

    (111) min -> MIN LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (155) pnCuadFuncEsp -> . empty
    (170) empty -> .

    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 260
    empty                          shift and go to state 255

state 196

    (112) staddes -> STADDES LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (155) pnCuadFuncEsp -> . empty
    (170) empty -> .

    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 261
    empty                          shift and go to state 255

state 197

    (113) boxplot -> BOXPLOT LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (155) pnCuadFuncEsp -> . empty
    (170) empty -> .

    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 262
    empty                          shift and go to state 255

state 198

    (114) linreg -> LINREG LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (155) pnCuadFuncEsp -> . empty
    (170) empty -> .

    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 263
    empty                          shift and go to state 255

state 199

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param . RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    RIGHT_PARENT    shift and go to state 264


state 200

    (39) param -> paramlist .

    RIGHT_PARENT    reduce using rule 39 (param -> paramlist .)


state 201

    (40) param -> empty .

    RIGHT_PARENT    reduce using rule 40 (param -> empty .)


state 202

    (41) paramlist -> tipoparam . ARROW ID pnAddParametersTablaVar paramlistp

    ARROW           shift and go to state 265


state 203

    (42) tipoparam -> tipo_simp .

    ARROW           reduce using rule 42 (tipoparam -> tipo_simp .)


state 204

    (43) tipoparam -> DATAFRAME . pnSaveTypeVar
    (121) pnSaveTypeVar -> . empty
    (170) empty -> .

    ARROW           reduce using rule 170 (empty -> .)

    pnSaveTypeVar                  shift and go to state 266
    empty                          shift and go to state 38

state 205

    (34) idpp -> COMMA ID pnCheckNameTablaVar . pnArrAddDim idpp
    (169) pnArrAddDim -> . empty
    (170) empty -> .

    COMMA           reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)

    pnArrAddDim                    shift and go to state 267
    empty                          shift and go to state 63

state 206

    (29) vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar .

    ARROW           reduce using rule 29 (vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar .)


state 207

    (168) pnArrCuadriplificar -> empty .

    ARROW           reduce using rule 168 (pnArrCuadriplificar -> empty .)


state 208

    (31) vpp -> COMMA pnArrIncDim CTEI . pnArrSaveLim1
    (166) pnArrSaveLim1 -> . empty
    (170) empty -> .

    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnArrSaveLim1                  shift and go to state 268
    empty                          shift and go to state 65

state 209

    (56) asign -> variable ASIGN pnSaveOperadorAsign exp . pnCuadAsign SEMICOLON
    (151) pnCuadAsign -> . empty
    (170) empty -> .

    SEMICOLON       reduce using rule 170 (empty -> .)

    pnCuadAsign                    shift and go to state 269
    empty                          shift and go to state 270

state 210

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra . expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (22) expp -> . exp pnCuadParametro exppp
    (23) expp -> . empty
    (62) exp -> . exprel pnCuadOplog logic
    (170) empty -> .
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 96

    expp                           shift and go to state 271
    exp                            shift and go to state 272
    empty                          shift and go to state 273
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94
    copy                           shift and go to state 138

state 211

    (130) pnGenerateEra -> empty .

    LEFT_PARENT     reduce using rule 130 (pnGenerateEra -> empty .)
    CTEI            reduce using rule 130 (pnGenerateEra -> empty .)
    CTEF            reduce using rule 130 (pnGenerateEra -> empty .)
    CTEC            reduce using rule 130 (pnGenerateEra -> empty .)
    ID              reduce using rule 130 (pnGenerateEra -> empty .)
    MEAN            reduce using rule 130 (pnGenerateEra -> empty .)
    MODE            reduce using rule 130 (pnGenerateEra -> empty .)
    MEDIAN          reduce using rule 130 (pnGenerateEra -> empty .)
    VARIANCE        reduce using rule 130 (pnGenerateEra -> empty .)
    MAX             reduce using rule 130 (pnGenerateEra -> empty .)
    MIN             reduce using rule 130 (pnGenerateEra -> empty .)
    STADDES         reduce using rule 130 (pnGenerateEra -> empty .)
    BOXPLOT         reduce using rule 130 (pnGenerateEra -> empty .)
    LINREG          reduce using rule 130 (pnGenerateEra -> empty .)
    READ_FILE       reduce using rule 130 (pnGenerateEra -> empty .)
    RIGHT_PARENT    reduce using rule 130 (pnGenerateEra -> empty .)


state 212

    (17) indexp -> LEFT_SQR_BRACKET exp . indexpp RIGHT_SQR_BRACKET
    (19) indexpp -> . COMMA exp
    (20) indexpp -> . empty
    (170) empty -> .

    COMMA           shift and go to state 275
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    indexpp                        shift and go to state 274
    empty                          shift and go to state 276

state 213

    (57) lee -> READ LEFT_PARENT variable pnCuadLee . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 277


state 214

    (153) pnCuadLee -> empty .

    RIGHT_PARENT    reduce using rule 153 (pnCuadLee -> empty .)


state 215

    (140) pnSaveOperandos -> empty .

    LEFT_SQR_BRACKET reduce using rule 140 (pnSaveOperandos -> empty .)
    RIGHT_PARENT    reduce using rule 140 (pnSaveOperandos -> empty .)


state 216

    (58) escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 278


state 217

    (59) escribep -> exp pnCuadEscribe .

    RIGHT_PARENT    reduce using rule 59 (escribep -> exp pnCuadEscribe .)


state 218

    (152) pnCuadEscribe -> empty .

    RIGHT_PARENT    reduce using rule 152 (pnCuadEscribe -> empty .)


state 219

    (60) escribep -> LETRERO pnCuadEscribe .

    RIGHT_PARENT    reduce using rule 60 (escribep -> LETRERO pnCuadEscribe .)


state 220

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf . RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf

    RIGHT_PARENT    shift and go to state 279


state 221

    (156) pnCheckBoolIf -> empty .

    RIGHT_PARENT    reduce using rule 156 (pnCheckBoolIf -> empty .)


state 222

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp . pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (156) pnCheckBoolIf -> . empty
    (170) empty -> .

    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCheckBoolIf                  shift and go to state 280
    empty                          shift and go to state 221

state 223

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID . ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    ASIGN           shift and go to state 281


state 224

    (161) pnSaveForID -> empty .

    ASIGN           reduce using rule 161 (pnSaveForID -> empty .)


state 225

    (62) exp -> exprel pnCuadOplog logic .

    SEMICOLON       reduce using rule 62 (exp -> exprel pnCuadOplog logic .)
    RIGHT_PARENT    reduce using rule 62 (exp -> exprel pnCuadOplog logic .)
    COMMA           reduce using rule 62 (exp -> exprel pnCuadOplog logic .)
    RIGHT_SQR_BRACKET reduce using rule 62 (exp -> exprel pnCuadOplog logic .)


state 226

    (63) logic -> logicsig . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 96

    exprel                         shift and go to state 282
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94
    copy                           shift and go to state 138

state 227

    (64) logic -> empty .

    SEMICOLON       reduce using rule 64 (logic -> empty .)
    RIGHT_PARENT    reduce using rule 64 (logic -> empty .)
    COMMA           reduce using rule 64 (logic -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 64 (logic -> empty .)


state 228

    (65) logicsig -> AND . pnSaveOperadorLog
    (145) pnSaveOperadorLog -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)
    CTEI            reduce using rule 170 (empty -> .)
    CTEF            reduce using rule 170 (empty -> .)
    CTEC            reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)

    pnSaveOperadorLog              shift and go to state 283
    empty                          shift and go to state 284

state 229

    (66) logicsig -> OR . pnSaveOperadorLog
    (145) pnSaveOperadorLog -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)
    CTEI            reduce using rule 170 (empty -> .)
    CTEF            reduce using rule 170 (empty -> .)
    CTEC            reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)

    pnSaveOperadorLog              shift and go to state 285
    empty                          shift and go to state 284

state 230

    (67) exprel -> e pnCuadOpRelacional relacionalp .

    AND             reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    OR              reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    SEMICOLON       reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    RIGHT_PARENT    reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    COMMA           reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    RIGHT_SQR_BRACKET reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)


state 231

    (68) relacionalp -> relsig . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 96

    e                              shift and go to state 286
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94
    copy                           shift and go to state 138

state 232

    (69) relacionalp -> empty .

    AND             reduce using rule 69 (relacionalp -> empty .)
    OR              reduce using rule 69 (relacionalp -> empty .)
    SEMICOLON       reduce using rule 69 (relacionalp -> empty .)
    RIGHT_PARENT    reduce using rule 69 (relacionalp -> empty .)
    COMMA           reduce using rule 69 (relacionalp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 69 (relacionalp -> empty .)


state 233

    (70) relsig -> LESS_THAN . pnSaveOperadorRel
    (144) pnSaveOperadorRel -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)
    CTEI            reduce using rule 170 (empty -> .)
    CTEF            reduce using rule 170 (empty -> .)
    CTEC            reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)

    pnSaveOperadorRel              shift and go to state 287
    empty                          shift and go to state 288

state 234

    (71) relsig -> GREATER_THAN . pnSaveOperadorRel
    (144) pnSaveOperadorRel -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)
    CTEI            reduce using rule 170 (empty -> .)
    CTEF            reduce using rule 170 (empty -> .)
    CTEC            reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)

    pnSaveOperadorRel              shift and go to state 289
    empty                          shift and go to state 288

state 235

    (72) relsig -> EQUALS . pnSaveOperadorRel
    (144) pnSaveOperadorRel -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)
    CTEI            reduce using rule 170 (empty -> .)
    CTEF            reduce using rule 170 (empty -> .)
    CTEC            reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)

    pnSaveOperadorRel              shift and go to state 290
    empty                          shift and go to state 288

state 236

    (73) relsig -> NOTEQUALS . pnSaveOperadorRel
    (144) pnSaveOperadorRel -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)
    CTEI            reduce using rule 170 (empty -> .)
    CTEF            reduce using rule 170 (empty -> .)
    CTEC            reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)

    pnSaveOperadorRel              shift and go to state 291
    empty                          shift and go to state 288

state 237

    (74) e -> t pnCuadPlMi tp .

    LESS_THAN       reduce using rule 74 (e -> t pnCuadPlMi tp .)
    GREATER_THAN    reduce using rule 74 (e -> t pnCuadPlMi tp .)
    EQUALS          reduce using rule 74 (e -> t pnCuadPlMi tp .)
    NOTEQUALS       reduce using rule 74 (e -> t pnCuadPlMi tp .)
    AND             reduce using rule 74 (e -> t pnCuadPlMi tp .)
    OR              reduce using rule 74 (e -> t pnCuadPlMi tp .)
    SEMICOLON       reduce using rule 74 (e -> t pnCuadPlMi tp .)
    RIGHT_PARENT    reduce using rule 74 (e -> t pnCuadPlMi tp .)
    COMMA           reduce using rule 74 (e -> t pnCuadPlMi tp .)
    RIGHT_SQR_BRACKET reduce using rule 74 (e -> t pnCuadPlMi tp .)


state 238

    (75) tp -> tsig . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 96

    t                              shift and go to state 292
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94
    copy                           shift and go to state 138

state 239

    (76) tp -> empty .

    LESS_THAN       reduce using rule 76 (tp -> empty .)
    GREATER_THAN    reduce using rule 76 (tp -> empty .)
    EQUALS          reduce using rule 76 (tp -> empty .)
    NOTEQUALS       reduce using rule 76 (tp -> empty .)
    AND             reduce using rule 76 (tp -> empty .)
    OR              reduce using rule 76 (tp -> empty .)
    SEMICOLON       reduce using rule 76 (tp -> empty .)
    RIGHT_PARENT    reduce using rule 76 (tp -> empty .)
    COMMA           reduce using rule 76 (tp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 76 (tp -> empty .)


state 240

    (77) tsig -> PLUS . pnSaveOperadorPlMi
    (142) pnSaveOperadorPlMi -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)
    CTEI            reduce using rule 170 (empty -> .)
    CTEF            reduce using rule 170 (empty -> .)
    CTEC            reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)

    pnSaveOperadorPlMi             shift and go to state 293
    empty                          shift and go to state 294

state 241

    (78) tsig -> MINUS . pnSaveOperadorPlMi
    (142) pnSaveOperadorPlMi -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)
    CTEI            reduce using rule 170 (empty -> .)
    CTEF            reduce using rule 170 (empty -> .)
    CTEC            reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)

    pnSaveOperadorPlMi             shift and go to state 295
    empty                          shift and go to state 294

state 242

    (79) t -> f pnCuadMuDi fp .

    PLUS            reduce using rule 79 (t -> f pnCuadMuDi fp .)
    MINUS           reduce using rule 79 (t -> f pnCuadMuDi fp .)
    LESS_THAN       reduce using rule 79 (t -> f pnCuadMuDi fp .)
    GREATER_THAN    reduce using rule 79 (t -> f pnCuadMuDi fp .)
    EQUALS          reduce using rule 79 (t -> f pnCuadMuDi fp .)
    NOTEQUALS       reduce using rule 79 (t -> f pnCuadMuDi fp .)
    AND             reduce using rule 79 (t -> f pnCuadMuDi fp .)
    OR              reduce using rule 79 (t -> f pnCuadMuDi fp .)
    SEMICOLON       reduce using rule 79 (t -> f pnCuadMuDi fp .)
    RIGHT_PARENT    reduce using rule 79 (t -> f pnCuadMuDi fp .)
    COMMA           reduce using rule 79 (t -> f pnCuadMuDi fp .)
    RIGHT_SQR_BRACKET reduce using rule 79 (t -> f pnCuadMuDi fp .)


state 243

    (80) fp -> fsig . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 96

    f                              shift and go to state 296
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94
    copy                           shift and go to state 138

state 244

    (81) fp -> empty .

    PLUS            reduce using rule 81 (fp -> empty .)
    MINUS           reduce using rule 81 (fp -> empty .)
    LESS_THAN       reduce using rule 81 (fp -> empty .)
    GREATER_THAN    reduce using rule 81 (fp -> empty .)
    EQUALS          reduce using rule 81 (fp -> empty .)
    NOTEQUALS       reduce using rule 81 (fp -> empty .)
    AND             reduce using rule 81 (fp -> empty .)
    OR              reduce using rule 81 (fp -> empty .)
    SEMICOLON       reduce using rule 81 (fp -> empty .)
    RIGHT_PARENT    reduce using rule 81 (fp -> empty .)
    COMMA           reduce using rule 81 (fp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 81 (fp -> empty .)


state 245

    (82) fsig -> MULT . pnSaveOperadorMuDi
    (143) pnSaveOperadorMuDi -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)
    CTEI            reduce using rule 170 (empty -> .)
    CTEF            reduce using rule 170 (empty -> .)
    CTEC            reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)

    pnSaveOperadorMuDi             shift and go to state 297
    empty                          shift and go to state 298

state 246

    (83) fsig -> DIV . pnSaveOperadorMuDi
    (143) pnSaveOperadorMuDi -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)
    CTEI            reduce using rule 170 (empty -> .)
    CTEF            reduce using rule 170 (empty -> .)
    CTEC            reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)

    pnSaveOperadorMuDi             shift and go to state 299
    empty                          shift and go to state 298

state 247

    (84) f -> LEFT_PARENT pnSaveFondoFalso exp . RIGHT_PARENT pnPopFondoFalso

    RIGHT_PARENT    shift and go to state 300


state 248

    (85) f -> CTEI pnSaveCteI pnSaveOperandoConstante .

    MULT            reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    DIV             reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    PLUS            reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    MINUS           reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    LESS_THAN       reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    GREATER_THAN    reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    EQUALS          reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    NOTEQUALS       reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    AND             reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    OR              reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    SEMICOLON       reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    RIGHT_PARENT    reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    COMMA           reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    RIGHT_SQR_BRACKET reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)


state 249

    (141) pnSaveOperandoConstante -> empty .

    MULT            reduce using rule 141 (pnSaveOperandoConstante -> empty .)
    DIV             reduce using rule 141 (pnSaveOperandoConstante -> empty .)
    PLUS            reduce using rule 141 (pnSaveOperandoConstante -> empty .)
    MINUS           reduce using rule 141 (pnSaveOperandoConstante -> empty .)
    LESS_THAN       reduce using rule 141 (pnSaveOperandoConstante -> empty .)
    GREATER_THAN    reduce using rule 141 (pnSaveOperandoConstante -> empty .)
    EQUALS          reduce using rule 141 (pnSaveOperandoConstante -> empty .)
    NOTEQUALS       reduce using rule 141 (pnSaveOperandoConstante -> empty .)
    AND             reduce using rule 141 (pnSaveOperandoConstante -> empty .)
    OR              reduce using rule 141 (pnSaveOperandoConstante -> empty .)
    SEMICOLON       reduce using rule 141 (pnSaveOperandoConstante -> empty .)
    RIGHT_PARENT    reduce using rule 141 (pnSaveOperandoConstante -> empty .)
    COMMA           reduce using rule 141 (pnSaveOperandoConstante -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 141 (pnSaveOperandoConstante -> empty .)


state 250

    (86) f -> CTEF pnSaveCteF pnSaveOperandoConstante .

    MULT            reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    DIV             reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    PLUS            reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    MINUS           reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    LESS_THAN       reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    GREATER_THAN    reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    EQUALS          reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    NOTEQUALS       reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    AND             reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    OR              reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    SEMICOLON       reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    RIGHT_PARENT    reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    COMMA           reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    RIGHT_SQR_BRACKET reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)


state 251

    (87) f -> CTEC pnSaveCteC pnSaveOperandoConstante .

    MULT            reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    DIV             reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    PLUS            reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    MINUS           reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    LESS_THAN       reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    GREATER_THAN    reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    EQUALS          reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    NOTEQUALS       reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    AND             reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    OR              reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    SEMICOLON       reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    RIGHT_PARENT    reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    COMMA           reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    RIGHT_SQR_BRACKET reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)


state 252

    (14) copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 301


state 253

    (154) pnCuadCopy -> empty .

    RIGHT_PARENT    reduce using rule 154 (pnCuadCopy -> empty .)


state 254

    (106) mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 302


state 255

    (155) pnCuadFuncEsp -> empty .

    RIGHT_PARENT    reduce using rule 155 (pnCuadFuncEsp -> empty .)


state 256

    (107) mode -> MODE LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 303


state 257

    (108) median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 304


state 258

    (109) variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 305


state 259

    (110) max -> MAX LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 306


state 260

    (111) min -> MIN LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 307


state 261

    (112) staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 308


state 262

    (113) boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 309


state 263

    (114) linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 310


state 264

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT . LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    LEFT_CUR_BRACKET shift and go to state 311


state 265

    (41) paramlist -> tipoparam ARROW . ID pnAddParametersTablaVar paramlistp

    ID              shift and go to state 312


state 266

    (43) tipoparam -> DATAFRAME pnSaveTypeVar .

    ARROW           reduce using rule 43 (tipoparam -> DATAFRAME pnSaveTypeVar .)


state 267

    (34) idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim . idpp
    (34) idpp -> . COMMA ID pnCheckNameTablaVar pnArrAddDim idpp
    (35) idpp -> . empty
    (170) empty -> .

    COMMA           shift and go to state 108
    SEMICOLON       reduce using rule 170 (empty -> .)

    idpp                           shift and go to state 313
    empty                          shift and go to state 109

state 268

    (31) vpp -> COMMA pnArrIncDim CTEI pnArrSaveLim1 .

    RIGHT_SQR_BRACKET reduce using rule 31 (vpp -> COMMA pnArrIncDim CTEI pnArrSaveLim1 .)


state 269

    (56) asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign . SEMICOLON

    SEMICOLON       shift and go to state 314


state 270

    (151) pnCuadAsign -> empty .

    SEMICOLON       reduce using rule 151 (pnCuadAsign -> empty .)


state 271

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp . RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub

    RIGHT_PARENT    shift and go to state 315


state 272

    (22) expp -> exp . pnCuadParametro exppp
    (131) pnCuadParametro -> . empty
    (170) empty -> .

    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCuadParametro                shift and go to state 316
    empty                          shift and go to state 317

state 273

    (23) expp -> empty .

    RIGHT_PARENT    reduce using rule 23 (expp -> empty .)


state 274

    (17) indexp -> LEFT_SQR_BRACKET exp indexpp . RIGHT_SQR_BRACKET

    RIGHT_SQR_BRACKET shift and go to state 318


state 275

    (19) indexpp -> COMMA . exp
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 96

    exp                            shift and go to state 319
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94
    copy                           shift and go to state 138

state 276

    (20) indexpp -> empty .

    RIGHT_SQR_BRACKET reduce using rule 20 (indexpp -> empty .)


state 277

    (57) lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 320


state 278

    (58) escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)


state 279

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT . IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf

    IF_TRUE         shift and go to state 321


state 280

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf . RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile

    RIGHT_PARENT    shift and go to state 322


state 281

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN . exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 96

    exp                            shift and go to state 323
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94
    copy                           shift and go to state 138

state 282

    (63) logic -> logicsig exprel . pnCuadOplog logic
    (149) pnCuadOplog -> . empty
    (170) empty -> .

    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnCuadOplog                    shift and go to state 324
    empty                          shift and go to state 173

state 283

    (65) logicsig -> AND pnSaveOperadorLog .

    LEFT_PARENT     reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    CTEI            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    CTEF            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    CTEC            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    ID              reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MEAN            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MODE            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MEDIAN          reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    VARIANCE        reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MAX             reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MIN             reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    STADDES         reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    BOXPLOT         reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    LINREG          reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    READ_FILE       reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)


state 284

    (145) pnSaveOperadorLog -> empty .

    LEFT_PARENT     reduce using rule 145 (pnSaveOperadorLog -> empty .)
    CTEI            reduce using rule 145 (pnSaveOperadorLog -> empty .)
    CTEF            reduce using rule 145 (pnSaveOperadorLog -> empty .)
    CTEC            reduce using rule 145 (pnSaveOperadorLog -> empty .)
    ID              reduce using rule 145 (pnSaveOperadorLog -> empty .)
    MEAN            reduce using rule 145 (pnSaveOperadorLog -> empty .)
    MODE            reduce using rule 145 (pnSaveOperadorLog -> empty .)
    MEDIAN          reduce using rule 145 (pnSaveOperadorLog -> empty .)
    VARIANCE        reduce using rule 145 (pnSaveOperadorLog -> empty .)
    MAX             reduce using rule 145 (pnSaveOperadorLog -> empty .)
    MIN             reduce using rule 145 (pnSaveOperadorLog -> empty .)
    STADDES         reduce using rule 145 (pnSaveOperadorLog -> empty .)
    BOXPLOT         reduce using rule 145 (pnSaveOperadorLog -> empty .)
    LINREG          reduce using rule 145 (pnSaveOperadorLog -> empty .)
    READ_FILE       reduce using rule 145 (pnSaveOperadorLog -> empty .)


state 285

    (66) logicsig -> OR pnSaveOperadorLog .

    LEFT_PARENT     reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    CTEI            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    CTEF            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    CTEC            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    ID              reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MEAN            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MODE            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MEDIAN          reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    VARIANCE        reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MAX             reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MIN             reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    STADDES         reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    BOXPLOT         reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    LINREG          reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    READ_FILE       reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)


state 286

    (68) relacionalp -> relsig e . pnCuadOpRelacional relacionalp
    (148) pnCuadOpRelacional -> . empty
    (170) empty -> .

    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnCuadOpRelacional             shift and go to state 325
    empty                          shift and go to state 175

state 287

    (70) relsig -> LESS_THAN pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    CTEI            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    CTEF            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    CTEC            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    ID              reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MEAN            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MODE            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MEDIAN          reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    VARIANCE        reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MAX             reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MIN             reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    STADDES         reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    LINREG          reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    READ_FILE       reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)


state 288

    (144) pnSaveOperadorRel -> empty .

    LEFT_PARENT     reduce using rule 144 (pnSaveOperadorRel -> empty .)
    CTEI            reduce using rule 144 (pnSaveOperadorRel -> empty .)
    CTEF            reduce using rule 144 (pnSaveOperadorRel -> empty .)
    CTEC            reduce using rule 144 (pnSaveOperadorRel -> empty .)
    ID              reduce using rule 144 (pnSaveOperadorRel -> empty .)
    MEAN            reduce using rule 144 (pnSaveOperadorRel -> empty .)
    MODE            reduce using rule 144 (pnSaveOperadorRel -> empty .)
    MEDIAN          reduce using rule 144 (pnSaveOperadorRel -> empty .)
    VARIANCE        reduce using rule 144 (pnSaveOperadorRel -> empty .)
    MAX             reduce using rule 144 (pnSaveOperadorRel -> empty .)
    MIN             reduce using rule 144 (pnSaveOperadorRel -> empty .)
    STADDES         reduce using rule 144 (pnSaveOperadorRel -> empty .)
    BOXPLOT         reduce using rule 144 (pnSaveOperadorRel -> empty .)
    LINREG          reduce using rule 144 (pnSaveOperadorRel -> empty .)
    READ_FILE       reduce using rule 144 (pnSaveOperadorRel -> empty .)


state 289

    (71) relsig -> GREATER_THAN pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    CTEI            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    CTEF            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    CTEC            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    ID              reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MEAN            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MODE            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MEDIAN          reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    VARIANCE        reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MAX             reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MIN             reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    STADDES         reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    LINREG          reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    READ_FILE       reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)


state 290

    (72) relsig -> EQUALS pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    CTEI            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    CTEF            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    CTEC            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    ID              reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MEAN            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MODE            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MEDIAN          reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    VARIANCE        reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MAX             reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MIN             reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    STADDES         reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    LINREG          reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    READ_FILE       reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)


state 291

    (73) relsig -> NOTEQUALS pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    CTEI            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    CTEF            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    CTEC            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    ID              reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MEAN            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MODE            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MEDIAN          reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    VARIANCE        reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MAX             reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MIN             reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    STADDES         reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    LINREG          reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    READ_FILE       reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)


state 292

    (75) tp -> tsig t . pnCuadPlMi tp
    (146) pnCuadPlMi -> . empty
    (170) empty -> .

    PLUS            reduce using rule 170 (empty -> .)
    MINUS           reduce using rule 170 (empty -> .)
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnCuadPlMi                     shift and go to state 326
    empty                          shift and go to state 177

state 293

    (77) tsig -> PLUS pnSaveOperadorPlMi .

    LEFT_PARENT     reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    CTEI            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    CTEF            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    CTEC            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    ID              reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MEAN            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MODE            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MEDIAN          reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    VARIANCE        reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MAX             reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MIN             reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    STADDES         reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    BOXPLOT         reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    LINREG          reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    READ_FILE       reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)


state 294

    (142) pnSaveOperadorPlMi -> empty .

    LEFT_PARENT     reduce using rule 142 (pnSaveOperadorPlMi -> empty .)
    CTEI            reduce using rule 142 (pnSaveOperadorPlMi -> empty .)
    CTEF            reduce using rule 142 (pnSaveOperadorPlMi -> empty .)
    CTEC            reduce using rule 142 (pnSaveOperadorPlMi -> empty .)
    ID              reduce using rule 142 (pnSaveOperadorPlMi -> empty .)
    MEAN            reduce using rule 142 (pnSaveOperadorPlMi -> empty .)
    MODE            reduce using rule 142 (pnSaveOperadorPlMi -> empty .)
    MEDIAN          reduce using rule 142 (pnSaveOperadorPlMi -> empty .)
    VARIANCE        reduce using rule 142 (pnSaveOperadorPlMi -> empty .)
    MAX             reduce using rule 142 (pnSaveOperadorPlMi -> empty .)
    MIN             reduce using rule 142 (pnSaveOperadorPlMi -> empty .)
    STADDES         reduce using rule 142 (pnSaveOperadorPlMi -> empty .)
    BOXPLOT         reduce using rule 142 (pnSaveOperadorPlMi -> empty .)
    LINREG          reduce using rule 142 (pnSaveOperadorPlMi -> empty .)
    READ_FILE       reduce using rule 142 (pnSaveOperadorPlMi -> empty .)


state 295

    (78) tsig -> MINUS pnSaveOperadorPlMi .

    LEFT_PARENT     reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    CTEI            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    CTEF            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    CTEC            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    ID              reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MEAN            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MODE            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MEDIAN          reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    VARIANCE        reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MAX             reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MIN             reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    STADDES         reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    BOXPLOT         reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    LINREG          reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    READ_FILE       reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)


state 296

    (80) fp -> fsig f . pnCuadMuDi fp
    (147) pnCuadMuDi -> . empty
    (170) empty -> .

    MULT            reduce using rule 170 (empty -> .)
    DIV             reduce using rule 170 (empty -> .)
    PLUS            reduce using rule 170 (empty -> .)
    MINUS           reduce using rule 170 (empty -> .)
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnCuadMuDi                     shift and go to state 327
    empty                          shift and go to state 179

state 297

    (82) fsig -> MULT pnSaveOperadorMuDi .

    LEFT_PARENT     reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    CTEI            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    CTEF            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    CTEC            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    ID              reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MEAN            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MODE            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MEDIAN          reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    VARIANCE        reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MAX             reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MIN             reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    STADDES         reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    BOXPLOT         reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    LINREG          reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    READ_FILE       reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)


state 298

    (143) pnSaveOperadorMuDi -> empty .

    LEFT_PARENT     reduce using rule 143 (pnSaveOperadorMuDi -> empty .)
    CTEI            reduce using rule 143 (pnSaveOperadorMuDi -> empty .)
    CTEF            reduce using rule 143 (pnSaveOperadorMuDi -> empty .)
    CTEC            reduce using rule 143 (pnSaveOperadorMuDi -> empty .)
    ID              reduce using rule 143 (pnSaveOperadorMuDi -> empty .)
    MEAN            reduce using rule 143 (pnSaveOperadorMuDi -> empty .)
    MODE            reduce using rule 143 (pnSaveOperadorMuDi -> empty .)
    MEDIAN          reduce using rule 143 (pnSaveOperadorMuDi -> empty .)
    VARIANCE        reduce using rule 143 (pnSaveOperadorMuDi -> empty .)
    MAX             reduce using rule 143 (pnSaveOperadorMuDi -> empty .)
    MIN             reduce using rule 143 (pnSaveOperadorMuDi -> empty .)
    STADDES         reduce using rule 143 (pnSaveOperadorMuDi -> empty .)
    BOXPLOT         reduce using rule 143 (pnSaveOperadorMuDi -> empty .)
    LINREG          reduce using rule 143 (pnSaveOperadorMuDi -> empty .)
    READ_FILE       reduce using rule 143 (pnSaveOperadorMuDi -> empty .)


state 299

    (83) fsig -> DIV pnSaveOperadorMuDi .

    LEFT_PARENT     reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    CTEI            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    CTEF            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    CTEC            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    ID              reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MEAN            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MODE            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MEDIAN          reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    VARIANCE        reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MAX             reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MIN             reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    STADDES         reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    BOXPLOT         reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    LINREG          reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    READ_FILE       reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)


state 300

    (84) f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT . pnPopFondoFalso
    (139) pnPopFondoFalso -> . empty
    (170) empty -> .

    MULT            reduce using rule 170 (empty -> .)
    DIV             reduce using rule 170 (empty -> .)
    PLUS            reduce using rule 170 (empty -> .)
    MINUS           reduce using rule 170 (empty -> .)
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnPopFondoFalso                shift and go to state 328
    empty                          shift and go to state 329

state 301

    (14) copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 330


state 302

    (106) mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 331


state 303

    (107) mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 332


state 304

    (108) median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 333


state 305

    (109) variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 334


state 306

    (110) max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 335


state 307

    (111) min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 336


state 308

    (112) staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 337


state 309

    (113) boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 338


state 310

    (114) linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 339


state 311

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET . varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (170) empty -> .

    VAR             shift and go to state 14
    ID              reduce using rule 170 (empty -> .)
    READ            reduce using rule 170 (empty -> .)
    WRITE           reduce using rule 170 (empty -> .)
    IF              reduce using rule 170 (empty -> .)
    WHILE           reduce using rule 170 (empty -> .)
    FOR             reduce using rule 170 (empty -> .)
    RETURNS         reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)

    varp                           shift and go to state 340
    var                            shift and go to state 12
    empty                          shift and go to state 13

state 312

    (41) paramlist -> tipoparam ARROW ID . pnAddParametersTablaVar paramlistp
    (124) pnAddParametersTablaVar -> . empty
    (170) empty -> .

    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnAddParametersTablaVar        shift and go to state 341
    empty                          shift and go to state 342

state 313

    (34) idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim idpp .

    SEMICOLON       reduce using rule 34 (idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim idpp .)


state 314

    (56) asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .

    ID              reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    READ            reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    WRITE           reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    IF              reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    WHILE           reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    FOR             reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    RETURNS         reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    READ_FILE       reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MEAN            reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MODE            reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MEDIAN          reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    VARIANCE        reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MAX             reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MIN             reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    STADDES         reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    BOXPLOT         reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    LINREG          reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)


state 315

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT . pnCheckNoParam SEMICOLON pnCuadGoSub
    (133) pnCheckNoParam -> . empty
    (170) empty -> .

    SEMICOLON       reduce using rule 170 (empty -> .)

    pnCheckNoParam                 shift and go to state 343
    empty                          shift and go to state 344

state 316

    (22) expp -> exp pnCuadParametro . exppp
    (24) exppp -> . COMMA pnUpdateK exp pnCuadParametro exppp
    (25) exppp -> . empty
    (170) empty -> .

    COMMA           shift and go to state 346
    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    exppp                          shift and go to state 345
    empty                          shift and go to state 347

state 317

    (131) pnCuadParametro -> empty .

    COMMA           reduce using rule 131 (pnCuadParametro -> empty .)
    RIGHT_PARENT    reduce using rule 131 (pnCuadParametro -> empty .)


state 318

    (17) indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .

    ASIGN           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    MULT            reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    DIV             reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    PLUS            reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    MINUS           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    LESS_THAN       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    GREATER_THAN    reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    EQUALS          reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    NOTEQUALS       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    AND             reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    OR              reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    SEMICOLON       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    RIGHT_PARENT    reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    COMMA           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    RIGHT_SQR_BRACKET reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)


state 319

    (19) indexpp -> COMMA exp .

    RIGHT_SQR_BRACKET reduce using rule 19 (indexpp -> COMMA exp .)


state 320

    (57) lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)


state 321

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf

    LEFT_CUR_BRACKET shift and go to state 348


state 322

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile

    LEFT_CUR_BRACKET shift and go to state 349


state 323

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp . pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (162) pnCreateVControl -> . empty
    (170) empty -> .

    COMMA           reduce using rule 170 (empty -> .)

    pnCreateVControl               shift and go to state 350
    empty                          shift and go to state 351

state 324

    (63) logic -> logicsig exprel pnCuadOplog . logic
    (63) logic -> . logicsig exprel pnCuadOplog logic
    (64) logic -> . empty
    (65) logicsig -> . AND pnSaveOperadorLog
    (66) logicsig -> . OR pnSaveOperadorLog
    (170) empty -> .

    AND             shift and go to state 228
    OR              shift and go to state 229
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    logicsig                       shift and go to state 226
    logic                          shift and go to state 352
    empty                          shift and go to state 227

state 325

    (68) relacionalp -> relsig e pnCuadOpRelacional . relacionalp
    (68) relacionalp -> . relsig e pnCuadOpRelacional relacionalp
    (69) relacionalp -> . empty
    (70) relsig -> . LESS_THAN pnSaveOperadorRel
    (71) relsig -> . GREATER_THAN pnSaveOperadorRel
    (72) relsig -> . EQUALS pnSaveOperadorRel
    (73) relsig -> . NOTEQUALS pnSaveOperadorRel
    (170) empty -> .

    LESS_THAN       shift and go to state 233
    GREATER_THAN    shift and go to state 234
    EQUALS          shift and go to state 235
    NOTEQUALS       shift and go to state 236
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    relsig                         shift and go to state 231
    relacionalp                    shift and go to state 353
    empty                          shift and go to state 232

state 326

    (75) tp -> tsig t pnCuadPlMi . tp
    (75) tp -> . tsig t pnCuadPlMi tp
    (76) tp -> . empty
    (77) tsig -> . PLUS pnSaveOperadorPlMi
    (78) tsig -> . MINUS pnSaveOperadorPlMi
    (170) empty -> .

    PLUS            shift and go to state 240
    MINUS           shift and go to state 241
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    tsig                           shift and go to state 238
    tp                             shift and go to state 354
    empty                          shift and go to state 239

state 327

    (80) fp -> fsig f pnCuadMuDi . fp
    (80) fp -> . fsig f pnCuadMuDi fp
    (81) fp -> . empty
    (82) fsig -> . MULT pnSaveOperadorMuDi
    (83) fsig -> . DIV pnSaveOperadorMuDi
    (170) empty -> .

    MULT            shift and go to state 245
    DIV             shift and go to state 246
    PLUS            reduce using rule 170 (empty -> .)
    MINUS           reduce using rule 170 (empty -> .)
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    fsig                           shift and go to state 243
    fp                             shift and go to state 355
    empty                          shift and go to state 244

state 328

    (84) f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .

    MULT            reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    DIV             reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    PLUS            reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    MINUS           reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    LESS_THAN       reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    GREATER_THAN    reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    EQUALS          reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    NOTEQUALS       reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    AND             reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    OR              reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    SEMICOLON       reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    RIGHT_PARENT    reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    COMMA           reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    RIGHT_SQR_BRACKET reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)


state 329

    (139) pnPopFondoFalso -> empty .

    MULT            reduce using rule 139 (pnPopFondoFalso -> empty .)
    DIV             reduce using rule 139 (pnPopFondoFalso -> empty .)
    PLUS            reduce using rule 139 (pnPopFondoFalso -> empty .)
    MINUS           reduce using rule 139 (pnPopFondoFalso -> empty .)
    LESS_THAN       reduce using rule 139 (pnPopFondoFalso -> empty .)
    GREATER_THAN    reduce using rule 139 (pnPopFondoFalso -> empty .)
    EQUALS          reduce using rule 139 (pnPopFondoFalso -> empty .)
    NOTEQUALS       reduce using rule 139 (pnPopFondoFalso -> empty .)
    AND             reduce using rule 139 (pnPopFondoFalso -> empty .)
    OR              reduce using rule 139 (pnPopFondoFalso -> empty .)
    SEMICOLON       reduce using rule 139 (pnPopFondoFalso -> empty .)
    RIGHT_PARENT    reduce using rule 139 (pnPopFondoFalso -> empty .)
    COMMA           reduce using rule 139 (pnPopFondoFalso -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 139 (pnPopFondoFalso -> empty .)


state 330

    (14) copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)


state 331

    (106) mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 332

    (107) mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 333

    (108) median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 334

    (109) variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 335

    (110) max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 336

    (111) min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 337

    (112) staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 338

    (113) boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 339

    (114) linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 340

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp . pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (126) pnDirecIniFunc -> . empty
    (170) empty -> .

    ID              reduce using rule 170 (empty -> .)
    READ            reduce using rule 170 (empty -> .)
    WRITE           reduce using rule 170 (empty -> .)
    IF              reduce using rule 170 (empty -> .)
    WHILE           reduce using rule 170 (empty -> .)
    FOR             reduce using rule 170 (empty -> .)
    RETURNS         reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)

    pnDirecIniFunc                 shift and go to state 356
    empty                          shift and go to state 357

state 341

    (41) paramlist -> tipoparam ARROW ID pnAddParametersTablaVar . paramlistp
    (44) paramlistp -> . COMMA paramlist
    (45) paramlistp -> . empty
    (170) empty -> .

    COMMA           shift and go to state 359
    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    paramlistp                     shift and go to state 358
    empty                          shift and go to state 360

state 342

    (124) pnAddParametersTablaVar -> empty .

    COMMA           reduce using rule 124 (pnAddParametersTablaVar -> empty .)
    RIGHT_PARENT    reduce using rule 124 (pnAddParametersTablaVar -> empty .)


state 343

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam . SEMICOLON pnCuadGoSub

    SEMICOLON       shift and go to state 361


state 344

    (133) pnCheckNoParam -> empty .

    SEMICOLON       reduce using rule 133 (pnCheckNoParam -> empty .)


state 345

    (22) expp -> exp pnCuadParametro exppp .

    RIGHT_PARENT    reduce using rule 22 (expp -> exp pnCuadParametro exppp .)


state 346

    (24) exppp -> COMMA . pnUpdateK exp pnCuadParametro exppp
    (132) pnUpdateK -> . empty
    (170) empty -> .

    LEFT_PARENT     reduce using rule 170 (empty -> .)
    CTEI            reduce using rule 170 (empty -> .)
    CTEF            reduce using rule 170 (empty -> .)
    CTEC            reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)

    pnUpdateK                      shift and go to state 362
    empty                          shift and go to state 363

state 347

    (25) exppp -> empty .

    RIGHT_PARENT    reduce using rule 25 (exppp -> empty .)


state 348

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (170) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)
    ID              shift and go to state 80
    READ            shift and go to state 81
    WRITE           shift and go to state 82
    IF              shift and go to state 83
    WHILE           shift and go to state 84
    FOR             shift and go to state 85
    RETURNS         shift and go to state 95
    READ_FILE       shift and go to state 96
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105

    estatutop                      shift and go to state 364
    estatuto                       shift and go to state 67
    empty                          shift and go to state 68
    asign                          shift and go to state 69
    llamada                        shift and go to state 70
    lee                            shift and go to state 71
    escribe                        shift and go to state 72
    condicion                      shift and go to state 73
    ciclow                         shift and go to state 74
    ciclof                         shift and go to state 75
    funcesp                        shift and go to state 76
    return                         shift and go to state 77
    copy                           shift and go to state 78
    variable                       shift and go to state 79
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94

state 349

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET pnEndWhile
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (170) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)
    ID              shift and go to state 80
    READ            shift and go to state 81
    WRITE           shift and go to state 82
    IF              shift and go to state 83
    WHILE           shift and go to state 84
    FOR             shift and go to state 85
    RETURNS         shift and go to state 95
    READ_FILE       shift and go to state 96
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105

    estatutop                      shift and go to state 365
    estatuto                       shift and go to state 67
    empty                          shift and go to state 68
    asign                          shift and go to state 69
    llamada                        shift and go to state 70
    lee                            shift and go to state 71
    escribe                        shift and go to state 72
    condicion                      shift and go to state 73
    ciclow                         shift and go to state 74
    ciclof                         shift and go to state 75
    funcesp                        shift and go to state 76
    return                         shift and go to state 77
    copy                           shift and go to state 78
    variable                       shift and go to state 79
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94

state 350

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl . COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    COMMA           shift and go to state 366


state 351

    (162) pnCreateVControl -> empty .

    COMMA           reduce using rule 162 (pnCreateVControl -> empty .)


state 352

    (63) logic -> logicsig exprel pnCuadOplog logic .

    SEMICOLON       reduce using rule 63 (logic -> logicsig exprel pnCuadOplog logic .)
    RIGHT_PARENT    reduce using rule 63 (logic -> logicsig exprel pnCuadOplog logic .)
    COMMA           reduce using rule 63 (logic -> logicsig exprel pnCuadOplog logic .)
    RIGHT_SQR_BRACKET reduce using rule 63 (logic -> logicsig exprel pnCuadOplog logic .)


state 353

    (68) relacionalp -> relsig e pnCuadOpRelacional relacionalp .

    AND             reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    OR              reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    SEMICOLON       reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    RIGHT_PARENT    reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    COMMA           reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    RIGHT_SQR_BRACKET reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)


state 354

    (75) tp -> tsig t pnCuadPlMi tp .

    LESS_THAN       reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    GREATER_THAN    reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    EQUALS          reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    NOTEQUALS       reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    AND             reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    OR              reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    SEMICOLON       reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    RIGHT_PARENT    reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    COMMA           reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    RIGHT_SQR_BRACKET reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)


state 355

    (80) fp -> fsig f pnCuadMuDi fp .

    PLUS            reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    MINUS           reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    LESS_THAN       reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    GREATER_THAN    reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    EQUALS          reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    NOTEQUALS       reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    AND             reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    OR              reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    SEMICOLON       reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    RIGHT_PARENT    reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    COMMA           reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    RIGHT_SQR_BRACKET reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)


state 356

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc . estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (170) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)
    ID              shift and go to state 80
    READ            shift and go to state 81
    WRITE           shift and go to state 82
    IF              shift and go to state 83
    WHILE           shift and go to state 84
    FOR             shift and go to state 85
    RETURNS         shift and go to state 95
    READ_FILE       shift and go to state 96
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105

    estatutop                      shift and go to state 367
    estatuto                       shift and go to state 67
    empty                          shift and go to state 68
    asign                          shift and go to state 69
    llamada                        shift and go to state 70
    lee                            shift and go to state 71
    escribe                        shift and go to state 72
    condicion                      shift and go to state 73
    ciclow                         shift and go to state 74
    ciclof                         shift and go to state 75
    funcesp                        shift and go to state 76
    return                         shift and go to state 77
    copy                           shift and go to state 78
    variable                       shift and go to state 79
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94

state 357

    (126) pnDirecIniFunc -> empty .

    ID              reduce using rule 126 (pnDirecIniFunc -> empty .)
    READ            reduce using rule 126 (pnDirecIniFunc -> empty .)
    WRITE           reduce using rule 126 (pnDirecIniFunc -> empty .)
    IF              reduce using rule 126 (pnDirecIniFunc -> empty .)
    WHILE           reduce using rule 126 (pnDirecIniFunc -> empty .)
    FOR             reduce using rule 126 (pnDirecIniFunc -> empty .)
    RETURNS         reduce using rule 126 (pnDirecIniFunc -> empty .)
    READ_FILE       reduce using rule 126 (pnDirecIniFunc -> empty .)
    MEAN            reduce using rule 126 (pnDirecIniFunc -> empty .)
    MODE            reduce using rule 126 (pnDirecIniFunc -> empty .)
    MEDIAN          reduce using rule 126 (pnDirecIniFunc -> empty .)
    VARIANCE        reduce using rule 126 (pnDirecIniFunc -> empty .)
    MAX             reduce using rule 126 (pnDirecIniFunc -> empty .)
    MIN             reduce using rule 126 (pnDirecIniFunc -> empty .)
    STADDES         reduce using rule 126 (pnDirecIniFunc -> empty .)
    BOXPLOT         reduce using rule 126 (pnDirecIniFunc -> empty .)
    LINREG          reduce using rule 126 (pnDirecIniFunc -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 126 (pnDirecIniFunc -> empty .)


state 358

    (41) paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp .

    RIGHT_PARENT    reduce using rule 41 (paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp .)


state 359

    (44) paramlistp -> COMMA . paramlist
    (41) paramlist -> . tipoparam ARROW ID pnAddParametersTablaVar paramlistp
    (42) tipoparam -> . tipo_simp
    (43) tipoparam -> . DATAFRAME pnSaveTypeVar
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    DATAFRAME       shift and go to state 204
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    paramlist                      shift and go to state 368
    tipoparam                      shift and go to state 202
    tipo_simp                      shift and go to state 203

state 360

    (45) paramlistp -> empty .

    RIGHT_PARENT    reduce using rule 45 (paramlistp -> empty .)


state 361

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON . pnCuadGoSub
    (134) pnCuadGoSub -> . empty
    (170) empty -> .

    ID              reduce using rule 170 (empty -> .)
    READ            reduce using rule 170 (empty -> .)
    WRITE           reduce using rule 170 (empty -> .)
    IF              reduce using rule 170 (empty -> .)
    WHILE           reduce using rule 170 (empty -> .)
    FOR             reduce using rule 170 (empty -> .)
    RETURNS         reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)
    MULT            reduce using rule 170 (empty -> .)
    DIV             reduce using rule 170 (empty -> .)
    PLUS            reduce using rule 170 (empty -> .)
    MINUS           reduce using rule 170 (empty -> .)
    LESS_THAN       reduce using rule 170 (empty -> .)
    GREATER_THAN    reduce using rule 170 (empty -> .)
    EQUALS          reduce using rule 170 (empty -> .)
    NOTEQUALS       reduce using rule 170 (empty -> .)
    AND             reduce using rule 170 (empty -> .)
    OR              reduce using rule 170 (empty -> .)
    SEMICOLON       reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)
    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 170 (empty -> .)

    pnCuadGoSub                    shift and go to state 369
    empty                          shift and go to state 370

state 362

    (24) exppp -> COMMA pnUpdateK . exp pnCuadParametro exppp
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 96

    exp                            shift and go to state 371
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94
    copy                           shift and go to state 138

state 363

    (132) pnUpdateK -> empty .

    LEFT_PARENT     reduce using rule 132 (pnUpdateK -> empty .)
    CTEI            reduce using rule 132 (pnUpdateK -> empty .)
    CTEF            reduce using rule 132 (pnUpdateK -> empty .)
    CTEC            reduce using rule 132 (pnUpdateK -> empty .)
    ID              reduce using rule 132 (pnUpdateK -> empty .)
    MEAN            reduce using rule 132 (pnUpdateK -> empty .)
    MODE            reduce using rule 132 (pnUpdateK -> empty .)
    MEDIAN          reduce using rule 132 (pnUpdateK -> empty .)
    VARIANCE        reduce using rule 132 (pnUpdateK -> empty .)
    MAX             reduce using rule 132 (pnUpdateK -> empty .)
    MIN             reduce using rule 132 (pnUpdateK -> empty .)
    STADDES         reduce using rule 132 (pnUpdateK -> empty .)
    BOXPLOT         reduce using rule 132 (pnUpdateK -> empty .)
    LINREG          reduce using rule 132 (pnUpdateK -> empty .)
    READ_FILE       reduce using rule 132 (pnUpdateK -> empty .)


state 364

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET falsop pnEndIf

    RIGHT_CUR_BRACKET shift and go to state 372


state 365

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET pnEndWhile

    RIGHT_CUR_BRACKET shift and go to state 373


state 366

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA . exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 96

    exp                            shift and go to state 374
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94
    copy                           shift and go to state 138

state 367

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop . RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    RIGHT_CUR_BRACKET shift and go to state 375


state 368

    (44) paramlistp -> COMMA paramlist .

    RIGHT_PARENT    reduce using rule 44 (paramlistp -> COMMA paramlist .)


state 369

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .

    ID              reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    READ            reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    WRITE           reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    IF              reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    WHILE           reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    FOR             reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    RETURNS         reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    READ_FILE       reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    MEAN            reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    MODE            reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    MEDIAN          reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    VARIANCE        reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    MAX             reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    MIN             reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    STADDES         reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    BOXPLOT         reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    LINREG          reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    RIGHT_CUR_BRACKET reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    MULT            reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    DIV             reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    PLUS            reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    MINUS           reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    LESS_THAN       reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    GREATER_THAN    reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    EQUALS          reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    NOTEQUALS       reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    AND             reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    OR              reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    SEMICOLON       reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    RIGHT_PARENT    reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    COMMA           reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)
    RIGHT_SQR_BRACKET reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub .)


state 370

    (134) pnCuadGoSub -> empty .

    ID              reduce using rule 134 (pnCuadGoSub -> empty .)
    READ            reduce using rule 134 (pnCuadGoSub -> empty .)
    WRITE           reduce using rule 134 (pnCuadGoSub -> empty .)
    IF              reduce using rule 134 (pnCuadGoSub -> empty .)
    WHILE           reduce using rule 134 (pnCuadGoSub -> empty .)
    FOR             reduce using rule 134 (pnCuadGoSub -> empty .)
    RETURNS         reduce using rule 134 (pnCuadGoSub -> empty .)
    READ_FILE       reduce using rule 134 (pnCuadGoSub -> empty .)
    MEAN            reduce using rule 134 (pnCuadGoSub -> empty .)
    MODE            reduce using rule 134 (pnCuadGoSub -> empty .)
    MEDIAN          reduce using rule 134 (pnCuadGoSub -> empty .)
    VARIANCE        reduce using rule 134 (pnCuadGoSub -> empty .)
    MAX             reduce using rule 134 (pnCuadGoSub -> empty .)
    MIN             reduce using rule 134 (pnCuadGoSub -> empty .)
    STADDES         reduce using rule 134 (pnCuadGoSub -> empty .)
    BOXPLOT         reduce using rule 134 (pnCuadGoSub -> empty .)
    LINREG          reduce using rule 134 (pnCuadGoSub -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 134 (pnCuadGoSub -> empty .)
    MULT            reduce using rule 134 (pnCuadGoSub -> empty .)
    DIV             reduce using rule 134 (pnCuadGoSub -> empty .)
    PLUS            reduce using rule 134 (pnCuadGoSub -> empty .)
    MINUS           reduce using rule 134 (pnCuadGoSub -> empty .)
    LESS_THAN       reduce using rule 134 (pnCuadGoSub -> empty .)
    GREATER_THAN    reduce using rule 134 (pnCuadGoSub -> empty .)
    EQUALS          reduce using rule 134 (pnCuadGoSub -> empty .)
    NOTEQUALS       reduce using rule 134 (pnCuadGoSub -> empty .)
    AND             reduce using rule 134 (pnCuadGoSub -> empty .)
    OR              reduce using rule 134 (pnCuadGoSub -> empty .)
    SEMICOLON       reduce using rule 134 (pnCuadGoSub -> empty .)
    RIGHT_PARENT    reduce using rule 134 (pnCuadGoSub -> empty .)
    COMMA           reduce using rule 134 (pnCuadGoSub -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 134 (pnCuadGoSub -> empty .)


state 371

    (24) exppp -> COMMA pnUpdateK exp . pnCuadParametro exppp
    (131) pnCuadParametro -> . empty
    (170) empty -> .

    COMMA           reduce using rule 170 (empty -> .)
    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCuadParametro                shift and go to state 376
    empty                          shift and go to state 317

state 372

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET . falsop pnEndIf
    (92) falsop -> . IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (93) falsop -> . empty
    (170) empty -> .

    IF_FALSE        shift and go to state 378
    ID              reduce using rule 170 (empty -> .)
    READ            reduce using rule 170 (empty -> .)
    WRITE           reduce using rule 170 (empty -> .)
    IF              reduce using rule 170 (empty -> .)
    WHILE           reduce using rule 170 (empty -> .)
    FOR             reduce using rule 170 (empty -> .)
    RETURNS         reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)

    falsop                         shift and go to state 377
    empty                          shift and go to state 379

state 373

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET . pnEndWhile
    (160) pnEndWhile -> . empty
    (170) empty -> .

    ID              reduce using rule 170 (empty -> .)
    READ            reduce using rule 170 (empty -> .)
    WRITE           reduce using rule 170 (empty -> .)
    IF              reduce using rule 170 (empty -> .)
    WHILE           reduce using rule 170 (empty -> .)
    FOR             reduce using rule 170 (empty -> .)
    RETURNS         reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)

    pnEndWhile                     shift and go to state 380
    empty                          shift and go to state 381

state 374

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp . pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (163) pnCompControlFinal -> . empty
    (170) empty -> .

    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    pnCompControlFinal             shift and go to state 382
    empty                          shift and go to state 383

state 375

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET . pnCountVarsINTOResources pnCloseCurrentFunction
    (125) pnCountVarsINTOResources -> . empty
    (170) empty -> .

    FUNC            reduce using rule 170 (empty -> .)
    DO              reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    READ            reduce using rule 170 (empty -> .)
    WRITE           reduce using rule 170 (empty -> .)
    IF              reduce using rule 170 (empty -> .)
    WHILE           reduce using rule 170 (empty -> .)
    FOR             reduce using rule 170 (empty -> .)
    RETURNS         reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)

    pnCountVarsINTOResources       shift and go to state 384
    empty                          shift and go to state 385

state 376

    (24) exppp -> COMMA pnUpdateK exp pnCuadParametro . exppp
    (24) exppp -> . COMMA pnUpdateK exp pnCuadParametro exppp
    (25) exppp -> . empty
    (170) empty -> .

    COMMA           shift and go to state 346
    RIGHT_PARENT    reduce using rule 170 (empty -> .)

    exppp                          shift and go to state 386
    empty                          shift and go to state 347

state 377

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop . pnEndIf
    (158) pnEndIf -> . empty
    (170) empty -> .

    ID              reduce using rule 170 (empty -> .)
    READ            reduce using rule 170 (empty -> .)
    WRITE           reduce using rule 170 (empty -> .)
    IF              reduce using rule 170 (empty -> .)
    WHILE           reduce using rule 170 (empty -> .)
    FOR             reduce using rule 170 (empty -> .)
    RETURNS         reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)

    pnEndIf                        shift and go to state 387
    empty                          shift and go to state 388

state 378

    (92) falsop -> IF_FALSE . pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (157) pnElseIf -> . empty
    (170) empty -> .

    LEFT_CUR_BRACKET reduce using rule 170 (empty -> .)

    pnElseIf                       shift and go to state 389
    empty                          shift and go to state 390

state 379

    (93) falsop -> empty .

    ID              reduce using rule 93 (falsop -> empty .)
    READ            reduce using rule 93 (falsop -> empty .)
    WRITE           reduce using rule 93 (falsop -> empty .)
    IF              reduce using rule 93 (falsop -> empty .)
    WHILE           reduce using rule 93 (falsop -> empty .)
    FOR             reduce using rule 93 (falsop -> empty .)
    RETURNS         reduce using rule 93 (falsop -> empty .)
    READ_FILE       reduce using rule 93 (falsop -> empty .)
    MEAN            reduce using rule 93 (falsop -> empty .)
    MODE            reduce using rule 93 (falsop -> empty .)
    MEDIAN          reduce using rule 93 (falsop -> empty .)
    VARIANCE        reduce using rule 93 (falsop -> empty .)
    MAX             reduce using rule 93 (falsop -> empty .)
    MIN             reduce using rule 93 (falsop -> empty .)
    STADDES         reduce using rule 93 (falsop -> empty .)
    BOXPLOT         reduce using rule 93 (falsop -> empty .)
    LINREG          reduce using rule 93 (falsop -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 93 (falsop -> empty .)


state 380

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .

    ID              reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    READ            reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    WRITE           reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    IF              reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    WHILE           reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    FOR             reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    RETURNS         reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    READ_FILE       reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MEAN            reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MODE            reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MEDIAN          reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    VARIANCE        reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MAX             reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MIN             reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    STADDES         reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    BOXPLOT         reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    LINREG          reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    RIGHT_CUR_BRACKET reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)


state 381

    (160) pnEndWhile -> empty .

    ID              reduce using rule 160 (pnEndWhile -> empty .)
    READ            reduce using rule 160 (pnEndWhile -> empty .)
    WRITE           reduce using rule 160 (pnEndWhile -> empty .)
    IF              reduce using rule 160 (pnEndWhile -> empty .)
    WHILE           reduce using rule 160 (pnEndWhile -> empty .)
    FOR             reduce using rule 160 (pnEndWhile -> empty .)
    RETURNS         reduce using rule 160 (pnEndWhile -> empty .)
    READ_FILE       reduce using rule 160 (pnEndWhile -> empty .)
    MEAN            reduce using rule 160 (pnEndWhile -> empty .)
    MODE            reduce using rule 160 (pnEndWhile -> empty .)
    MEDIAN          reduce using rule 160 (pnEndWhile -> empty .)
    VARIANCE        reduce using rule 160 (pnEndWhile -> empty .)
    MAX             reduce using rule 160 (pnEndWhile -> empty .)
    MIN             reduce using rule 160 (pnEndWhile -> empty .)
    STADDES         reduce using rule 160 (pnEndWhile -> empty .)
    BOXPLOT         reduce using rule 160 (pnEndWhile -> empty .)
    LINREG          reduce using rule 160 (pnEndWhile -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 160 (pnEndWhile -> empty .)


state 382

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal . RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    RIGHT_PARENT    shift and go to state 391


state 383

    (163) pnCompControlFinal -> empty .

    RIGHT_PARENT    reduce using rule 163 (pnCompControlFinal -> empty .)


state 384

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources . pnCloseCurrentFunction
    (127) pnCloseCurrentFunction -> . empty
    (170) empty -> .

    FUNC            reduce using rule 170 (empty -> .)
    DO              reduce using rule 170 (empty -> .)
    ID              reduce using rule 170 (empty -> .)
    READ            reduce using rule 170 (empty -> .)
    WRITE           reduce using rule 170 (empty -> .)
    IF              reduce using rule 170 (empty -> .)
    WHILE           reduce using rule 170 (empty -> .)
    FOR             reduce using rule 170 (empty -> .)
    RETURNS         reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)

    pnCloseCurrentFunction         shift and go to state 392
    empty                          shift and go to state 393

state 385

    (125) pnCountVarsINTOResources -> empty .

    FUNC            reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    DO              reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    ID              reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    READ            reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    WRITE           reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    IF              reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    WHILE           reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    FOR             reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    RETURNS         reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    READ_FILE       reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    MEAN            reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    MODE            reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    MEDIAN          reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    VARIANCE        reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    MAX             reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    MIN             reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    STADDES         reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    BOXPLOT         reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    LINREG          reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 125 (pnCountVarsINTOResources -> empty .)


state 386

    (24) exppp -> COMMA pnUpdateK exp pnCuadParametro exppp .

    RIGHT_PARENT    reduce using rule 24 (exppp -> COMMA pnUpdateK exp pnCuadParametro exppp .)


state 387

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .

    ID              reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    READ            reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    WRITE           reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    IF              reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    WHILE           reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    FOR             reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    RETURNS         reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    READ_FILE       reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MEAN            reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MODE            reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MEDIAN          reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    VARIANCE        reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MAX             reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MIN             reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    STADDES         reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    BOXPLOT         reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    LINREG          reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    RIGHT_CUR_BRACKET reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)


state 388

    (158) pnEndIf -> empty .

    ID              reduce using rule 158 (pnEndIf -> empty .)
    READ            reduce using rule 158 (pnEndIf -> empty .)
    WRITE           reduce using rule 158 (pnEndIf -> empty .)
    IF              reduce using rule 158 (pnEndIf -> empty .)
    WHILE           reduce using rule 158 (pnEndIf -> empty .)
    FOR             reduce using rule 158 (pnEndIf -> empty .)
    RETURNS         reduce using rule 158 (pnEndIf -> empty .)
    READ_FILE       reduce using rule 158 (pnEndIf -> empty .)
    MEAN            reduce using rule 158 (pnEndIf -> empty .)
    MODE            reduce using rule 158 (pnEndIf -> empty .)
    MEDIAN          reduce using rule 158 (pnEndIf -> empty .)
    VARIANCE        reduce using rule 158 (pnEndIf -> empty .)
    MAX             reduce using rule 158 (pnEndIf -> empty .)
    MIN             reduce using rule 158 (pnEndIf -> empty .)
    STADDES         reduce using rule 158 (pnEndIf -> empty .)
    BOXPLOT         reduce using rule 158 (pnEndIf -> empty .)
    LINREG          reduce using rule 158 (pnEndIf -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 158 (pnEndIf -> empty .)


state 389

    (92) falsop -> IF_FALSE pnElseIf . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_CUR_BRACKET shift and go to state 394


state 390

    (157) pnElseIf -> empty .

    LEFT_CUR_BRACKET reduce using rule 157 (pnElseIf -> empty .)


state 391

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    LEFT_CUR_BRACKET shift and go to state 395


state 392

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .

    FUNC            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    DO              reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    ID              reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    READ            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    WRITE           reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    IF              reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    WHILE           reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    FOR             reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    RETURNS         reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    READ_FILE       reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MEAN            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MODE            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MEDIAN          reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    VARIANCE        reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MAX             reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MIN             reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    STADDES         reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    BOXPLOT         reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    LINREG          reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    RIGHT_CUR_BRACKET reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)


state 393

    (127) pnCloseCurrentFunction -> empty .

    FUNC            reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    DO              reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    ID              reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    READ            reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    WRITE           reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    IF              reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    WHILE           reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    FOR             reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    RETURNS         reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    READ_FILE       reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    MEAN            reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    MODE            reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    MEDIAN          reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    VARIANCE        reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    MAX             reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    MIN             reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    STADDES         reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    BOXPLOT         reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    LINREG          reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 127 (pnCloseCurrentFunction -> empty .)


state 394

    (92) falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (170) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)
    ID              shift and go to state 80
    READ            shift and go to state 81
    WRITE           shift and go to state 82
    IF              shift and go to state 83
    WHILE           shift and go to state 84
    FOR             shift and go to state 85
    RETURNS         shift and go to state 95
    READ_FILE       shift and go to state 96
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105

    estatutop                      shift and go to state 396
    estatuto                       shift and go to state 67
    empty                          shift and go to state 68
    asign                          shift and go to state 69
    llamada                        shift and go to state 70
    lee                            shift and go to state 71
    escribe                        shift and go to state 72
    condicion                      shift and go to state 73
    ciclow                         shift and go to state 74
    ciclof                         shift and go to state 75
    funcesp                        shift and go to state 76
    return                         shift and go to state 77
    copy                           shift and go to state 78
    variable                       shift and go to state 79
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94

state 395

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET pnEndFor
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (170) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)
    ID              shift and go to state 80
    READ            shift and go to state 81
    WRITE           shift and go to state 82
    IF              shift and go to state 83
    WHILE           shift and go to state 84
    FOR             shift and go to state 85
    RETURNS         shift and go to state 95
    READ_FILE       shift and go to state 96
    MEAN            shift and go to state 97
    MODE            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105

    estatutop                      shift and go to state 397
    estatuto                       shift and go to state 67
    empty                          shift and go to state 68
    asign                          shift and go to state 69
    llamada                        shift and go to state 70
    lee                            shift and go to state 71
    escribe                        shift and go to state 72
    condicion                      shift and go to state 73
    ciclow                         shift and go to state 74
    ciclof                         shift and go to state 75
    funcesp                        shift and go to state 76
    return                         shift and go to state 77
    copy                           shift and go to state 78
    variable                       shift and go to state 79
    mean                           shift and go to state 86
    mode                           shift and go to state 87
    median                         shift and go to state 88
    variance                       shift and go to state 89
    max                            shift and go to state 90
    min                            shift and go to state 91
    staddes                        shift and go to state 92
    boxplot                        shift and go to state 93
    linreg                         shift and go to state 94

state 396

    (92) falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET

    RIGHT_CUR_BRACKET shift and go to state 398


state 397

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET pnEndFor

    RIGHT_CUR_BRACKET shift and go to state 399


state 398

    (92) falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .

    ID              reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ            reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WRITE           reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    IF              reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WHILE           reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    FOR             reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RETURNS         reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ_FILE       reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEAN            reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MODE            reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEDIAN          reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    VARIANCE        reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MAX             reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MIN             reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    STADDES         reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    BOXPLOT         reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    LINREG          reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RIGHT_CUR_BRACKET reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)


state 399

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET . pnEndFor
    (164) pnEndFor -> . empty
    (170) empty -> .

    ID              reduce using rule 170 (empty -> .)
    READ            reduce using rule 170 (empty -> .)
    WRITE           reduce using rule 170 (empty -> .)
    IF              reduce using rule 170 (empty -> .)
    WHILE           reduce using rule 170 (empty -> .)
    FOR             reduce using rule 170 (empty -> .)
    RETURNS         reduce using rule 170 (empty -> .)
    READ_FILE       reduce using rule 170 (empty -> .)
    MEAN            reduce using rule 170 (empty -> .)
    MODE            reduce using rule 170 (empty -> .)
    MEDIAN          reduce using rule 170 (empty -> .)
    VARIANCE        reduce using rule 170 (empty -> .)
    MAX             reduce using rule 170 (empty -> .)
    MIN             reduce using rule 170 (empty -> .)
    STADDES         reduce using rule 170 (empty -> .)
    BOXPLOT         reduce using rule 170 (empty -> .)
    LINREG          reduce using rule 170 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 170 (empty -> .)

    pnEndFor                       shift and go to state 400
    empty                          shift and go to state 401

state 400

    (95) ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .

    ID              reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    READ            reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    WRITE           reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    IF              reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    WHILE           reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    FOR             reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    RETURNS         reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    READ_FILE       reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MEAN            reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MODE            reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MEDIAN          reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    VARIANCE        reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MAX             reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MIN             reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    STADDES         reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    BOXPLOT         reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    LINREG          reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    RIGHT_CUR_BRACKET reduce using rule 95 (ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)


state 401

    (164) pnEndFor -> empty .

    ID              reduce using rule 164 (pnEndFor -> empty .)
    READ            reduce using rule 164 (pnEndFor -> empty .)
    WRITE           reduce using rule 164 (pnEndFor -> empty .)
    IF              reduce using rule 164 (pnEndFor -> empty .)
    WHILE           reduce using rule 164 (pnEndFor -> empty .)
    FOR             reduce using rule 164 (pnEndFor -> empty .)
    RETURNS         reduce using rule 164 (pnEndFor -> empty .)
    READ_FILE       reduce using rule 164 (pnEndFor -> empty .)
    MEAN            reduce using rule 164 (pnEndFor -> empty .)
    MODE            reduce using rule 164 (pnEndFor -> empty .)
    MEDIAN          reduce using rule 164 (pnEndFor -> empty .)
    VARIANCE        reduce using rule 164 (pnEndFor -> empty .)
    MAX             reduce using rule 164 (pnEndFor -> empty .)
    MIN             reduce using rule 164 (pnEndFor -> empty .)
    STADDES         reduce using rule 164 (pnEndFor -> empty .)
    BOXPLOT         reduce using rule 164 (pnEndFor -> empty .)
    LINREG          reduce using rule 164 (pnEndFor -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 164 (pnEndFor -> empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 78 resolved using rule (estatuto -> copy)
WARNING: rejected rule (funcesp -> copy) in state 78

Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND
Rule 2     varp -> var varp
Rule 3     varp -> empty
Rule 4     funcp -> func funcp
Rule 5     funcp -> empty
Rule 6     bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript
Rule 7     estatutop -> estatuto estatutop
Rule 8     estatutop -> empty
Rule 9     tipo_simp -> INT pnSaveTypeVar
Rule 10    tipo_simp -> FLOAT pnSaveTypeVar
Rule 11    tipo_simp -> CHAR pnSaveTypeVar
Rule 12    tipo_comp -> DATAFRAME
Rule 13    tipo_comp -> file
Rule 14    copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
Rule 15    file -> ID
Rule 16    variable -> ID pnSaveOperandos indexp
Rule 17    indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop
Rule 18    indexp -> empty
Rule 19    indexpp -> COMMA pnArrAccIncDim exp pnMatCalc
Rule 20    indexpp -> empty pnArrCalc
Rule 21    llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
Rule 22    expp -> exp pnCuadParametro exppp
Rule 23    expp -> empty
Rule 24    exppp -> COMMA pnUpdateK exp pnCuadParametro exppp
Rule 25    exppp -> empty
Rule 26    var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON
Rule 27    v -> DATAFRAME pnSaveTypeVar
Rule 28    v -> tipo_simp vp
Rule 29    vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar
Rule 30    vp -> empty
Rule 31    vpp -> COMMA CTEI pnArrSaveLim1
Rule 32    vpp -> empty
Rule 33    idp -> ID pnCheckNameTablaVar pnArrAddDim idpp
Rule 34    idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim idpp
Rule 35    idpp -> empty
Rule 36    func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
Rule 37    returnval -> tipo_simp
Rule 38    returnval -> VOID pnSaveTypeVar
Rule 39    param -> paramlist
Rule 40    param -> empty
Rule 41    paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp
Rule 42    tipoparam -> tipo_simp
Rule 43    tipoparam -> DATAFRAME pnSaveTypeVar
Rule 44    paramlistp -> COMMA paramlist
Rule 45    paramlistp -> empty
Rule 46    estatuto -> asign
Rule 47    estatuto -> llamada
Rule 48    estatuto -> lee
Rule 49    estatuto -> escribe
Rule 50    estatuto -> condicion
Rule 51    estatuto -> ciclow
Rule 52    estatuto -> ciclof
Rule 53    estatuto -> funcesp
Rule 54    estatuto -> return
Rule 55    estatuto -> copy
Rule 56    asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
Rule 57    lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
Rule 58    escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
Rule 59    escribep -> exp pnCuadEscribe
Rule 60    escribep -> LETRERO pnCuadEscribe
Rule 61    return -> RETURNS exp pnCuadRet SEMICOLON
Rule 62    exp -> exprel pnCuadOplog logic
Rule 63    logic -> logicsig exprel pnCuadOplog logic
Rule 64    logic -> empty
Rule 65    logicsig -> AND pnSaveOperadorLog
Rule 66    logicsig -> OR pnSaveOperadorLog
Rule 67    exprel -> e pnCuadOpRelacional relacionalp
Rule 68    relacionalp -> relsig e pnCuadOpRelacional relacionalp
Rule 69    relacionalp -> empty
Rule 70    relsig -> LESS_THAN pnSaveOperadorRel
Rule 71    relsig -> GREATER_THAN pnSaveOperadorRel
Rule 72    relsig -> EQUALS pnSaveOperadorRel
Rule 73    relsig -> NOTEQUALS pnSaveOperadorRel
Rule 74    e -> t pnCuadPlMi tp
Rule 75    tp -> tsig t pnCuadPlMi tp
Rule 76    tp -> empty
Rule 77    tsig -> PLUS pnSaveOperadorPlMi
Rule 78    tsig -> MINUS pnSaveOperadorPlMi
Rule 79    t -> f pnCuadMuDi fp
Rule 80    fp -> fsig f pnCuadMuDi fp
Rule 81    fp -> empty
Rule 82    fsig -> MULT pnSaveOperadorMuDi
Rule 83    fsig -> DIV pnSaveOperadorMuDi
Rule 84    f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
Rule 85    f -> CTEI pnSaveCteI pnSaveOperandoConstante
Rule 86    f -> CTEF pnSaveCteF pnSaveOperandoConstante
Rule 87    f -> CTEC pnSaveCteC pnSaveOperandoConstante
Rule 88    f -> variable
Rule 89    f -> llamada
Rule 90    f -> funcesp
Rule 91    condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
Rule 92    falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
Rule 93    falsop -> empty
Rule 94    ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
Rule 95    ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
Rule 96    funcesp -> mean
Rule 97    funcesp -> mode
Rule 98    funcesp -> median
Rule 99    funcesp -> variance
Rule 100   funcesp -> max
Rule 101   funcesp -> min
Rule 102   funcesp -> staddes
Rule 103   funcesp -> boxplot
Rule 104   funcesp -> linreg
Rule 105   funcesp -> copy
Rule 106   mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 107   mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 108   median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 109   variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 110   max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 111   min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 112   staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 113   boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 114   linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 115   pnCrearDirFunc -> empty
Rule 116   pnCuadGotoMain -> empty
Rule 117   pnDirMain -> empty
Rule 118   pnScriptFuncDir -> empty
Rule 119   pnCheckTablaVar -> empty
Rule 120   pnCrearListaParam -> empty
Rule 121   pnSaveTypeVar -> empty
Rule 122   pnCheckNameTablaVar -> empty
Rule 123   pnAddFuncinDir -> empty
Rule 124   pnAddParametersTablaVar -> empty
Rule 125   pnCountVarsINTOResources -> empty
Rule 126   pnDirecIniFunc -> empty
Rule 127   pnCloseCurrentFunction -> empty
Rule 128   pnEndScript -> empty
Rule 129   pnCheckFunc -> empty
Rule 130   pnGenerateEra -> empty
Rule 131   pnCuadParametro -> empty
Rule 132   pnUpdateK -> empty
Rule 133   pnCheckNoParam -> empty
Rule 134   pnCuadGoSub -> empty
Rule 135   pnHandleReturnValue -> empty
Rule 136   pnCuadRet -> empty
Rule 137   pnSaveCteI -> empty
Rule 138   pnSaveCteF -> empty
Rule 139   pnSaveCteC -> empty
Rule 140   pnSaveFondoFalso -> empty
Rule 141   pnPopFondoFalso -> empty
Rule 142   pnSaveOperandos -> empty
Rule 143   pnSaveOperandoConstante -> empty
Rule 144   pnSaveOperadorPlMi -> empty
Rule 145   pnSaveOperadorMuDi -> empty
Rule 146   pnSaveOperadorRel -> empty
Rule 147   pnSaveOperadorLog -> empty
Rule 148   pnCuadPlMi -> empty
Rule 149   pnCuadMuDi -> empty
Rule 150   pnCuadOpRelacional -> empty
Rule 151   pnCuadOplog -> empty
Rule 152   pnSaveOperadorAsign -> empty
Rule 153   pnCuadAsign -> empty
Rule 154   pnCuadEscribe -> empty
Rule 155   pnCuadLee -> empty
Rule 156   pnCuadCopy -> empty
Rule 157   pnCuadFuncEsp -> empty
Rule 158   pnCheckBoolIf -> empty
Rule 159   pnElseIf -> empty
Rule 160   pnEndIf -> empty
Rule 161   pnSaveWhile -> empty
Rule 162   pnEndWhile -> empty
Rule 163   pnSaveForID -> empty
Rule 164   pnCreateVControl -> empty
Rule 165   pnCompControlFinal -> empty
Rule 166   pnEndFor -> empty
Rule 167   pnArrCreateNode -> empty
Rule 168   pnArrSaveLim1 -> empty
Rule 169   pnArrCuadriplificar -> empty
Rule 170   pnArrAddDim -> empty
Rule 171   pnArrIni -> empty
Rule 172   pnArrVerify -> empty
Rule 173   pnArrAccIncDim -> empty
Rule 174   pnArrCalc -> empty
Rule 175   pnMatCalc -> empty
Rule 176   pnArrFFPop -> empty
Rule 177   pnCuadEND -> empty
Rule 178   empty -> <empty>

Terminals, with rules where they appear

AND                  : 65
ARROW                : 26 36 41
ASIGN                : 56 95
BOXPLOT              : 113
CHAR                 : 11
COMMA                : 19 24 31 34 44 95
COMMENT              : 
CTEC                 : 87
CTEF                 : 86
CTEI                 : 29 31 85
DATAFRAME            : 12 27 43
DIV                  : 83
DO                   : 6
EQUALS               : 72
FLOAT                : 10
FOR                  : 95
FUNC                 : 36
GREATER_THAN         : 71
ID                   : 1 15 16 21 33 34 36 41
IF                   : 91
IF_FALSE             : 92
IF_TRUE              : 91
INT                  : 9
LEFT_CUR_BRACKET     : 6 36 91 92 94 95
LEFT_PARENT          : 14 21 36 57 58 84 91 94 95 106 107 108 109 110 111 112 113 114
LEFT_SQR_BRACKET     : 17 29
LESS_THAN            : 70
LETRERO              : 14 60
LINREG               : 114
MAX                  : 110
MEAN                 : 106
MEDIAN               : 108
MIN                  : 111
MINUS                : 78
MODE                 : 107
MULT                 : 82
NOTEQUALS            : 73
OR                   : 66
PLUS                 : 77
READ                 : 57
READ_FILE            : 14
RETURNS              : 61
RIGHT_CUR_BRACKET    : 6 36 91 92 94 95
RIGHT_PARENT         : 14 21 36 57 58 84 91 94 95 106 107 108 109 110 111 112 113 114
RIGHT_SQR_BRACKET    : 17 29
SCRIPT               : 1
SEMICOLON            : 1 14 21 26 56 57 58 61 106 107 108 109 110 111 112 113 114
STADDES              : 112
VAR                  : 26
VARIANCE             : 109
VOID                 : 38
WHILE                : 94
WRITE                : 58
error                : 

Nonterminals, with rules where they appear

asign                : 46
bloque               : 1
boxplot              : 103
ciclof               : 52
ciclow               : 51
condicion            : 50
copy                 : 55 105
e                    : 67 68
empty                : 3 5 8 18 20 23 25 30 32 35 40 45 64 69 76 81 93 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177
escribe              : 49
escribep             : 58
estatuto             : 7
estatutop            : 6 7 36 91 92 94 95
exp                  : 17 19 22 24 56 59 61 84 91 94 95 95
expp                 : 21
exppp                : 22 24
exprel               : 62 63
f                    : 79 80
falsop               : 91
file                 : 13
fp                   : 79 80
fsig                 : 80
func                 : 4
funcesp              : 53 90
funcp                : 1 4 6
idp                  : 26
idpp                 : 33 34
indexp               : 16
indexpp              : 17
lee                  : 48
linreg               : 104
llamada              : 47 89
logic                : 62 63
logicsig             : 63
max                  : 100
mean                 : 96
median               : 98
min                  : 101
mode                 : 97
param                : 36
paramlist            : 39 44
paramlistp           : 41
pnAddFuncinDir       : 36
pnAddParametersTablaVar : 41
pnArrAccIncDim       : 19
pnArrAddDim          : 33 34
pnArrCalc            : 20
pnArrCreateNode      : 29
pnArrCuadriplificar  : 29
pnArrFFPop           : 17
pnArrIni             : 17
pnArrSaveLim1        : 29 31
pnArrVerify          : 17
pnCheckBoolIf        : 91 94
pnCheckFunc          : 21
pnCheckNameTablaVar  : 33 34
pnCheckNoParam       : 21
pnCheckTablaVar      : 26 36
pnCloseCurrentFunction : 36
pnCompControlFinal   : 95
pnCountVarsINTOResources : 36
pnCrearDirFunc       : 1
pnCrearListaParam    : 36
pnCreateVControl     : 95
pnCuadAsign          : 56
pnCuadCopy           : 14
pnCuadEND            : 1
pnCuadEscribe        : 59 60
pnCuadFuncEsp        : 106 107 108 109 110 111 112 113 114
pnCuadGoSub          : 21
pnCuadGotoMain       : 1
pnCuadLee            : 57
pnCuadMuDi           : 79 80
pnCuadOpRelacional   : 67 68
pnCuadOplog          : 62 63
pnCuadParametro      : 22 24
pnCuadPlMi           : 74 75
pnCuadRet            : 61
pnDirMain            : 6
pnDirecIniFunc       : 36
pnElseIf             : 92
pnEndFor             : 95
pnEndIf              : 91
pnEndScript          : 6
pnEndWhile           : 94
pnGenerateEra        : 21
pnHandleReturnValue  : 21
pnMatCalc            : 19
pnPopFondoFalso      : 84
pnSaveCteC           : 87
pnSaveCteF           : 86
pnSaveCteI           : 85
pnSaveFondoFalso     : 84
pnSaveForID          : 95
pnSaveOperadorAsign  : 56
pnSaveOperadorLog    : 65 66
pnSaveOperadorMuDi   : 82 83
pnSaveOperadorPlMi   : 77 78
pnSaveOperadorRel    : 70 71 72 73
pnSaveOperandoConstante : 85 86 87
pnSaveOperandos      : 16
pnSaveTypeVar        : 9 10 11 27 38 43
pnSaveWhile          : 94
pnScriptFuncDir      : 1
pnUpdateK            : 24
programa             : 0
relacionalp          : 67 68
relsig               : 68
return               : 54
returnval            : 36
staddes              : 102
t                    : 74 75
tipo_comp            : 
tipo_simp            : 28 37 42
tipoparam            : 41
tp                   : 74 75
tsig                 : 75
v                    : 26
var                  : 2
variable             : 56 57 88 95 106 107 108 109 110 111 112 113 114
variance             : 99
varp                 : 1 2 6 36
vp                   : 28
vpp                  : 29

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND

    SCRIPT          shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> SCRIPT . pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND
    (115) pnCrearDirFunc -> . empty
    (178) empty -> .

    ID              reduce using rule 178 (empty -> .)

    pnCrearDirFunc                 shift and go to state 3
    empty                          shift and go to state 4

state 3

    (1) programa -> SCRIPT pnCrearDirFunc . ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND

    ID              shift and go to state 5


state 4

    (115) pnCrearDirFunc -> empty .

    ID              reduce using rule 115 (pnCrearDirFunc -> empty .)


state 5

    (1) programa -> SCRIPT pnCrearDirFunc ID . pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND
    (118) pnScriptFuncDir -> . empty
    (178) empty -> .

    SEMICOLON       reduce using rule 178 (empty -> .)

    pnScriptFuncDir                shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir . pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND
    (116) pnCuadGotoMain -> . empty
    (178) empty -> .

    SEMICOLON       reduce using rule 178 (empty -> .)

    pnCuadGotoMain                 shift and go to state 8
    empty                          shift and go to state 9

state 7

    (118) pnScriptFuncDir -> empty .

    SEMICOLON       reduce using rule 118 (pnScriptFuncDir -> empty .)


state 8

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain . SEMICOLON varp funcp bloque pnCuadEND

    SEMICOLON       shift and go to state 10


state 9

    (116) pnCuadGotoMain -> empty .

    SEMICOLON       reduce using rule 116 (pnCuadGotoMain -> empty .)


state 10

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON . varp funcp bloque pnCuadEND
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (178) empty -> .

    VAR             shift and go to state 14
    FUNC            reduce using rule 178 (empty -> .)
    DO              reduce using rule 178 (empty -> .)

    varp                           shift and go to state 11
    var                            shift and go to state 12
    empty                          shift and go to state 13

state 11

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp . funcp bloque pnCuadEND
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (178) empty -> .

    FUNC            shift and go to state 18
    DO              reduce using rule 178 (empty -> .)

    funcp                          shift and go to state 15
    func                           shift and go to state 16
    empty                          shift and go to state 17

state 12

    (2) varp -> var . varp
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (178) empty -> .

    VAR             shift and go to state 14
    FUNC            reduce using rule 178 (empty -> .)
    DO              reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    READ            reduce using rule 178 (empty -> .)
    WRITE           reduce using rule 178 (empty -> .)
    IF              reduce using rule 178 (empty -> .)
    WHILE           reduce using rule 178 (empty -> .)
    FOR             reduce using rule 178 (empty -> .)
    RETURNS         reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)

    var                            shift and go to state 12
    varp                           shift and go to state 19
    empty                          shift and go to state 13

state 13

    (3) varp -> empty .

    FUNC            reduce using rule 3 (varp -> empty .)
    DO              reduce using rule 3 (varp -> empty .)
    ID              reduce using rule 3 (varp -> empty .)
    READ            reduce using rule 3 (varp -> empty .)
    WRITE           reduce using rule 3 (varp -> empty .)
    IF              reduce using rule 3 (varp -> empty .)
    WHILE           reduce using rule 3 (varp -> empty .)
    FOR             reduce using rule 3 (varp -> empty .)
    RETURNS         reduce using rule 3 (varp -> empty .)
    READ_FILE       reduce using rule 3 (varp -> empty .)
    MEAN            reduce using rule 3 (varp -> empty .)
    MODE            reduce using rule 3 (varp -> empty .)
    MEDIAN          reduce using rule 3 (varp -> empty .)
    VARIANCE        reduce using rule 3 (varp -> empty .)
    MAX             reduce using rule 3 (varp -> empty .)
    MIN             reduce using rule 3 (varp -> empty .)
    STADDES         reduce using rule 3 (varp -> empty .)
    BOXPLOT         reduce using rule 3 (varp -> empty .)
    LINREG          reduce using rule 3 (varp -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 3 (varp -> empty .)


state 14

    (26) var -> VAR . pnCheckTablaVar v ARROW idp SEMICOLON
    (119) pnCheckTablaVar -> . empty
    (178) empty -> .

    DATAFRAME       reduce using rule 178 (empty -> .)
    INT             reduce using rule 178 (empty -> .)
    FLOAT           reduce using rule 178 (empty -> .)
    CHAR            reduce using rule 178 (empty -> .)

    pnCheckTablaVar                shift and go to state 20
    empty                          shift and go to state 21

state 15

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp . bloque pnCuadEND
    (6) bloque -> . DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript

    DO              shift and go to state 23

    bloque                         shift and go to state 22

state 16

    (4) funcp -> func . funcp
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (178) empty -> .

    FUNC            shift and go to state 18
    DO              reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    READ            reduce using rule 178 (empty -> .)
    WRITE           reduce using rule 178 (empty -> .)
    IF              reduce using rule 178 (empty -> .)
    WHILE           reduce using rule 178 (empty -> .)
    FOR             reduce using rule 178 (empty -> .)
    RETURNS         reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)

    func                           shift and go to state 16
    funcp                          shift and go to state 24
    empty                          shift and go to state 17

state 17

    (5) funcp -> empty .

    DO              reduce using rule 5 (funcp -> empty .)
    ID              reduce using rule 5 (funcp -> empty .)
    READ            reduce using rule 5 (funcp -> empty .)
    WRITE           reduce using rule 5 (funcp -> empty .)
    IF              reduce using rule 5 (funcp -> empty .)
    WHILE           reduce using rule 5 (funcp -> empty .)
    FOR             reduce using rule 5 (funcp -> empty .)
    RETURNS         reduce using rule 5 (funcp -> empty .)
    READ_FILE       reduce using rule 5 (funcp -> empty .)
    MEAN            reduce using rule 5 (funcp -> empty .)
    MODE            reduce using rule 5 (funcp -> empty .)
    MEDIAN          reduce using rule 5 (funcp -> empty .)
    VARIANCE        reduce using rule 5 (funcp -> empty .)
    MAX             reduce using rule 5 (funcp -> empty .)
    MIN             reduce using rule 5 (funcp -> empty .)
    STADDES         reduce using rule 5 (funcp -> empty .)
    BOXPLOT         reduce using rule 5 (funcp -> empty .)
    LINREG          reduce using rule 5 (funcp -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 5 (funcp -> empty .)


state 18

    (36) func -> FUNC . returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (37) returnval -> . tipo_simp
    (38) returnval -> . VOID pnSaveTypeVar
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    VOID            shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    returnval                      shift and go to state 25
    tipo_simp                      shift and go to state 26

state 19

    (2) varp -> var varp .

    FUNC            reduce using rule 2 (varp -> var varp .)
    DO              reduce using rule 2 (varp -> var varp .)
    ID              reduce using rule 2 (varp -> var varp .)
    READ            reduce using rule 2 (varp -> var varp .)
    WRITE           reduce using rule 2 (varp -> var varp .)
    IF              reduce using rule 2 (varp -> var varp .)
    WHILE           reduce using rule 2 (varp -> var varp .)
    FOR             reduce using rule 2 (varp -> var varp .)
    RETURNS         reduce using rule 2 (varp -> var varp .)
    READ_FILE       reduce using rule 2 (varp -> var varp .)
    MEAN            reduce using rule 2 (varp -> var varp .)
    MODE            reduce using rule 2 (varp -> var varp .)
    MEDIAN          reduce using rule 2 (varp -> var varp .)
    VARIANCE        reduce using rule 2 (varp -> var varp .)
    MAX             reduce using rule 2 (varp -> var varp .)
    MIN             reduce using rule 2 (varp -> var varp .)
    STADDES         reduce using rule 2 (varp -> var varp .)
    BOXPLOT         reduce using rule 2 (varp -> var varp .)
    LINREG          reduce using rule 2 (varp -> var varp .)
    RIGHT_CUR_BRACKET reduce using rule 2 (varp -> var varp .)


state 20

    (26) var -> VAR pnCheckTablaVar . v ARROW idp SEMICOLON
    (27) v -> . DATAFRAME pnSaveTypeVar
    (28) v -> . tipo_simp vp
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    DATAFRAME       shift and go to state 32
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    v                              shift and go to state 31
    tipo_simp                      shift and go to state 33

state 21

    (119) pnCheckTablaVar -> empty .

    DATAFRAME       reduce using rule 119 (pnCheckTablaVar -> empty .)
    INT             reduce using rule 119 (pnCheckTablaVar -> empty .)
    FLOAT           reduce using rule 119 (pnCheckTablaVar -> empty .)
    CHAR            reduce using rule 119 (pnCheckTablaVar -> empty .)
    RIGHT_PARENT    reduce using rule 119 (pnCheckTablaVar -> empty .)


state 22

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque . pnCuadEND
    (177) pnCuadEND -> . empty
    (178) empty -> .

    $end            reduce using rule 178 (empty -> .)

    pnCuadEND                      shift and go to state 34
    empty                          shift and go to state 35

state 23

    (6) bloque -> DO . pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript
    (117) pnDirMain -> . empty
    (178) empty -> .

    LEFT_CUR_BRACKET reduce using rule 178 (empty -> .)

    pnDirMain                      shift and go to state 36
    empty                          shift and go to state 37

state 24

    (4) funcp -> func funcp .

    DO              reduce using rule 4 (funcp -> func funcp .)
    ID              reduce using rule 4 (funcp -> func funcp .)
    READ            reduce using rule 4 (funcp -> func funcp .)
    WRITE           reduce using rule 4 (funcp -> func funcp .)
    IF              reduce using rule 4 (funcp -> func funcp .)
    WHILE           reduce using rule 4 (funcp -> func funcp .)
    FOR             reduce using rule 4 (funcp -> func funcp .)
    RETURNS         reduce using rule 4 (funcp -> func funcp .)
    READ_FILE       reduce using rule 4 (funcp -> func funcp .)
    MEAN            reduce using rule 4 (funcp -> func funcp .)
    MODE            reduce using rule 4 (funcp -> func funcp .)
    MEDIAN          reduce using rule 4 (funcp -> func funcp .)
    VARIANCE        reduce using rule 4 (funcp -> func funcp .)
    MAX             reduce using rule 4 (funcp -> func funcp .)
    MIN             reduce using rule 4 (funcp -> func funcp .)
    STADDES         reduce using rule 4 (funcp -> func funcp .)
    BOXPLOT         reduce using rule 4 (funcp -> func funcp .)
    LINREG          reduce using rule 4 (funcp -> func funcp .)
    RIGHT_CUR_BRACKET reduce using rule 4 (funcp -> func funcp .)


state 25

    (36) func -> FUNC returnval . ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    ARROW           shift and go to state 38


state 26

    (37) returnval -> tipo_simp .

    ARROW           reduce using rule 37 (returnval -> tipo_simp .)


state 27

    (38) returnval -> VOID . pnSaveTypeVar
    (121) pnSaveTypeVar -> . empty
    (178) empty -> .

    ARROW           reduce using rule 178 (empty -> .)

    pnSaveTypeVar                  shift and go to state 39
    empty                          shift and go to state 40

state 28

    (9) tipo_simp -> INT . pnSaveTypeVar
    (121) pnSaveTypeVar -> . empty
    (178) empty -> .

    ARROW           reduce using rule 178 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnSaveTypeVar                  shift and go to state 41
    empty                          shift and go to state 40

state 29

    (10) tipo_simp -> FLOAT . pnSaveTypeVar
    (121) pnSaveTypeVar -> . empty
    (178) empty -> .

    ARROW           reduce using rule 178 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnSaveTypeVar                  shift and go to state 42
    empty                          shift and go to state 40

state 30

    (11) tipo_simp -> CHAR . pnSaveTypeVar
    (121) pnSaveTypeVar -> . empty
    (178) empty -> .

    ARROW           reduce using rule 178 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnSaveTypeVar                  shift and go to state 43
    empty                          shift and go to state 40

state 31

    (26) var -> VAR pnCheckTablaVar v . ARROW idp SEMICOLON

    ARROW           shift and go to state 44


state 32

    (27) v -> DATAFRAME . pnSaveTypeVar
    (121) pnSaveTypeVar -> . empty
    (178) empty -> .

    ARROW           reduce using rule 178 (empty -> .)

    pnSaveTypeVar                  shift and go to state 45
    empty                          shift and go to state 40

state 33

    (28) v -> tipo_simp . vp
    (29) vp -> . LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar
    (30) vp -> . empty
    (178) empty -> .

    LEFT_SQR_BRACKET shift and go to state 47
    ARROW           reduce using rule 178 (empty -> .)

    vp                             shift and go to state 46
    empty                          shift and go to state 48

state 34

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND .

    $end            reduce using rule 1 (programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND .)


state 35

    (177) pnCuadEND -> empty .

    $end            reduce using rule 177 (pnCuadEND -> empty .)


state 36

    (6) bloque -> DO pnDirMain . LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript

    LEFT_CUR_BRACKET shift and go to state 49


state 37

    (117) pnDirMain -> empty .

    LEFT_CUR_BRACKET reduce using rule 117 (pnDirMain -> empty .)


state 38

    (36) func -> FUNC returnval ARROW . ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    ID              shift and go to state 50


state 39

    (38) returnval -> VOID pnSaveTypeVar .

    ARROW           reduce using rule 38 (returnval -> VOID pnSaveTypeVar .)


state 40

    (121) pnSaveTypeVar -> empty .

    ARROW           reduce using rule 121 (pnSaveTypeVar -> empty .)
    LEFT_SQR_BRACKET reduce using rule 121 (pnSaveTypeVar -> empty .)


state 41

    (9) tipo_simp -> INT pnSaveTypeVar .

    ARROW           reduce using rule 9 (tipo_simp -> INT pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 9 (tipo_simp -> INT pnSaveTypeVar .)


state 42

    (10) tipo_simp -> FLOAT pnSaveTypeVar .

    ARROW           reduce using rule 10 (tipo_simp -> FLOAT pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 10 (tipo_simp -> FLOAT pnSaveTypeVar .)


state 43

    (11) tipo_simp -> CHAR pnSaveTypeVar .

    ARROW           reduce using rule 11 (tipo_simp -> CHAR pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 11 (tipo_simp -> CHAR pnSaveTypeVar .)


state 44

    (26) var -> VAR pnCheckTablaVar v ARROW . idp SEMICOLON
    (33) idp -> . ID pnCheckNameTablaVar pnArrAddDim idpp

    ID              shift and go to state 52

    idp                            shift and go to state 51

state 45

    (27) v -> DATAFRAME pnSaveTypeVar .

    ARROW           reduce using rule 27 (v -> DATAFRAME pnSaveTypeVar .)


state 46

    (28) v -> tipo_simp vp .

    ARROW           reduce using rule 28 (v -> tipo_simp vp .)


state 47

    (29) vp -> LEFT_SQR_BRACKET . pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar
    (167) pnArrCreateNode -> . empty
    (178) empty -> .

    CTEI            reduce using rule 178 (empty -> .)

    pnArrCreateNode                shift and go to state 53
    empty                          shift and go to state 54

state 48

    (30) vp -> empty .

    ARROW           reduce using rule 30 (vp -> empty .)


state 49

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET . varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (178) empty -> .

    VAR             shift and go to state 14
    FUNC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    READ            reduce using rule 178 (empty -> .)
    WRITE           reduce using rule 178 (empty -> .)
    IF              reduce using rule 178 (empty -> .)
    WHILE           reduce using rule 178 (empty -> .)
    FOR             reduce using rule 178 (empty -> .)
    RETURNS         reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)

    varp                           shift and go to state 55
    var                            shift and go to state 12
    empty                          shift and go to state 13

state 50

    (36) func -> FUNC returnval ARROW ID . pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (123) pnAddFuncinDir -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)

    pnAddFuncinDir                 shift and go to state 56
    empty                          shift and go to state 57

state 51

    (26) var -> VAR pnCheckTablaVar v ARROW idp . SEMICOLON

    SEMICOLON       shift and go to state 58


state 52

    (33) idp -> ID . pnCheckNameTablaVar pnArrAddDim idpp
    (122) pnCheckNameTablaVar -> . empty
    (178) empty -> .

    COMMA           reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)

    pnCheckNameTablaVar            shift and go to state 59
    empty                          shift and go to state 60

state 53

    (29) vp -> LEFT_SQR_BRACKET pnArrCreateNode . CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar

    CTEI            shift and go to state 61


state 54

    (167) pnArrCreateNode -> empty .

    CTEI            reduce using rule 167 (pnArrCreateNode -> empty .)


state 55

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET varp . funcp estatutop RIGHT_CUR_BRACKET pnEndScript
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (178) empty -> .

    FUNC            shift and go to state 18
    ID              reduce using rule 178 (empty -> .)
    READ            reduce using rule 178 (empty -> .)
    WRITE           reduce using rule 178 (empty -> .)
    IF              reduce using rule 178 (empty -> .)
    WHILE           reduce using rule 178 (empty -> .)
    FOR             reduce using rule 178 (empty -> .)
    RETURNS         reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)

    funcp                          shift and go to state 62
    func                           shift and go to state 16
    empty                          shift and go to state 17

state 56

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir . LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    LEFT_PARENT     shift and go to state 63


state 57

    (123) pnAddFuncinDir -> empty .

    LEFT_PARENT     reduce using rule 123 (pnAddFuncinDir -> empty .)


state 58

    (26) var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .

    VAR             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    FUNC            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    DO              reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    ID              reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    READ            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    WRITE           reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    IF              reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    WHILE           reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    FOR             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    RETURNS         reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    READ_FILE       reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MEAN            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MODE            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MEDIAN          reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    VARIANCE        reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MAX             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MIN             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    STADDES         reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    BOXPLOT         reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    LINREG          reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)


state 59

    (33) idp -> ID pnCheckNameTablaVar . pnArrAddDim idpp
    (170) pnArrAddDim -> . empty
    (178) empty -> .

    COMMA           reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)

    pnArrAddDim                    shift and go to state 64
    empty                          shift and go to state 65

state 60

    (122) pnCheckNameTablaVar -> empty .

    COMMA           reduce using rule 122 (pnCheckNameTablaVar -> empty .)
    SEMICOLON       reduce using rule 122 (pnCheckNameTablaVar -> empty .)


state 61

    (29) vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI . pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar
    (168) pnArrSaveLim1 -> . empty
    (178) empty -> .

    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnArrSaveLim1                  shift and go to state 66
    empty                          shift and go to state 67

state 62

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp . estatutop RIGHT_CUR_BRACKET pnEndScript
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (178) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp pnCuadRet SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)
    ID              shift and go to state 82
    READ            shift and go to state 83
    WRITE           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FOR             shift and go to state 87
    RETURNS         shift and go to state 97
    READ_FILE       shift and go to state 98
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107

    estatutop                      shift and go to state 68
    estatuto                       shift and go to state 69
    empty                          shift and go to state 70
    asign                          shift and go to state 71
    llamada                        shift and go to state 72
    lee                            shift and go to state 73
    escribe                        shift and go to state 74
    condicion                      shift and go to state 75
    ciclow                         shift and go to state 76
    ciclof                         shift and go to state 77
    funcesp                        shift and go to state 78
    return                         shift and go to state 79
    copy                           shift and go to state 80
    variable                       shift and go to state 81
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96

state 63

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT . pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (119) pnCheckTablaVar -> . empty
    (178) empty -> .

    DATAFRAME       reduce using rule 178 (empty -> .)
    INT             reduce using rule 178 (empty -> .)
    FLOAT           reduce using rule 178 (empty -> .)
    CHAR            reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCheckTablaVar                shift and go to state 108
    empty                          shift and go to state 21

state 64

    (33) idp -> ID pnCheckNameTablaVar pnArrAddDim . idpp
    (34) idpp -> . COMMA ID pnCheckNameTablaVar pnArrAddDim idpp
    (35) idpp -> . empty
    (178) empty -> .

    COMMA           shift and go to state 110
    SEMICOLON       reduce using rule 178 (empty -> .)

    idpp                           shift and go to state 109
    empty                          shift and go to state 111

state 65

    (170) pnArrAddDim -> empty .

    COMMA           reduce using rule 170 (pnArrAddDim -> empty .)
    SEMICOLON       reduce using rule 170 (pnArrAddDim -> empty .)


state 66

    (29) vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 . vpp RIGHT_SQR_BRACKET pnArrCuadriplificar
    (31) vpp -> . COMMA CTEI pnArrSaveLim1
    (32) vpp -> . empty
    (178) empty -> .

    COMMA           shift and go to state 113
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    vpp                            shift and go to state 112
    empty                          shift and go to state 114

state 67

    (168) pnArrSaveLim1 -> empty .

    COMMA           reduce using rule 168 (pnArrSaveLim1 -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 168 (pnArrSaveLim1 -> empty .)


state 68

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop . RIGHT_CUR_BRACKET pnEndScript

    RIGHT_CUR_BRACKET shift and go to state 115


state 69

    (7) estatutop -> estatuto . estatutop
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (178) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp pnCuadRet SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)
    ID              shift and go to state 82
    READ            shift and go to state 83
    WRITE           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FOR             shift and go to state 87
    RETURNS         shift and go to state 97
    READ_FILE       shift and go to state 98
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107

    estatuto                       shift and go to state 69
    estatutop                      shift and go to state 116
    empty                          shift and go to state 70
    asign                          shift and go to state 71
    llamada                        shift and go to state 72
    lee                            shift and go to state 73
    escribe                        shift and go to state 74
    condicion                      shift and go to state 75
    ciclow                         shift and go to state 76
    ciclof                         shift and go to state 77
    funcesp                        shift and go to state 78
    return                         shift and go to state 79
    copy                           shift and go to state 80
    variable                       shift and go to state 81
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96

state 70

    (8) estatutop -> empty .

    RIGHT_CUR_BRACKET reduce using rule 8 (estatutop -> empty .)


state 71

    (46) estatuto -> asign .

    ID              reduce using rule 46 (estatuto -> asign .)
    READ            reduce using rule 46 (estatuto -> asign .)
    WRITE           reduce using rule 46 (estatuto -> asign .)
    IF              reduce using rule 46 (estatuto -> asign .)
    WHILE           reduce using rule 46 (estatuto -> asign .)
    FOR             reduce using rule 46 (estatuto -> asign .)
    RETURNS         reduce using rule 46 (estatuto -> asign .)
    READ_FILE       reduce using rule 46 (estatuto -> asign .)
    MEAN            reduce using rule 46 (estatuto -> asign .)
    MODE            reduce using rule 46 (estatuto -> asign .)
    MEDIAN          reduce using rule 46 (estatuto -> asign .)
    VARIANCE        reduce using rule 46 (estatuto -> asign .)
    MAX             reduce using rule 46 (estatuto -> asign .)
    MIN             reduce using rule 46 (estatuto -> asign .)
    STADDES         reduce using rule 46 (estatuto -> asign .)
    BOXPLOT         reduce using rule 46 (estatuto -> asign .)
    LINREG          reduce using rule 46 (estatuto -> asign .)
    RIGHT_CUR_BRACKET reduce using rule 46 (estatuto -> asign .)


state 72

    (47) estatuto -> llamada .

    ID              reduce using rule 47 (estatuto -> llamada .)
    READ            reduce using rule 47 (estatuto -> llamada .)
    WRITE           reduce using rule 47 (estatuto -> llamada .)
    IF              reduce using rule 47 (estatuto -> llamada .)
    WHILE           reduce using rule 47 (estatuto -> llamada .)
    FOR             reduce using rule 47 (estatuto -> llamada .)
    RETURNS         reduce using rule 47 (estatuto -> llamada .)
    READ_FILE       reduce using rule 47 (estatuto -> llamada .)
    MEAN            reduce using rule 47 (estatuto -> llamada .)
    MODE            reduce using rule 47 (estatuto -> llamada .)
    MEDIAN          reduce using rule 47 (estatuto -> llamada .)
    VARIANCE        reduce using rule 47 (estatuto -> llamada .)
    MAX             reduce using rule 47 (estatuto -> llamada .)
    MIN             reduce using rule 47 (estatuto -> llamada .)
    STADDES         reduce using rule 47 (estatuto -> llamada .)
    BOXPLOT         reduce using rule 47 (estatuto -> llamada .)
    LINREG          reduce using rule 47 (estatuto -> llamada .)
    RIGHT_CUR_BRACKET reduce using rule 47 (estatuto -> llamada .)


state 73

    (48) estatuto -> lee .

    ID              reduce using rule 48 (estatuto -> lee .)
    READ            reduce using rule 48 (estatuto -> lee .)
    WRITE           reduce using rule 48 (estatuto -> lee .)
    IF              reduce using rule 48 (estatuto -> lee .)
    WHILE           reduce using rule 48 (estatuto -> lee .)
    FOR             reduce using rule 48 (estatuto -> lee .)
    RETURNS         reduce using rule 48 (estatuto -> lee .)
    READ_FILE       reduce using rule 48 (estatuto -> lee .)
    MEAN            reduce using rule 48 (estatuto -> lee .)
    MODE            reduce using rule 48 (estatuto -> lee .)
    MEDIAN          reduce using rule 48 (estatuto -> lee .)
    VARIANCE        reduce using rule 48 (estatuto -> lee .)
    MAX             reduce using rule 48 (estatuto -> lee .)
    MIN             reduce using rule 48 (estatuto -> lee .)
    STADDES         reduce using rule 48 (estatuto -> lee .)
    BOXPLOT         reduce using rule 48 (estatuto -> lee .)
    LINREG          reduce using rule 48 (estatuto -> lee .)
    RIGHT_CUR_BRACKET reduce using rule 48 (estatuto -> lee .)


state 74

    (49) estatuto -> escribe .

    ID              reduce using rule 49 (estatuto -> escribe .)
    READ            reduce using rule 49 (estatuto -> escribe .)
    WRITE           reduce using rule 49 (estatuto -> escribe .)
    IF              reduce using rule 49 (estatuto -> escribe .)
    WHILE           reduce using rule 49 (estatuto -> escribe .)
    FOR             reduce using rule 49 (estatuto -> escribe .)
    RETURNS         reduce using rule 49 (estatuto -> escribe .)
    READ_FILE       reduce using rule 49 (estatuto -> escribe .)
    MEAN            reduce using rule 49 (estatuto -> escribe .)
    MODE            reduce using rule 49 (estatuto -> escribe .)
    MEDIAN          reduce using rule 49 (estatuto -> escribe .)
    VARIANCE        reduce using rule 49 (estatuto -> escribe .)
    MAX             reduce using rule 49 (estatuto -> escribe .)
    MIN             reduce using rule 49 (estatuto -> escribe .)
    STADDES         reduce using rule 49 (estatuto -> escribe .)
    BOXPLOT         reduce using rule 49 (estatuto -> escribe .)
    LINREG          reduce using rule 49 (estatuto -> escribe .)
    RIGHT_CUR_BRACKET reduce using rule 49 (estatuto -> escribe .)


state 75

    (50) estatuto -> condicion .

    ID              reduce using rule 50 (estatuto -> condicion .)
    READ            reduce using rule 50 (estatuto -> condicion .)
    WRITE           reduce using rule 50 (estatuto -> condicion .)
    IF              reduce using rule 50 (estatuto -> condicion .)
    WHILE           reduce using rule 50 (estatuto -> condicion .)
    FOR             reduce using rule 50 (estatuto -> condicion .)
    RETURNS         reduce using rule 50 (estatuto -> condicion .)
    READ_FILE       reduce using rule 50 (estatuto -> condicion .)
    MEAN            reduce using rule 50 (estatuto -> condicion .)
    MODE            reduce using rule 50 (estatuto -> condicion .)
    MEDIAN          reduce using rule 50 (estatuto -> condicion .)
    VARIANCE        reduce using rule 50 (estatuto -> condicion .)
    MAX             reduce using rule 50 (estatuto -> condicion .)
    MIN             reduce using rule 50 (estatuto -> condicion .)
    STADDES         reduce using rule 50 (estatuto -> condicion .)
    BOXPLOT         reduce using rule 50 (estatuto -> condicion .)
    LINREG          reduce using rule 50 (estatuto -> condicion .)
    RIGHT_CUR_BRACKET reduce using rule 50 (estatuto -> condicion .)


state 76

    (51) estatuto -> ciclow .

    ID              reduce using rule 51 (estatuto -> ciclow .)
    READ            reduce using rule 51 (estatuto -> ciclow .)
    WRITE           reduce using rule 51 (estatuto -> ciclow .)
    IF              reduce using rule 51 (estatuto -> ciclow .)
    WHILE           reduce using rule 51 (estatuto -> ciclow .)
    FOR             reduce using rule 51 (estatuto -> ciclow .)
    RETURNS         reduce using rule 51 (estatuto -> ciclow .)
    READ_FILE       reduce using rule 51 (estatuto -> ciclow .)
    MEAN            reduce using rule 51 (estatuto -> ciclow .)
    MODE            reduce using rule 51 (estatuto -> ciclow .)
    MEDIAN          reduce using rule 51 (estatuto -> ciclow .)
    VARIANCE        reduce using rule 51 (estatuto -> ciclow .)
    MAX             reduce using rule 51 (estatuto -> ciclow .)
    MIN             reduce using rule 51 (estatuto -> ciclow .)
    STADDES         reduce using rule 51 (estatuto -> ciclow .)
    BOXPLOT         reduce using rule 51 (estatuto -> ciclow .)
    LINREG          reduce using rule 51 (estatuto -> ciclow .)
    RIGHT_CUR_BRACKET reduce using rule 51 (estatuto -> ciclow .)


state 77

    (52) estatuto -> ciclof .

    ID              reduce using rule 52 (estatuto -> ciclof .)
    READ            reduce using rule 52 (estatuto -> ciclof .)
    WRITE           reduce using rule 52 (estatuto -> ciclof .)
    IF              reduce using rule 52 (estatuto -> ciclof .)
    WHILE           reduce using rule 52 (estatuto -> ciclof .)
    FOR             reduce using rule 52 (estatuto -> ciclof .)
    RETURNS         reduce using rule 52 (estatuto -> ciclof .)
    READ_FILE       reduce using rule 52 (estatuto -> ciclof .)
    MEAN            reduce using rule 52 (estatuto -> ciclof .)
    MODE            reduce using rule 52 (estatuto -> ciclof .)
    MEDIAN          reduce using rule 52 (estatuto -> ciclof .)
    VARIANCE        reduce using rule 52 (estatuto -> ciclof .)
    MAX             reduce using rule 52 (estatuto -> ciclof .)
    MIN             reduce using rule 52 (estatuto -> ciclof .)
    STADDES         reduce using rule 52 (estatuto -> ciclof .)
    BOXPLOT         reduce using rule 52 (estatuto -> ciclof .)
    LINREG          reduce using rule 52 (estatuto -> ciclof .)
    RIGHT_CUR_BRACKET reduce using rule 52 (estatuto -> ciclof .)


state 78

    (53) estatuto -> funcesp .

    ID              reduce using rule 53 (estatuto -> funcesp .)
    READ            reduce using rule 53 (estatuto -> funcesp .)
    WRITE           reduce using rule 53 (estatuto -> funcesp .)
    IF              reduce using rule 53 (estatuto -> funcesp .)
    WHILE           reduce using rule 53 (estatuto -> funcesp .)
    FOR             reduce using rule 53 (estatuto -> funcesp .)
    RETURNS         reduce using rule 53 (estatuto -> funcesp .)
    READ_FILE       reduce using rule 53 (estatuto -> funcesp .)
    MEAN            reduce using rule 53 (estatuto -> funcesp .)
    MODE            reduce using rule 53 (estatuto -> funcesp .)
    MEDIAN          reduce using rule 53 (estatuto -> funcesp .)
    VARIANCE        reduce using rule 53 (estatuto -> funcesp .)
    MAX             reduce using rule 53 (estatuto -> funcesp .)
    MIN             reduce using rule 53 (estatuto -> funcesp .)
    STADDES         reduce using rule 53 (estatuto -> funcesp .)
    BOXPLOT         reduce using rule 53 (estatuto -> funcesp .)
    LINREG          reduce using rule 53 (estatuto -> funcesp .)
    RIGHT_CUR_BRACKET reduce using rule 53 (estatuto -> funcesp .)


state 79

    (54) estatuto -> return .

    ID              reduce using rule 54 (estatuto -> return .)
    READ            reduce using rule 54 (estatuto -> return .)
    WRITE           reduce using rule 54 (estatuto -> return .)
    IF              reduce using rule 54 (estatuto -> return .)
    WHILE           reduce using rule 54 (estatuto -> return .)
    FOR             reduce using rule 54 (estatuto -> return .)
    RETURNS         reduce using rule 54 (estatuto -> return .)
    READ_FILE       reduce using rule 54 (estatuto -> return .)
    MEAN            reduce using rule 54 (estatuto -> return .)
    MODE            reduce using rule 54 (estatuto -> return .)
    MEDIAN          reduce using rule 54 (estatuto -> return .)
    VARIANCE        reduce using rule 54 (estatuto -> return .)
    MAX             reduce using rule 54 (estatuto -> return .)
    MIN             reduce using rule 54 (estatuto -> return .)
    STADDES         reduce using rule 54 (estatuto -> return .)
    BOXPLOT         reduce using rule 54 (estatuto -> return .)
    LINREG          reduce using rule 54 (estatuto -> return .)
    RIGHT_CUR_BRACKET reduce using rule 54 (estatuto -> return .)


state 80

    (55) estatuto -> copy .
    (105) funcesp -> copy .

  ! reduce/reduce conflict for ID resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for READ resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for WRITE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for IF resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for WHILE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for FOR resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for RETURNS resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for READ_FILE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MEAN resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MODE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MEDIAN resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for VARIANCE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MAX resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MIN resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for STADDES resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for BOXPLOT resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for LINREG resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for RIGHT_CUR_BRACKET resolved using rule 55 (estatuto -> copy .)
    ID              reduce using rule 55 (estatuto -> copy .)
    READ            reduce using rule 55 (estatuto -> copy .)
    WRITE           reduce using rule 55 (estatuto -> copy .)
    IF              reduce using rule 55 (estatuto -> copy .)
    WHILE           reduce using rule 55 (estatuto -> copy .)
    FOR             reduce using rule 55 (estatuto -> copy .)
    RETURNS         reduce using rule 55 (estatuto -> copy .)
    READ_FILE       reduce using rule 55 (estatuto -> copy .)
    MEAN            reduce using rule 55 (estatuto -> copy .)
    MODE            reduce using rule 55 (estatuto -> copy .)
    MEDIAN          reduce using rule 55 (estatuto -> copy .)
    VARIANCE        reduce using rule 55 (estatuto -> copy .)
    MAX             reduce using rule 55 (estatuto -> copy .)
    MIN             reduce using rule 55 (estatuto -> copy .)
    STADDES         reduce using rule 55 (estatuto -> copy .)
    BOXPLOT         reduce using rule 55 (estatuto -> copy .)
    LINREG          reduce using rule 55 (estatuto -> copy .)
    RIGHT_CUR_BRACKET reduce using rule 55 (estatuto -> copy .)

  ! ID              [ reduce using rule 105 (funcesp -> copy .) ]
  ! READ            [ reduce using rule 105 (funcesp -> copy .) ]
  ! WRITE           [ reduce using rule 105 (funcesp -> copy .) ]
  ! IF              [ reduce using rule 105 (funcesp -> copy .) ]
  ! WHILE           [ reduce using rule 105 (funcesp -> copy .) ]
  ! FOR             [ reduce using rule 105 (funcesp -> copy .) ]
  ! RETURNS         [ reduce using rule 105 (funcesp -> copy .) ]
  ! READ_FILE       [ reduce using rule 105 (funcesp -> copy .) ]
  ! MEAN            [ reduce using rule 105 (funcesp -> copy .) ]
  ! MODE            [ reduce using rule 105 (funcesp -> copy .) ]
  ! MEDIAN          [ reduce using rule 105 (funcesp -> copy .) ]
  ! VARIANCE        [ reduce using rule 105 (funcesp -> copy .) ]
  ! MAX             [ reduce using rule 105 (funcesp -> copy .) ]
  ! MIN             [ reduce using rule 105 (funcesp -> copy .) ]
  ! STADDES         [ reduce using rule 105 (funcesp -> copy .) ]
  ! BOXPLOT         [ reduce using rule 105 (funcesp -> copy .) ]
  ! LINREG          [ reduce using rule 105 (funcesp -> copy .) ]
  ! RIGHT_CUR_BRACKET [ reduce using rule 105 (funcesp -> copy .) ]


state 81

    (56) asign -> variable . ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON

    ASIGN           shift and go to state 117


state 82

    (21) llamada -> ID . pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (16) variable -> ID . pnSaveOperandos indexp
    (129) pnCheckFunc -> . empty
    (142) pnSaveOperandos -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 178 (empty -> .)
    ASIGN           reduce using rule 178 (empty -> .)

    pnCheckFunc                    shift and go to state 118
    pnSaveOperandos                shift and go to state 119
    empty                          shift and go to state 120

state 83

    (57) lee -> READ . LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121


state 84

    (58) escribe -> WRITE . LEFT_PARENT escribep RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 122


state 85

    (91) condicion -> IF . LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf

    LEFT_PARENT     shift and go to state 123


state 86

    (94) ciclow -> WHILE . pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (161) pnSaveWhile -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)

    pnSaveWhile                    shift and go to state 124
    empty                          shift and go to state 125

state 87

    (95) ciclof -> FOR . LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    LEFT_PARENT     shift and go to state 126


state 88

    (96) funcesp -> mean .

    ID              reduce using rule 96 (funcesp -> mean .)
    READ            reduce using rule 96 (funcesp -> mean .)
    WRITE           reduce using rule 96 (funcesp -> mean .)
    IF              reduce using rule 96 (funcesp -> mean .)
    WHILE           reduce using rule 96 (funcesp -> mean .)
    FOR             reduce using rule 96 (funcesp -> mean .)
    RETURNS         reduce using rule 96 (funcesp -> mean .)
    READ_FILE       reduce using rule 96 (funcesp -> mean .)
    MEAN            reduce using rule 96 (funcesp -> mean .)
    MODE            reduce using rule 96 (funcesp -> mean .)
    MEDIAN          reduce using rule 96 (funcesp -> mean .)
    VARIANCE        reduce using rule 96 (funcesp -> mean .)
    MAX             reduce using rule 96 (funcesp -> mean .)
    MIN             reduce using rule 96 (funcesp -> mean .)
    STADDES         reduce using rule 96 (funcesp -> mean .)
    BOXPLOT         reduce using rule 96 (funcesp -> mean .)
    LINREG          reduce using rule 96 (funcesp -> mean .)
    RIGHT_CUR_BRACKET reduce using rule 96 (funcesp -> mean .)
    MULT            reduce using rule 96 (funcesp -> mean .)
    DIV             reduce using rule 96 (funcesp -> mean .)
    PLUS            reduce using rule 96 (funcesp -> mean .)
    MINUS           reduce using rule 96 (funcesp -> mean .)
    LESS_THAN       reduce using rule 96 (funcesp -> mean .)
    GREATER_THAN    reduce using rule 96 (funcesp -> mean .)
    EQUALS          reduce using rule 96 (funcesp -> mean .)
    NOTEQUALS       reduce using rule 96 (funcesp -> mean .)
    AND             reduce using rule 96 (funcesp -> mean .)
    OR              reduce using rule 96 (funcesp -> mean .)
    SEMICOLON       reduce using rule 96 (funcesp -> mean .)
    RIGHT_PARENT    reduce using rule 96 (funcesp -> mean .)
    COMMA           reduce using rule 96 (funcesp -> mean .)
    RIGHT_SQR_BRACKET reduce using rule 96 (funcesp -> mean .)


state 89

    (97) funcesp -> mode .

    ID              reduce using rule 97 (funcesp -> mode .)
    READ            reduce using rule 97 (funcesp -> mode .)
    WRITE           reduce using rule 97 (funcesp -> mode .)
    IF              reduce using rule 97 (funcesp -> mode .)
    WHILE           reduce using rule 97 (funcesp -> mode .)
    FOR             reduce using rule 97 (funcesp -> mode .)
    RETURNS         reduce using rule 97 (funcesp -> mode .)
    READ_FILE       reduce using rule 97 (funcesp -> mode .)
    MEAN            reduce using rule 97 (funcesp -> mode .)
    MODE            reduce using rule 97 (funcesp -> mode .)
    MEDIAN          reduce using rule 97 (funcesp -> mode .)
    VARIANCE        reduce using rule 97 (funcesp -> mode .)
    MAX             reduce using rule 97 (funcesp -> mode .)
    MIN             reduce using rule 97 (funcesp -> mode .)
    STADDES         reduce using rule 97 (funcesp -> mode .)
    BOXPLOT         reduce using rule 97 (funcesp -> mode .)
    LINREG          reduce using rule 97 (funcesp -> mode .)
    RIGHT_CUR_BRACKET reduce using rule 97 (funcesp -> mode .)
    MULT            reduce using rule 97 (funcesp -> mode .)
    DIV             reduce using rule 97 (funcesp -> mode .)
    PLUS            reduce using rule 97 (funcesp -> mode .)
    MINUS           reduce using rule 97 (funcesp -> mode .)
    LESS_THAN       reduce using rule 97 (funcesp -> mode .)
    GREATER_THAN    reduce using rule 97 (funcesp -> mode .)
    EQUALS          reduce using rule 97 (funcesp -> mode .)
    NOTEQUALS       reduce using rule 97 (funcesp -> mode .)
    AND             reduce using rule 97 (funcesp -> mode .)
    OR              reduce using rule 97 (funcesp -> mode .)
    SEMICOLON       reduce using rule 97 (funcesp -> mode .)
    RIGHT_PARENT    reduce using rule 97 (funcesp -> mode .)
    COMMA           reduce using rule 97 (funcesp -> mode .)
    RIGHT_SQR_BRACKET reduce using rule 97 (funcesp -> mode .)


state 90

    (98) funcesp -> median .

    ID              reduce using rule 98 (funcesp -> median .)
    READ            reduce using rule 98 (funcesp -> median .)
    WRITE           reduce using rule 98 (funcesp -> median .)
    IF              reduce using rule 98 (funcesp -> median .)
    WHILE           reduce using rule 98 (funcesp -> median .)
    FOR             reduce using rule 98 (funcesp -> median .)
    RETURNS         reduce using rule 98 (funcesp -> median .)
    READ_FILE       reduce using rule 98 (funcesp -> median .)
    MEAN            reduce using rule 98 (funcesp -> median .)
    MODE            reduce using rule 98 (funcesp -> median .)
    MEDIAN          reduce using rule 98 (funcesp -> median .)
    VARIANCE        reduce using rule 98 (funcesp -> median .)
    MAX             reduce using rule 98 (funcesp -> median .)
    MIN             reduce using rule 98 (funcesp -> median .)
    STADDES         reduce using rule 98 (funcesp -> median .)
    BOXPLOT         reduce using rule 98 (funcesp -> median .)
    LINREG          reduce using rule 98 (funcesp -> median .)
    RIGHT_CUR_BRACKET reduce using rule 98 (funcesp -> median .)
    MULT            reduce using rule 98 (funcesp -> median .)
    DIV             reduce using rule 98 (funcesp -> median .)
    PLUS            reduce using rule 98 (funcesp -> median .)
    MINUS           reduce using rule 98 (funcesp -> median .)
    LESS_THAN       reduce using rule 98 (funcesp -> median .)
    GREATER_THAN    reduce using rule 98 (funcesp -> median .)
    EQUALS          reduce using rule 98 (funcesp -> median .)
    NOTEQUALS       reduce using rule 98 (funcesp -> median .)
    AND             reduce using rule 98 (funcesp -> median .)
    OR              reduce using rule 98 (funcesp -> median .)
    SEMICOLON       reduce using rule 98 (funcesp -> median .)
    RIGHT_PARENT    reduce using rule 98 (funcesp -> median .)
    COMMA           reduce using rule 98 (funcesp -> median .)
    RIGHT_SQR_BRACKET reduce using rule 98 (funcesp -> median .)


state 91

    (99) funcesp -> variance .

    ID              reduce using rule 99 (funcesp -> variance .)
    READ            reduce using rule 99 (funcesp -> variance .)
    WRITE           reduce using rule 99 (funcesp -> variance .)
    IF              reduce using rule 99 (funcesp -> variance .)
    WHILE           reduce using rule 99 (funcesp -> variance .)
    FOR             reduce using rule 99 (funcesp -> variance .)
    RETURNS         reduce using rule 99 (funcesp -> variance .)
    READ_FILE       reduce using rule 99 (funcesp -> variance .)
    MEAN            reduce using rule 99 (funcesp -> variance .)
    MODE            reduce using rule 99 (funcesp -> variance .)
    MEDIAN          reduce using rule 99 (funcesp -> variance .)
    VARIANCE        reduce using rule 99 (funcesp -> variance .)
    MAX             reduce using rule 99 (funcesp -> variance .)
    MIN             reduce using rule 99 (funcesp -> variance .)
    STADDES         reduce using rule 99 (funcesp -> variance .)
    BOXPLOT         reduce using rule 99 (funcesp -> variance .)
    LINREG          reduce using rule 99 (funcesp -> variance .)
    RIGHT_CUR_BRACKET reduce using rule 99 (funcesp -> variance .)
    MULT            reduce using rule 99 (funcesp -> variance .)
    DIV             reduce using rule 99 (funcesp -> variance .)
    PLUS            reduce using rule 99 (funcesp -> variance .)
    MINUS           reduce using rule 99 (funcesp -> variance .)
    LESS_THAN       reduce using rule 99 (funcesp -> variance .)
    GREATER_THAN    reduce using rule 99 (funcesp -> variance .)
    EQUALS          reduce using rule 99 (funcesp -> variance .)
    NOTEQUALS       reduce using rule 99 (funcesp -> variance .)
    AND             reduce using rule 99 (funcesp -> variance .)
    OR              reduce using rule 99 (funcesp -> variance .)
    SEMICOLON       reduce using rule 99 (funcesp -> variance .)
    RIGHT_PARENT    reduce using rule 99 (funcesp -> variance .)
    COMMA           reduce using rule 99 (funcesp -> variance .)
    RIGHT_SQR_BRACKET reduce using rule 99 (funcesp -> variance .)


state 92

    (100) funcesp -> max .

    ID              reduce using rule 100 (funcesp -> max .)
    READ            reduce using rule 100 (funcesp -> max .)
    WRITE           reduce using rule 100 (funcesp -> max .)
    IF              reduce using rule 100 (funcesp -> max .)
    WHILE           reduce using rule 100 (funcesp -> max .)
    FOR             reduce using rule 100 (funcesp -> max .)
    RETURNS         reduce using rule 100 (funcesp -> max .)
    READ_FILE       reduce using rule 100 (funcesp -> max .)
    MEAN            reduce using rule 100 (funcesp -> max .)
    MODE            reduce using rule 100 (funcesp -> max .)
    MEDIAN          reduce using rule 100 (funcesp -> max .)
    VARIANCE        reduce using rule 100 (funcesp -> max .)
    MAX             reduce using rule 100 (funcesp -> max .)
    MIN             reduce using rule 100 (funcesp -> max .)
    STADDES         reduce using rule 100 (funcesp -> max .)
    BOXPLOT         reduce using rule 100 (funcesp -> max .)
    LINREG          reduce using rule 100 (funcesp -> max .)
    RIGHT_CUR_BRACKET reduce using rule 100 (funcesp -> max .)
    MULT            reduce using rule 100 (funcesp -> max .)
    DIV             reduce using rule 100 (funcesp -> max .)
    PLUS            reduce using rule 100 (funcesp -> max .)
    MINUS           reduce using rule 100 (funcesp -> max .)
    LESS_THAN       reduce using rule 100 (funcesp -> max .)
    GREATER_THAN    reduce using rule 100 (funcesp -> max .)
    EQUALS          reduce using rule 100 (funcesp -> max .)
    NOTEQUALS       reduce using rule 100 (funcesp -> max .)
    AND             reduce using rule 100 (funcesp -> max .)
    OR              reduce using rule 100 (funcesp -> max .)
    SEMICOLON       reduce using rule 100 (funcesp -> max .)
    RIGHT_PARENT    reduce using rule 100 (funcesp -> max .)
    COMMA           reduce using rule 100 (funcesp -> max .)
    RIGHT_SQR_BRACKET reduce using rule 100 (funcesp -> max .)


state 93

    (101) funcesp -> min .

    ID              reduce using rule 101 (funcesp -> min .)
    READ            reduce using rule 101 (funcesp -> min .)
    WRITE           reduce using rule 101 (funcesp -> min .)
    IF              reduce using rule 101 (funcesp -> min .)
    WHILE           reduce using rule 101 (funcesp -> min .)
    FOR             reduce using rule 101 (funcesp -> min .)
    RETURNS         reduce using rule 101 (funcesp -> min .)
    READ_FILE       reduce using rule 101 (funcesp -> min .)
    MEAN            reduce using rule 101 (funcesp -> min .)
    MODE            reduce using rule 101 (funcesp -> min .)
    MEDIAN          reduce using rule 101 (funcesp -> min .)
    VARIANCE        reduce using rule 101 (funcesp -> min .)
    MAX             reduce using rule 101 (funcesp -> min .)
    MIN             reduce using rule 101 (funcesp -> min .)
    STADDES         reduce using rule 101 (funcesp -> min .)
    BOXPLOT         reduce using rule 101 (funcesp -> min .)
    LINREG          reduce using rule 101 (funcesp -> min .)
    RIGHT_CUR_BRACKET reduce using rule 101 (funcesp -> min .)
    MULT            reduce using rule 101 (funcesp -> min .)
    DIV             reduce using rule 101 (funcesp -> min .)
    PLUS            reduce using rule 101 (funcesp -> min .)
    MINUS           reduce using rule 101 (funcesp -> min .)
    LESS_THAN       reduce using rule 101 (funcesp -> min .)
    GREATER_THAN    reduce using rule 101 (funcesp -> min .)
    EQUALS          reduce using rule 101 (funcesp -> min .)
    NOTEQUALS       reduce using rule 101 (funcesp -> min .)
    AND             reduce using rule 101 (funcesp -> min .)
    OR              reduce using rule 101 (funcesp -> min .)
    SEMICOLON       reduce using rule 101 (funcesp -> min .)
    RIGHT_PARENT    reduce using rule 101 (funcesp -> min .)
    COMMA           reduce using rule 101 (funcesp -> min .)
    RIGHT_SQR_BRACKET reduce using rule 101 (funcesp -> min .)


state 94

    (102) funcesp -> staddes .

    ID              reduce using rule 102 (funcesp -> staddes .)
    READ            reduce using rule 102 (funcesp -> staddes .)
    WRITE           reduce using rule 102 (funcesp -> staddes .)
    IF              reduce using rule 102 (funcesp -> staddes .)
    WHILE           reduce using rule 102 (funcesp -> staddes .)
    FOR             reduce using rule 102 (funcesp -> staddes .)
    RETURNS         reduce using rule 102 (funcesp -> staddes .)
    READ_FILE       reduce using rule 102 (funcesp -> staddes .)
    MEAN            reduce using rule 102 (funcesp -> staddes .)
    MODE            reduce using rule 102 (funcesp -> staddes .)
    MEDIAN          reduce using rule 102 (funcesp -> staddes .)
    VARIANCE        reduce using rule 102 (funcesp -> staddes .)
    MAX             reduce using rule 102 (funcesp -> staddes .)
    MIN             reduce using rule 102 (funcesp -> staddes .)
    STADDES         reduce using rule 102 (funcesp -> staddes .)
    BOXPLOT         reduce using rule 102 (funcesp -> staddes .)
    LINREG          reduce using rule 102 (funcesp -> staddes .)
    RIGHT_CUR_BRACKET reduce using rule 102 (funcesp -> staddes .)
    MULT            reduce using rule 102 (funcesp -> staddes .)
    DIV             reduce using rule 102 (funcesp -> staddes .)
    PLUS            reduce using rule 102 (funcesp -> staddes .)
    MINUS           reduce using rule 102 (funcesp -> staddes .)
    LESS_THAN       reduce using rule 102 (funcesp -> staddes .)
    GREATER_THAN    reduce using rule 102 (funcesp -> staddes .)
    EQUALS          reduce using rule 102 (funcesp -> staddes .)
    NOTEQUALS       reduce using rule 102 (funcesp -> staddes .)
    AND             reduce using rule 102 (funcesp -> staddes .)
    OR              reduce using rule 102 (funcesp -> staddes .)
    SEMICOLON       reduce using rule 102 (funcesp -> staddes .)
    RIGHT_PARENT    reduce using rule 102 (funcesp -> staddes .)
    COMMA           reduce using rule 102 (funcesp -> staddes .)
    RIGHT_SQR_BRACKET reduce using rule 102 (funcesp -> staddes .)


state 95

    (103) funcesp -> boxplot .

    ID              reduce using rule 103 (funcesp -> boxplot .)
    READ            reduce using rule 103 (funcesp -> boxplot .)
    WRITE           reduce using rule 103 (funcesp -> boxplot .)
    IF              reduce using rule 103 (funcesp -> boxplot .)
    WHILE           reduce using rule 103 (funcesp -> boxplot .)
    FOR             reduce using rule 103 (funcesp -> boxplot .)
    RETURNS         reduce using rule 103 (funcesp -> boxplot .)
    READ_FILE       reduce using rule 103 (funcesp -> boxplot .)
    MEAN            reduce using rule 103 (funcesp -> boxplot .)
    MODE            reduce using rule 103 (funcesp -> boxplot .)
    MEDIAN          reduce using rule 103 (funcesp -> boxplot .)
    VARIANCE        reduce using rule 103 (funcesp -> boxplot .)
    MAX             reduce using rule 103 (funcesp -> boxplot .)
    MIN             reduce using rule 103 (funcesp -> boxplot .)
    STADDES         reduce using rule 103 (funcesp -> boxplot .)
    BOXPLOT         reduce using rule 103 (funcesp -> boxplot .)
    LINREG          reduce using rule 103 (funcesp -> boxplot .)
    RIGHT_CUR_BRACKET reduce using rule 103 (funcesp -> boxplot .)
    MULT            reduce using rule 103 (funcesp -> boxplot .)
    DIV             reduce using rule 103 (funcesp -> boxplot .)
    PLUS            reduce using rule 103 (funcesp -> boxplot .)
    MINUS           reduce using rule 103 (funcesp -> boxplot .)
    LESS_THAN       reduce using rule 103 (funcesp -> boxplot .)
    GREATER_THAN    reduce using rule 103 (funcesp -> boxplot .)
    EQUALS          reduce using rule 103 (funcesp -> boxplot .)
    NOTEQUALS       reduce using rule 103 (funcesp -> boxplot .)
    AND             reduce using rule 103 (funcesp -> boxplot .)
    OR              reduce using rule 103 (funcesp -> boxplot .)
    SEMICOLON       reduce using rule 103 (funcesp -> boxplot .)
    RIGHT_PARENT    reduce using rule 103 (funcesp -> boxplot .)
    COMMA           reduce using rule 103 (funcesp -> boxplot .)
    RIGHT_SQR_BRACKET reduce using rule 103 (funcesp -> boxplot .)


state 96

    (104) funcesp -> linreg .

    ID              reduce using rule 104 (funcesp -> linreg .)
    READ            reduce using rule 104 (funcesp -> linreg .)
    WRITE           reduce using rule 104 (funcesp -> linreg .)
    IF              reduce using rule 104 (funcesp -> linreg .)
    WHILE           reduce using rule 104 (funcesp -> linreg .)
    FOR             reduce using rule 104 (funcesp -> linreg .)
    RETURNS         reduce using rule 104 (funcesp -> linreg .)
    READ_FILE       reduce using rule 104 (funcesp -> linreg .)
    MEAN            reduce using rule 104 (funcesp -> linreg .)
    MODE            reduce using rule 104 (funcesp -> linreg .)
    MEDIAN          reduce using rule 104 (funcesp -> linreg .)
    VARIANCE        reduce using rule 104 (funcesp -> linreg .)
    MAX             reduce using rule 104 (funcesp -> linreg .)
    MIN             reduce using rule 104 (funcesp -> linreg .)
    STADDES         reduce using rule 104 (funcesp -> linreg .)
    BOXPLOT         reduce using rule 104 (funcesp -> linreg .)
    LINREG          reduce using rule 104 (funcesp -> linreg .)
    RIGHT_CUR_BRACKET reduce using rule 104 (funcesp -> linreg .)
    MULT            reduce using rule 104 (funcesp -> linreg .)
    DIV             reduce using rule 104 (funcesp -> linreg .)
    PLUS            reduce using rule 104 (funcesp -> linreg .)
    MINUS           reduce using rule 104 (funcesp -> linreg .)
    LESS_THAN       reduce using rule 104 (funcesp -> linreg .)
    GREATER_THAN    reduce using rule 104 (funcesp -> linreg .)
    EQUALS          reduce using rule 104 (funcesp -> linreg .)
    NOTEQUALS       reduce using rule 104 (funcesp -> linreg .)
    AND             reduce using rule 104 (funcesp -> linreg .)
    OR              reduce using rule 104 (funcesp -> linreg .)
    SEMICOLON       reduce using rule 104 (funcesp -> linreg .)
    RIGHT_PARENT    reduce using rule 104 (funcesp -> linreg .)
    COMMA           reduce using rule 104 (funcesp -> linreg .)
    RIGHT_SQR_BRACKET reduce using rule 104 (funcesp -> linreg .)


state 97

    (61) return -> RETURNS . exp pnCuadRet SEMICOLON
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 132
    CTEI            shift and go to state 133
    CTEF            shift and go to state 134
    CTEC            shift and go to state 135
    ID              shift and go to state 139
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107
    READ_FILE       shift and go to state 98

    exp                            shift and go to state 127
    exprel                         shift and go to state 128
    e                              shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    variable                       shift and go to state 136
    llamada                        shift and go to state 137
    funcesp                        shift and go to state 138
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96
    copy                           shift and go to state 140

state 98

    (14) copy -> READ_FILE . LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 141


state 99

    (106) mean -> MEAN . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 142


state 100

    (107) mode -> MODE . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 143


state 101

    (108) median -> MEDIAN . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 144


state 102

    (109) variance -> VARIANCE . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 145


state 103

    (110) max -> MAX . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 146


state 104

    (111) min -> MIN . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 147


state 105

    (112) staddes -> STADDES . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 148


state 106

    (113) boxplot -> BOXPLOT . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 149


state 107

    (114) linreg -> LINREG . LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 150


state 108

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar . pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (120) pnCrearListaParam -> . empty
    (178) empty -> .

    DATAFRAME       reduce using rule 178 (empty -> .)
    INT             reduce using rule 178 (empty -> .)
    FLOAT           reduce using rule 178 (empty -> .)
    CHAR            reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCrearListaParam              shift and go to state 151
    empty                          shift and go to state 152

state 109

    (33) idp -> ID pnCheckNameTablaVar pnArrAddDim idpp .

    SEMICOLON       reduce using rule 33 (idp -> ID pnCheckNameTablaVar pnArrAddDim idpp .)


state 110

    (34) idpp -> COMMA . ID pnCheckNameTablaVar pnArrAddDim idpp

    ID              shift and go to state 153


state 111

    (35) idpp -> empty .

    SEMICOLON       reduce using rule 35 (idpp -> empty .)


state 112

    (29) vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp . RIGHT_SQR_BRACKET pnArrCuadriplificar

    RIGHT_SQR_BRACKET shift and go to state 154


state 113

    (31) vpp -> COMMA . CTEI pnArrSaveLim1

    CTEI            shift and go to state 155


state 114

    (32) vpp -> empty .

    RIGHT_SQR_BRACKET reduce using rule 32 (vpp -> empty .)


state 115

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET . pnEndScript
    (128) pnEndScript -> . empty
    (178) empty -> .

    $end            reduce using rule 178 (empty -> .)

    pnEndScript                    shift and go to state 156
    empty                          shift and go to state 157

state 116

    (7) estatutop -> estatuto estatutop .

    RIGHT_CUR_BRACKET reduce using rule 7 (estatutop -> estatuto estatutop .)


state 117

    (56) asign -> variable ASIGN . pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (152) pnSaveOperadorAsign -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    CTEI            reduce using rule 178 (empty -> .)
    CTEF            reduce using rule 178 (empty -> .)
    CTEC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)

    pnSaveOperadorAsign            shift and go to state 158
    empty                          shift and go to state 159

state 118

    (21) llamada -> ID pnCheckFunc . LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue

    LEFT_PARENT     shift and go to state 160


state 119

    (16) variable -> ID pnSaveOperandos . indexp
    (17) indexp -> . LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop
    (18) indexp -> . empty
    (178) empty -> .

    LEFT_SQR_BRACKET shift and go to state 162
    ASIGN           reduce using rule 178 (empty -> .)
    MULT            reduce using rule 178 (empty -> .)
    DIV             reduce using rule 178 (empty -> .)
    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    indexp                         shift and go to state 161
    empty                          shift and go to state 163

state 120

    (129) pnCheckFunc -> empty .
    (142) pnSaveOperandos -> empty .

    LEFT_PARENT     reduce using rule 129 (pnCheckFunc -> empty .)
    LEFT_SQR_BRACKET reduce using rule 142 (pnSaveOperandos -> empty .)
    ASIGN           reduce using rule 142 (pnSaveOperandos -> empty .)


state 121

    (57) lee -> READ LEFT_PARENT . variable pnCuadLee RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 165

    variable                       shift and go to state 164

state 122

    (58) escribe -> WRITE LEFT_PARENT . escribep RIGHT_PARENT SEMICOLON
    (59) escribep -> . exp pnCuadEscribe
    (60) escribep -> . LETRERO pnCuadEscribe
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LETRERO         shift and go to state 168
    LEFT_PARENT     shift and go to state 132
    CTEI            shift and go to state 133
    CTEF            shift and go to state 134
    CTEC            shift and go to state 135
    ID              shift and go to state 139
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107
    READ_FILE       shift and go to state 98

    escribep                       shift and go to state 166
    exp                            shift and go to state 167
    exprel                         shift and go to state 128
    e                              shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    variable                       shift and go to state 136
    llamada                        shift and go to state 137
    funcesp                        shift and go to state 138
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96
    copy                           shift and go to state 140

state 123

    (91) condicion -> IF LEFT_PARENT . exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 132
    CTEI            shift and go to state 133
    CTEF            shift and go to state 134
    CTEC            shift and go to state 135
    ID              shift and go to state 139
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107
    READ_FILE       shift and go to state 98

    exp                            shift and go to state 169
    exprel                         shift and go to state 128
    e                              shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    variable                       shift and go to state 136
    llamada                        shift and go to state 137
    funcesp                        shift and go to state 138
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96
    copy                           shift and go to state 140

state 124

    (94) ciclow -> WHILE pnSaveWhile . LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile

    LEFT_PARENT     shift and go to state 170


state 125

    (161) pnSaveWhile -> empty .

    LEFT_PARENT     reduce using rule 161 (pnSaveWhile -> empty .)


state 126

    (95) ciclof -> FOR LEFT_PARENT . variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 165

    variable                       shift and go to state 171

state 127

    (61) return -> RETURNS exp . pnCuadRet SEMICOLON
    (136) pnCuadRet -> . empty
    (178) empty -> .

    SEMICOLON       reduce using rule 178 (empty -> .)

    pnCuadRet                      shift and go to state 172
    empty                          shift and go to state 173

state 128

    (62) exp -> exprel . pnCuadOplog logic
    (151) pnCuadOplog -> . empty
    (178) empty -> .

    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnCuadOplog                    shift and go to state 174
    empty                          shift and go to state 175

state 129

    (67) exprel -> e . pnCuadOpRelacional relacionalp
    (150) pnCuadOpRelacional -> . empty
    (178) empty -> .

    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnCuadOpRelacional             shift and go to state 176
    empty                          shift and go to state 177

state 130

    (74) e -> t . pnCuadPlMi tp
    (148) pnCuadPlMi -> . empty
    (178) empty -> .

    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnCuadPlMi                     shift and go to state 178
    empty                          shift and go to state 179

state 131

    (79) t -> f . pnCuadMuDi fp
    (149) pnCuadMuDi -> . empty
    (178) empty -> .

    MULT            reduce using rule 178 (empty -> .)
    DIV             reduce using rule 178 (empty -> .)
    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnCuadMuDi                     shift and go to state 180
    empty                          shift and go to state 181

state 132

    (84) f -> LEFT_PARENT . pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (140) pnSaveFondoFalso -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    CTEI            reduce using rule 178 (empty -> .)
    CTEF            reduce using rule 178 (empty -> .)
    CTEC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)

    pnSaveFondoFalso               shift and go to state 182
    empty                          shift and go to state 183

state 133

    (85) f -> CTEI . pnSaveCteI pnSaveOperandoConstante
    (137) pnSaveCteI -> . empty
    (178) empty -> .

    MULT            reduce using rule 178 (empty -> .)
    DIV             reduce using rule 178 (empty -> .)
    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnSaveCteI                     shift and go to state 184
    empty                          shift and go to state 185

state 134

    (86) f -> CTEF . pnSaveCteF pnSaveOperandoConstante
    (138) pnSaveCteF -> . empty
    (178) empty -> .

    MULT            reduce using rule 178 (empty -> .)
    DIV             reduce using rule 178 (empty -> .)
    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnSaveCteF                     shift and go to state 186
    empty                          shift and go to state 187

state 135

    (87) f -> CTEC . pnSaveCteC pnSaveOperandoConstante
    (139) pnSaveCteC -> . empty
    (178) empty -> .

    MULT            reduce using rule 178 (empty -> .)
    DIV             reduce using rule 178 (empty -> .)
    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnSaveCteC                     shift and go to state 188
    empty                          shift and go to state 189

state 136

    (88) f -> variable .

    MULT            reduce using rule 88 (f -> variable .)
    DIV             reduce using rule 88 (f -> variable .)
    PLUS            reduce using rule 88 (f -> variable .)
    MINUS           reduce using rule 88 (f -> variable .)
    LESS_THAN       reduce using rule 88 (f -> variable .)
    GREATER_THAN    reduce using rule 88 (f -> variable .)
    EQUALS          reduce using rule 88 (f -> variable .)
    NOTEQUALS       reduce using rule 88 (f -> variable .)
    AND             reduce using rule 88 (f -> variable .)
    OR              reduce using rule 88 (f -> variable .)
    SEMICOLON       reduce using rule 88 (f -> variable .)
    RIGHT_PARENT    reduce using rule 88 (f -> variable .)
    COMMA           reduce using rule 88 (f -> variable .)
    RIGHT_SQR_BRACKET reduce using rule 88 (f -> variable .)


state 137

    (89) f -> llamada .

    MULT            reduce using rule 89 (f -> llamada .)
    DIV             reduce using rule 89 (f -> llamada .)
    PLUS            reduce using rule 89 (f -> llamada .)
    MINUS           reduce using rule 89 (f -> llamada .)
    LESS_THAN       reduce using rule 89 (f -> llamada .)
    GREATER_THAN    reduce using rule 89 (f -> llamada .)
    EQUALS          reduce using rule 89 (f -> llamada .)
    NOTEQUALS       reduce using rule 89 (f -> llamada .)
    AND             reduce using rule 89 (f -> llamada .)
    OR              reduce using rule 89 (f -> llamada .)
    SEMICOLON       reduce using rule 89 (f -> llamada .)
    RIGHT_PARENT    reduce using rule 89 (f -> llamada .)
    COMMA           reduce using rule 89 (f -> llamada .)
    RIGHT_SQR_BRACKET reduce using rule 89 (f -> llamada .)


state 138

    (90) f -> funcesp .

    MULT            reduce using rule 90 (f -> funcesp .)
    DIV             reduce using rule 90 (f -> funcesp .)
    PLUS            reduce using rule 90 (f -> funcesp .)
    MINUS           reduce using rule 90 (f -> funcesp .)
    LESS_THAN       reduce using rule 90 (f -> funcesp .)
    GREATER_THAN    reduce using rule 90 (f -> funcesp .)
    EQUALS          reduce using rule 90 (f -> funcesp .)
    NOTEQUALS       reduce using rule 90 (f -> funcesp .)
    AND             reduce using rule 90 (f -> funcesp .)
    OR              reduce using rule 90 (f -> funcesp .)
    SEMICOLON       reduce using rule 90 (f -> funcesp .)
    RIGHT_PARENT    reduce using rule 90 (f -> funcesp .)
    COMMA           reduce using rule 90 (f -> funcesp .)
    RIGHT_SQR_BRACKET reduce using rule 90 (f -> funcesp .)


state 139

    (16) variable -> ID . pnSaveOperandos indexp
    (21) llamada -> ID . pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (142) pnSaveOperandos -> . empty
    (129) pnCheckFunc -> . empty
    (178) empty -> .

    LEFT_SQR_BRACKET reduce using rule 178 (empty -> .)
    MULT            reduce using rule 178 (empty -> .)
    DIV             reduce using rule 178 (empty -> .)
    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)
    LEFT_PARENT     reduce using rule 178 (empty -> .)

    pnSaveOperandos                shift and go to state 119
    pnCheckFunc                    shift and go to state 118
    empty                          shift and go to state 190

state 140

    (105) funcesp -> copy .

    MULT            reduce using rule 105 (funcesp -> copy .)
    DIV             reduce using rule 105 (funcesp -> copy .)
    PLUS            reduce using rule 105 (funcesp -> copy .)
    MINUS           reduce using rule 105 (funcesp -> copy .)
    LESS_THAN       reduce using rule 105 (funcesp -> copy .)
    GREATER_THAN    reduce using rule 105 (funcesp -> copy .)
    EQUALS          reduce using rule 105 (funcesp -> copy .)
    NOTEQUALS       reduce using rule 105 (funcesp -> copy .)
    AND             reduce using rule 105 (funcesp -> copy .)
    OR              reduce using rule 105 (funcesp -> copy .)
    SEMICOLON       reduce using rule 105 (funcesp -> copy .)
    RIGHT_PARENT    reduce using rule 105 (funcesp -> copy .)
    COMMA           reduce using rule 105 (funcesp -> copy .)
    RIGHT_SQR_BRACKET reduce using rule 105 (funcesp -> copy .)


state 141

    (14) copy -> READ_FILE LEFT_PARENT . LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LETRERO         shift and go to state 191


state 142

    (106) mean -> MEAN LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 165

    variable                       shift and go to state 192

state 143

    (107) mode -> MODE LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 165

    variable                       shift and go to state 193

state 144

    (108) median -> MEDIAN LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 165

    variable                       shift and go to state 194

state 145

    (109) variance -> VARIANCE LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 165

    variable                       shift and go to state 195

state 146

    (110) max -> MAX LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 165

    variable                       shift and go to state 196

state 147

    (111) min -> MIN LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 165

    variable                       shift and go to state 197

state 148

    (112) staddes -> STADDES LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 165

    variable                       shift and go to state 198

state 149

    (113) boxplot -> BOXPLOT LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 165

    variable                       shift and go to state 199

state 150

    (114) linreg -> LINREG LEFT_PARENT . variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 165

    variable                       shift and go to state 200

state 151

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam . param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (39) param -> . paramlist
    (40) param -> . empty
    (41) paramlist -> . tipoparam ARROW ID pnAddParametersTablaVar paramlistp
    (178) empty -> .
    (42) tipoparam -> . tipo_simp
    (43) tipoparam -> . DATAFRAME pnSaveTypeVar
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    DATAFRAME       shift and go to state 206
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    param                          shift and go to state 201
    paramlist                      shift and go to state 202
    empty                          shift and go to state 203
    tipoparam                      shift and go to state 204
    tipo_simp                      shift and go to state 205

state 152

    (120) pnCrearListaParam -> empty .

    DATAFRAME       reduce using rule 120 (pnCrearListaParam -> empty .)
    INT             reduce using rule 120 (pnCrearListaParam -> empty .)
    FLOAT           reduce using rule 120 (pnCrearListaParam -> empty .)
    CHAR            reduce using rule 120 (pnCrearListaParam -> empty .)
    RIGHT_PARENT    reduce using rule 120 (pnCrearListaParam -> empty .)


state 153

    (34) idpp -> COMMA ID . pnCheckNameTablaVar pnArrAddDim idpp
    (122) pnCheckNameTablaVar -> . empty
    (178) empty -> .

    COMMA           reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)

    pnCheckNameTablaVar            shift and go to state 207
    empty                          shift and go to state 60

state 154

    (29) vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET . pnArrCuadriplificar
    (169) pnArrCuadriplificar -> . empty
    (178) empty -> .

    ARROW           reduce using rule 178 (empty -> .)

    pnArrCuadriplificar            shift and go to state 208
    empty                          shift and go to state 209

state 155

    (31) vpp -> COMMA CTEI . pnArrSaveLim1
    (168) pnArrSaveLim1 -> . empty
    (178) empty -> .

    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnArrSaveLim1                  shift and go to state 210
    empty                          shift and go to state 67

state 156

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript .

    $end            reduce using rule 6 (bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript .)


state 157

    (128) pnEndScript -> empty .

    $end            reduce using rule 128 (pnEndScript -> empty .)


state 158

    (56) asign -> variable ASIGN pnSaveOperadorAsign . exp pnCuadAsign SEMICOLON
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 132
    CTEI            shift and go to state 133
    CTEF            shift and go to state 134
    CTEC            shift and go to state 135
    ID              shift and go to state 139
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107
    READ_FILE       shift and go to state 98

    variable                       shift and go to state 136
    exp                            shift and go to state 211
    exprel                         shift and go to state 128
    e                              shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 137
    funcesp                        shift and go to state 138
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96
    copy                           shift and go to state 140

state 159

    (152) pnSaveOperadorAsign -> empty .

    LEFT_PARENT     reduce using rule 152 (pnSaveOperadorAsign -> empty .)
    CTEI            reduce using rule 152 (pnSaveOperadorAsign -> empty .)
    CTEF            reduce using rule 152 (pnSaveOperadorAsign -> empty .)
    CTEC            reduce using rule 152 (pnSaveOperadorAsign -> empty .)
    ID              reduce using rule 152 (pnSaveOperadorAsign -> empty .)
    MEAN            reduce using rule 152 (pnSaveOperadorAsign -> empty .)
    MODE            reduce using rule 152 (pnSaveOperadorAsign -> empty .)
    MEDIAN          reduce using rule 152 (pnSaveOperadorAsign -> empty .)
    VARIANCE        reduce using rule 152 (pnSaveOperadorAsign -> empty .)
    MAX             reduce using rule 152 (pnSaveOperadorAsign -> empty .)
    MIN             reduce using rule 152 (pnSaveOperadorAsign -> empty .)
    STADDES         reduce using rule 152 (pnSaveOperadorAsign -> empty .)
    BOXPLOT         reduce using rule 152 (pnSaveOperadorAsign -> empty .)
    LINREG          reduce using rule 152 (pnSaveOperadorAsign -> empty .)
    READ_FILE       reduce using rule 152 (pnSaveOperadorAsign -> empty .)


state 160

    (21) llamada -> ID pnCheckFunc LEFT_PARENT . pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (130) pnGenerateEra -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    CTEI            reduce using rule 178 (empty -> .)
    CTEF            reduce using rule 178 (empty -> .)
    CTEC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnGenerateEra                  shift and go to state 212
    empty                          shift and go to state 213

state 161

    (16) variable -> ID pnSaveOperandos indexp .

    ASIGN           reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    MULT            reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    DIV             reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    PLUS            reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    MINUS           reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    LESS_THAN       reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    GREATER_THAN    reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    EQUALS          reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    NOTEQUALS       reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    AND             reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    OR              reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    SEMICOLON       reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    RIGHT_PARENT    reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    COMMA           reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)
    RIGHT_SQR_BRACKET reduce using rule 16 (variable -> ID pnSaveOperandos indexp .)


state 162

    (17) indexp -> LEFT_SQR_BRACKET . pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop
    (171) pnArrIni -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    CTEI            reduce using rule 178 (empty -> .)
    CTEF            reduce using rule 178 (empty -> .)
    CTEC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)

    pnArrIni                       shift and go to state 214
    empty                          shift and go to state 215

state 163

    (18) indexp -> empty .

    ASIGN           reduce using rule 18 (indexp -> empty .)
    MULT            reduce using rule 18 (indexp -> empty .)
    DIV             reduce using rule 18 (indexp -> empty .)
    PLUS            reduce using rule 18 (indexp -> empty .)
    MINUS           reduce using rule 18 (indexp -> empty .)
    LESS_THAN       reduce using rule 18 (indexp -> empty .)
    GREATER_THAN    reduce using rule 18 (indexp -> empty .)
    EQUALS          reduce using rule 18 (indexp -> empty .)
    NOTEQUALS       reduce using rule 18 (indexp -> empty .)
    AND             reduce using rule 18 (indexp -> empty .)
    OR              reduce using rule 18 (indexp -> empty .)
    SEMICOLON       reduce using rule 18 (indexp -> empty .)
    RIGHT_PARENT    reduce using rule 18 (indexp -> empty .)
    COMMA           reduce using rule 18 (indexp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 18 (indexp -> empty .)


state 164

    (57) lee -> READ LEFT_PARENT variable . pnCuadLee RIGHT_PARENT SEMICOLON
    (155) pnCuadLee -> . empty
    (178) empty -> .

    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCuadLee                      shift and go to state 216
    empty                          shift and go to state 217

state 165

    (16) variable -> ID . pnSaveOperandos indexp
    (142) pnSaveOperandos -> . empty
    (178) empty -> .

    LEFT_SQR_BRACKET reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    ASIGN           reduce using rule 178 (empty -> .)

    pnSaveOperandos                shift and go to state 119
    empty                          shift and go to state 218

state 166

    (58) escribe -> WRITE LEFT_PARENT escribep . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 219


state 167

    (59) escribep -> exp . pnCuadEscribe
    (154) pnCuadEscribe -> . empty
    (178) empty -> .

    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCuadEscribe                  shift and go to state 220
    empty                          shift and go to state 221

state 168

    (60) escribep -> LETRERO . pnCuadEscribe
    (154) pnCuadEscribe -> . empty
    (178) empty -> .

    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCuadEscribe                  shift and go to state 222
    empty                          shift and go to state 221

state 169

    (91) condicion -> IF LEFT_PARENT exp . pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (158) pnCheckBoolIf -> . empty
    (178) empty -> .

    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCheckBoolIf                  shift and go to state 223
    empty                          shift and go to state 224

state 170

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT . exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 132
    CTEI            shift and go to state 133
    CTEF            shift and go to state 134
    CTEC            shift and go to state 135
    ID              shift and go to state 139
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107
    READ_FILE       shift and go to state 98

    exp                            shift and go to state 225
    exprel                         shift and go to state 128
    e                              shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    variable                       shift and go to state 136
    llamada                        shift and go to state 137
    funcesp                        shift and go to state 138
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96
    copy                           shift and go to state 140

state 171

    (95) ciclof -> FOR LEFT_PARENT variable . pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (163) pnSaveForID -> . empty
    (178) empty -> .

    ASIGN           reduce using rule 178 (empty -> .)

    pnSaveForID                    shift and go to state 226
    empty                          shift and go to state 227

state 172

    (61) return -> RETURNS exp pnCuadRet . SEMICOLON

    SEMICOLON       shift and go to state 228


state 173

    (136) pnCuadRet -> empty .

    SEMICOLON       reduce using rule 136 (pnCuadRet -> empty .)


state 174

    (62) exp -> exprel pnCuadOplog . logic
    (63) logic -> . logicsig exprel pnCuadOplog logic
    (64) logic -> . empty
    (65) logicsig -> . AND pnSaveOperadorLog
    (66) logicsig -> . OR pnSaveOperadorLog
    (178) empty -> .

    AND             shift and go to state 232
    OR              shift and go to state 233
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    logic                          shift and go to state 229
    logicsig                       shift and go to state 230
    empty                          shift and go to state 231

state 175

    (151) pnCuadOplog -> empty .

    AND             reduce using rule 151 (pnCuadOplog -> empty .)
    OR              reduce using rule 151 (pnCuadOplog -> empty .)
    SEMICOLON       reduce using rule 151 (pnCuadOplog -> empty .)
    RIGHT_PARENT    reduce using rule 151 (pnCuadOplog -> empty .)
    COMMA           reduce using rule 151 (pnCuadOplog -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 151 (pnCuadOplog -> empty .)


state 176

    (67) exprel -> e pnCuadOpRelacional . relacionalp
    (68) relacionalp -> . relsig e pnCuadOpRelacional relacionalp
    (69) relacionalp -> . empty
    (70) relsig -> . LESS_THAN pnSaveOperadorRel
    (71) relsig -> . GREATER_THAN pnSaveOperadorRel
    (72) relsig -> . EQUALS pnSaveOperadorRel
    (73) relsig -> . NOTEQUALS pnSaveOperadorRel
    (178) empty -> .

    LESS_THAN       shift and go to state 237
    GREATER_THAN    shift and go to state 238
    EQUALS          shift and go to state 239
    NOTEQUALS       shift and go to state 240
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    relacionalp                    shift and go to state 234
    relsig                         shift and go to state 235
    empty                          shift and go to state 236

state 177

    (150) pnCuadOpRelacional -> empty .

    LESS_THAN       reduce using rule 150 (pnCuadOpRelacional -> empty .)
    GREATER_THAN    reduce using rule 150 (pnCuadOpRelacional -> empty .)
    EQUALS          reduce using rule 150 (pnCuadOpRelacional -> empty .)
    NOTEQUALS       reduce using rule 150 (pnCuadOpRelacional -> empty .)
    AND             reduce using rule 150 (pnCuadOpRelacional -> empty .)
    OR              reduce using rule 150 (pnCuadOpRelacional -> empty .)
    SEMICOLON       reduce using rule 150 (pnCuadOpRelacional -> empty .)
    RIGHT_PARENT    reduce using rule 150 (pnCuadOpRelacional -> empty .)
    COMMA           reduce using rule 150 (pnCuadOpRelacional -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 150 (pnCuadOpRelacional -> empty .)


state 178

    (74) e -> t pnCuadPlMi . tp
    (75) tp -> . tsig t pnCuadPlMi tp
    (76) tp -> . empty
    (77) tsig -> . PLUS pnSaveOperadorPlMi
    (78) tsig -> . MINUS pnSaveOperadorPlMi
    (178) empty -> .

    PLUS            shift and go to state 244
    MINUS           shift and go to state 245
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    tp                             shift and go to state 241
    tsig                           shift and go to state 242
    empty                          shift and go to state 243

state 179

    (148) pnCuadPlMi -> empty .

    PLUS            reduce using rule 148 (pnCuadPlMi -> empty .)
    MINUS           reduce using rule 148 (pnCuadPlMi -> empty .)
    LESS_THAN       reduce using rule 148 (pnCuadPlMi -> empty .)
    GREATER_THAN    reduce using rule 148 (pnCuadPlMi -> empty .)
    EQUALS          reduce using rule 148 (pnCuadPlMi -> empty .)
    NOTEQUALS       reduce using rule 148 (pnCuadPlMi -> empty .)
    AND             reduce using rule 148 (pnCuadPlMi -> empty .)
    OR              reduce using rule 148 (pnCuadPlMi -> empty .)
    SEMICOLON       reduce using rule 148 (pnCuadPlMi -> empty .)
    RIGHT_PARENT    reduce using rule 148 (pnCuadPlMi -> empty .)
    COMMA           reduce using rule 148 (pnCuadPlMi -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 148 (pnCuadPlMi -> empty .)


state 180

    (79) t -> f pnCuadMuDi . fp
    (80) fp -> . fsig f pnCuadMuDi fp
    (81) fp -> . empty
    (82) fsig -> . MULT pnSaveOperadorMuDi
    (83) fsig -> . DIV pnSaveOperadorMuDi
    (178) empty -> .

    MULT            shift and go to state 249
    DIV             shift and go to state 250
    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    fp                             shift and go to state 246
    fsig                           shift and go to state 247
    empty                          shift and go to state 248

state 181

    (149) pnCuadMuDi -> empty .

    MULT            reduce using rule 149 (pnCuadMuDi -> empty .)
    DIV             reduce using rule 149 (pnCuadMuDi -> empty .)
    PLUS            reduce using rule 149 (pnCuadMuDi -> empty .)
    MINUS           reduce using rule 149 (pnCuadMuDi -> empty .)
    LESS_THAN       reduce using rule 149 (pnCuadMuDi -> empty .)
    GREATER_THAN    reduce using rule 149 (pnCuadMuDi -> empty .)
    EQUALS          reduce using rule 149 (pnCuadMuDi -> empty .)
    NOTEQUALS       reduce using rule 149 (pnCuadMuDi -> empty .)
    AND             reduce using rule 149 (pnCuadMuDi -> empty .)
    OR              reduce using rule 149 (pnCuadMuDi -> empty .)
    SEMICOLON       reduce using rule 149 (pnCuadMuDi -> empty .)
    RIGHT_PARENT    reduce using rule 149 (pnCuadMuDi -> empty .)
    COMMA           reduce using rule 149 (pnCuadMuDi -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 149 (pnCuadMuDi -> empty .)


state 182

    (84) f -> LEFT_PARENT pnSaveFondoFalso . exp RIGHT_PARENT pnPopFondoFalso
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 132
    CTEI            shift and go to state 133
    CTEF            shift and go to state 134
    CTEC            shift and go to state 135
    ID              shift and go to state 139
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107
    READ_FILE       shift and go to state 98

    exp                            shift and go to state 251
    exprel                         shift and go to state 128
    e                              shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    variable                       shift and go to state 136
    llamada                        shift and go to state 137
    funcesp                        shift and go to state 138
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96
    copy                           shift and go to state 140

state 183

    (140) pnSaveFondoFalso -> empty .

    LEFT_PARENT     reduce using rule 140 (pnSaveFondoFalso -> empty .)
    CTEI            reduce using rule 140 (pnSaveFondoFalso -> empty .)
    CTEF            reduce using rule 140 (pnSaveFondoFalso -> empty .)
    CTEC            reduce using rule 140 (pnSaveFondoFalso -> empty .)
    ID              reduce using rule 140 (pnSaveFondoFalso -> empty .)
    MEAN            reduce using rule 140 (pnSaveFondoFalso -> empty .)
    MODE            reduce using rule 140 (pnSaveFondoFalso -> empty .)
    MEDIAN          reduce using rule 140 (pnSaveFondoFalso -> empty .)
    VARIANCE        reduce using rule 140 (pnSaveFondoFalso -> empty .)
    MAX             reduce using rule 140 (pnSaveFondoFalso -> empty .)
    MIN             reduce using rule 140 (pnSaveFondoFalso -> empty .)
    STADDES         reduce using rule 140 (pnSaveFondoFalso -> empty .)
    BOXPLOT         reduce using rule 140 (pnSaveFondoFalso -> empty .)
    LINREG          reduce using rule 140 (pnSaveFondoFalso -> empty .)
    READ_FILE       reduce using rule 140 (pnSaveFondoFalso -> empty .)


state 184

    (85) f -> CTEI pnSaveCteI . pnSaveOperandoConstante
    (143) pnSaveOperandoConstante -> . empty
    (178) empty -> .

    MULT            reduce using rule 178 (empty -> .)
    DIV             reduce using rule 178 (empty -> .)
    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnSaveOperandoConstante        shift and go to state 252
    empty                          shift and go to state 253

state 185

    (137) pnSaveCteI -> empty .

    MULT            reduce using rule 137 (pnSaveCteI -> empty .)
    DIV             reduce using rule 137 (pnSaveCteI -> empty .)
    PLUS            reduce using rule 137 (pnSaveCteI -> empty .)
    MINUS           reduce using rule 137 (pnSaveCteI -> empty .)
    LESS_THAN       reduce using rule 137 (pnSaveCteI -> empty .)
    GREATER_THAN    reduce using rule 137 (pnSaveCteI -> empty .)
    EQUALS          reduce using rule 137 (pnSaveCteI -> empty .)
    NOTEQUALS       reduce using rule 137 (pnSaveCteI -> empty .)
    AND             reduce using rule 137 (pnSaveCteI -> empty .)
    OR              reduce using rule 137 (pnSaveCteI -> empty .)
    SEMICOLON       reduce using rule 137 (pnSaveCteI -> empty .)
    RIGHT_PARENT    reduce using rule 137 (pnSaveCteI -> empty .)
    COMMA           reduce using rule 137 (pnSaveCteI -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 137 (pnSaveCteI -> empty .)


state 186

    (86) f -> CTEF pnSaveCteF . pnSaveOperandoConstante
    (143) pnSaveOperandoConstante -> . empty
    (178) empty -> .

    MULT            reduce using rule 178 (empty -> .)
    DIV             reduce using rule 178 (empty -> .)
    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnSaveOperandoConstante        shift and go to state 254
    empty                          shift and go to state 253

state 187

    (138) pnSaveCteF -> empty .

    MULT            reduce using rule 138 (pnSaveCteF -> empty .)
    DIV             reduce using rule 138 (pnSaveCteF -> empty .)
    PLUS            reduce using rule 138 (pnSaveCteF -> empty .)
    MINUS           reduce using rule 138 (pnSaveCteF -> empty .)
    LESS_THAN       reduce using rule 138 (pnSaveCteF -> empty .)
    GREATER_THAN    reduce using rule 138 (pnSaveCteF -> empty .)
    EQUALS          reduce using rule 138 (pnSaveCteF -> empty .)
    NOTEQUALS       reduce using rule 138 (pnSaveCteF -> empty .)
    AND             reduce using rule 138 (pnSaveCteF -> empty .)
    OR              reduce using rule 138 (pnSaveCteF -> empty .)
    SEMICOLON       reduce using rule 138 (pnSaveCteF -> empty .)
    RIGHT_PARENT    reduce using rule 138 (pnSaveCteF -> empty .)
    COMMA           reduce using rule 138 (pnSaveCteF -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 138 (pnSaveCteF -> empty .)


state 188

    (87) f -> CTEC pnSaveCteC . pnSaveOperandoConstante
    (143) pnSaveOperandoConstante -> . empty
    (178) empty -> .

    MULT            reduce using rule 178 (empty -> .)
    DIV             reduce using rule 178 (empty -> .)
    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnSaveOperandoConstante        shift and go to state 255
    empty                          shift and go to state 253

state 189

    (139) pnSaveCteC -> empty .

    MULT            reduce using rule 139 (pnSaveCteC -> empty .)
    DIV             reduce using rule 139 (pnSaveCteC -> empty .)
    PLUS            reduce using rule 139 (pnSaveCteC -> empty .)
    MINUS           reduce using rule 139 (pnSaveCteC -> empty .)
    LESS_THAN       reduce using rule 139 (pnSaveCteC -> empty .)
    GREATER_THAN    reduce using rule 139 (pnSaveCteC -> empty .)
    EQUALS          reduce using rule 139 (pnSaveCteC -> empty .)
    NOTEQUALS       reduce using rule 139 (pnSaveCteC -> empty .)
    AND             reduce using rule 139 (pnSaveCteC -> empty .)
    OR              reduce using rule 139 (pnSaveCteC -> empty .)
    SEMICOLON       reduce using rule 139 (pnSaveCteC -> empty .)
    RIGHT_PARENT    reduce using rule 139 (pnSaveCteC -> empty .)
    COMMA           reduce using rule 139 (pnSaveCteC -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 139 (pnSaveCteC -> empty .)


state 190

    (142) pnSaveOperandos -> empty .
    (129) pnCheckFunc -> empty .

    LEFT_SQR_BRACKET reduce using rule 142 (pnSaveOperandos -> empty .)
    MULT            reduce using rule 142 (pnSaveOperandos -> empty .)
    DIV             reduce using rule 142 (pnSaveOperandos -> empty .)
    PLUS            reduce using rule 142 (pnSaveOperandos -> empty .)
    MINUS           reduce using rule 142 (pnSaveOperandos -> empty .)
    LESS_THAN       reduce using rule 142 (pnSaveOperandos -> empty .)
    GREATER_THAN    reduce using rule 142 (pnSaveOperandos -> empty .)
    EQUALS          reduce using rule 142 (pnSaveOperandos -> empty .)
    NOTEQUALS       reduce using rule 142 (pnSaveOperandos -> empty .)
    AND             reduce using rule 142 (pnSaveOperandos -> empty .)
    OR              reduce using rule 142 (pnSaveOperandos -> empty .)
    SEMICOLON       reduce using rule 142 (pnSaveOperandos -> empty .)
    RIGHT_PARENT    reduce using rule 142 (pnSaveOperandos -> empty .)
    COMMA           reduce using rule 142 (pnSaveOperandos -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 142 (pnSaveOperandos -> empty .)
    LEFT_PARENT     reduce using rule 129 (pnCheckFunc -> empty .)


state 191

    (14) copy -> READ_FILE LEFT_PARENT LETRERO . pnCuadCopy RIGHT_PARENT SEMICOLON
    (156) pnCuadCopy -> . empty
    (178) empty -> .

    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCuadCopy                     shift and go to state 256
    empty                          shift and go to state 257

state 192

    (106) mean -> MEAN LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (157) pnCuadFuncEsp -> . empty
    (178) empty -> .

    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 258
    empty                          shift and go to state 259

state 193

    (107) mode -> MODE LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (157) pnCuadFuncEsp -> . empty
    (178) empty -> .

    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 260
    empty                          shift and go to state 259

state 194

    (108) median -> MEDIAN LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (157) pnCuadFuncEsp -> . empty
    (178) empty -> .

    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 261
    empty                          shift and go to state 259

state 195

    (109) variance -> VARIANCE LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (157) pnCuadFuncEsp -> . empty
    (178) empty -> .

    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 262
    empty                          shift and go to state 259

state 196

    (110) max -> MAX LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (157) pnCuadFuncEsp -> . empty
    (178) empty -> .

    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 263
    empty                          shift and go to state 259

state 197

    (111) min -> MIN LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (157) pnCuadFuncEsp -> . empty
    (178) empty -> .

    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 264
    empty                          shift and go to state 259

state 198

    (112) staddes -> STADDES LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (157) pnCuadFuncEsp -> . empty
    (178) empty -> .

    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 265
    empty                          shift and go to state 259

state 199

    (113) boxplot -> BOXPLOT LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (157) pnCuadFuncEsp -> . empty
    (178) empty -> .

    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 266
    empty                          shift and go to state 259

state 200

    (114) linreg -> LINREG LEFT_PARENT variable . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (157) pnCuadFuncEsp -> . empty
    (178) empty -> .

    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 267
    empty                          shift and go to state 259

state 201

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param . RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    RIGHT_PARENT    shift and go to state 268


state 202

    (39) param -> paramlist .

    RIGHT_PARENT    reduce using rule 39 (param -> paramlist .)


state 203

    (40) param -> empty .

    RIGHT_PARENT    reduce using rule 40 (param -> empty .)


state 204

    (41) paramlist -> tipoparam . ARROW ID pnAddParametersTablaVar paramlistp

    ARROW           shift and go to state 269


state 205

    (42) tipoparam -> tipo_simp .

    ARROW           reduce using rule 42 (tipoparam -> tipo_simp .)


state 206

    (43) tipoparam -> DATAFRAME . pnSaveTypeVar
    (121) pnSaveTypeVar -> . empty
    (178) empty -> .

    ARROW           reduce using rule 178 (empty -> .)

    pnSaveTypeVar                  shift and go to state 270
    empty                          shift and go to state 40

state 207

    (34) idpp -> COMMA ID pnCheckNameTablaVar . pnArrAddDim idpp
    (170) pnArrAddDim -> . empty
    (178) empty -> .

    COMMA           reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)

    pnArrAddDim                    shift and go to state 271
    empty                          shift and go to state 65

state 208

    (29) vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar .

    ARROW           reduce using rule 29 (vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar .)


state 209

    (169) pnArrCuadriplificar -> empty .

    ARROW           reduce using rule 169 (pnArrCuadriplificar -> empty .)


state 210

    (31) vpp -> COMMA CTEI pnArrSaveLim1 .

    RIGHT_SQR_BRACKET reduce using rule 31 (vpp -> COMMA CTEI pnArrSaveLim1 .)


state 211

    (56) asign -> variable ASIGN pnSaveOperadorAsign exp . pnCuadAsign SEMICOLON
    (153) pnCuadAsign -> . empty
    (178) empty -> .

    SEMICOLON       reduce using rule 178 (empty -> .)

    pnCuadAsign                    shift and go to state 272
    empty                          shift and go to state 273

state 212

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra . expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (22) expp -> . exp pnCuadParametro exppp
    (23) expp -> . empty
    (62) exp -> . exprel pnCuadOplog logic
    (178) empty -> .
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    LEFT_PARENT     shift and go to state 132
    CTEI            shift and go to state 133
    CTEF            shift and go to state 134
    CTEC            shift and go to state 135
    ID              shift and go to state 139
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107
    READ_FILE       shift and go to state 98

    expp                           shift and go to state 274
    exp                            shift and go to state 275
    empty                          shift and go to state 276
    exprel                         shift and go to state 128
    e                              shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    variable                       shift and go to state 136
    llamada                        shift and go to state 137
    funcesp                        shift and go to state 138
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96
    copy                           shift and go to state 140

state 213

    (130) pnGenerateEra -> empty .

    LEFT_PARENT     reduce using rule 130 (pnGenerateEra -> empty .)
    CTEI            reduce using rule 130 (pnGenerateEra -> empty .)
    CTEF            reduce using rule 130 (pnGenerateEra -> empty .)
    CTEC            reduce using rule 130 (pnGenerateEra -> empty .)
    ID              reduce using rule 130 (pnGenerateEra -> empty .)
    MEAN            reduce using rule 130 (pnGenerateEra -> empty .)
    MODE            reduce using rule 130 (pnGenerateEra -> empty .)
    MEDIAN          reduce using rule 130 (pnGenerateEra -> empty .)
    VARIANCE        reduce using rule 130 (pnGenerateEra -> empty .)
    MAX             reduce using rule 130 (pnGenerateEra -> empty .)
    MIN             reduce using rule 130 (pnGenerateEra -> empty .)
    STADDES         reduce using rule 130 (pnGenerateEra -> empty .)
    BOXPLOT         reduce using rule 130 (pnGenerateEra -> empty .)
    LINREG          reduce using rule 130 (pnGenerateEra -> empty .)
    READ_FILE       reduce using rule 130 (pnGenerateEra -> empty .)
    RIGHT_PARENT    reduce using rule 130 (pnGenerateEra -> empty .)


state 214

    (17) indexp -> LEFT_SQR_BRACKET pnArrIni . exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 132
    CTEI            shift and go to state 133
    CTEF            shift and go to state 134
    CTEC            shift and go to state 135
    ID              shift and go to state 139
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107
    READ_FILE       shift and go to state 98

    exp                            shift and go to state 277
    exprel                         shift and go to state 128
    e                              shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    variable                       shift and go to state 136
    llamada                        shift and go to state 137
    funcesp                        shift and go to state 138
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96
    copy                           shift and go to state 140

state 215

    (171) pnArrIni -> empty .

    LEFT_PARENT     reduce using rule 171 (pnArrIni -> empty .)
    CTEI            reduce using rule 171 (pnArrIni -> empty .)
    CTEF            reduce using rule 171 (pnArrIni -> empty .)
    CTEC            reduce using rule 171 (pnArrIni -> empty .)
    ID              reduce using rule 171 (pnArrIni -> empty .)
    MEAN            reduce using rule 171 (pnArrIni -> empty .)
    MODE            reduce using rule 171 (pnArrIni -> empty .)
    MEDIAN          reduce using rule 171 (pnArrIni -> empty .)
    VARIANCE        reduce using rule 171 (pnArrIni -> empty .)
    MAX             reduce using rule 171 (pnArrIni -> empty .)
    MIN             reduce using rule 171 (pnArrIni -> empty .)
    STADDES         reduce using rule 171 (pnArrIni -> empty .)
    BOXPLOT         reduce using rule 171 (pnArrIni -> empty .)
    LINREG          reduce using rule 171 (pnArrIni -> empty .)
    READ_FILE       reduce using rule 171 (pnArrIni -> empty .)


state 216

    (57) lee -> READ LEFT_PARENT variable pnCuadLee . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 278


state 217

    (155) pnCuadLee -> empty .

    RIGHT_PARENT    reduce using rule 155 (pnCuadLee -> empty .)


state 218

    (142) pnSaveOperandos -> empty .

    LEFT_SQR_BRACKET reduce using rule 142 (pnSaveOperandos -> empty .)
    RIGHT_PARENT    reduce using rule 142 (pnSaveOperandos -> empty .)
    ASIGN           reduce using rule 142 (pnSaveOperandos -> empty .)


state 219

    (58) escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 279


state 220

    (59) escribep -> exp pnCuadEscribe .

    RIGHT_PARENT    reduce using rule 59 (escribep -> exp pnCuadEscribe .)


state 221

    (154) pnCuadEscribe -> empty .

    RIGHT_PARENT    reduce using rule 154 (pnCuadEscribe -> empty .)


state 222

    (60) escribep -> LETRERO pnCuadEscribe .

    RIGHT_PARENT    reduce using rule 60 (escribep -> LETRERO pnCuadEscribe .)


state 223

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf . RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf

    RIGHT_PARENT    shift and go to state 280


state 224

    (158) pnCheckBoolIf -> empty .

    RIGHT_PARENT    reduce using rule 158 (pnCheckBoolIf -> empty .)


state 225

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp . pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (158) pnCheckBoolIf -> . empty
    (178) empty -> .

    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCheckBoolIf                  shift and go to state 281
    empty                          shift and go to state 224

state 226

    (95) ciclof -> FOR LEFT_PARENT variable pnSaveForID . ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    ASIGN           shift and go to state 282


state 227

    (163) pnSaveForID -> empty .

    ASIGN           reduce using rule 163 (pnSaveForID -> empty .)


state 228

    (61) return -> RETURNS exp pnCuadRet SEMICOLON .

    ID              reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    READ            reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    WRITE           reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    IF              reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    WHILE           reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    FOR             reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    RETURNS         reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    READ_FILE       reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    MEAN            reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    MODE            reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    MEDIAN          reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    VARIANCE        reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    MAX             reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    MIN             reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    STADDES         reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    BOXPLOT         reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    LINREG          reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 61 (return -> RETURNS exp pnCuadRet SEMICOLON .)


state 229

    (62) exp -> exprel pnCuadOplog logic .

    SEMICOLON       reduce using rule 62 (exp -> exprel pnCuadOplog logic .)
    RIGHT_PARENT    reduce using rule 62 (exp -> exprel pnCuadOplog logic .)
    COMMA           reduce using rule 62 (exp -> exprel pnCuadOplog logic .)
    RIGHT_SQR_BRACKET reduce using rule 62 (exp -> exprel pnCuadOplog logic .)


state 230

    (63) logic -> logicsig . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 132
    CTEI            shift and go to state 133
    CTEF            shift and go to state 134
    CTEC            shift and go to state 135
    ID              shift and go to state 139
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107
    READ_FILE       shift and go to state 98

    exprel                         shift and go to state 283
    e                              shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    variable                       shift and go to state 136
    llamada                        shift and go to state 137
    funcesp                        shift and go to state 138
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96
    copy                           shift and go to state 140

state 231

    (64) logic -> empty .

    SEMICOLON       reduce using rule 64 (logic -> empty .)
    RIGHT_PARENT    reduce using rule 64 (logic -> empty .)
    COMMA           reduce using rule 64 (logic -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 64 (logic -> empty .)


state 232

    (65) logicsig -> AND . pnSaveOperadorLog
    (147) pnSaveOperadorLog -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    CTEI            reduce using rule 178 (empty -> .)
    CTEF            reduce using rule 178 (empty -> .)
    CTEC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)

    pnSaveOperadorLog              shift and go to state 284
    empty                          shift and go to state 285

state 233

    (66) logicsig -> OR . pnSaveOperadorLog
    (147) pnSaveOperadorLog -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    CTEI            reduce using rule 178 (empty -> .)
    CTEF            reduce using rule 178 (empty -> .)
    CTEC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)

    pnSaveOperadorLog              shift and go to state 286
    empty                          shift and go to state 285

state 234

    (67) exprel -> e pnCuadOpRelacional relacionalp .

    AND             reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    OR              reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    SEMICOLON       reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    RIGHT_PARENT    reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    COMMA           reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)
    RIGHT_SQR_BRACKET reduce using rule 67 (exprel -> e pnCuadOpRelacional relacionalp .)


state 235

    (68) relacionalp -> relsig . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 132
    CTEI            shift and go to state 133
    CTEF            shift and go to state 134
    CTEC            shift and go to state 135
    ID              shift and go to state 139
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107
    READ_FILE       shift and go to state 98

    e                              shift and go to state 287
    t                              shift and go to state 130
    f                              shift and go to state 131
    variable                       shift and go to state 136
    llamada                        shift and go to state 137
    funcesp                        shift and go to state 138
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96
    copy                           shift and go to state 140

state 236

    (69) relacionalp -> empty .

    AND             reduce using rule 69 (relacionalp -> empty .)
    OR              reduce using rule 69 (relacionalp -> empty .)
    SEMICOLON       reduce using rule 69 (relacionalp -> empty .)
    RIGHT_PARENT    reduce using rule 69 (relacionalp -> empty .)
    COMMA           reduce using rule 69 (relacionalp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 69 (relacionalp -> empty .)


state 237

    (70) relsig -> LESS_THAN . pnSaveOperadorRel
    (146) pnSaveOperadorRel -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    CTEI            reduce using rule 178 (empty -> .)
    CTEF            reduce using rule 178 (empty -> .)
    CTEC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)

    pnSaveOperadorRel              shift and go to state 288
    empty                          shift and go to state 289

state 238

    (71) relsig -> GREATER_THAN . pnSaveOperadorRel
    (146) pnSaveOperadorRel -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    CTEI            reduce using rule 178 (empty -> .)
    CTEF            reduce using rule 178 (empty -> .)
    CTEC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)

    pnSaveOperadorRel              shift and go to state 290
    empty                          shift and go to state 289

state 239

    (72) relsig -> EQUALS . pnSaveOperadorRel
    (146) pnSaveOperadorRel -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    CTEI            reduce using rule 178 (empty -> .)
    CTEF            reduce using rule 178 (empty -> .)
    CTEC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)

    pnSaveOperadorRel              shift and go to state 291
    empty                          shift and go to state 289

state 240

    (73) relsig -> NOTEQUALS . pnSaveOperadorRel
    (146) pnSaveOperadorRel -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    CTEI            reduce using rule 178 (empty -> .)
    CTEF            reduce using rule 178 (empty -> .)
    CTEC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)

    pnSaveOperadorRel              shift and go to state 292
    empty                          shift and go to state 289

state 241

    (74) e -> t pnCuadPlMi tp .

    LESS_THAN       reduce using rule 74 (e -> t pnCuadPlMi tp .)
    GREATER_THAN    reduce using rule 74 (e -> t pnCuadPlMi tp .)
    EQUALS          reduce using rule 74 (e -> t pnCuadPlMi tp .)
    NOTEQUALS       reduce using rule 74 (e -> t pnCuadPlMi tp .)
    AND             reduce using rule 74 (e -> t pnCuadPlMi tp .)
    OR              reduce using rule 74 (e -> t pnCuadPlMi tp .)
    SEMICOLON       reduce using rule 74 (e -> t pnCuadPlMi tp .)
    RIGHT_PARENT    reduce using rule 74 (e -> t pnCuadPlMi tp .)
    COMMA           reduce using rule 74 (e -> t pnCuadPlMi tp .)
    RIGHT_SQR_BRACKET reduce using rule 74 (e -> t pnCuadPlMi tp .)


state 242

    (75) tp -> tsig . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 132
    CTEI            shift and go to state 133
    CTEF            shift and go to state 134
    CTEC            shift and go to state 135
    ID              shift and go to state 139
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107
    READ_FILE       shift and go to state 98

    t                              shift and go to state 293
    f                              shift and go to state 131
    variable                       shift and go to state 136
    llamada                        shift and go to state 137
    funcesp                        shift and go to state 138
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96
    copy                           shift and go to state 140

state 243

    (76) tp -> empty .

    LESS_THAN       reduce using rule 76 (tp -> empty .)
    GREATER_THAN    reduce using rule 76 (tp -> empty .)
    EQUALS          reduce using rule 76 (tp -> empty .)
    NOTEQUALS       reduce using rule 76 (tp -> empty .)
    AND             reduce using rule 76 (tp -> empty .)
    OR              reduce using rule 76 (tp -> empty .)
    SEMICOLON       reduce using rule 76 (tp -> empty .)
    RIGHT_PARENT    reduce using rule 76 (tp -> empty .)
    COMMA           reduce using rule 76 (tp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 76 (tp -> empty .)


state 244

    (77) tsig -> PLUS . pnSaveOperadorPlMi
    (144) pnSaveOperadorPlMi -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    CTEI            reduce using rule 178 (empty -> .)
    CTEF            reduce using rule 178 (empty -> .)
    CTEC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)

    pnSaveOperadorPlMi             shift and go to state 294
    empty                          shift and go to state 295

state 245

    (78) tsig -> MINUS . pnSaveOperadorPlMi
    (144) pnSaveOperadorPlMi -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    CTEI            reduce using rule 178 (empty -> .)
    CTEF            reduce using rule 178 (empty -> .)
    CTEC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)

    pnSaveOperadorPlMi             shift and go to state 296
    empty                          shift and go to state 295

state 246

    (79) t -> f pnCuadMuDi fp .

    PLUS            reduce using rule 79 (t -> f pnCuadMuDi fp .)
    MINUS           reduce using rule 79 (t -> f pnCuadMuDi fp .)
    LESS_THAN       reduce using rule 79 (t -> f pnCuadMuDi fp .)
    GREATER_THAN    reduce using rule 79 (t -> f pnCuadMuDi fp .)
    EQUALS          reduce using rule 79 (t -> f pnCuadMuDi fp .)
    NOTEQUALS       reduce using rule 79 (t -> f pnCuadMuDi fp .)
    AND             reduce using rule 79 (t -> f pnCuadMuDi fp .)
    OR              reduce using rule 79 (t -> f pnCuadMuDi fp .)
    SEMICOLON       reduce using rule 79 (t -> f pnCuadMuDi fp .)
    RIGHT_PARENT    reduce using rule 79 (t -> f pnCuadMuDi fp .)
    COMMA           reduce using rule 79 (t -> f pnCuadMuDi fp .)
    RIGHT_SQR_BRACKET reduce using rule 79 (t -> f pnCuadMuDi fp .)


state 247

    (80) fp -> fsig . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 132
    CTEI            shift and go to state 133
    CTEF            shift and go to state 134
    CTEC            shift and go to state 135
    ID              shift and go to state 139
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107
    READ_FILE       shift and go to state 98

    f                              shift and go to state 297
    variable                       shift and go to state 136
    llamada                        shift and go to state 137
    funcesp                        shift and go to state 138
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96
    copy                           shift and go to state 140

state 248

    (81) fp -> empty .

    PLUS            reduce using rule 81 (fp -> empty .)
    MINUS           reduce using rule 81 (fp -> empty .)
    LESS_THAN       reduce using rule 81 (fp -> empty .)
    GREATER_THAN    reduce using rule 81 (fp -> empty .)
    EQUALS          reduce using rule 81 (fp -> empty .)
    NOTEQUALS       reduce using rule 81 (fp -> empty .)
    AND             reduce using rule 81 (fp -> empty .)
    OR              reduce using rule 81 (fp -> empty .)
    SEMICOLON       reduce using rule 81 (fp -> empty .)
    RIGHT_PARENT    reduce using rule 81 (fp -> empty .)
    COMMA           reduce using rule 81 (fp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 81 (fp -> empty .)


state 249

    (82) fsig -> MULT . pnSaveOperadorMuDi
    (145) pnSaveOperadorMuDi -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    CTEI            reduce using rule 178 (empty -> .)
    CTEF            reduce using rule 178 (empty -> .)
    CTEC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)

    pnSaveOperadorMuDi             shift and go to state 298
    empty                          shift and go to state 299

state 250

    (83) fsig -> DIV . pnSaveOperadorMuDi
    (145) pnSaveOperadorMuDi -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    CTEI            reduce using rule 178 (empty -> .)
    CTEF            reduce using rule 178 (empty -> .)
    CTEC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)

    pnSaveOperadorMuDi             shift and go to state 300
    empty                          shift and go to state 299

state 251

    (84) f -> LEFT_PARENT pnSaveFondoFalso exp . RIGHT_PARENT pnPopFondoFalso

    RIGHT_PARENT    shift and go to state 301


state 252

    (85) f -> CTEI pnSaveCteI pnSaveOperandoConstante .

    MULT            reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    DIV             reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    PLUS            reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    MINUS           reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    LESS_THAN       reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    GREATER_THAN    reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    EQUALS          reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    NOTEQUALS       reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    AND             reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    OR              reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    SEMICOLON       reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    RIGHT_PARENT    reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    COMMA           reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    RIGHT_SQR_BRACKET reduce using rule 85 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)


state 253

    (143) pnSaveOperandoConstante -> empty .

    MULT            reduce using rule 143 (pnSaveOperandoConstante -> empty .)
    DIV             reduce using rule 143 (pnSaveOperandoConstante -> empty .)
    PLUS            reduce using rule 143 (pnSaveOperandoConstante -> empty .)
    MINUS           reduce using rule 143 (pnSaveOperandoConstante -> empty .)
    LESS_THAN       reduce using rule 143 (pnSaveOperandoConstante -> empty .)
    GREATER_THAN    reduce using rule 143 (pnSaveOperandoConstante -> empty .)
    EQUALS          reduce using rule 143 (pnSaveOperandoConstante -> empty .)
    NOTEQUALS       reduce using rule 143 (pnSaveOperandoConstante -> empty .)
    AND             reduce using rule 143 (pnSaveOperandoConstante -> empty .)
    OR              reduce using rule 143 (pnSaveOperandoConstante -> empty .)
    SEMICOLON       reduce using rule 143 (pnSaveOperandoConstante -> empty .)
    RIGHT_PARENT    reduce using rule 143 (pnSaveOperandoConstante -> empty .)
    COMMA           reduce using rule 143 (pnSaveOperandoConstante -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 143 (pnSaveOperandoConstante -> empty .)


state 254

    (86) f -> CTEF pnSaveCteF pnSaveOperandoConstante .

    MULT            reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    DIV             reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    PLUS            reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    MINUS           reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    LESS_THAN       reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    GREATER_THAN    reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    EQUALS          reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    NOTEQUALS       reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    AND             reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    OR              reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    SEMICOLON       reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    RIGHT_PARENT    reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    COMMA           reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    RIGHT_SQR_BRACKET reduce using rule 86 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)


state 255

    (87) f -> CTEC pnSaveCteC pnSaveOperandoConstante .

    MULT            reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    DIV             reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    PLUS            reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    MINUS           reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    LESS_THAN       reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    GREATER_THAN    reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    EQUALS          reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    NOTEQUALS       reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    AND             reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    OR              reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    SEMICOLON       reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    RIGHT_PARENT    reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    COMMA           reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    RIGHT_SQR_BRACKET reduce using rule 87 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)


state 256

    (14) copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 302


state 257

    (156) pnCuadCopy -> empty .

    RIGHT_PARENT    reduce using rule 156 (pnCuadCopy -> empty .)


state 258

    (106) mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 303


state 259

    (157) pnCuadFuncEsp -> empty .

    RIGHT_PARENT    reduce using rule 157 (pnCuadFuncEsp -> empty .)


state 260

    (107) mode -> MODE LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 304


state 261

    (108) median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 305


state 262

    (109) variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 306


state 263

    (110) max -> MAX LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 307


state 264

    (111) min -> MIN LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 308


state 265

    (112) staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 309


state 266

    (113) boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 310


state 267

    (114) linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 311


state 268

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT . LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    LEFT_CUR_BRACKET shift and go to state 312


state 269

    (41) paramlist -> tipoparam ARROW . ID pnAddParametersTablaVar paramlistp

    ID              shift and go to state 313


state 270

    (43) tipoparam -> DATAFRAME pnSaveTypeVar .

    ARROW           reduce using rule 43 (tipoparam -> DATAFRAME pnSaveTypeVar .)


state 271

    (34) idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim . idpp
    (34) idpp -> . COMMA ID pnCheckNameTablaVar pnArrAddDim idpp
    (35) idpp -> . empty
    (178) empty -> .

    COMMA           shift and go to state 110
    SEMICOLON       reduce using rule 178 (empty -> .)

    idpp                           shift and go to state 314
    empty                          shift and go to state 111

state 272

    (56) asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign . SEMICOLON

    SEMICOLON       shift and go to state 315


state 273

    (153) pnCuadAsign -> empty .

    SEMICOLON       reduce using rule 153 (pnCuadAsign -> empty .)


state 274

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp . RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue

    RIGHT_PARENT    shift and go to state 316


state 275

    (22) expp -> exp . pnCuadParametro exppp
    (131) pnCuadParametro -> . empty
    (178) empty -> .

    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCuadParametro                shift and go to state 317
    empty                          shift and go to state 318

state 276

    (23) expp -> empty .

    RIGHT_PARENT    reduce using rule 23 (expp -> empty .)


state 277

    (17) indexp -> LEFT_SQR_BRACKET pnArrIni exp . pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop
    (172) pnArrVerify -> . empty
    (178) empty -> .

    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnArrVerify                    shift and go to state 319
    empty                          shift and go to state 320

state 278

    (57) lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 321


state 279

    (58) escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)


state 280

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT . IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf

    IF_TRUE         shift and go to state 322


state 281

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf . RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile

    RIGHT_PARENT    shift and go to state 323


state 282

    (95) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN . exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 132
    CTEI            shift and go to state 133
    CTEF            shift and go to state 134
    CTEC            shift and go to state 135
    ID              shift and go to state 139
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107
    READ_FILE       shift and go to state 98

    variable                       shift and go to state 136
    exp                            shift and go to state 324
    exprel                         shift and go to state 128
    e                              shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 137
    funcesp                        shift and go to state 138
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96
    copy                           shift and go to state 140

state 283

    (63) logic -> logicsig exprel . pnCuadOplog logic
    (151) pnCuadOplog -> . empty
    (178) empty -> .

    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnCuadOplog                    shift and go to state 325
    empty                          shift and go to state 175

state 284

    (65) logicsig -> AND pnSaveOperadorLog .

    LEFT_PARENT     reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    CTEI            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    CTEF            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    CTEC            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    ID              reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MEAN            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MODE            reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MEDIAN          reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    VARIANCE        reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MAX             reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    MIN             reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    STADDES         reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    BOXPLOT         reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    LINREG          reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)
    READ_FILE       reduce using rule 65 (logicsig -> AND pnSaveOperadorLog .)


state 285

    (147) pnSaveOperadorLog -> empty .

    LEFT_PARENT     reduce using rule 147 (pnSaveOperadorLog -> empty .)
    CTEI            reduce using rule 147 (pnSaveOperadorLog -> empty .)
    CTEF            reduce using rule 147 (pnSaveOperadorLog -> empty .)
    CTEC            reduce using rule 147 (pnSaveOperadorLog -> empty .)
    ID              reduce using rule 147 (pnSaveOperadorLog -> empty .)
    MEAN            reduce using rule 147 (pnSaveOperadorLog -> empty .)
    MODE            reduce using rule 147 (pnSaveOperadorLog -> empty .)
    MEDIAN          reduce using rule 147 (pnSaveOperadorLog -> empty .)
    VARIANCE        reduce using rule 147 (pnSaveOperadorLog -> empty .)
    MAX             reduce using rule 147 (pnSaveOperadorLog -> empty .)
    MIN             reduce using rule 147 (pnSaveOperadorLog -> empty .)
    STADDES         reduce using rule 147 (pnSaveOperadorLog -> empty .)
    BOXPLOT         reduce using rule 147 (pnSaveOperadorLog -> empty .)
    LINREG          reduce using rule 147 (pnSaveOperadorLog -> empty .)
    READ_FILE       reduce using rule 147 (pnSaveOperadorLog -> empty .)


state 286

    (66) logicsig -> OR pnSaveOperadorLog .

    LEFT_PARENT     reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    CTEI            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    CTEF            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    CTEC            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    ID              reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MEAN            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MODE            reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MEDIAN          reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    VARIANCE        reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MAX             reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    MIN             reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    STADDES         reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    BOXPLOT         reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    LINREG          reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)
    READ_FILE       reduce using rule 66 (logicsig -> OR pnSaveOperadorLog .)


state 287

    (68) relacionalp -> relsig e . pnCuadOpRelacional relacionalp
    (150) pnCuadOpRelacional -> . empty
    (178) empty -> .

    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnCuadOpRelacional             shift and go to state 326
    empty                          shift and go to state 177

state 288

    (70) relsig -> LESS_THAN pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    CTEI            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    CTEF            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    CTEC            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    ID              reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MEAN            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MODE            reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MEDIAN          reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    VARIANCE        reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MAX             reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MIN             reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    STADDES         reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    LINREG          reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)
    READ_FILE       reduce using rule 70 (relsig -> LESS_THAN pnSaveOperadorRel .)


state 289

    (146) pnSaveOperadorRel -> empty .

    LEFT_PARENT     reduce using rule 146 (pnSaveOperadorRel -> empty .)
    CTEI            reduce using rule 146 (pnSaveOperadorRel -> empty .)
    CTEF            reduce using rule 146 (pnSaveOperadorRel -> empty .)
    CTEC            reduce using rule 146 (pnSaveOperadorRel -> empty .)
    ID              reduce using rule 146 (pnSaveOperadorRel -> empty .)
    MEAN            reduce using rule 146 (pnSaveOperadorRel -> empty .)
    MODE            reduce using rule 146 (pnSaveOperadorRel -> empty .)
    MEDIAN          reduce using rule 146 (pnSaveOperadorRel -> empty .)
    VARIANCE        reduce using rule 146 (pnSaveOperadorRel -> empty .)
    MAX             reduce using rule 146 (pnSaveOperadorRel -> empty .)
    MIN             reduce using rule 146 (pnSaveOperadorRel -> empty .)
    STADDES         reduce using rule 146 (pnSaveOperadorRel -> empty .)
    BOXPLOT         reduce using rule 146 (pnSaveOperadorRel -> empty .)
    LINREG          reduce using rule 146 (pnSaveOperadorRel -> empty .)
    READ_FILE       reduce using rule 146 (pnSaveOperadorRel -> empty .)


state 290

    (71) relsig -> GREATER_THAN pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    CTEI            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    CTEF            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    CTEC            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    ID              reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MEAN            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MODE            reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MEDIAN          reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    VARIANCE        reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MAX             reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MIN             reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    STADDES         reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    LINREG          reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    READ_FILE       reduce using rule 71 (relsig -> GREATER_THAN pnSaveOperadorRel .)


state 291

    (72) relsig -> EQUALS pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    CTEI            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    CTEF            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    CTEC            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    ID              reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MEAN            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MODE            reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MEDIAN          reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    VARIANCE        reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MAX             reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    MIN             reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    STADDES         reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    LINREG          reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)
    READ_FILE       reduce using rule 72 (relsig -> EQUALS pnSaveOperadorRel .)


state 292

    (73) relsig -> NOTEQUALS pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    CTEI            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    CTEF            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    CTEC            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    ID              reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MEAN            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MODE            reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MEDIAN          reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    VARIANCE        reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MAX             reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MIN             reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    STADDES         reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    LINREG          reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    READ_FILE       reduce using rule 73 (relsig -> NOTEQUALS pnSaveOperadorRel .)


state 293

    (75) tp -> tsig t . pnCuadPlMi tp
    (148) pnCuadPlMi -> . empty
    (178) empty -> .

    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnCuadPlMi                     shift and go to state 327
    empty                          shift and go to state 179

state 294

    (77) tsig -> PLUS pnSaveOperadorPlMi .

    LEFT_PARENT     reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    CTEI            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    CTEF            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    CTEC            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    ID              reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MEAN            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MODE            reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MEDIAN          reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    VARIANCE        reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MAX             reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    MIN             reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    STADDES         reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    BOXPLOT         reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    LINREG          reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)
    READ_FILE       reduce using rule 77 (tsig -> PLUS pnSaveOperadorPlMi .)


state 295

    (144) pnSaveOperadorPlMi -> empty .

    LEFT_PARENT     reduce using rule 144 (pnSaveOperadorPlMi -> empty .)
    CTEI            reduce using rule 144 (pnSaveOperadorPlMi -> empty .)
    CTEF            reduce using rule 144 (pnSaveOperadorPlMi -> empty .)
    CTEC            reduce using rule 144 (pnSaveOperadorPlMi -> empty .)
    ID              reduce using rule 144 (pnSaveOperadorPlMi -> empty .)
    MEAN            reduce using rule 144 (pnSaveOperadorPlMi -> empty .)
    MODE            reduce using rule 144 (pnSaveOperadorPlMi -> empty .)
    MEDIAN          reduce using rule 144 (pnSaveOperadorPlMi -> empty .)
    VARIANCE        reduce using rule 144 (pnSaveOperadorPlMi -> empty .)
    MAX             reduce using rule 144 (pnSaveOperadorPlMi -> empty .)
    MIN             reduce using rule 144 (pnSaveOperadorPlMi -> empty .)
    STADDES         reduce using rule 144 (pnSaveOperadorPlMi -> empty .)
    BOXPLOT         reduce using rule 144 (pnSaveOperadorPlMi -> empty .)
    LINREG          reduce using rule 144 (pnSaveOperadorPlMi -> empty .)
    READ_FILE       reduce using rule 144 (pnSaveOperadorPlMi -> empty .)


state 296

    (78) tsig -> MINUS pnSaveOperadorPlMi .

    LEFT_PARENT     reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    CTEI            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    CTEF            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    CTEC            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    ID              reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MEAN            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MODE            reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MEDIAN          reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    VARIANCE        reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MAX             reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    MIN             reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    STADDES         reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    BOXPLOT         reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    LINREG          reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)
    READ_FILE       reduce using rule 78 (tsig -> MINUS pnSaveOperadorPlMi .)


state 297

    (80) fp -> fsig f . pnCuadMuDi fp
    (149) pnCuadMuDi -> . empty
    (178) empty -> .

    MULT            reduce using rule 178 (empty -> .)
    DIV             reduce using rule 178 (empty -> .)
    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnCuadMuDi                     shift and go to state 328
    empty                          shift and go to state 181

state 298

    (82) fsig -> MULT pnSaveOperadorMuDi .

    LEFT_PARENT     reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    CTEI            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    CTEF            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    CTEC            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    ID              reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MEAN            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MODE            reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MEDIAN          reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    VARIANCE        reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MAX             reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    MIN             reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    STADDES         reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    BOXPLOT         reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    LINREG          reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)
    READ_FILE       reduce using rule 82 (fsig -> MULT pnSaveOperadorMuDi .)


state 299

    (145) pnSaveOperadorMuDi -> empty .

    LEFT_PARENT     reduce using rule 145 (pnSaveOperadorMuDi -> empty .)
    CTEI            reduce using rule 145 (pnSaveOperadorMuDi -> empty .)
    CTEF            reduce using rule 145 (pnSaveOperadorMuDi -> empty .)
    CTEC            reduce using rule 145 (pnSaveOperadorMuDi -> empty .)
    ID              reduce using rule 145 (pnSaveOperadorMuDi -> empty .)
    MEAN            reduce using rule 145 (pnSaveOperadorMuDi -> empty .)
    MODE            reduce using rule 145 (pnSaveOperadorMuDi -> empty .)
    MEDIAN          reduce using rule 145 (pnSaveOperadorMuDi -> empty .)
    VARIANCE        reduce using rule 145 (pnSaveOperadorMuDi -> empty .)
    MAX             reduce using rule 145 (pnSaveOperadorMuDi -> empty .)
    MIN             reduce using rule 145 (pnSaveOperadorMuDi -> empty .)
    STADDES         reduce using rule 145 (pnSaveOperadorMuDi -> empty .)
    BOXPLOT         reduce using rule 145 (pnSaveOperadorMuDi -> empty .)
    LINREG          reduce using rule 145 (pnSaveOperadorMuDi -> empty .)
    READ_FILE       reduce using rule 145 (pnSaveOperadorMuDi -> empty .)


state 300

    (83) fsig -> DIV pnSaveOperadorMuDi .

    LEFT_PARENT     reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    CTEI            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    CTEF            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    CTEC            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    ID              reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MEAN            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MODE            reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MEDIAN          reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    VARIANCE        reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MAX             reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    MIN             reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    STADDES         reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    BOXPLOT         reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    LINREG          reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)
    READ_FILE       reduce using rule 83 (fsig -> DIV pnSaveOperadorMuDi .)


state 301

    (84) f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT . pnPopFondoFalso
    (141) pnPopFondoFalso -> . empty
    (178) empty -> .

    MULT            reduce using rule 178 (empty -> .)
    DIV             reduce using rule 178 (empty -> .)
    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnPopFondoFalso                shift and go to state 329
    empty                          shift and go to state 330

state 302

    (14) copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 331


state 303

    (106) mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 332


state 304

    (107) mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 333


state 305

    (108) median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 334


state 306

    (109) variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 335


state 307

    (110) max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 336


state 308

    (111) min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 337


state 309

    (112) staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 338


state 310

    (113) boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 339


state 311

    (114) linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 340


state 312

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET . varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (178) empty -> .

    VAR             shift and go to state 14
    ID              reduce using rule 178 (empty -> .)
    READ            reduce using rule 178 (empty -> .)
    WRITE           reduce using rule 178 (empty -> .)
    IF              reduce using rule 178 (empty -> .)
    WHILE           reduce using rule 178 (empty -> .)
    FOR             reduce using rule 178 (empty -> .)
    RETURNS         reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)

    varp                           shift and go to state 341
    var                            shift and go to state 12
    empty                          shift and go to state 13

state 313

    (41) paramlist -> tipoparam ARROW ID . pnAddParametersTablaVar paramlistp
    (124) pnAddParametersTablaVar -> . empty
    (178) empty -> .

    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnAddParametersTablaVar        shift and go to state 342
    empty                          shift and go to state 343

state 314

    (34) idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim idpp .

    SEMICOLON       reduce using rule 34 (idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim idpp .)


state 315

    (56) asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .

    ID              reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    READ            reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    WRITE           reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    IF              reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    WHILE           reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    FOR             reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    RETURNS         reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    READ_FILE       reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MEAN            reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MODE            reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MEDIAN          reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    VARIANCE        reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MAX             reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MIN             reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    STADDES         reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    BOXPLOT         reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    LINREG          reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 56 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)


state 316

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT . pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (133) pnCheckNoParam -> . empty
    (178) empty -> .

    SEMICOLON       reduce using rule 178 (empty -> .)

    pnCheckNoParam                 shift and go to state 344
    empty                          shift and go to state 345

state 317

    (22) expp -> exp pnCuadParametro . exppp
    (24) exppp -> . COMMA pnUpdateK exp pnCuadParametro exppp
    (25) exppp -> . empty
    (178) empty -> .

    COMMA           shift and go to state 347
    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    exppp                          shift and go to state 346
    empty                          shift and go to state 348

state 318

    (131) pnCuadParametro -> empty .

    COMMA           reduce using rule 131 (pnCuadParametro -> empty .)
    RIGHT_PARENT    reduce using rule 131 (pnCuadParametro -> empty .)


state 319

    (17) indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify . indexpp RIGHT_SQR_BRACKET pnArrFFPop
    (19) indexpp -> . COMMA pnArrAccIncDim exp pnMatCalc
    (20) indexpp -> . empty pnArrCalc
    (178) empty -> .

    COMMA           shift and go to state 350
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    indexpp                        shift and go to state 349
    empty                          shift and go to state 351

state 320

    (172) pnArrVerify -> empty .

    COMMA           reduce using rule 172 (pnArrVerify -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 172 (pnArrVerify -> empty .)


state 321

    (57) lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 57 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)


state 322

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf

    LEFT_CUR_BRACKET shift and go to state 352


state 323

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile

    LEFT_CUR_BRACKET shift and go to state 353


state 324

    (95) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp . pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (164) pnCreateVControl -> . empty
    (178) empty -> .

    COMMA           reduce using rule 178 (empty -> .)

    pnCreateVControl               shift and go to state 354
    empty                          shift and go to state 355

state 325

    (63) logic -> logicsig exprel pnCuadOplog . logic
    (63) logic -> . logicsig exprel pnCuadOplog logic
    (64) logic -> . empty
    (65) logicsig -> . AND pnSaveOperadorLog
    (66) logicsig -> . OR pnSaveOperadorLog
    (178) empty -> .

    AND             shift and go to state 232
    OR              shift and go to state 233
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    logicsig                       shift and go to state 230
    logic                          shift and go to state 356
    empty                          shift and go to state 231

state 326

    (68) relacionalp -> relsig e pnCuadOpRelacional . relacionalp
    (68) relacionalp -> . relsig e pnCuadOpRelacional relacionalp
    (69) relacionalp -> . empty
    (70) relsig -> . LESS_THAN pnSaveOperadorRel
    (71) relsig -> . GREATER_THAN pnSaveOperadorRel
    (72) relsig -> . EQUALS pnSaveOperadorRel
    (73) relsig -> . NOTEQUALS pnSaveOperadorRel
    (178) empty -> .

    LESS_THAN       shift and go to state 237
    GREATER_THAN    shift and go to state 238
    EQUALS          shift and go to state 239
    NOTEQUALS       shift and go to state 240
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    relsig                         shift and go to state 235
    relacionalp                    shift and go to state 357
    empty                          shift and go to state 236

state 327

    (75) tp -> tsig t pnCuadPlMi . tp
    (75) tp -> . tsig t pnCuadPlMi tp
    (76) tp -> . empty
    (77) tsig -> . PLUS pnSaveOperadorPlMi
    (78) tsig -> . MINUS pnSaveOperadorPlMi
    (178) empty -> .

    PLUS            shift and go to state 244
    MINUS           shift and go to state 245
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    tsig                           shift and go to state 242
    tp                             shift and go to state 358
    empty                          shift and go to state 243

state 328

    (80) fp -> fsig f pnCuadMuDi . fp
    (80) fp -> . fsig f pnCuadMuDi fp
    (81) fp -> . empty
    (82) fsig -> . MULT pnSaveOperadorMuDi
    (83) fsig -> . DIV pnSaveOperadorMuDi
    (178) empty -> .

    MULT            shift and go to state 249
    DIV             shift and go to state 250
    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    fsig                           shift and go to state 247
    fp                             shift and go to state 359
    empty                          shift and go to state 248

state 329

    (84) f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .

    MULT            reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    DIV             reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    PLUS            reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    MINUS           reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    LESS_THAN       reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    GREATER_THAN    reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    EQUALS          reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    NOTEQUALS       reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    AND             reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    OR              reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    SEMICOLON       reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    RIGHT_PARENT    reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    COMMA           reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    RIGHT_SQR_BRACKET reduce using rule 84 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)


state 330

    (141) pnPopFondoFalso -> empty .

    MULT            reduce using rule 141 (pnPopFondoFalso -> empty .)
    DIV             reduce using rule 141 (pnPopFondoFalso -> empty .)
    PLUS            reduce using rule 141 (pnPopFondoFalso -> empty .)
    MINUS           reduce using rule 141 (pnPopFondoFalso -> empty .)
    LESS_THAN       reduce using rule 141 (pnPopFondoFalso -> empty .)
    GREATER_THAN    reduce using rule 141 (pnPopFondoFalso -> empty .)
    EQUALS          reduce using rule 141 (pnPopFondoFalso -> empty .)
    NOTEQUALS       reduce using rule 141 (pnPopFondoFalso -> empty .)
    AND             reduce using rule 141 (pnPopFondoFalso -> empty .)
    OR              reduce using rule 141 (pnPopFondoFalso -> empty .)
    SEMICOLON       reduce using rule 141 (pnPopFondoFalso -> empty .)
    RIGHT_PARENT    reduce using rule 141 (pnPopFondoFalso -> empty .)
    COMMA           reduce using rule 141 (pnPopFondoFalso -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 141 (pnPopFondoFalso -> empty .)


state 331

    (14) copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)


state 332

    (106) mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 106 (mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 333

    (107) mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 107 (mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 334

    (108) median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 335

    (109) variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 336

    (110) max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 110 (max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 337

    (111) min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 111 (min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 338

    (112) staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 339

    (113) boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 340

    (114) linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 341

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp . pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (126) pnDirecIniFunc -> . empty
    (178) empty -> .

    ID              reduce using rule 178 (empty -> .)
    READ            reduce using rule 178 (empty -> .)
    WRITE           reduce using rule 178 (empty -> .)
    IF              reduce using rule 178 (empty -> .)
    WHILE           reduce using rule 178 (empty -> .)
    FOR             reduce using rule 178 (empty -> .)
    RETURNS         reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)

    pnDirecIniFunc                 shift and go to state 360
    empty                          shift and go to state 361

state 342

    (41) paramlist -> tipoparam ARROW ID pnAddParametersTablaVar . paramlistp
    (44) paramlistp -> . COMMA paramlist
    (45) paramlistp -> . empty
    (178) empty -> .

    COMMA           shift and go to state 363
    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    paramlistp                     shift and go to state 362
    empty                          shift and go to state 364

state 343

    (124) pnAddParametersTablaVar -> empty .

    COMMA           reduce using rule 124 (pnAddParametersTablaVar -> empty .)
    RIGHT_PARENT    reduce using rule 124 (pnAddParametersTablaVar -> empty .)


state 344

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam . SEMICOLON pnCuadGoSub pnHandleReturnValue

    SEMICOLON       shift and go to state 365


state 345

    (133) pnCheckNoParam -> empty .

    SEMICOLON       reduce using rule 133 (pnCheckNoParam -> empty .)


state 346

    (22) expp -> exp pnCuadParametro exppp .

    RIGHT_PARENT    reduce using rule 22 (expp -> exp pnCuadParametro exppp .)


state 347

    (24) exppp -> COMMA . pnUpdateK exp pnCuadParametro exppp
    (132) pnUpdateK -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    CTEI            reduce using rule 178 (empty -> .)
    CTEF            reduce using rule 178 (empty -> .)
    CTEC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)

    pnUpdateK                      shift and go to state 366
    empty                          shift and go to state 367

state 348

    (25) exppp -> empty .

    RIGHT_PARENT    reduce using rule 25 (exppp -> empty .)


state 349

    (17) indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp . RIGHT_SQR_BRACKET pnArrFFPop

    RIGHT_SQR_BRACKET shift and go to state 368


state 350

    (19) indexpp -> COMMA . pnArrAccIncDim exp pnMatCalc
    (173) pnArrAccIncDim -> . empty
    (178) empty -> .

    LEFT_PARENT     reduce using rule 178 (empty -> .)
    CTEI            reduce using rule 178 (empty -> .)
    CTEF            reduce using rule 178 (empty -> .)
    CTEC            reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)

    pnArrAccIncDim                 shift and go to state 369
    empty                          shift and go to state 370

state 351

    (20) indexpp -> empty . pnArrCalc
    (174) pnArrCalc -> . empty
    (178) empty -> .

    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    empty                          shift and go to state 371
    pnArrCalc                      shift and go to state 372

state 352

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (178) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp pnCuadRet SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)
    ID              shift and go to state 82
    READ            shift and go to state 83
    WRITE           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FOR             shift and go to state 87
    RETURNS         shift and go to state 97
    READ_FILE       shift and go to state 98
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107

    estatutop                      shift and go to state 373
    estatuto                       shift and go to state 69
    empty                          shift and go to state 70
    asign                          shift and go to state 71
    llamada                        shift and go to state 72
    lee                            shift and go to state 73
    escribe                        shift and go to state 74
    condicion                      shift and go to state 75
    ciclow                         shift and go to state 76
    ciclof                         shift and go to state 77
    funcesp                        shift and go to state 78
    return                         shift and go to state 79
    copy                           shift and go to state 80
    variable                       shift and go to state 81
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96

state 353

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET pnEndWhile
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (178) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp pnCuadRet SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)
    ID              shift and go to state 82
    READ            shift and go to state 83
    WRITE           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FOR             shift and go to state 87
    RETURNS         shift and go to state 97
    READ_FILE       shift and go to state 98
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107

    estatutop                      shift and go to state 374
    estatuto                       shift and go to state 69
    empty                          shift and go to state 70
    asign                          shift and go to state 71
    llamada                        shift and go to state 72
    lee                            shift and go to state 73
    escribe                        shift and go to state 74
    condicion                      shift and go to state 75
    ciclow                         shift and go to state 76
    ciclof                         shift and go to state 77
    funcesp                        shift and go to state 78
    return                         shift and go to state 79
    copy                           shift and go to state 80
    variable                       shift and go to state 81
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96

state 354

    (95) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl . COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    COMMA           shift and go to state 375


state 355

    (164) pnCreateVControl -> empty .

    COMMA           reduce using rule 164 (pnCreateVControl -> empty .)


state 356

    (63) logic -> logicsig exprel pnCuadOplog logic .

    SEMICOLON       reduce using rule 63 (logic -> logicsig exprel pnCuadOplog logic .)
    RIGHT_PARENT    reduce using rule 63 (logic -> logicsig exprel pnCuadOplog logic .)
    COMMA           reduce using rule 63 (logic -> logicsig exprel pnCuadOplog logic .)
    RIGHT_SQR_BRACKET reduce using rule 63 (logic -> logicsig exprel pnCuadOplog logic .)


state 357

    (68) relacionalp -> relsig e pnCuadOpRelacional relacionalp .

    AND             reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    OR              reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    SEMICOLON       reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    RIGHT_PARENT    reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    COMMA           reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    RIGHT_SQR_BRACKET reduce using rule 68 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)


state 358

    (75) tp -> tsig t pnCuadPlMi tp .

    LESS_THAN       reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    GREATER_THAN    reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    EQUALS          reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    NOTEQUALS       reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    AND             reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    OR              reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    SEMICOLON       reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    RIGHT_PARENT    reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    COMMA           reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)
    RIGHT_SQR_BRACKET reduce using rule 75 (tp -> tsig t pnCuadPlMi tp .)


state 359

    (80) fp -> fsig f pnCuadMuDi fp .

    PLUS            reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    MINUS           reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    LESS_THAN       reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    GREATER_THAN    reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    EQUALS          reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    NOTEQUALS       reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    AND             reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    OR              reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    SEMICOLON       reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    RIGHT_PARENT    reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    COMMA           reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)
    RIGHT_SQR_BRACKET reduce using rule 80 (fp -> fsig f pnCuadMuDi fp .)


state 360

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc . estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (178) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp pnCuadRet SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)
    ID              shift and go to state 82
    READ            shift and go to state 83
    WRITE           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FOR             shift and go to state 87
    RETURNS         shift and go to state 97
    READ_FILE       shift and go to state 98
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107

    estatutop                      shift and go to state 376
    estatuto                       shift and go to state 69
    empty                          shift and go to state 70
    asign                          shift and go to state 71
    llamada                        shift and go to state 72
    lee                            shift and go to state 73
    escribe                        shift and go to state 74
    condicion                      shift and go to state 75
    ciclow                         shift and go to state 76
    ciclof                         shift and go to state 77
    funcesp                        shift and go to state 78
    return                         shift and go to state 79
    copy                           shift and go to state 80
    variable                       shift and go to state 81
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96

state 361

    (126) pnDirecIniFunc -> empty .

    ID              reduce using rule 126 (pnDirecIniFunc -> empty .)
    READ            reduce using rule 126 (pnDirecIniFunc -> empty .)
    WRITE           reduce using rule 126 (pnDirecIniFunc -> empty .)
    IF              reduce using rule 126 (pnDirecIniFunc -> empty .)
    WHILE           reduce using rule 126 (pnDirecIniFunc -> empty .)
    FOR             reduce using rule 126 (pnDirecIniFunc -> empty .)
    RETURNS         reduce using rule 126 (pnDirecIniFunc -> empty .)
    READ_FILE       reduce using rule 126 (pnDirecIniFunc -> empty .)
    MEAN            reduce using rule 126 (pnDirecIniFunc -> empty .)
    MODE            reduce using rule 126 (pnDirecIniFunc -> empty .)
    MEDIAN          reduce using rule 126 (pnDirecIniFunc -> empty .)
    VARIANCE        reduce using rule 126 (pnDirecIniFunc -> empty .)
    MAX             reduce using rule 126 (pnDirecIniFunc -> empty .)
    MIN             reduce using rule 126 (pnDirecIniFunc -> empty .)
    STADDES         reduce using rule 126 (pnDirecIniFunc -> empty .)
    BOXPLOT         reduce using rule 126 (pnDirecIniFunc -> empty .)
    LINREG          reduce using rule 126 (pnDirecIniFunc -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 126 (pnDirecIniFunc -> empty .)


state 362

    (41) paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp .

    RIGHT_PARENT    reduce using rule 41 (paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp .)


state 363

    (44) paramlistp -> COMMA . paramlist
    (41) paramlist -> . tipoparam ARROW ID pnAddParametersTablaVar paramlistp
    (42) tipoparam -> . tipo_simp
    (43) tipoparam -> . DATAFRAME pnSaveTypeVar
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    DATAFRAME       shift and go to state 206
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    paramlist                      shift and go to state 377
    tipoparam                      shift and go to state 204
    tipo_simp                      shift and go to state 205

state 364

    (45) paramlistp -> empty .

    RIGHT_PARENT    reduce using rule 45 (paramlistp -> empty .)


state 365

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON . pnCuadGoSub pnHandleReturnValue
    (134) pnCuadGoSub -> . empty
    (178) empty -> .

    ID              reduce using rule 178 (empty -> .)
    READ            reduce using rule 178 (empty -> .)
    WRITE           reduce using rule 178 (empty -> .)
    IF              reduce using rule 178 (empty -> .)
    WHILE           reduce using rule 178 (empty -> .)
    FOR             reduce using rule 178 (empty -> .)
    RETURNS         reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)
    MULT            reduce using rule 178 (empty -> .)
    DIV             reduce using rule 178 (empty -> .)
    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnCuadGoSub                    shift and go to state 378
    empty                          shift and go to state 379

state 366

    (24) exppp -> COMMA pnUpdateK . exp pnCuadParametro exppp
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 132
    CTEI            shift and go to state 133
    CTEF            shift and go to state 134
    CTEC            shift and go to state 135
    ID              shift and go to state 139
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107
    READ_FILE       shift and go to state 98

    exp                            shift and go to state 380
    exprel                         shift and go to state 128
    e                              shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    variable                       shift and go to state 136
    llamada                        shift and go to state 137
    funcesp                        shift and go to state 138
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96
    copy                           shift and go to state 140

state 367

    (132) pnUpdateK -> empty .

    LEFT_PARENT     reduce using rule 132 (pnUpdateK -> empty .)
    CTEI            reduce using rule 132 (pnUpdateK -> empty .)
    CTEF            reduce using rule 132 (pnUpdateK -> empty .)
    CTEC            reduce using rule 132 (pnUpdateK -> empty .)
    ID              reduce using rule 132 (pnUpdateK -> empty .)
    MEAN            reduce using rule 132 (pnUpdateK -> empty .)
    MODE            reduce using rule 132 (pnUpdateK -> empty .)
    MEDIAN          reduce using rule 132 (pnUpdateK -> empty .)
    VARIANCE        reduce using rule 132 (pnUpdateK -> empty .)
    MAX             reduce using rule 132 (pnUpdateK -> empty .)
    MIN             reduce using rule 132 (pnUpdateK -> empty .)
    STADDES         reduce using rule 132 (pnUpdateK -> empty .)
    BOXPLOT         reduce using rule 132 (pnUpdateK -> empty .)
    LINREG          reduce using rule 132 (pnUpdateK -> empty .)
    READ_FILE       reduce using rule 132 (pnUpdateK -> empty .)


state 368

    (17) indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET . pnArrFFPop
    (176) pnArrFFPop -> . empty
    (178) empty -> .

    ASIGN           reduce using rule 178 (empty -> .)
    MULT            reduce using rule 178 (empty -> .)
    DIV             reduce using rule 178 (empty -> .)
    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnArrFFPop                     shift and go to state 381
    empty                          shift and go to state 382

state 369

    (19) indexpp -> COMMA pnArrAccIncDim . exp pnMatCalc
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 132
    CTEI            shift and go to state 133
    CTEF            shift and go to state 134
    CTEC            shift and go to state 135
    ID              shift and go to state 139
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107
    READ_FILE       shift and go to state 98

    exp                            shift and go to state 383
    exprel                         shift and go to state 128
    e                              shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    variable                       shift and go to state 136
    llamada                        shift and go to state 137
    funcesp                        shift and go to state 138
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96
    copy                           shift and go to state 140

state 370

    (173) pnArrAccIncDim -> empty .

    LEFT_PARENT     reduce using rule 173 (pnArrAccIncDim -> empty .)
    CTEI            reduce using rule 173 (pnArrAccIncDim -> empty .)
    CTEF            reduce using rule 173 (pnArrAccIncDim -> empty .)
    CTEC            reduce using rule 173 (pnArrAccIncDim -> empty .)
    ID              reduce using rule 173 (pnArrAccIncDim -> empty .)
    MEAN            reduce using rule 173 (pnArrAccIncDim -> empty .)
    MODE            reduce using rule 173 (pnArrAccIncDim -> empty .)
    MEDIAN          reduce using rule 173 (pnArrAccIncDim -> empty .)
    VARIANCE        reduce using rule 173 (pnArrAccIncDim -> empty .)
    MAX             reduce using rule 173 (pnArrAccIncDim -> empty .)
    MIN             reduce using rule 173 (pnArrAccIncDim -> empty .)
    STADDES         reduce using rule 173 (pnArrAccIncDim -> empty .)
    BOXPLOT         reduce using rule 173 (pnArrAccIncDim -> empty .)
    LINREG          reduce using rule 173 (pnArrAccIncDim -> empty .)
    READ_FILE       reduce using rule 173 (pnArrAccIncDim -> empty .)


state 371

    (174) pnArrCalc -> empty .

    RIGHT_SQR_BRACKET reduce using rule 174 (pnArrCalc -> empty .)


state 372

    (20) indexpp -> empty pnArrCalc .

    RIGHT_SQR_BRACKET reduce using rule 20 (indexpp -> empty pnArrCalc .)


state 373

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET falsop pnEndIf

    RIGHT_CUR_BRACKET shift and go to state 384


state 374

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET pnEndWhile

    RIGHT_CUR_BRACKET shift and go to state 385


state 375

    (95) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA . exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (62) exp -> . exprel pnCuadOplog logic
    (67) exprel -> . e pnCuadOpRelacional relacionalp
    (74) e -> . t pnCuadPlMi tp
    (79) t -> . f pnCuadMuDi fp
    (84) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (85) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (86) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (87) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID pnSaveOperandos indexp
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 132
    CTEI            shift and go to state 133
    CTEF            shift and go to state 134
    CTEC            shift and go to state 135
    ID              shift and go to state 139
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107
    READ_FILE       shift and go to state 98

    variable                       shift and go to state 136
    exp                            shift and go to state 386
    exprel                         shift and go to state 128
    e                              shift and go to state 129
    t                              shift and go to state 130
    f                              shift and go to state 131
    llamada                        shift and go to state 137
    funcesp                        shift and go to state 138
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96
    copy                           shift and go to state 140

state 376

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop . RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    RIGHT_CUR_BRACKET shift and go to state 387


state 377

    (44) paramlistp -> COMMA paramlist .

    RIGHT_PARENT    reduce using rule 44 (paramlistp -> COMMA paramlist .)


state 378

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub . pnHandleReturnValue
    (135) pnHandleReturnValue -> . empty
    (178) empty -> .

    ID              reduce using rule 178 (empty -> .)
    READ            reduce using rule 178 (empty -> .)
    WRITE           reduce using rule 178 (empty -> .)
    IF              reduce using rule 178 (empty -> .)
    WHILE           reduce using rule 178 (empty -> .)
    FOR             reduce using rule 178 (empty -> .)
    RETURNS         reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)
    MULT            reduce using rule 178 (empty -> .)
    DIV             reduce using rule 178 (empty -> .)
    PLUS            reduce using rule 178 (empty -> .)
    MINUS           reduce using rule 178 (empty -> .)
    LESS_THAN       reduce using rule 178 (empty -> .)
    GREATER_THAN    reduce using rule 178 (empty -> .)
    EQUALS          reduce using rule 178 (empty -> .)
    NOTEQUALS       reduce using rule 178 (empty -> .)
    AND             reduce using rule 178 (empty -> .)
    OR              reduce using rule 178 (empty -> .)
    SEMICOLON       reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)
    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnHandleReturnValue            shift and go to state 388
    empty                          shift and go to state 389

state 379

    (134) pnCuadGoSub -> empty .

    ID              reduce using rule 134 (pnCuadGoSub -> empty .)
    READ            reduce using rule 134 (pnCuadGoSub -> empty .)
    WRITE           reduce using rule 134 (pnCuadGoSub -> empty .)
    IF              reduce using rule 134 (pnCuadGoSub -> empty .)
    WHILE           reduce using rule 134 (pnCuadGoSub -> empty .)
    FOR             reduce using rule 134 (pnCuadGoSub -> empty .)
    RETURNS         reduce using rule 134 (pnCuadGoSub -> empty .)
    READ_FILE       reduce using rule 134 (pnCuadGoSub -> empty .)
    MEAN            reduce using rule 134 (pnCuadGoSub -> empty .)
    MODE            reduce using rule 134 (pnCuadGoSub -> empty .)
    MEDIAN          reduce using rule 134 (pnCuadGoSub -> empty .)
    VARIANCE        reduce using rule 134 (pnCuadGoSub -> empty .)
    MAX             reduce using rule 134 (pnCuadGoSub -> empty .)
    MIN             reduce using rule 134 (pnCuadGoSub -> empty .)
    STADDES         reduce using rule 134 (pnCuadGoSub -> empty .)
    BOXPLOT         reduce using rule 134 (pnCuadGoSub -> empty .)
    LINREG          reduce using rule 134 (pnCuadGoSub -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 134 (pnCuadGoSub -> empty .)
    MULT            reduce using rule 134 (pnCuadGoSub -> empty .)
    DIV             reduce using rule 134 (pnCuadGoSub -> empty .)
    PLUS            reduce using rule 134 (pnCuadGoSub -> empty .)
    MINUS           reduce using rule 134 (pnCuadGoSub -> empty .)
    LESS_THAN       reduce using rule 134 (pnCuadGoSub -> empty .)
    GREATER_THAN    reduce using rule 134 (pnCuadGoSub -> empty .)
    EQUALS          reduce using rule 134 (pnCuadGoSub -> empty .)
    NOTEQUALS       reduce using rule 134 (pnCuadGoSub -> empty .)
    AND             reduce using rule 134 (pnCuadGoSub -> empty .)
    OR              reduce using rule 134 (pnCuadGoSub -> empty .)
    SEMICOLON       reduce using rule 134 (pnCuadGoSub -> empty .)
    RIGHT_PARENT    reduce using rule 134 (pnCuadGoSub -> empty .)
    COMMA           reduce using rule 134 (pnCuadGoSub -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 134 (pnCuadGoSub -> empty .)


state 380

    (24) exppp -> COMMA pnUpdateK exp . pnCuadParametro exppp
    (131) pnCuadParametro -> . empty
    (178) empty -> .

    COMMA           reduce using rule 178 (empty -> .)
    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCuadParametro                shift and go to state 390
    empty                          shift and go to state 318

state 381

    (17) indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .

    ASIGN           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    MULT            reduce using rule 17 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    DIV             reduce using rule 17 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    PLUS            reduce using rule 17 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    MINUS           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    LESS_THAN       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    GREATER_THAN    reduce using rule 17 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    EQUALS          reduce using rule 17 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    NOTEQUALS       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    AND             reduce using rule 17 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    OR              reduce using rule 17 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    SEMICOLON       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    RIGHT_PARENT    reduce using rule 17 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    COMMA           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    RIGHT_SQR_BRACKET reduce using rule 17 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)


state 382

    (176) pnArrFFPop -> empty .

    ASIGN           reduce using rule 176 (pnArrFFPop -> empty .)
    MULT            reduce using rule 176 (pnArrFFPop -> empty .)
    DIV             reduce using rule 176 (pnArrFFPop -> empty .)
    PLUS            reduce using rule 176 (pnArrFFPop -> empty .)
    MINUS           reduce using rule 176 (pnArrFFPop -> empty .)
    LESS_THAN       reduce using rule 176 (pnArrFFPop -> empty .)
    GREATER_THAN    reduce using rule 176 (pnArrFFPop -> empty .)
    EQUALS          reduce using rule 176 (pnArrFFPop -> empty .)
    NOTEQUALS       reduce using rule 176 (pnArrFFPop -> empty .)
    AND             reduce using rule 176 (pnArrFFPop -> empty .)
    OR              reduce using rule 176 (pnArrFFPop -> empty .)
    SEMICOLON       reduce using rule 176 (pnArrFFPop -> empty .)
    RIGHT_PARENT    reduce using rule 176 (pnArrFFPop -> empty .)
    COMMA           reduce using rule 176 (pnArrFFPop -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 176 (pnArrFFPop -> empty .)


state 383

    (19) indexpp -> COMMA pnArrAccIncDim exp . pnMatCalc
    (175) pnMatCalc -> . empty
    (178) empty -> .

    RIGHT_SQR_BRACKET reduce using rule 178 (empty -> .)

    pnMatCalc                      shift and go to state 391
    empty                          shift and go to state 392

state 384

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET . falsop pnEndIf
    (92) falsop -> . IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (93) falsop -> . empty
    (178) empty -> .

    IF_FALSE        shift and go to state 394
    ID              reduce using rule 178 (empty -> .)
    READ            reduce using rule 178 (empty -> .)
    WRITE           reduce using rule 178 (empty -> .)
    IF              reduce using rule 178 (empty -> .)
    WHILE           reduce using rule 178 (empty -> .)
    FOR             reduce using rule 178 (empty -> .)
    RETURNS         reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)

    falsop                         shift and go to state 393
    empty                          shift and go to state 395

state 385

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET . pnEndWhile
    (162) pnEndWhile -> . empty
    (178) empty -> .

    ID              reduce using rule 178 (empty -> .)
    READ            reduce using rule 178 (empty -> .)
    WRITE           reduce using rule 178 (empty -> .)
    IF              reduce using rule 178 (empty -> .)
    WHILE           reduce using rule 178 (empty -> .)
    FOR             reduce using rule 178 (empty -> .)
    RETURNS         reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)

    pnEndWhile                     shift and go to state 396
    empty                          shift and go to state 397

state 386

    (95) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp . pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (165) pnCompControlFinal -> . empty
    (178) empty -> .

    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    pnCompControlFinal             shift and go to state 398
    empty                          shift and go to state 399

state 387

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET . pnCountVarsINTOResources pnCloseCurrentFunction
    (125) pnCountVarsINTOResources -> . empty
    (178) empty -> .

    FUNC            reduce using rule 178 (empty -> .)
    DO              reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    READ            reduce using rule 178 (empty -> .)
    WRITE           reduce using rule 178 (empty -> .)
    IF              reduce using rule 178 (empty -> .)
    WHILE           reduce using rule 178 (empty -> .)
    FOR             reduce using rule 178 (empty -> .)
    RETURNS         reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)

    pnCountVarsINTOResources       shift and go to state 400
    empty                          shift and go to state 401

state 388

    (21) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .

    ID              reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    READ            reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    WRITE           reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    IF              reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    WHILE           reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    FOR             reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    RETURNS         reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    READ_FILE       reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    MEAN            reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    MODE            reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    MEDIAN          reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    VARIANCE        reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    MAX             reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    MIN             reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    STADDES         reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    BOXPLOT         reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    LINREG          reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    RIGHT_CUR_BRACKET reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    MULT            reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    DIV             reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    PLUS            reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    MINUS           reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    LESS_THAN       reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    GREATER_THAN    reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    EQUALS          reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    NOTEQUALS       reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    AND             reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    OR              reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    SEMICOLON       reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    RIGHT_PARENT    reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    COMMA           reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    RIGHT_SQR_BRACKET reduce using rule 21 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)


state 389

    (135) pnHandleReturnValue -> empty .

    ID              reduce using rule 135 (pnHandleReturnValue -> empty .)
    READ            reduce using rule 135 (pnHandleReturnValue -> empty .)
    WRITE           reduce using rule 135 (pnHandleReturnValue -> empty .)
    IF              reduce using rule 135 (pnHandleReturnValue -> empty .)
    WHILE           reduce using rule 135 (pnHandleReturnValue -> empty .)
    FOR             reduce using rule 135 (pnHandleReturnValue -> empty .)
    RETURNS         reduce using rule 135 (pnHandleReturnValue -> empty .)
    READ_FILE       reduce using rule 135 (pnHandleReturnValue -> empty .)
    MEAN            reduce using rule 135 (pnHandleReturnValue -> empty .)
    MODE            reduce using rule 135 (pnHandleReturnValue -> empty .)
    MEDIAN          reduce using rule 135 (pnHandleReturnValue -> empty .)
    VARIANCE        reduce using rule 135 (pnHandleReturnValue -> empty .)
    MAX             reduce using rule 135 (pnHandleReturnValue -> empty .)
    MIN             reduce using rule 135 (pnHandleReturnValue -> empty .)
    STADDES         reduce using rule 135 (pnHandleReturnValue -> empty .)
    BOXPLOT         reduce using rule 135 (pnHandleReturnValue -> empty .)
    LINREG          reduce using rule 135 (pnHandleReturnValue -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 135 (pnHandleReturnValue -> empty .)
    MULT            reduce using rule 135 (pnHandleReturnValue -> empty .)
    DIV             reduce using rule 135 (pnHandleReturnValue -> empty .)
    PLUS            reduce using rule 135 (pnHandleReturnValue -> empty .)
    MINUS           reduce using rule 135 (pnHandleReturnValue -> empty .)
    LESS_THAN       reduce using rule 135 (pnHandleReturnValue -> empty .)
    GREATER_THAN    reduce using rule 135 (pnHandleReturnValue -> empty .)
    EQUALS          reduce using rule 135 (pnHandleReturnValue -> empty .)
    NOTEQUALS       reduce using rule 135 (pnHandleReturnValue -> empty .)
    AND             reduce using rule 135 (pnHandleReturnValue -> empty .)
    OR              reduce using rule 135 (pnHandleReturnValue -> empty .)
    SEMICOLON       reduce using rule 135 (pnHandleReturnValue -> empty .)
    RIGHT_PARENT    reduce using rule 135 (pnHandleReturnValue -> empty .)
    COMMA           reduce using rule 135 (pnHandleReturnValue -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 135 (pnHandleReturnValue -> empty .)


state 390

    (24) exppp -> COMMA pnUpdateK exp pnCuadParametro . exppp
    (24) exppp -> . COMMA pnUpdateK exp pnCuadParametro exppp
    (25) exppp -> . empty
    (178) empty -> .

    COMMA           shift and go to state 347
    RIGHT_PARENT    reduce using rule 178 (empty -> .)

    exppp                          shift and go to state 402
    empty                          shift and go to state 348

state 391

    (19) indexpp -> COMMA pnArrAccIncDim exp pnMatCalc .

    RIGHT_SQR_BRACKET reduce using rule 19 (indexpp -> COMMA pnArrAccIncDim exp pnMatCalc .)


state 392

    (175) pnMatCalc -> empty .

    RIGHT_SQR_BRACKET reduce using rule 175 (pnMatCalc -> empty .)


state 393

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop . pnEndIf
    (160) pnEndIf -> . empty
    (178) empty -> .

    ID              reduce using rule 178 (empty -> .)
    READ            reduce using rule 178 (empty -> .)
    WRITE           reduce using rule 178 (empty -> .)
    IF              reduce using rule 178 (empty -> .)
    WHILE           reduce using rule 178 (empty -> .)
    FOR             reduce using rule 178 (empty -> .)
    RETURNS         reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)

    pnEndIf                        shift and go to state 403
    empty                          shift and go to state 404

state 394

    (92) falsop -> IF_FALSE . pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (159) pnElseIf -> . empty
    (178) empty -> .

    LEFT_CUR_BRACKET reduce using rule 178 (empty -> .)

    pnElseIf                       shift and go to state 405
    empty                          shift and go to state 406

state 395

    (93) falsop -> empty .

    ID              reduce using rule 93 (falsop -> empty .)
    READ            reduce using rule 93 (falsop -> empty .)
    WRITE           reduce using rule 93 (falsop -> empty .)
    IF              reduce using rule 93 (falsop -> empty .)
    WHILE           reduce using rule 93 (falsop -> empty .)
    FOR             reduce using rule 93 (falsop -> empty .)
    RETURNS         reduce using rule 93 (falsop -> empty .)
    READ_FILE       reduce using rule 93 (falsop -> empty .)
    MEAN            reduce using rule 93 (falsop -> empty .)
    MODE            reduce using rule 93 (falsop -> empty .)
    MEDIAN          reduce using rule 93 (falsop -> empty .)
    VARIANCE        reduce using rule 93 (falsop -> empty .)
    MAX             reduce using rule 93 (falsop -> empty .)
    MIN             reduce using rule 93 (falsop -> empty .)
    STADDES         reduce using rule 93 (falsop -> empty .)
    BOXPLOT         reduce using rule 93 (falsop -> empty .)
    LINREG          reduce using rule 93 (falsop -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 93 (falsop -> empty .)


state 396

    (94) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .

    ID              reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    READ            reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    WRITE           reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    IF              reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    WHILE           reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    FOR             reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    RETURNS         reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    READ_FILE       reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MEAN            reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MODE            reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MEDIAN          reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    VARIANCE        reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MAX             reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MIN             reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    STADDES         reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    BOXPLOT         reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    LINREG          reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    RIGHT_CUR_BRACKET reduce using rule 94 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)


state 397

    (162) pnEndWhile -> empty .

    ID              reduce using rule 162 (pnEndWhile -> empty .)
    READ            reduce using rule 162 (pnEndWhile -> empty .)
    WRITE           reduce using rule 162 (pnEndWhile -> empty .)
    IF              reduce using rule 162 (pnEndWhile -> empty .)
    WHILE           reduce using rule 162 (pnEndWhile -> empty .)
    FOR             reduce using rule 162 (pnEndWhile -> empty .)
    RETURNS         reduce using rule 162 (pnEndWhile -> empty .)
    READ_FILE       reduce using rule 162 (pnEndWhile -> empty .)
    MEAN            reduce using rule 162 (pnEndWhile -> empty .)
    MODE            reduce using rule 162 (pnEndWhile -> empty .)
    MEDIAN          reduce using rule 162 (pnEndWhile -> empty .)
    VARIANCE        reduce using rule 162 (pnEndWhile -> empty .)
    MAX             reduce using rule 162 (pnEndWhile -> empty .)
    MIN             reduce using rule 162 (pnEndWhile -> empty .)
    STADDES         reduce using rule 162 (pnEndWhile -> empty .)
    BOXPLOT         reduce using rule 162 (pnEndWhile -> empty .)
    LINREG          reduce using rule 162 (pnEndWhile -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 162 (pnEndWhile -> empty .)


state 398

    (95) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal . RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    RIGHT_PARENT    shift and go to state 407


state 399

    (165) pnCompControlFinal -> empty .

    RIGHT_PARENT    reduce using rule 165 (pnCompControlFinal -> empty .)


state 400

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources . pnCloseCurrentFunction
    (127) pnCloseCurrentFunction -> . empty
    (178) empty -> .

    FUNC            reduce using rule 178 (empty -> .)
    DO              reduce using rule 178 (empty -> .)
    ID              reduce using rule 178 (empty -> .)
    READ            reduce using rule 178 (empty -> .)
    WRITE           reduce using rule 178 (empty -> .)
    IF              reduce using rule 178 (empty -> .)
    WHILE           reduce using rule 178 (empty -> .)
    FOR             reduce using rule 178 (empty -> .)
    RETURNS         reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)

    pnCloseCurrentFunction         shift and go to state 408
    empty                          shift and go to state 409

state 401

    (125) pnCountVarsINTOResources -> empty .

    FUNC            reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    DO              reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    ID              reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    READ            reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    WRITE           reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    IF              reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    WHILE           reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    FOR             reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    RETURNS         reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    READ_FILE       reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    MEAN            reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    MODE            reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    MEDIAN          reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    VARIANCE        reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    MAX             reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    MIN             reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    STADDES         reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    BOXPLOT         reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    LINREG          reduce using rule 125 (pnCountVarsINTOResources -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 125 (pnCountVarsINTOResources -> empty .)


state 402

    (24) exppp -> COMMA pnUpdateK exp pnCuadParametro exppp .

    RIGHT_PARENT    reduce using rule 24 (exppp -> COMMA pnUpdateK exp pnCuadParametro exppp .)


state 403

    (91) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .

    ID              reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    READ            reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    WRITE           reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    IF              reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    WHILE           reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    FOR             reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    RETURNS         reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    READ_FILE       reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MEAN            reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MODE            reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MEDIAN          reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    VARIANCE        reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MAX             reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MIN             reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    STADDES         reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    BOXPLOT         reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    LINREG          reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    RIGHT_CUR_BRACKET reduce using rule 91 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)


state 404

    (160) pnEndIf -> empty .

    ID              reduce using rule 160 (pnEndIf -> empty .)
    READ            reduce using rule 160 (pnEndIf -> empty .)
    WRITE           reduce using rule 160 (pnEndIf -> empty .)
    IF              reduce using rule 160 (pnEndIf -> empty .)
    WHILE           reduce using rule 160 (pnEndIf -> empty .)
    FOR             reduce using rule 160 (pnEndIf -> empty .)
    RETURNS         reduce using rule 160 (pnEndIf -> empty .)
    READ_FILE       reduce using rule 160 (pnEndIf -> empty .)
    MEAN            reduce using rule 160 (pnEndIf -> empty .)
    MODE            reduce using rule 160 (pnEndIf -> empty .)
    MEDIAN          reduce using rule 160 (pnEndIf -> empty .)
    VARIANCE        reduce using rule 160 (pnEndIf -> empty .)
    MAX             reduce using rule 160 (pnEndIf -> empty .)
    MIN             reduce using rule 160 (pnEndIf -> empty .)
    STADDES         reduce using rule 160 (pnEndIf -> empty .)
    BOXPLOT         reduce using rule 160 (pnEndIf -> empty .)
    LINREG          reduce using rule 160 (pnEndIf -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 160 (pnEndIf -> empty .)


state 405

    (92) falsop -> IF_FALSE pnElseIf . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_CUR_BRACKET shift and go to state 410


state 406

    (159) pnElseIf -> empty .

    LEFT_CUR_BRACKET reduce using rule 159 (pnElseIf -> empty .)


state 407

    (95) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    LEFT_CUR_BRACKET shift and go to state 411


state 408

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .

    FUNC            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    DO              reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    ID              reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    READ            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    WRITE           reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    IF              reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    WHILE           reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    FOR             reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    RETURNS         reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    READ_FILE       reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MEAN            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MODE            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MEDIAN          reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    VARIANCE        reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MAX             reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MIN             reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    STADDES         reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    BOXPLOT         reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    LINREG          reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    RIGHT_CUR_BRACKET reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)


state 409

    (127) pnCloseCurrentFunction -> empty .

    FUNC            reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    DO              reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    ID              reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    READ            reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    WRITE           reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    IF              reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    WHILE           reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    FOR             reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    RETURNS         reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    READ_FILE       reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    MEAN            reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    MODE            reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    MEDIAN          reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    VARIANCE        reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    MAX             reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    MIN             reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    STADDES         reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    BOXPLOT         reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    LINREG          reduce using rule 127 (pnCloseCurrentFunction -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 127 (pnCloseCurrentFunction -> empty .)


state 410

    (92) falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (178) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp pnCuadRet SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)
    ID              shift and go to state 82
    READ            shift and go to state 83
    WRITE           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FOR             shift and go to state 87
    RETURNS         shift and go to state 97
    READ_FILE       shift and go to state 98
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107

    estatutop                      shift and go to state 412
    estatuto                       shift and go to state 69
    empty                          shift and go to state 70
    asign                          shift and go to state 71
    llamada                        shift and go to state 72
    lee                            shift and go to state 73
    escribe                        shift and go to state 74
    condicion                      shift and go to state 75
    ciclow                         shift and go to state 76
    ciclof                         shift and go to state 77
    funcesp                        shift and go to state 78
    return                         shift and go to state 79
    copy                           shift and go to state 80
    variable                       shift and go to state 81
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96

state 411

    (95) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET pnEndFor
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (178) empty -> .
    (56) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (21) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (57) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (94) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (95) ciclof -> . FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp pnCuadRet SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (16) variable -> . ID pnSaveOperandos indexp
    (106) mean -> . MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)
    ID              shift and go to state 82
    READ            shift and go to state 83
    WRITE           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FOR             shift and go to state 87
    RETURNS         shift and go to state 97
    READ_FILE       shift and go to state 98
    MEAN            shift and go to state 99
    MODE            shift and go to state 100
    MEDIAN          shift and go to state 101
    VARIANCE        shift and go to state 102
    MAX             shift and go to state 103
    MIN             shift and go to state 104
    STADDES         shift and go to state 105
    BOXPLOT         shift and go to state 106
    LINREG          shift and go to state 107

    variable                       shift and go to state 81
    estatutop                      shift and go to state 413
    estatuto                       shift and go to state 69
    empty                          shift and go to state 70
    asign                          shift and go to state 71
    llamada                        shift and go to state 72
    lee                            shift and go to state 73
    escribe                        shift and go to state 74
    condicion                      shift and go to state 75
    ciclow                         shift and go to state 76
    ciclof                         shift and go to state 77
    funcesp                        shift and go to state 78
    return                         shift and go to state 79
    copy                           shift and go to state 80
    mean                           shift and go to state 88
    mode                           shift and go to state 89
    median                         shift and go to state 90
    variance                       shift and go to state 91
    max                            shift and go to state 92
    min                            shift and go to state 93
    staddes                        shift and go to state 94
    boxplot                        shift and go to state 95
    linreg                         shift and go to state 96

state 412

    (92) falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET

    RIGHT_CUR_BRACKET shift and go to state 414


state 413

    (95) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET pnEndFor

    RIGHT_CUR_BRACKET shift and go to state 415


state 414

    (92) falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .

    ID              reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ            reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WRITE           reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    IF              reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WHILE           reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    FOR             reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RETURNS         reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ_FILE       reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEAN            reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MODE            reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEDIAN          reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    VARIANCE        reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MAX             reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MIN             reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    STADDES         reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    BOXPLOT         reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    LINREG          reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RIGHT_CUR_BRACKET reduce using rule 92 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)


state 415

    (95) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET . pnEndFor
    (166) pnEndFor -> . empty
    (178) empty -> .

    ID              reduce using rule 178 (empty -> .)
    READ            reduce using rule 178 (empty -> .)
    WRITE           reduce using rule 178 (empty -> .)
    IF              reduce using rule 178 (empty -> .)
    WHILE           reduce using rule 178 (empty -> .)
    FOR             reduce using rule 178 (empty -> .)
    RETURNS         reduce using rule 178 (empty -> .)
    READ_FILE       reduce using rule 178 (empty -> .)
    MEAN            reduce using rule 178 (empty -> .)
    MODE            reduce using rule 178 (empty -> .)
    MEDIAN          reduce using rule 178 (empty -> .)
    VARIANCE        reduce using rule 178 (empty -> .)
    MAX             reduce using rule 178 (empty -> .)
    MIN             reduce using rule 178 (empty -> .)
    STADDES         reduce using rule 178 (empty -> .)
    BOXPLOT         reduce using rule 178 (empty -> .)
    LINREG          reduce using rule 178 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 178 (empty -> .)

    pnEndFor                       shift and go to state 416
    empty                          shift and go to state 417

state 416

    (95) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .

    ID              reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    READ            reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    WRITE           reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    IF              reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    WHILE           reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    FOR             reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    RETURNS         reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    READ_FILE       reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MEAN            reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MODE            reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MEDIAN          reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    VARIANCE        reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MAX             reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MIN             reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    STADDES         reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    BOXPLOT         reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    LINREG          reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    RIGHT_CUR_BRACKET reduce using rule 95 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)


state 417

    (166) pnEndFor -> empty .

    ID              reduce using rule 166 (pnEndFor -> empty .)
    READ            reduce using rule 166 (pnEndFor -> empty .)
    WRITE           reduce using rule 166 (pnEndFor -> empty .)
    IF              reduce using rule 166 (pnEndFor -> empty .)
    WHILE           reduce using rule 166 (pnEndFor -> empty .)
    FOR             reduce using rule 166 (pnEndFor -> empty .)
    RETURNS         reduce using rule 166 (pnEndFor -> empty .)
    READ_FILE       reduce using rule 166 (pnEndFor -> empty .)
    MEAN            reduce using rule 166 (pnEndFor -> empty .)
    MODE            reduce using rule 166 (pnEndFor -> empty .)
    MEDIAN          reduce using rule 166 (pnEndFor -> empty .)
    VARIANCE        reduce using rule 166 (pnEndFor -> empty .)
    MAX             reduce using rule 166 (pnEndFor -> empty .)
    MIN             reduce using rule 166 (pnEndFor -> empty .)
    STADDES         reduce using rule 166 (pnEndFor -> empty .)
    BOXPLOT         reduce using rule 166 (pnEndFor -> empty .)
    LINREG          reduce using rule 166 (pnEndFor -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 166 (pnEndFor -> empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 80 resolved using rule (estatuto -> copy)
WARNING: rejected rule (funcesp -> copy) in state 80

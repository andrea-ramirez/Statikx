Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND
Rule 2     varp -> var varp
Rule 3     varp -> empty
Rule 4     funcp -> func funcp
Rule 5     funcp -> empty
Rule 6     bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript
Rule 7     estatutop -> estatuto estatutop
Rule 8     estatutop -> empty
Rule 9     tipo_simp -> INT pnSaveTypeVar
Rule 10    tipo_simp -> FLOAT pnSaveTypeVar
Rule 11    tipo_simp -> CHAR pnSaveTypeVar
Rule 12    copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
Rule 13    variable -> ID pnSaveOperandos indexp
Rule 14    indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop
Rule 15    indexp -> empty
Rule 16    indexpp -> COMMA pnArrAccIncDim exp pnMatCalc
Rule 17    indexpp -> empty pnArrCalc
Rule 18    llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
Rule 19    expp -> exp pnCuadParametro exppp
Rule 20    expp -> empty
Rule 21    exppp -> COMMA exp pnCuadParametro exppp
Rule 22    exppp -> empty
Rule 23    var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON
Rule 24    v -> DATAFRAME pnSaveTypeVar
Rule 25    v -> tipo_simp vp
Rule 26    vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim vpp RIGHT_SQR_BRACKET pnArrCuadriplificar
Rule 27    vp -> empty
Rule 28    vpp -> COMMA CTEI pnArrSaveLim
Rule 29    vpp -> empty
Rule 30    idp -> ID pnCheckNameTablaVar pnArrAddDim idpp
Rule 31    idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim idpp
Rule 32    idpp -> empty
Rule 33    func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
Rule 34    returnval -> tipo_simp
Rule 35    returnval -> VOID pnSaveTypeVar
Rule 36    param -> paramlist
Rule 37    param -> empty
Rule 38    paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp
Rule 39    tipoparam -> tipo_simp
Rule 40    tipoparam -> DATAFRAME pnSaveTypeVar
Rule 41    paramlistp -> COMMA paramlist
Rule 42    paramlistp -> empty
Rule 43    estatuto -> asign
Rule 44    estatuto -> llamada
Rule 45    estatuto -> lee
Rule 46    estatuto -> escribe
Rule 47    estatuto -> condicion
Rule 48    estatuto -> ciclow
Rule 49    estatuto -> ciclof
Rule 50    estatuto -> funcesp
Rule 51    estatuto -> return
Rule 52    estatuto -> copy
Rule 53    asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
Rule 54    lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
Rule 55    escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
Rule 56    escribep -> exp pnCuadEscribe
Rule 57    escribep -> LETRERO pnCuadEscribe
Rule 58    return -> RETURNS exp pnCuadRet SEMICOLON
Rule 59    exp -> exprel pnCuadOplog logic
Rule 60    logic -> logicsig exprel pnCuadOplog logic
Rule 61    logic -> empty
Rule 62    logicsig -> AND pnSaveOperadorLog
Rule 63    logicsig -> OR pnSaveOperadorLog
Rule 64    exprel -> e pnCuadOpRelacional relacionalp
Rule 65    relacionalp -> relsig e pnCuadOpRelacional relacionalp
Rule 66    relacionalp -> empty
Rule 67    relsig -> LESS_THAN pnSaveOperadorRel
Rule 68    relsig -> GREATER_THAN pnSaveOperadorRel
Rule 69    relsig -> EQUALS pnSaveOperadorRel
Rule 70    relsig -> NOTEQUALS pnSaveOperadorRel
Rule 71    e -> t pnCuadPlMi tp
Rule 72    tp -> tsig t pnCuadPlMi tp
Rule 73    tp -> empty
Rule 74    tsig -> PLUS pnSaveOperadorPlMi
Rule 75    tsig -> MINUS pnSaveOperadorPlMi
Rule 76    t -> f pnCuadMuDi fp
Rule 77    fp -> fsig f pnCuadMuDi fp
Rule 78    fp -> empty
Rule 79    fsig -> MULT pnSaveOperadorMuDi
Rule 80    fsig -> DIV pnSaveOperadorMuDi
Rule 81    f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
Rule 82    f -> CTEI pnSaveCteI pnSaveOperandoConstante
Rule 83    f -> CTEF pnSaveCteF pnSaveOperandoConstante
Rule 84    f -> CTEC pnSaveCteC pnSaveOperandoConstante
Rule 85    f -> variable
Rule 86    f -> llamada
Rule 87    f -> funcesp
Rule 88    condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
Rule 89    falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
Rule 90    falsop -> empty
Rule 91    ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
Rule 92    ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
Rule 93    funcesp -> mean
Rule 94    funcesp -> median
Rule 95    funcesp -> variance
Rule 96    funcesp -> max
Rule 97    funcesp -> min
Rule 98    funcesp -> staddes
Rule 99    funcesp -> boxplot
Rule 100   funcesp -> linreg
Rule 101   funcesp -> copy
Rule 102   mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 103   median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 104   variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 105   max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 106   min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 107   staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
Rule 108   boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
Rule 109   linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
Rule 110   pnCrearDirFunc -> empty
Rule 111   pnCuadGotoMain -> empty
Rule 112   pnDirMain -> empty
Rule 113   pnScriptFuncDir -> empty
Rule 114   pnCheckTablaVar -> empty
Rule 115   pnCrearListaParam -> empty
Rule 116   pnSaveTypeVar -> empty
Rule 117   pnCheckNameTablaVar -> empty
Rule 118   pnAddFuncinDir -> empty
Rule 119   pnAddParametersTablaVar -> empty
Rule 120   pnCountVarsINTOResources -> empty
Rule 121   pnDirecIniFunc -> empty
Rule 122   pnCloseCurrentFunction -> empty
Rule 123   pnEndScript -> empty
Rule 124   pnCheckFunc -> empty
Rule 125   pnGenerateEra -> empty
Rule 126   pnCuadParametro -> empty
Rule 127   pnCheckNoParam -> empty
Rule 128   pnCuadGoSub -> empty
Rule 129   pnHandleReturnValue -> empty
Rule 130   pnCuadRet -> empty
Rule 131   pnSaveCteI -> empty
Rule 132   pnSaveCteF -> empty
Rule 133   pnSaveCteC -> empty
Rule 134   pnSaveFondoFalso -> empty
Rule 135   pnPopFondoFalso -> empty
Rule 136   pnSaveOperandos -> empty
Rule 137   pnSaveOperandoConstante -> empty
Rule 138   pnSaveOperadorPlMi -> empty
Rule 139   pnSaveOperadorMuDi -> empty
Rule 140   pnSaveOperadorRel -> empty
Rule 141   pnSaveOperadorLog -> empty
Rule 142   pnCuadPlMi -> empty
Rule 143   pnCuadMuDi -> empty
Rule 144   pnCuadOpRelacional -> empty
Rule 145   pnCuadOplog -> empty
Rule 146   pnSaveOperadorAsign -> empty
Rule 147   pnCuadAsign -> empty
Rule 148   pnCuadEscribe -> empty
Rule 149   pnCuadLee -> empty
Rule 150   pnCuadCopy -> empty
Rule 151   pnCuadFuncEsp -> empty
Rule 152   pnCuadBoxplot -> empty
Rule 153   pnCuadLinReg -> empty
Rule 154   pnCheckBoolIf -> empty
Rule 155   pnElseIf -> empty
Rule 156   pnEndIf -> empty
Rule 157   pnSaveWhile -> empty
Rule 158   pnEndWhile -> empty
Rule 159   pnSaveForID -> empty
Rule 160   pnCreateVControl -> empty
Rule 161   pnCompControlFinal -> empty
Rule 162   pnEndFor -> empty
Rule 163   pnArrCreateNode -> empty
Rule 164   pnArrSaveLim -> empty
Rule 165   pnArrCuadriplificar -> empty
Rule 166   pnArrAddDim -> empty
Rule 167   pnArrIni -> empty
Rule 168   pnArrVerify -> empty
Rule 169   pnArrAccIncDim -> empty
Rule 170   pnArrCalc -> empty
Rule 171   pnMatCalc -> empty
Rule 172   pnArrFFPop -> empty
Rule 173   pnCuadEND -> empty
Rule 174   empty -> <empty>

Terminals, with rules where they appear

AND                  : 62
ARROW                : 23 33 38
ASIGN                : 53 92
BOXPLOT              : 108
CHAR                 : 11
COMMA                : 12 16 21 28 31 41 92 102 103 104 105 106 107 108 109 109
COMMENT              : 
CTEC                 : 84
CTEF                 : 83
CTEI                 : 26 28 82
DATAFRAME            : 24 40
DIV                  : 80
DO                   : 6
EQUALS               : 69
FLOAT                : 10
FOR                  : 92
FUNC                 : 33
GREATER_THAN         : 68
ID                   : 1 13 18 30 31 33 38
IF                   : 88
IF_FALSE             : 89
IF_TRUE              : 88
INT                  : 9
LEFT_CUR_BRACKET     : 6 33 88 89 91 92
LEFT_PARENT          : 12 18 33 54 55 81 88 91 92 102 103 104 105 106 107 108 109
LEFT_SQR_BRACKET     : 14 26
LESS_THAN            : 67
LETRERO              : 12 57 108
LINREG               : 109
MAX                  : 105
MEAN                 : 102
MEDIAN               : 103
MIN                  : 106
MINUS                : 75
MULT                 : 79
NOTEQUALS            : 70
OR                   : 63
PLUS                 : 74
READ                 : 54
READ_FILE            : 12
RETURNS              : 58
RIGHT_CUR_BRACKET    : 6 33 88 89 91 92
RIGHT_PARENT         : 12 18 33 54 55 81 88 91 92 102 103 104 105 106 107 108 109
RIGHT_SQR_BRACKET    : 14 26
SCRIPT               : 1
SEMICOLON            : 1 12 18 23 53 54 55 58 102 103 104 105 106 107 108 109
STADDES              : 107
VAR                  : 23
VARIANCE             : 104
VOID                 : 35
WHILE                : 91
WRITE                : 55
error                : 

Nonterminals, with rules where they appear

asign                : 43
bloque               : 1
boxplot              : 99
ciclof               : 49
ciclow               : 48
condicion            : 47
copy                 : 52 101
e                    : 64 65
empty                : 3 5 8 15 17 20 22 27 29 32 37 42 61 66 73 78 90 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173
escribe              : 46
escribep             : 55
estatuto             : 7
estatutop            : 6 7 33 88 89 91 92
exp                  : 14 16 19 21 53 56 58 81 88 91 92 92 102 103 104 105 106 107 109 109
expp                 : 18
exppp                : 19 21
exprel               : 59 60
f                    : 76 77
falsop               : 88
fp                   : 76 77
fsig                 : 77
func                 : 4
funcesp              : 50 87
funcp                : 1 4 6
idp                  : 23
idpp                 : 30 31
indexp               : 13
indexpp              : 14
lee                  : 45
linreg               : 100
llamada              : 44 86
logic                : 59 60
logicsig             : 60
max                  : 96
mean                 : 93
median               : 94
min                  : 97
param                : 33
paramlist            : 36 41
paramlistp           : 38
pnAddFuncinDir       : 33
pnAddParametersTablaVar : 38
pnArrAccIncDim       : 16
pnArrAddDim          : 30 31
pnArrCalc            : 17
pnArrCreateNode      : 26
pnArrCuadriplificar  : 26
pnArrFFPop           : 14
pnArrIni             : 14
pnArrSaveLim         : 26 28
pnArrVerify          : 14
pnCheckBoolIf        : 88 91
pnCheckFunc          : 18
pnCheckNameTablaVar  : 30 31
pnCheckNoParam       : 18
pnCheckTablaVar      : 23 33
pnCloseCurrentFunction : 33
pnCompControlFinal   : 92
pnCountVarsINTOResources : 33
pnCrearDirFunc       : 1
pnCrearListaParam    : 33
pnCreateVControl     : 92
pnCuadAsign          : 53
pnCuadBoxplot        : 108
pnCuadCopy           : 12
pnCuadEND            : 1
pnCuadEscribe        : 56 57
pnCuadFuncEsp        : 102 103 104 105 106 107
pnCuadGoSub          : 18
pnCuadGotoMain       : 1
pnCuadLee            : 54
pnCuadLinReg         : 109
pnCuadMuDi           : 76 77
pnCuadOpRelacional   : 64 65
pnCuadOplog          : 59 60
pnCuadParametro      : 19 21
pnCuadPlMi           : 71 72
pnCuadRet            : 58
pnDirMain            : 6
pnDirecIniFunc       : 33
pnElseIf             : 89
pnEndFor             : 92
pnEndIf              : 88
pnEndScript          : 6
pnEndWhile           : 91
pnGenerateEra        : 18
pnHandleReturnValue  : 18
pnMatCalc            : 16
pnPopFondoFalso      : 81
pnSaveCteC           : 84
pnSaveCteF           : 83
pnSaveCteI           : 82
pnSaveFondoFalso     : 81
pnSaveForID          : 92
pnSaveOperadorAsign  : 53
pnSaveOperadorLog    : 62 63
pnSaveOperadorMuDi   : 79 80
pnSaveOperadorPlMi   : 74 75
pnSaveOperadorRel    : 67 68 69 70
pnSaveOperandoConstante : 82 83 84
pnSaveOperandos      : 13
pnSaveTypeVar        : 9 10 11 24 35 40
pnSaveWhile          : 91
pnScriptFuncDir      : 1
programa             : 0
relacionalp          : 64 65
relsig               : 65
return               : 51
returnval            : 33
staddes              : 98
t                    : 71 72
tipo_simp            : 25 34 39
tipoparam            : 38
tp                   : 71 72
tsig                 : 72
v                    : 23
var                  : 2
variable             : 12 53 54 85 92 102 103 104 105 106 107 108 109
variance             : 95
varp                 : 1 2 6 33
vp                   : 25
vpp                  : 26

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND

    SCRIPT          shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> SCRIPT . pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND
    (110) pnCrearDirFunc -> . empty
    (174) empty -> .

    ID              reduce using rule 174 (empty -> .)

    pnCrearDirFunc                 shift and go to state 3
    empty                          shift and go to state 4

state 3

    (1) programa -> SCRIPT pnCrearDirFunc . ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND

    ID              shift and go to state 5


state 4

    (110) pnCrearDirFunc -> empty .

    ID              reduce using rule 110 (pnCrearDirFunc -> empty .)


state 5

    (1) programa -> SCRIPT pnCrearDirFunc ID . pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND
    (113) pnScriptFuncDir -> . empty
    (174) empty -> .

    SEMICOLON       reduce using rule 174 (empty -> .)

    pnScriptFuncDir                shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir . pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND
    (111) pnCuadGotoMain -> . empty
    (174) empty -> .

    SEMICOLON       reduce using rule 174 (empty -> .)

    pnCuadGotoMain                 shift and go to state 8
    empty                          shift and go to state 9

state 7

    (113) pnScriptFuncDir -> empty .

    SEMICOLON       reduce using rule 113 (pnScriptFuncDir -> empty .)


state 8

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain . SEMICOLON varp funcp bloque pnCuadEND

    SEMICOLON       shift and go to state 10


state 9

    (111) pnCuadGotoMain -> empty .

    SEMICOLON       reduce using rule 111 (pnCuadGotoMain -> empty .)


state 10

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON . varp funcp bloque pnCuadEND
    (2) varp -> . var varp
    (3) varp -> . empty
    (23) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (174) empty -> .

    VAR             shift and go to state 14
    FUNC            reduce using rule 174 (empty -> .)
    DO              reduce using rule 174 (empty -> .)

    varp                           shift and go to state 11
    var                            shift and go to state 12
    empty                          shift and go to state 13

state 11

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp . funcp bloque pnCuadEND
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (33) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (174) empty -> .

    FUNC            shift and go to state 18
    DO              reduce using rule 174 (empty -> .)

    funcp                          shift and go to state 15
    func                           shift and go to state 16
    empty                          shift and go to state 17

state 12

    (2) varp -> var . varp
    (2) varp -> . var varp
    (3) varp -> . empty
    (23) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (174) empty -> .

    VAR             shift and go to state 14
    FUNC            reduce using rule 174 (empty -> .)
    DO              reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    READ            reduce using rule 174 (empty -> .)
    WRITE           reduce using rule 174 (empty -> .)
    IF              reduce using rule 174 (empty -> .)
    WHILE           reduce using rule 174 (empty -> .)
    FOR             reduce using rule 174 (empty -> .)
    RETURNS         reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)

    var                            shift and go to state 12
    varp                           shift and go to state 19
    empty                          shift and go to state 13

state 13

    (3) varp -> empty .

    FUNC            reduce using rule 3 (varp -> empty .)
    DO              reduce using rule 3 (varp -> empty .)
    ID              reduce using rule 3 (varp -> empty .)
    READ            reduce using rule 3 (varp -> empty .)
    WRITE           reduce using rule 3 (varp -> empty .)
    IF              reduce using rule 3 (varp -> empty .)
    WHILE           reduce using rule 3 (varp -> empty .)
    FOR             reduce using rule 3 (varp -> empty .)
    RETURNS         reduce using rule 3 (varp -> empty .)
    READ_FILE       reduce using rule 3 (varp -> empty .)
    MEAN            reduce using rule 3 (varp -> empty .)
    MEDIAN          reduce using rule 3 (varp -> empty .)
    VARIANCE        reduce using rule 3 (varp -> empty .)
    MAX             reduce using rule 3 (varp -> empty .)
    MIN             reduce using rule 3 (varp -> empty .)
    STADDES         reduce using rule 3 (varp -> empty .)
    BOXPLOT         reduce using rule 3 (varp -> empty .)
    LINREG          reduce using rule 3 (varp -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 3 (varp -> empty .)


state 14

    (23) var -> VAR . pnCheckTablaVar v ARROW idp SEMICOLON
    (114) pnCheckTablaVar -> . empty
    (174) empty -> .

    DATAFRAME       reduce using rule 174 (empty -> .)
    INT             reduce using rule 174 (empty -> .)
    FLOAT           reduce using rule 174 (empty -> .)
    CHAR            reduce using rule 174 (empty -> .)

    pnCheckTablaVar                shift and go to state 20
    empty                          shift and go to state 21

state 15

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp . bloque pnCuadEND
    (6) bloque -> . DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript

    DO              shift and go to state 23

    bloque                         shift and go to state 22

state 16

    (4) funcp -> func . funcp
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (33) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (174) empty -> .

    FUNC            shift and go to state 18
    DO              reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    READ            reduce using rule 174 (empty -> .)
    WRITE           reduce using rule 174 (empty -> .)
    IF              reduce using rule 174 (empty -> .)
    WHILE           reduce using rule 174 (empty -> .)
    FOR             reduce using rule 174 (empty -> .)
    RETURNS         reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)

    func                           shift and go to state 16
    funcp                          shift and go to state 24
    empty                          shift and go to state 17

state 17

    (5) funcp -> empty .

    DO              reduce using rule 5 (funcp -> empty .)
    ID              reduce using rule 5 (funcp -> empty .)
    READ            reduce using rule 5 (funcp -> empty .)
    WRITE           reduce using rule 5 (funcp -> empty .)
    IF              reduce using rule 5 (funcp -> empty .)
    WHILE           reduce using rule 5 (funcp -> empty .)
    FOR             reduce using rule 5 (funcp -> empty .)
    RETURNS         reduce using rule 5 (funcp -> empty .)
    READ_FILE       reduce using rule 5 (funcp -> empty .)
    MEAN            reduce using rule 5 (funcp -> empty .)
    MEDIAN          reduce using rule 5 (funcp -> empty .)
    VARIANCE        reduce using rule 5 (funcp -> empty .)
    MAX             reduce using rule 5 (funcp -> empty .)
    MIN             reduce using rule 5 (funcp -> empty .)
    STADDES         reduce using rule 5 (funcp -> empty .)
    BOXPLOT         reduce using rule 5 (funcp -> empty .)
    LINREG          reduce using rule 5 (funcp -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 5 (funcp -> empty .)


state 18

    (33) func -> FUNC . returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (34) returnval -> . tipo_simp
    (35) returnval -> . VOID pnSaveTypeVar
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    VOID            shift and go to state 27
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    returnval                      shift and go to state 25
    tipo_simp                      shift and go to state 26

state 19

    (2) varp -> var varp .

    FUNC            reduce using rule 2 (varp -> var varp .)
    DO              reduce using rule 2 (varp -> var varp .)
    ID              reduce using rule 2 (varp -> var varp .)
    READ            reduce using rule 2 (varp -> var varp .)
    WRITE           reduce using rule 2 (varp -> var varp .)
    IF              reduce using rule 2 (varp -> var varp .)
    WHILE           reduce using rule 2 (varp -> var varp .)
    FOR             reduce using rule 2 (varp -> var varp .)
    RETURNS         reduce using rule 2 (varp -> var varp .)
    READ_FILE       reduce using rule 2 (varp -> var varp .)
    MEAN            reduce using rule 2 (varp -> var varp .)
    MEDIAN          reduce using rule 2 (varp -> var varp .)
    VARIANCE        reduce using rule 2 (varp -> var varp .)
    MAX             reduce using rule 2 (varp -> var varp .)
    MIN             reduce using rule 2 (varp -> var varp .)
    STADDES         reduce using rule 2 (varp -> var varp .)
    BOXPLOT         reduce using rule 2 (varp -> var varp .)
    LINREG          reduce using rule 2 (varp -> var varp .)
    RIGHT_CUR_BRACKET reduce using rule 2 (varp -> var varp .)


state 20

    (23) var -> VAR pnCheckTablaVar . v ARROW idp SEMICOLON
    (24) v -> . DATAFRAME pnSaveTypeVar
    (25) v -> . tipo_simp vp
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    DATAFRAME       shift and go to state 32
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    v                              shift and go to state 31
    tipo_simp                      shift and go to state 33

state 21

    (114) pnCheckTablaVar -> empty .

    DATAFRAME       reduce using rule 114 (pnCheckTablaVar -> empty .)
    INT             reduce using rule 114 (pnCheckTablaVar -> empty .)
    FLOAT           reduce using rule 114 (pnCheckTablaVar -> empty .)
    CHAR            reduce using rule 114 (pnCheckTablaVar -> empty .)
    RIGHT_PARENT    reduce using rule 114 (pnCheckTablaVar -> empty .)


state 22

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque . pnCuadEND
    (173) pnCuadEND -> . empty
    (174) empty -> .

    $end            reduce using rule 174 (empty -> .)

    pnCuadEND                      shift and go to state 34
    empty                          shift and go to state 35

state 23

    (6) bloque -> DO . pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript
    (112) pnDirMain -> . empty
    (174) empty -> .

    LEFT_CUR_BRACKET reduce using rule 174 (empty -> .)

    pnDirMain                      shift and go to state 36
    empty                          shift and go to state 37

state 24

    (4) funcp -> func funcp .

    DO              reduce using rule 4 (funcp -> func funcp .)
    ID              reduce using rule 4 (funcp -> func funcp .)
    READ            reduce using rule 4 (funcp -> func funcp .)
    WRITE           reduce using rule 4 (funcp -> func funcp .)
    IF              reduce using rule 4 (funcp -> func funcp .)
    WHILE           reduce using rule 4 (funcp -> func funcp .)
    FOR             reduce using rule 4 (funcp -> func funcp .)
    RETURNS         reduce using rule 4 (funcp -> func funcp .)
    READ_FILE       reduce using rule 4 (funcp -> func funcp .)
    MEAN            reduce using rule 4 (funcp -> func funcp .)
    MEDIAN          reduce using rule 4 (funcp -> func funcp .)
    VARIANCE        reduce using rule 4 (funcp -> func funcp .)
    MAX             reduce using rule 4 (funcp -> func funcp .)
    MIN             reduce using rule 4 (funcp -> func funcp .)
    STADDES         reduce using rule 4 (funcp -> func funcp .)
    BOXPLOT         reduce using rule 4 (funcp -> func funcp .)
    LINREG          reduce using rule 4 (funcp -> func funcp .)
    RIGHT_CUR_BRACKET reduce using rule 4 (funcp -> func funcp .)


state 25

    (33) func -> FUNC returnval . ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    ARROW           shift and go to state 38


state 26

    (34) returnval -> tipo_simp .

    ARROW           reduce using rule 34 (returnval -> tipo_simp .)


state 27

    (35) returnval -> VOID . pnSaveTypeVar
    (116) pnSaveTypeVar -> . empty
    (174) empty -> .

    ARROW           reduce using rule 174 (empty -> .)

    pnSaveTypeVar                  shift and go to state 39
    empty                          shift and go to state 40

state 28

    (9) tipo_simp -> INT . pnSaveTypeVar
    (116) pnSaveTypeVar -> . empty
    (174) empty -> .

    ARROW           reduce using rule 174 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnSaveTypeVar                  shift and go to state 41
    empty                          shift and go to state 40

state 29

    (10) tipo_simp -> FLOAT . pnSaveTypeVar
    (116) pnSaveTypeVar -> . empty
    (174) empty -> .

    ARROW           reduce using rule 174 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnSaveTypeVar                  shift and go to state 42
    empty                          shift and go to state 40

state 30

    (11) tipo_simp -> CHAR . pnSaveTypeVar
    (116) pnSaveTypeVar -> . empty
    (174) empty -> .

    ARROW           reduce using rule 174 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnSaveTypeVar                  shift and go to state 43
    empty                          shift and go to state 40

state 31

    (23) var -> VAR pnCheckTablaVar v . ARROW idp SEMICOLON

    ARROW           shift and go to state 44


state 32

    (24) v -> DATAFRAME . pnSaveTypeVar
    (116) pnSaveTypeVar -> . empty
    (174) empty -> .

    ARROW           reduce using rule 174 (empty -> .)

    pnSaveTypeVar                  shift and go to state 45
    empty                          shift and go to state 40

state 33

    (25) v -> tipo_simp . vp
    (26) vp -> . LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim vpp RIGHT_SQR_BRACKET pnArrCuadriplificar
    (27) vp -> . empty
    (174) empty -> .

    LEFT_SQR_BRACKET shift and go to state 47
    ARROW           reduce using rule 174 (empty -> .)

    vp                             shift and go to state 46
    empty                          shift and go to state 48

state 34

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND .

    $end            reduce using rule 1 (programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND .)


state 35

    (173) pnCuadEND -> empty .

    $end            reduce using rule 173 (pnCuadEND -> empty .)


state 36

    (6) bloque -> DO pnDirMain . LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript

    LEFT_CUR_BRACKET shift and go to state 49


state 37

    (112) pnDirMain -> empty .

    LEFT_CUR_BRACKET reduce using rule 112 (pnDirMain -> empty .)


state 38

    (33) func -> FUNC returnval ARROW . ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    ID              shift and go to state 50


state 39

    (35) returnval -> VOID pnSaveTypeVar .

    ARROW           reduce using rule 35 (returnval -> VOID pnSaveTypeVar .)


state 40

    (116) pnSaveTypeVar -> empty .

    ARROW           reduce using rule 116 (pnSaveTypeVar -> empty .)
    LEFT_SQR_BRACKET reduce using rule 116 (pnSaveTypeVar -> empty .)


state 41

    (9) tipo_simp -> INT pnSaveTypeVar .

    ARROW           reduce using rule 9 (tipo_simp -> INT pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 9 (tipo_simp -> INT pnSaveTypeVar .)


state 42

    (10) tipo_simp -> FLOAT pnSaveTypeVar .

    ARROW           reduce using rule 10 (tipo_simp -> FLOAT pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 10 (tipo_simp -> FLOAT pnSaveTypeVar .)


state 43

    (11) tipo_simp -> CHAR pnSaveTypeVar .

    ARROW           reduce using rule 11 (tipo_simp -> CHAR pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 11 (tipo_simp -> CHAR pnSaveTypeVar .)


state 44

    (23) var -> VAR pnCheckTablaVar v ARROW . idp SEMICOLON
    (30) idp -> . ID pnCheckNameTablaVar pnArrAddDim idpp

    ID              shift and go to state 52

    idp                            shift and go to state 51

state 45

    (24) v -> DATAFRAME pnSaveTypeVar .

    ARROW           reduce using rule 24 (v -> DATAFRAME pnSaveTypeVar .)


state 46

    (25) v -> tipo_simp vp .

    ARROW           reduce using rule 25 (v -> tipo_simp vp .)


state 47

    (26) vp -> LEFT_SQR_BRACKET . pnArrCreateNode CTEI pnArrSaveLim vpp RIGHT_SQR_BRACKET pnArrCuadriplificar
    (163) pnArrCreateNode -> . empty
    (174) empty -> .

    CTEI            reduce using rule 174 (empty -> .)

    pnArrCreateNode                shift and go to state 53
    empty                          shift and go to state 54

state 48

    (27) vp -> empty .

    ARROW           reduce using rule 27 (vp -> empty .)


state 49

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET . varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript
    (2) varp -> . var varp
    (3) varp -> . empty
    (23) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (174) empty -> .

    VAR             shift and go to state 14
    FUNC            reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    READ            reduce using rule 174 (empty -> .)
    WRITE           reduce using rule 174 (empty -> .)
    IF              reduce using rule 174 (empty -> .)
    WHILE           reduce using rule 174 (empty -> .)
    FOR             reduce using rule 174 (empty -> .)
    RETURNS         reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)

    varp                           shift and go to state 55
    var                            shift and go to state 12
    empty                          shift and go to state 13

state 50

    (33) func -> FUNC returnval ARROW ID . pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (118) pnAddFuncinDir -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)

    pnAddFuncinDir                 shift and go to state 56
    empty                          shift and go to state 57

state 51

    (23) var -> VAR pnCheckTablaVar v ARROW idp . SEMICOLON

    SEMICOLON       shift and go to state 58


state 52

    (30) idp -> ID . pnCheckNameTablaVar pnArrAddDim idpp
    (117) pnCheckNameTablaVar -> . empty
    (174) empty -> .

    COMMA           reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)

    pnCheckNameTablaVar            shift and go to state 59
    empty                          shift and go to state 60

state 53

    (26) vp -> LEFT_SQR_BRACKET pnArrCreateNode . CTEI pnArrSaveLim vpp RIGHT_SQR_BRACKET pnArrCuadriplificar

    CTEI            shift and go to state 61


state 54

    (163) pnArrCreateNode -> empty .

    CTEI            reduce using rule 163 (pnArrCreateNode -> empty .)


state 55

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET varp . funcp estatutop RIGHT_CUR_BRACKET pnEndScript
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (33) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (174) empty -> .

    FUNC            shift and go to state 18
    ID              reduce using rule 174 (empty -> .)
    READ            reduce using rule 174 (empty -> .)
    WRITE           reduce using rule 174 (empty -> .)
    IF              reduce using rule 174 (empty -> .)
    WHILE           reduce using rule 174 (empty -> .)
    FOR             reduce using rule 174 (empty -> .)
    RETURNS         reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)

    funcp                          shift and go to state 62
    func                           shift and go to state 16
    empty                          shift and go to state 17

state 56

    (33) func -> FUNC returnval ARROW ID pnAddFuncinDir . LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    LEFT_PARENT     shift and go to state 63


state 57

    (118) pnAddFuncinDir -> empty .

    LEFT_PARENT     reduce using rule 118 (pnAddFuncinDir -> empty .)


state 58

    (23) var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .

    VAR             reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    FUNC            reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    DO              reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    ID              reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    READ            reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    WRITE           reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    IF              reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    WHILE           reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    FOR             reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    RETURNS         reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    READ_FILE       reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MEAN            reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MEDIAN          reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    VARIANCE        reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MAX             reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MIN             reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    STADDES         reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    BOXPLOT         reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    LINREG          reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 23 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)


state 59

    (30) idp -> ID pnCheckNameTablaVar . pnArrAddDim idpp
    (166) pnArrAddDim -> . empty
    (174) empty -> .

    COMMA           reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)

    pnArrAddDim                    shift and go to state 64
    empty                          shift and go to state 65

state 60

    (117) pnCheckNameTablaVar -> empty .

    COMMA           reduce using rule 117 (pnCheckNameTablaVar -> empty .)
    SEMICOLON       reduce using rule 117 (pnCheckNameTablaVar -> empty .)


state 61

    (26) vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI . pnArrSaveLim vpp RIGHT_SQR_BRACKET pnArrCuadriplificar
    (164) pnArrSaveLim -> . empty
    (174) empty -> .

    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnArrSaveLim                   shift and go to state 66
    empty                          shift and go to state 67

state 62

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp . estatutop RIGHT_CUR_BRACKET pnEndScript
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (43) estatuto -> . asign
    (44) estatuto -> . llamada
    (45) estatuto -> . lee
    (46) estatuto -> . escribe
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclow
    (49) estatuto -> . ciclof
    (50) estatuto -> . funcesp
    (51) estatuto -> . return
    (52) estatuto -> . copy
    (174) empty -> .
    (53) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (54) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (55) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (88) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (91) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (92) ciclof -> . FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (58) return -> . RETURNS exp pnCuadRet SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)
    ID              shift and go to state 82
    READ            shift and go to state 83
    WRITE           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FOR             shift and go to state 87
    RETURNS         shift and go to state 96
    READ_FILE       shift and go to state 97
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105

    estatutop                      shift and go to state 68
    estatuto                       shift and go to state 69
    empty                          shift and go to state 70
    asign                          shift and go to state 71
    llamada                        shift and go to state 72
    lee                            shift and go to state 73
    escribe                        shift and go to state 74
    condicion                      shift and go to state 75
    ciclow                         shift and go to state 76
    ciclof                         shift and go to state 77
    funcesp                        shift and go to state 78
    return                         shift and go to state 79
    copy                           shift and go to state 80
    variable                       shift and go to state 81
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95

state 63

    (33) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT . pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (114) pnCheckTablaVar -> . empty
    (174) empty -> .

    DATAFRAME       reduce using rule 174 (empty -> .)
    INT             reduce using rule 174 (empty -> .)
    FLOAT           reduce using rule 174 (empty -> .)
    CHAR            reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCheckTablaVar                shift and go to state 106
    empty                          shift and go to state 21

state 64

    (30) idp -> ID pnCheckNameTablaVar pnArrAddDim . idpp
    (31) idpp -> . COMMA ID pnCheckNameTablaVar pnArrAddDim idpp
    (32) idpp -> . empty
    (174) empty -> .

    COMMA           shift and go to state 108
    SEMICOLON       reduce using rule 174 (empty -> .)

    idpp                           shift and go to state 107
    empty                          shift and go to state 109

state 65

    (166) pnArrAddDim -> empty .

    COMMA           reduce using rule 166 (pnArrAddDim -> empty .)
    SEMICOLON       reduce using rule 166 (pnArrAddDim -> empty .)


state 66

    (26) vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim . vpp RIGHT_SQR_BRACKET pnArrCuadriplificar
    (28) vpp -> . COMMA CTEI pnArrSaveLim
    (29) vpp -> . empty
    (174) empty -> .

    COMMA           shift and go to state 111
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    vpp                            shift and go to state 110
    empty                          shift and go to state 112

state 67

    (164) pnArrSaveLim -> empty .

    COMMA           reduce using rule 164 (pnArrSaveLim -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 164 (pnArrSaveLim -> empty .)


state 68

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop . RIGHT_CUR_BRACKET pnEndScript

    RIGHT_CUR_BRACKET shift and go to state 113


state 69

    (7) estatutop -> estatuto . estatutop
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (43) estatuto -> . asign
    (44) estatuto -> . llamada
    (45) estatuto -> . lee
    (46) estatuto -> . escribe
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclow
    (49) estatuto -> . ciclof
    (50) estatuto -> . funcesp
    (51) estatuto -> . return
    (52) estatuto -> . copy
    (174) empty -> .
    (53) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (54) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (55) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (88) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (91) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (92) ciclof -> . FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (58) return -> . RETURNS exp pnCuadRet SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)
    ID              shift and go to state 82
    READ            shift and go to state 83
    WRITE           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FOR             shift and go to state 87
    RETURNS         shift and go to state 96
    READ_FILE       shift and go to state 97
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105

    estatuto                       shift and go to state 69
    estatutop                      shift and go to state 114
    empty                          shift and go to state 70
    asign                          shift and go to state 71
    llamada                        shift and go to state 72
    lee                            shift and go to state 73
    escribe                        shift and go to state 74
    condicion                      shift and go to state 75
    ciclow                         shift and go to state 76
    ciclof                         shift and go to state 77
    funcesp                        shift and go to state 78
    return                         shift and go to state 79
    copy                           shift and go to state 80
    variable                       shift and go to state 81
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95

state 70

    (8) estatutop -> empty .

    RIGHT_CUR_BRACKET reduce using rule 8 (estatutop -> empty .)


state 71

    (43) estatuto -> asign .

    ID              reduce using rule 43 (estatuto -> asign .)
    READ            reduce using rule 43 (estatuto -> asign .)
    WRITE           reduce using rule 43 (estatuto -> asign .)
    IF              reduce using rule 43 (estatuto -> asign .)
    WHILE           reduce using rule 43 (estatuto -> asign .)
    FOR             reduce using rule 43 (estatuto -> asign .)
    RETURNS         reduce using rule 43 (estatuto -> asign .)
    READ_FILE       reduce using rule 43 (estatuto -> asign .)
    MEAN            reduce using rule 43 (estatuto -> asign .)
    MEDIAN          reduce using rule 43 (estatuto -> asign .)
    VARIANCE        reduce using rule 43 (estatuto -> asign .)
    MAX             reduce using rule 43 (estatuto -> asign .)
    MIN             reduce using rule 43 (estatuto -> asign .)
    STADDES         reduce using rule 43 (estatuto -> asign .)
    BOXPLOT         reduce using rule 43 (estatuto -> asign .)
    LINREG          reduce using rule 43 (estatuto -> asign .)
    RIGHT_CUR_BRACKET reduce using rule 43 (estatuto -> asign .)


state 72

    (44) estatuto -> llamada .

    ID              reduce using rule 44 (estatuto -> llamada .)
    READ            reduce using rule 44 (estatuto -> llamada .)
    WRITE           reduce using rule 44 (estatuto -> llamada .)
    IF              reduce using rule 44 (estatuto -> llamada .)
    WHILE           reduce using rule 44 (estatuto -> llamada .)
    FOR             reduce using rule 44 (estatuto -> llamada .)
    RETURNS         reduce using rule 44 (estatuto -> llamada .)
    READ_FILE       reduce using rule 44 (estatuto -> llamada .)
    MEAN            reduce using rule 44 (estatuto -> llamada .)
    MEDIAN          reduce using rule 44 (estatuto -> llamada .)
    VARIANCE        reduce using rule 44 (estatuto -> llamada .)
    MAX             reduce using rule 44 (estatuto -> llamada .)
    MIN             reduce using rule 44 (estatuto -> llamada .)
    STADDES         reduce using rule 44 (estatuto -> llamada .)
    BOXPLOT         reduce using rule 44 (estatuto -> llamada .)
    LINREG          reduce using rule 44 (estatuto -> llamada .)
    RIGHT_CUR_BRACKET reduce using rule 44 (estatuto -> llamada .)


state 73

    (45) estatuto -> lee .

    ID              reduce using rule 45 (estatuto -> lee .)
    READ            reduce using rule 45 (estatuto -> lee .)
    WRITE           reduce using rule 45 (estatuto -> lee .)
    IF              reduce using rule 45 (estatuto -> lee .)
    WHILE           reduce using rule 45 (estatuto -> lee .)
    FOR             reduce using rule 45 (estatuto -> lee .)
    RETURNS         reduce using rule 45 (estatuto -> lee .)
    READ_FILE       reduce using rule 45 (estatuto -> lee .)
    MEAN            reduce using rule 45 (estatuto -> lee .)
    MEDIAN          reduce using rule 45 (estatuto -> lee .)
    VARIANCE        reduce using rule 45 (estatuto -> lee .)
    MAX             reduce using rule 45 (estatuto -> lee .)
    MIN             reduce using rule 45 (estatuto -> lee .)
    STADDES         reduce using rule 45 (estatuto -> lee .)
    BOXPLOT         reduce using rule 45 (estatuto -> lee .)
    LINREG          reduce using rule 45 (estatuto -> lee .)
    RIGHT_CUR_BRACKET reduce using rule 45 (estatuto -> lee .)


state 74

    (46) estatuto -> escribe .

    ID              reduce using rule 46 (estatuto -> escribe .)
    READ            reduce using rule 46 (estatuto -> escribe .)
    WRITE           reduce using rule 46 (estatuto -> escribe .)
    IF              reduce using rule 46 (estatuto -> escribe .)
    WHILE           reduce using rule 46 (estatuto -> escribe .)
    FOR             reduce using rule 46 (estatuto -> escribe .)
    RETURNS         reduce using rule 46 (estatuto -> escribe .)
    READ_FILE       reduce using rule 46 (estatuto -> escribe .)
    MEAN            reduce using rule 46 (estatuto -> escribe .)
    MEDIAN          reduce using rule 46 (estatuto -> escribe .)
    VARIANCE        reduce using rule 46 (estatuto -> escribe .)
    MAX             reduce using rule 46 (estatuto -> escribe .)
    MIN             reduce using rule 46 (estatuto -> escribe .)
    STADDES         reduce using rule 46 (estatuto -> escribe .)
    BOXPLOT         reduce using rule 46 (estatuto -> escribe .)
    LINREG          reduce using rule 46 (estatuto -> escribe .)
    RIGHT_CUR_BRACKET reduce using rule 46 (estatuto -> escribe .)


state 75

    (47) estatuto -> condicion .

    ID              reduce using rule 47 (estatuto -> condicion .)
    READ            reduce using rule 47 (estatuto -> condicion .)
    WRITE           reduce using rule 47 (estatuto -> condicion .)
    IF              reduce using rule 47 (estatuto -> condicion .)
    WHILE           reduce using rule 47 (estatuto -> condicion .)
    FOR             reduce using rule 47 (estatuto -> condicion .)
    RETURNS         reduce using rule 47 (estatuto -> condicion .)
    READ_FILE       reduce using rule 47 (estatuto -> condicion .)
    MEAN            reduce using rule 47 (estatuto -> condicion .)
    MEDIAN          reduce using rule 47 (estatuto -> condicion .)
    VARIANCE        reduce using rule 47 (estatuto -> condicion .)
    MAX             reduce using rule 47 (estatuto -> condicion .)
    MIN             reduce using rule 47 (estatuto -> condicion .)
    STADDES         reduce using rule 47 (estatuto -> condicion .)
    BOXPLOT         reduce using rule 47 (estatuto -> condicion .)
    LINREG          reduce using rule 47 (estatuto -> condicion .)
    RIGHT_CUR_BRACKET reduce using rule 47 (estatuto -> condicion .)


state 76

    (48) estatuto -> ciclow .

    ID              reduce using rule 48 (estatuto -> ciclow .)
    READ            reduce using rule 48 (estatuto -> ciclow .)
    WRITE           reduce using rule 48 (estatuto -> ciclow .)
    IF              reduce using rule 48 (estatuto -> ciclow .)
    WHILE           reduce using rule 48 (estatuto -> ciclow .)
    FOR             reduce using rule 48 (estatuto -> ciclow .)
    RETURNS         reduce using rule 48 (estatuto -> ciclow .)
    READ_FILE       reduce using rule 48 (estatuto -> ciclow .)
    MEAN            reduce using rule 48 (estatuto -> ciclow .)
    MEDIAN          reduce using rule 48 (estatuto -> ciclow .)
    VARIANCE        reduce using rule 48 (estatuto -> ciclow .)
    MAX             reduce using rule 48 (estatuto -> ciclow .)
    MIN             reduce using rule 48 (estatuto -> ciclow .)
    STADDES         reduce using rule 48 (estatuto -> ciclow .)
    BOXPLOT         reduce using rule 48 (estatuto -> ciclow .)
    LINREG          reduce using rule 48 (estatuto -> ciclow .)
    RIGHT_CUR_BRACKET reduce using rule 48 (estatuto -> ciclow .)


state 77

    (49) estatuto -> ciclof .

    ID              reduce using rule 49 (estatuto -> ciclof .)
    READ            reduce using rule 49 (estatuto -> ciclof .)
    WRITE           reduce using rule 49 (estatuto -> ciclof .)
    IF              reduce using rule 49 (estatuto -> ciclof .)
    WHILE           reduce using rule 49 (estatuto -> ciclof .)
    FOR             reduce using rule 49 (estatuto -> ciclof .)
    RETURNS         reduce using rule 49 (estatuto -> ciclof .)
    READ_FILE       reduce using rule 49 (estatuto -> ciclof .)
    MEAN            reduce using rule 49 (estatuto -> ciclof .)
    MEDIAN          reduce using rule 49 (estatuto -> ciclof .)
    VARIANCE        reduce using rule 49 (estatuto -> ciclof .)
    MAX             reduce using rule 49 (estatuto -> ciclof .)
    MIN             reduce using rule 49 (estatuto -> ciclof .)
    STADDES         reduce using rule 49 (estatuto -> ciclof .)
    BOXPLOT         reduce using rule 49 (estatuto -> ciclof .)
    LINREG          reduce using rule 49 (estatuto -> ciclof .)
    RIGHT_CUR_BRACKET reduce using rule 49 (estatuto -> ciclof .)


state 78

    (50) estatuto -> funcesp .

    ID              reduce using rule 50 (estatuto -> funcesp .)
    READ            reduce using rule 50 (estatuto -> funcesp .)
    WRITE           reduce using rule 50 (estatuto -> funcesp .)
    IF              reduce using rule 50 (estatuto -> funcesp .)
    WHILE           reduce using rule 50 (estatuto -> funcesp .)
    FOR             reduce using rule 50 (estatuto -> funcesp .)
    RETURNS         reduce using rule 50 (estatuto -> funcesp .)
    READ_FILE       reduce using rule 50 (estatuto -> funcesp .)
    MEAN            reduce using rule 50 (estatuto -> funcesp .)
    MEDIAN          reduce using rule 50 (estatuto -> funcesp .)
    VARIANCE        reduce using rule 50 (estatuto -> funcesp .)
    MAX             reduce using rule 50 (estatuto -> funcesp .)
    MIN             reduce using rule 50 (estatuto -> funcesp .)
    STADDES         reduce using rule 50 (estatuto -> funcesp .)
    BOXPLOT         reduce using rule 50 (estatuto -> funcesp .)
    LINREG          reduce using rule 50 (estatuto -> funcesp .)
    RIGHT_CUR_BRACKET reduce using rule 50 (estatuto -> funcesp .)


state 79

    (51) estatuto -> return .

    ID              reduce using rule 51 (estatuto -> return .)
    READ            reduce using rule 51 (estatuto -> return .)
    WRITE           reduce using rule 51 (estatuto -> return .)
    IF              reduce using rule 51 (estatuto -> return .)
    WHILE           reduce using rule 51 (estatuto -> return .)
    FOR             reduce using rule 51 (estatuto -> return .)
    RETURNS         reduce using rule 51 (estatuto -> return .)
    READ_FILE       reduce using rule 51 (estatuto -> return .)
    MEAN            reduce using rule 51 (estatuto -> return .)
    MEDIAN          reduce using rule 51 (estatuto -> return .)
    VARIANCE        reduce using rule 51 (estatuto -> return .)
    MAX             reduce using rule 51 (estatuto -> return .)
    MIN             reduce using rule 51 (estatuto -> return .)
    STADDES         reduce using rule 51 (estatuto -> return .)
    BOXPLOT         reduce using rule 51 (estatuto -> return .)
    LINREG          reduce using rule 51 (estatuto -> return .)
    RIGHT_CUR_BRACKET reduce using rule 51 (estatuto -> return .)


state 80

    (52) estatuto -> copy .
    (101) funcesp -> copy .

  ! reduce/reduce conflict for ID resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for READ resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for WRITE resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for IF resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for WHILE resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for FOR resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for RETURNS resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for READ_FILE resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for MEAN resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for MEDIAN resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for VARIANCE resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for MAX resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for MIN resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for STADDES resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for BOXPLOT resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for LINREG resolved using rule 52 (estatuto -> copy .)
  ! reduce/reduce conflict for RIGHT_CUR_BRACKET resolved using rule 52 (estatuto -> copy .)
    ID              reduce using rule 52 (estatuto -> copy .)
    READ            reduce using rule 52 (estatuto -> copy .)
    WRITE           reduce using rule 52 (estatuto -> copy .)
    IF              reduce using rule 52 (estatuto -> copy .)
    WHILE           reduce using rule 52 (estatuto -> copy .)
    FOR             reduce using rule 52 (estatuto -> copy .)
    RETURNS         reduce using rule 52 (estatuto -> copy .)
    READ_FILE       reduce using rule 52 (estatuto -> copy .)
    MEAN            reduce using rule 52 (estatuto -> copy .)
    MEDIAN          reduce using rule 52 (estatuto -> copy .)
    VARIANCE        reduce using rule 52 (estatuto -> copy .)
    MAX             reduce using rule 52 (estatuto -> copy .)
    MIN             reduce using rule 52 (estatuto -> copy .)
    STADDES         reduce using rule 52 (estatuto -> copy .)
    BOXPLOT         reduce using rule 52 (estatuto -> copy .)
    LINREG          reduce using rule 52 (estatuto -> copy .)
    RIGHT_CUR_BRACKET reduce using rule 52 (estatuto -> copy .)

  ! ID              [ reduce using rule 101 (funcesp -> copy .) ]
  ! READ            [ reduce using rule 101 (funcesp -> copy .) ]
  ! WRITE           [ reduce using rule 101 (funcesp -> copy .) ]
  ! IF              [ reduce using rule 101 (funcesp -> copy .) ]
  ! WHILE           [ reduce using rule 101 (funcesp -> copy .) ]
  ! FOR             [ reduce using rule 101 (funcesp -> copy .) ]
  ! RETURNS         [ reduce using rule 101 (funcesp -> copy .) ]
  ! READ_FILE       [ reduce using rule 101 (funcesp -> copy .) ]
  ! MEAN            [ reduce using rule 101 (funcesp -> copy .) ]
  ! MEDIAN          [ reduce using rule 101 (funcesp -> copy .) ]
  ! VARIANCE        [ reduce using rule 101 (funcesp -> copy .) ]
  ! MAX             [ reduce using rule 101 (funcesp -> copy .) ]
  ! MIN             [ reduce using rule 101 (funcesp -> copy .) ]
  ! STADDES         [ reduce using rule 101 (funcesp -> copy .) ]
  ! BOXPLOT         [ reduce using rule 101 (funcesp -> copy .) ]
  ! LINREG          [ reduce using rule 101 (funcesp -> copy .) ]
  ! RIGHT_CUR_BRACKET [ reduce using rule 101 (funcesp -> copy .) ]


state 81

    (53) asign -> variable . ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON

    ASIGN           shift and go to state 115


state 82

    (18) llamada -> ID . pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (13) variable -> ID . pnSaveOperandos indexp
    (124) pnCheckFunc -> . empty
    (136) pnSaveOperandos -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 174 (empty -> .)
    ASIGN           reduce using rule 174 (empty -> .)

    pnCheckFunc                    shift and go to state 116
    pnSaveOperandos                shift and go to state 117
    empty                          shift and go to state 118

state 83

    (54) lee -> READ . LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 119


state 84

    (55) escribe -> WRITE . LEFT_PARENT escribep RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 120


state 85

    (88) condicion -> IF . LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf

    LEFT_PARENT     shift and go to state 121


state 86

    (91) ciclow -> WHILE . pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (157) pnSaveWhile -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)

    pnSaveWhile                    shift and go to state 122
    empty                          shift and go to state 123

state 87

    (92) ciclof -> FOR . LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    LEFT_PARENT     shift and go to state 124


state 88

    (93) funcesp -> mean .

    ID              reduce using rule 93 (funcesp -> mean .)
    READ            reduce using rule 93 (funcesp -> mean .)
    WRITE           reduce using rule 93 (funcesp -> mean .)
    IF              reduce using rule 93 (funcesp -> mean .)
    WHILE           reduce using rule 93 (funcesp -> mean .)
    FOR             reduce using rule 93 (funcesp -> mean .)
    RETURNS         reduce using rule 93 (funcesp -> mean .)
    READ_FILE       reduce using rule 93 (funcesp -> mean .)
    MEAN            reduce using rule 93 (funcesp -> mean .)
    MEDIAN          reduce using rule 93 (funcesp -> mean .)
    VARIANCE        reduce using rule 93 (funcesp -> mean .)
    MAX             reduce using rule 93 (funcesp -> mean .)
    MIN             reduce using rule 93 (funcesp -> mean .)
    STADDES         reduce using rule 93 (funcesp -> mean .)
    BOXPLOT         reduce using rule 93 (funcesp -> mean .)
    LINREG          reduce using rule 93 (funcesp -> mean .)
    RIGHT_CUR_BRACKET reduce using rule 93 (funcesp -> mean .)
    MULT            reduce using rule 93 (funcesp -> mean .)
    DIV             reduce using rule 93 (funcesp -> mean .)
    PLUS            reduce using rule 93 (funcesp -> mean .)
    MINUS           reduce using rule 93 (funcesp -> mean .)
    LESS_THAN       reduce using rule 93 (funcesp -> mean .)
    GREATER_THAN    reduce using rule 93 (funcesp -> mean .)
    EQUALS          reduce using rule 93 (funcesp -> mean .)
    NOTEQUALS       reduce using rule 93 (funcesp -> mean .)
    AND             reduce using rule 93 (funcesp -> mean .)
    OR              reduce using rule 93 (funcesp -> mean .)
    SEMICOLON       reduce using rule 93 (funcesp -> mean .)
    RIGHT_PARENT    reduce using rule 93 (funcesp -> mean .)
    COMMA           reduce using rule 93 (funcesp -> mean .)
    RIGHT_SQR_BRACKET reduce using rule 93 (funcesp -> mean .)


state 89

    (94) funcesp -> median .

    ID              reduce using rule 94 (funcesp -> median .)
    READ            reduce using rule 94 (funcesp -> median .)
    WRITE           reduce using rule 94 (funcesp -> median .)
    IF              reduce using rule 94 (funcesp -> median .)
    WHILE           reduce using rule 94 (funcesp -> median .)
    FOR             reduce using rule 94 (funcesp -> median .)
    RETURNS         reduce using rule 94 (funcesp -> median .)
    READ_FILE       reduce using rule 94 (funcesp -> median .)
    MEAN            reduce using rule 94 (funcesp -> median .)
    MEDIAN          reduce using rule 94 (funcesp -> median .)
    VARIANCE        reduce using rule 94 (funcesp -> median .)
    MAX             reduce using rule 94 (funcesp -> median .)
    MIN             reduce using rule 94 (funcesp -> median .)
    STADDES         reduce using rule 94 (funcesp -> median .)
    BOXPLOT         reduce using rule 94 (funcesp -> median .)
    LINREG          reduce using rule 94 (funcesp -> median .)
    RIGHT_CUR_BRACKET reduce using rule 94 (funcesp -> median .)
    MULT            reduce using rule 94 (funcesp -> median .)
    DIV             reduce using rule 94 (funcesp -> median .)
    PLUS            reduce using rule 94 (funcesp -> median .)
    MINUS           reduce using rule 94 (funcesp -> median .)
    LESS_THAN       reduce using rule 94 (funcesp -> median .)
    GREATER_THAN    reduce using rule 94 (funcesp -> median .)
    EQUALS          reduce using rule 94 (funcesp -> median .)
    NOTEQUALS       reduce using rule 94 (funcesp -> median .)
    AND             reduce using rule 94 (funcesp -> median .)
    OR              reduce using rule 94 (funcesp -> median .)
    SEMICOLON       reduce using rule 94 (funcesp -> median .)
    RIGHT_PARENT    reduce using rule 94 (funcesp -> median .)
    COMMA           reduce using rule 94 (funcesp -> median .)
    RIGHT_SQR_BRACKET reduce using rule 94 (funcesp -> median .)


state 90

    (95) funcesp -> variance .

    ID              reduce using rule 95 (funcesp -> variance .)
    READ            reduce using rule 95 (funcesp -> variance .)
    WRITE           reduce using rule 95 (funcesp -> variance .)
    IF              reduce using rule 95 (funcesp -> variance .)
    WHILE           reduce using rule 95 (funcesp -> variance .)
    FOR             reduce using rule 95 (funcesp -> variance .)
    RETURNS         reduce using rule 95 (funcesp -> variance .)
    READ_FILE       reduce using rule 95 (funcesp -> variance .)
    MEAN            reduce using rule 95 (funcesp -> variance .)
    MEDIAN          reduce using rule 95 (funcesp -> variance .)
    VARIANCE        reduce using rule 95 (funcesp -> variance .)
    MAX             reduce using rule 95 (funcesp -> variance .)
    MIN             reduce using rule 95 (funcesp -> variance .)
    STADDES         reduce using rule 95 (funcesp -> variance .)
    BOXPLOT         reduce using rule 95 (funcesp -> variance .)
    LINREG          reduce using rule 95 (funcesp -> variance .)
    RIGHT_CUR_BRACKET reduce using rule 95 (funcesp -> variance .)
    MULT            reduce using rule 95 (funcesp -> variance .)
    DIV             reduce using rule 95 (funcesp -> variance .)
    PLUS            reduce using rule 95 (funcesp -> variance .)
    MINUS           reduce using rule 95 (funcesp -> variance .)
    LESS_THAN       reduce using rule 95 (funcesp -> variance .)
    GREATER_THAN    reduce using rule 95 (funcesp -> variance .)
    EQUALS          reduce using rule 95 (funcesp -> variance .)
    NOTEQUALS       reduce using rule 95 (funcesp -> variance .)
    AND             reduce using rule 95 (funcesp -> variance .)
    OR              reduce using rule 95 (funcesp -> variance .)
    SEMICOLON       reduce using rule 95 (funcesp -> variance .)
    RIGHT_PARENT    reduce using rule 95 (funcesp -> variance .)
    COMMA           reduce using rule 95 (funcesp -> variance .)
    RIGHT_SQR_BRACKET reduce using rule 95 (funcesp -> variance .)


state 91

    (96) funcesp -> max .

    ID              reduce using rule 96 (funcesp -> max .)
    READ            reduce using rule 96 (funcesp -> max .)
    WRITE           reduce using rule 96 (funcesp -> max .)
    IF              reduce using rule 96 (funcesp -> max .)
    WHILE           reduce using rule 96 (funcesp -> max .)
    FOR             reduce using rule 96 (funcesp -> max .)
    RETURNS         reduce using rule 96 (funcesp -> max .)
    READ_FILE       reduce using rule 96 (funcesp -> max .)
    MEAN            reduce using rule 96 (funcesp -> max .)
    MEDIAN          reduce using rule 96 (funcesp -> max .)
    VARIANCE        reduce using rule 96 (funcesp -> max .)
    MAX             reduce using rule 96 (funcesp -> max .)
    MIN             reduce using rule 96 (funcesp -> max .)
    STADDES         reduce using rule 96 (funcesp -> max .)
    BOXPLOT         reduce using rule 96 (funcesp -> max .)
    LINREG          reduce using rule 96 (funcesp -> max .)
    RIGHT_CUR_BRACKET reduce using rule 96 (funcesp -> max .)
    MULT            reduce using rule 96 (funcesp -> max .)
    DIV             reduce using rule 96 (funcesp -> max .)
    PLUS            reduce using rule 96 (funcesp -> max .)
    MINUS           reduce using rule 96 (funcesp -> max .)
    LESS_THAN       reduce using rule 96 (funcesp -> max .)
    GREATER_THAN    reduce using rule 96 (funcesp -> max .)
    EQUALS          reduce using rule 96 (funcesp -> max .)
    NOTEQUALS       reduce using rule 96 (funcesp -> max .)
    AND             reduce using rule 96 (funcesp -> max .)
    OR              reduce using rule 96 (funcesp -> max .)
    SEMICOLON       reduce using rule 96 (funcesp -> max .)
    RIGHT_PARENT    reduce using rule 96 (funcesp -> max .)
    COMMA           reduce using rule 96 (funcesp -> max .)
    RIGHT_SQR_BRACKET reduce using rule 96 (funcesp -> max .)


state 92

    (97) funcesp -> min .

    ID              reduce using rule 97 (funcesp -> min .)
    READ            reduce using rule 97 (funcesp -> min .)
    WRITE           reduce using rule 97 (funcesp -> min .)
    IF              reduce using rule 97 (funcesp -> min .)
    WHILE           reduce using rule 97 (funcesp -> min .)
    FOR             reduce using rule 97 (funcesp -> min .)
    RETURNS         reduce using rule 97 (funcesp -> min .)
    READ_FILE       reduce using rule 97 (funcesp -> min .)
    MEAN            reduce using rule 97 (funcesp -> min .)
    MEDIAN          reduce using rule 97 (funcesp -> min .)
    VARIANCE        reduce using rule 97 (funcesp -> min .)
    MAX             reduce using rule 97 (funcesp -> min .)
    MIN             reduce using rule 97 (funcesp -> min .)
    STADDES         reduce using rule 97 (funcesp -> min .)
    BOXPLOT         reduce using rule 97 (funcesp -> min .)
    LINREG          reduce using rule 97 (funcesp -> min .)
    RIGHT_CUR_BRACKET reduce using rule 97 (funcesp -> min .)
    MULT            reduce using rule 97 (funcesp -> min .)
    DIV             reduce using rule 97 (funcesp -> min .)
    PLUS            reduce using rule 97 (funcesp -> min .)
    MINUS           reduce using rule 97 (funcesp -> min .)
    LESS_THAN       reduce using rule 97 (funcesp -> min .)
    GREATER_THAN    reduce using rule 97 (funcesp -> min .)
    EQUALS          reduce using rule 97 (funcesp -> min .)
    NOTEQUALS       reduce using rule 97 (funcesp -> min .)
    AND             reduce using rule 97 (funcesp -> min .)
    OR              reduce using rule 97 (funcesp -> min .)
    SEMICOLON       reduce using rule 97 (funcesp -> min .)
    RIGHT_PARENT    reduce using rule 97 (funcesp -> min .)
    COMMA           reduce using rule 97 (funcesp -> min .)
    RIGHT_SQR_BRACKET reduce using rule 97 (funcesp -> min .)


state 93

    (98) funcesp -> staddes .

    ID              reduce using rule 98 (funcesp -> staddes .)
    READ            reduce using rule 98 (funcesp -> staddes .)
    WRITE           reduce using rule 98 (funcesp -> staddes .)
    IF              reduce using rule 98 (funcesp -> staddes .)
    WHILE           reduce using rule 98 (funcesp -> staddes .)
    FOR             reduce using rule 98 (funcesp -> staddes .)
    RETURNS         reduce using rule 98 (funcesp -> staddes .)
    READ_FILE       reduce using rule 98 (funcesp -> staddes .)
    MEAN            reduce using rule 98 (funcesp -> staddes .)
    MEDIAN          reduce using rule 98 (funcesp -> staddes .)
    VARIANCE        reduce using rule 98 (funcesp -> staddes .)
    MAX             reduce using rule 98 (funcesp -> staddes .)
    MIN             reduce using rule 98 (funcesp -> staddes .)
    STADDES         reduce using rule 98 (funcesp -> staddes .)
    BOXPLOT         reduce using rule 98 (funcesp -> staddes .)
    LINREG          reduce using rule 98 (funcesp -> staddes .)
    RIGHT_CUR_BRACKET reduce using rule 98 (funcesp -> staddes .)
    MULT            reduce using rule 98 (funcesp -> staddes .)
    DIV             reduce using rule 98 (funcesp -> staddes .)
    PLUS            reduce using rule 98 (funcesp -> staddes .)
    MINUS           reduce using rule 98 (funcesp -> staddes .)
    LESS_THAN       reduce using rule 98 (funcesp -> staddes .)
    GREATER_THAN    reduce using rule 98 (funcesp -> staddes .)
    EQUALS          reduce using rule 98 (funcesp -> staddes .)
    NOTEQUALS       reduce using rule 98 (funcesp -> staddes .)
    AND             reduce using rule 98 (funcesp -> staddes .)
    OR              reduce using rule 98 (funcesp -> staddes .)
    SEMICOLON       reduce using rule 98 (funcesp -> staddes .)
    RIGHT_PARENT    reduce using rule 98 (funcesp -> staddes .)
    COMMA           reduce using rule 98 (funcesp -> staddes .)
    RIGHT_SQR_BRACKET reduce using rule 98 (funcesp -> staddes .)


state 94

    (99) funcesp -> boxplot .

    ID              reduce using rule 99 (funcesp -> boxplot .)
    READ            reduce using rule 99 (funcesp -> boxplot .)
    WRITE           reduce using rule 99 (funcesp -> boxplot .)
    IF              reduce using rule 99 (funcesp -> boxplot .)
    WHILE           reduce using rule 99 (funcesp -> boxplot .)
    FOR             reduce using rule 99 (funcesp -> boxplot .)
    RETURNS         reduce using rule 99 (funcesp -> boxplot .)
    READ_FILE       reduce using rule 99 (funcesp -> boxplot .)
    MEAN            reduce using rule 99 (funcesp -> boxplot .)
    MEDIAN          reduce using rule 99 (funcesp -> boxplot .)
    VARIANCE        reduce using rule 99 (funcesp -> boxplot .)
    MAX             reduce using rule 99 (funcesp -> boxplot .)
    MIN             reduce using rule 99 (funcesp -> boxplot .)
    STADDES         reduce using rule 99 (funcesp -> boxplot .)
    BOXPLOT         reduce using rule 99 (funcesp -> boxplot .)
    LINREG          reduce using rule 99 (funcesp -> boxplot .)
    RIGHT_CUR_BRACKET reduce using rule 99 (funcesp -> boxplot .)
    MULT            reduce using rule 99 (funcesp -> boxplot .)
    DIV             reduce using rule 99 (funcesp -> boxplot .)
    PLUS            reduce using rule 99 (funcesp -> boxplot .)
    MINUS           reduce using rule 99 (funcesp -> boxplot .)
    LESS_THAN       reduce using rule 99 (funcesp -> boxplot .)
    GREATER_THAN    reduce using rule 99 (funcesp -> boxplot .)
    EQUALS          reduce using rule 99 (funcesp -> boxplot .)
    NOTEQUALS       reduce using rule 99 (funcesp -> boxplot .)
    AND             reduce using rule 99 (funcesp -> boxplot .)
    OR              reduce using rule 99 (funcesp -> boxplot .)
    SEMICOLON       reduce using rule 99 (funcesp -> boxplot .)
    RIGHT_PARENT    reduce using rule 99 (funcesp -> boxplot .)
    COMMA           reduce using rule 99 (funcesp -> boxplot .)
    RIGHT_SQR_BRACKET reduce using rule 99 (funcesp -> boxplot .)


state 95

    (100) funcesp -> linreg .

    ID              reduce using rule 100 (funcesp -> linreg .)
    READ            reduce using rule 100 (funcesp -> linreg .)
    WRITE           reduce using rule 100 (funcesp -> linreg .)
    IF              reduce using rule 100 (funcesp -> linreg .)
    WHILE           reduce using rule 100 (funcesp -> linreg .)
    FOR             reduce using rule 100 (funcesp -> linreg .)
    RETURNS         reduce using rule 100 (funcesp -> linreg .)
    READ_FILE       reduce using rule 100 (funcesp -> linreg .)
    MEAN            reduce using rule 100 (funcesp -> linreg .)
    MEDIAN          reduce using rule 100 (funcesp -> linreg .)
    VARIANCE        reduce using rule 100 (funcesp -> linreg .)
    MAX             reduce using rule 100 (funcesp -> linreg .)
    MIN             reduce using rule 100 (funcesp -> linreg .)
    STADDES         reduce using rule 100 (funcesp -> linreg .)
    BOXPLOT         reduce using rule 100 (funcesp -> linreg .)
    LINREG          reduce using rule 100 (funcesp -> linreg .)
    RIGHT_CUR_BRACKET reduce using rule 100 (funcesp -> linreg .)
    MULT            reduce using rule 100 (funcesp -> linreg .)
    DIV             reduce using rule 100 (funcesp -> linreg .)
    PLUS            reduce using rule 100 (funcesp -> linreg .)
    MINUS           reduce using rule 100 (funcesp -> linreg .)
    LESS_THAN       reduce using rule 100 (funcesp -> linreg .)
    GREATER_THAN    reduce using rule 100 (funcesp -> linreg .)
    EQUALS          reduce using rule 100 (funcesp -> linreg .)
    NOTEQUALS       reduce using rule 100 (funcesp -> linreg .)
    AND             reduce using rule 100 (funcesp -> linreg .)
    OR              reduce using rule 100 (funcesp -> linreg .)
    SEMICOLON       reduce using rule 100 (funcesp -> linreg .)
    RIGHT_PARENT    reduce using rule 100 (funcesp -> linreg .)
    COMMA           reduce using rule 100 (funcesp -> linreg .)
    RIGHT_SQR_BRACKET reduce using rule 100 (funcesp -> linreg .)


state 96

    (58) return -> RETURNS . exp pnCuadRet SEMICOLON
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    exp                            shift and go to state 125
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 97

    (12) copy -> READ_FILE . LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 139


state 98

    (102) mean -> MEAN . LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 140


state 99

    (103) median -> MEDIAN . LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 141


state 100

    (104) variance -> VARIANCE . LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 142


state 101

    (105) max -> MAX . LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 143


state 102

    (106) min -> MIN . LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 144


state 103

    (107) staddes -> STADDES . LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 145


state 104

    (108) boxplot -> BOXPLOT . LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 146


state 105

    (109) linreg -> LINREG . LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 147


state 106

    (33) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar . pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (115) pnCrearListaParam -> . empty
    (174) empty -> .

    DATAFRAME       reduce using rule 174 (empty -> .)
    INT             reduce using rule 174 (empty -> .)
    FLOAT           reduce using rule 174 (empty -> .)
    CHAR            reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCrearListaParam              shift and go to state 148
    empty                          shift and go to state 149

state 107

    (30) idp -> ID pnCheckNameTablaVar pnArrAddDim idpp .

    SEMICOLON       reduce using rule 30 (idp -> ID pnCheckNameTablaVar pnArrAddDim idpp .)


state 108

    (31) idpp -> COMMA . ID pnCheckNameTablaVar pnArrAddDim idpp

    ID              shift and go to state 150


state 109

    (32) idpp -> empty .

    SEMICOLON       reduce using rule 32 (idpp -> empty .)


state 110

    (26) vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim vpp . RIGHT_SQR_BRACKET pnArrCuadriplificar

    RIGHT_SQR_BRACKET shift and go to state 151


state 111

    (28) vpp -> COMMA . CTEI pnArrSaveLim

    CTEI            shift and go to state 152


state 112

    (29) vpp -> empty .

    RIGHT_SQR_BRACKET reduce using rule 29 (vpp -> empty .)


state 113

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET . pnEndScript
    (123) pnEndScript -> . empty
    (174) empty -> .

    $end            reduce using rule 174 (empty -> .)

    pnEndScript                    shift and go to state 153
    empty                          shift and go to state 154

state 114

    (7) estatutop -> estatuto estatutop .

    RIGHT_CUR_BRACKET reduce using rule 7 (estatutop -> estatuto estatutop .)


state 115

    (53) asign -> variable ASIGN . pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (146) pnSaveOperadorAsign -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)
    CTEI            reduce using rule 174 (empty -> .)
    CTEF            reduce using rule 174 (empty -> .)
    CTEC            reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)

    pnSaveOperadorAsign            shift and go to state 155
    empty                          shift and go to state 156

state 116

    (18) llamada -> ID pnCheckFunc . LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue

    LEFT_PARENT     shift and go to state 157


state 117

    (13) variable -> ID pnSaveOperandos . indexp
    (14) indexp -> . LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop
    (15) indexp -> . empty
    (174) empty -> .

    LEFT_SQR_BRACKET shift and go to state 159
    ASIGN           reduce using rule 174 (empty -> .)
    MULT            reduce using rule 174 (empty -> .)
    DIV             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    indexp                         shift and go to state 158
    empty                          shift and go to state 160

state 118

    (124) pnCheckFunc -> empty .
    (136) pnSaveOperandos -> empty .

    LEFT_PARENT     reduce using rule 124 (pnCheckFunc -> empty .)
    LEFT_SQR_BRACKET reduce using rule 136 (pnSaveOperandos -> empty .)
    ASIGN           reduce using rule 136 (pnSaveOperandos -> empty .)


state 119

    (54) lee -> READ LEFT_PARENT . variable pnCuadLee RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 162

    variable                       shift and go to state 161

state 120

    (55) escribe -> WRITE LEFT_PARENT . escribep RIGHT_PARENT SEMICOLON
    (56) escribep -> . exp pnCuadEscribe
    (57) escribep -> . LETRERO pnCuadEscribe
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LETRERO         shift and go to state 165
    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    escribep                       shift and go to state 163
    exp                            shift and go to state 164
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 121

    (88) condicion -> IF LEFT_PARENT . exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    exp                            shift and go to state 166
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 122

    (91) ciclow -> WHILE pnSaveWhile . LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile

    LEFT_PARENT     shift and go to state 167


state 123

    (157) pnSaveWhile -> empty .

    LEFT_PARENT     reduce using rule 157 (pnSaveWhile -> empty .)


state 124

    (92) ciclof -> FOR LEFT_PARENT . variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (13) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 162

    variable                       shift and go to state 168

state 125

    (58) return -> RETURNS exp . pnCuadRet SEMICOLON
    (130) pnCuadRet -> . empty
    (174) empty -> .

    SEMICOLON       reduce using rule 174 (empty -> .)

    pnCuadRet                      shift and go to state 169
    empty                          shift and go to state 170

state 126

    (59) exp -> exprel . pnCuadOplog logic
    (145) pnCuadOplog -> . empty
    (174) empty -> .

    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnCuadOplog                    shift and go to state 171
    empty                          shift and go to state 172

state 127

    (64) exprel -> e . pnCuadOpRelacional relacionalp
    (144) pnCuadOpRelacional -> . empty
    (174) empty -> .

    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnCuadOpRelacional             shift and go to state 173
    empty                          shift and go to state 174

state 128

    (71) e -> t . pnCuadPlMi tp
    (142) pnCuadPlMi -> . empty
    (174) empty -> .

    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnCuadPlMi                     shift and go to state 175
    empty                          shift and go to state 176

state 129

    (76) t -> f . pnCuadMuDi fp
    (143) pnCuadMuDi -> . empty
    (174) empty -> .

    MULT            reduce using rule 174 (empty -> .)
    DIV             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnCuadMuDi                     shift and go to state 177
    empty                          shift and go to state 178

state 130

    (81) f -> LEFT_PARENT . pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (134) pnSaveFondoFalso -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)
    CTEI            reduce using rule 174 (empty -> .)
    CTEF            reduce using rule 174 (empty -> .)
    CTEC            reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)

    pnSaveFondoFalso               shift and go to state 179
    empty                          shift and go to state 180

state 131

    (82) f -> CTEI . pnSaveCteI pnSaveOperandoConstante
    (131) pnSaveCteI -> . empty
    (174) empty -> .

    MULT            reduce using rule 174 (empty -> .)
    DIV             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnSaveCteI                     shift and go to state 181
    empty                          shift and go to state 182

state 132

    (83) f -> CTEF . pnSaveCteF pnSaveOperandoConstante
    (132) pnSaveCteF -> . empty
    (174) empty -> .

    MULT            reduce using rule 174 (empty -> .)
    DIV             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnSaveCteF                     shift and go to state 183
    empty                          shift and go to state 184

state 133

    (84) f -> CTEC . pnSaveCteC pnSaveOperandoConstante
    (133) pnSaveCteC -> . empty
    (174) empty -> .

    MULT            reduce using rule 174 (empty -> .)
    DIV             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnSaveCteC                     shift and go to state 185
    empty                          shift and go to state 186

state 134

    (85) f -> variable .

    MULT            reduce using rule 85 (f -> variable .)
    DIV             reduce using rule 85 (f -> variable .)
    PLUS            reduce using rule 85 (f -> variable .)
    MINUS           reduce using rule 85 (f -> variable .)
    LESS_THAN       reduce using rule 85 (f -> variable .)
    GREATER_THAN    reduce using rule 85 (f -> variable .)
    EQUALS          reduce using rule 85 (f -> variable .)
    NOTEQUALS       reduce using rule 85 (f -> variable .)
    AND             reduce using rule 85 (f -> variable .)
    OR              reduce using rule 85 (f -> variable .)
    SEMICOLON       reduce using rule 85 (f -> variable .)
    RIGHT_PARENT    reduce using rule 85 (f -> variable .)
    COMMA           reduce using rule 85 (f -> variable .)
    RIGHT_SQR_BRACKET reduce using rule 85 (f -> variable .)


state 135

    (86) f -> llamada .

    MULT            reduce using rule 86 (f -> llamada .)
    DIV             reduce using rule 86 (f -> llamada .)
    PLUS            reduce using rule 86 (f -> llamada .)
    MINUS           reduce using rule 86 (f -> llamada .)
    LESS_THAN       reduce using rule 86 (f -> llamada .)
    GREATER_THAN    reduce using rule 86 (f -> llamada .)
    EQUALS          reduce using rule 86 (f -> llamada .)
    NOTEQUALS       reduce using rule 86 (f -> llamada .)
    AND             reduce using rule 86 (f -> llamada .)
    OR              reduce using rule 86 (f -> llamada .)
    SEMICOLON       reduce using rule 86 (f -> llamada .)
    RIGHT_PARENT    reduce using rule 86 (f -> llamada .)
    COMMA           reduce using rule 86 (f -> llamada .)
    RIGHT_SQR_BRACKET reduce using rule 86 (f -> llamada .)


state 136

    (87) f -> funcesp .

    MULT            reduce using rule 87 (f -> funcesp .)
    DIV             reduce using rule 87 (f -> funcesp .)
    PLUS            reduce using rule 87 (f -> funcesp .)
    MINUS           reduce using rule 87 (f -> funcesp .)
    LESS_THAN       reduce using rule 87 (f -> funcesp .)
    GREATER_THAN    reduce using rule 87 (f -> funcesp .)
    EQUALS          reduce using rule 87 (f -> funcesp .)
    NOTEQUALS       reduce using rule 87 (f -> funcesp .)
    AND             reduce using rule 87 (f -> funcesp .)
    OR              reduce using rule 87 (f -> funcesp .)
    SEMICOLON       reduce using rule 87 (f -> funcesp .)
    RIGHT_PARENT    reduce using rule 87 (f -> funcesp .)
    COMMA           reduce using rule 87 (f -> funcesp .)
    RIGHT_SQR_BRACKET reduce using rule 87 (f -> funcesp .)


state 137

    (13) variable -> ID . pnSaveOperandos indexp
    (18) llamada -> ID . pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (136) pnSaveOperandos -> . empty
    (124) pnCheckFunc -> . empty
    (174) empty -> .

    LEFT_SQR_BRACKET reduce using rule 174 (empty -> .)
    MULT            reduce using rule 174 (empty -> .)
    DIV             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)
    LEFT_PARENT     reduce using rule 174 (empty -> .)

    pnSaveOperandos                shift and go to state 117
    pnCheckFunc                    shift and go to state 116
    empty                          shift and go to state 187

state 138

    (101) funcesp -> copy .

    MULT            reduce using rule 101 (funcesp -> copy .)
    DIV             reduce using rule 101 (funcesp -> copy .)
    PLUS            reduce using rule 101 (funcesp -> copy .)
    MINUS           reduce using rule 101 (funcesp -> copy .)
    LESS_THAN       reduce using rule 101 (funcesp -> copy .)
    GREATER_THAN    reduce using rule 101 (funcesp -> copy .)
    EQUALS          reduce using rule 101 (funcesp -> copy .)
    NOTEQUALS       reduce using rule 101 (funcesp -> copy .)
    AND             reduce using rule 101 (funcesp -> copy .)
    OR              reduce using rule 101 (funcesp -> copy .)
    SEMICOLON       reduce using rule 101 (funcesp -> copy .)
    RIGHT_PARENT    reduce using rule 101 (funcesp -> copy .)
    COMMA           reduce using rule 101 (funcesp -> copy .)
    RIGHT_SQR_BRACKET reduce using rule 101 (funcesp -> copy .)


state 139

    (12) copy -> READ_FILE LEFT_PARENT . variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 162

    variable                       shift and go to state 188

state 140

    (102) mean -> MEAN LEFT_PARENT . variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 162

    variable                       shift and go to state 189

state 141

    (103) median -> MEDIAN LEFT_PARENT . variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 162

    variable                       shift and go to state 190

state 142

    (104) variance -> VARIANCE LEFT_PARENT . variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 162

    variable                       shift and go to state 191

state 143

    (105) max -> MAX LEFT_PARENT . variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 162

    variable                       shift and go to state 192

state 144

    (106) min -> MIN LEFT_PARENT . variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 162

    variable                       shift and go to state 193

state 145

    (107) staddes -> STADDES LEFT_PARENT . variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 162

    variable                       shift and go to state 194

state 146

    (108) boxplot -> BOXPLOT LEFT_PARENT . variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 162

    variable                       shift and go to state 195

state 147

    (109) linreg -> LINREG LEFT_PARENT . variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp

    ID              shift and go to state 162

    variable                       shift and go to state 196

state 148

    (33) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam . param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (36) param -> . paramlist
    (37) param -> . empty
    (38) paramlist -> . tipoparam ARROW ID pnAddParametersTablaVar paramlistp
    (174) empty -> .
    (39) tipoparam -> . tipo_simp
    (40) tipoparam -> . DATAFRAME pnSaveTypeVar
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    DATAFRAME       shift and go to state 202
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    param                          shift and go to state 197
    paramlist                      shift and go to state 198
    empty                          shift and go to state 199
    tipoparam                      shift and go to state 200
    tipo_simp                      shift and go to state 201

state 149

    (115) pnCrearListaParam -> empty .

    DATAFRAME       reduce using rule 115 (pnCrearListaParam -> empty .)
    INT             reduce using rule 115 (pnCrearListaParam -> empty .)
    FLOAT           reduce using rule 115 (pnCrearListaParam -> empty .)
    CHAR            reduce using rule 115 (pnCrearListaParam -> empty .)
    RIGHT_PARENT    reduce using rule 115 (pnCrearListaParam -> empty .)


state 150

    (31) idpp -> COMMA ID . pnCheckNameTablaVar pnArrAddDim idpp
    (117) pnCheckNameTablaVar -> . empty
    (174) empty -> .

    COMMA           reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)

    pnCheckNameTablaVar            shift and go to state 203
    empty                          shift and go to state 60

state 151

    (26) vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim vpp RIGHT_SQR_BRACKET . pnArrCuadriplificar
    (165) pnArrCuadriplificar -> . empty
    (174) empty -> .

    ARROW           reduce using rule 174 (empty -> .)

    pnArrCuadriplificar            shift and go to state 204
    empty                          shift and go to state 205

state 152

    (28) vpp -> COMMA CTEI . pnArrSaveLim
    (164) pnArrSaveLim -> . empty
    (174) empty -> .

    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnArrSaveLim                   shift and go to state 206
    empty                          shift and go to state 67

state 153

    (6) bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript .

    $end            reduce using rule 6 (bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript .)


state 154

    (123) pnEndScript -> empty .

    $end            reduce using rule 123 (pnEndScript -> empty .)


state 155

    (53) asign -> variable ASIGN pnSaveOperadorAsign . exp pnCuadAsign SEMICOLON
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    variable                       shift and go to state 134
    exp                            shift and go to state 207
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 156

    (146) pnSaveOperadorAsign -> empty .

    LEFT_PARENT     reduce using rule 146 (pnSaveOperadorAsign -> empty .)
    CTEI            reduce using rule 146 (pnSaveOperadorAsign -> empty .)
    CTEF            reduce using rule 146 (pnSaveOperadorAsign -> empty .)
    CTEC            reduce using rule 146 (pnSaveOperadorAsign -> empty .)
    ID              reduce using rule 146 (pnSaveOperadorAsign -> empty .)
    MEAN            reduce using rule 146 (pnSaveOperadorAsign -> empty .)
    MEDIAN          reduce using rule 146 (pnSaveOperadorAsign -> empty .)
    VARIANCE        reduce using rule 146 (pnSaveOperadorAsign -> empty .)
    MAX             reduce using rule 146 (pnSaveOperadorAsign -> empty .)
    MIN             reduce using rule 146 (pnSaveOperadorAsign -> empty .)
    STADDES         reduce using rule 146 (pnSaveOperadorAsign -> empty .)
    BOXPLOT         reduce using rule 146 (pnSaveOperadorAsign -> empty .)
    LINREG          reduce using rule 146 (pnSaveOperadorAsign -> empty .)
    READ_FILE       reduce using rule 146 (pnSaveOperadorAsign -> empty .)


state 157

    (18) llamada -> ID pnCheckFunc LEFT_PARENT . pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (125) pnGenerateEra -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)
    CTEI            reduce using rule 174 (empty -> .)
    CTEF            reduce using rule 174 (empty -> .)
    CTEC            reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnGenerateEra                  shift and go to state 208
    empty                          shift and go to state 209

state 158

    (13) variable -> ID pnSaveOperandos indexp .

    ASIGN           reduce using rule 13 (variable -> ID pnSaveOperandos indexp .)
    MULT            reduce using rule 13 (variable -> ID pnSaveOperandos indexp .)
    DIV             reduce using rule 13 (variable -> ID pnSaveOperandos indexp .)
    PLUS            reduce using rule 13 (variable -> ID pnSaveOperandos indexp .)
    MINUS           reduce using rule 13 (variable -> ID pnSaveOperandos indexp .)
    LESS_THAN       reduce using rule 13 (variable -> ID pnSaveOperandos indexp .)
    GREATER_THAN    reduce using rule 13 (variable -> ID pnSaveOperandos indexp .)
    EQUALS          reduce using rule 13 (variable -> ID pnSaveOperandos indexp .)
    NOTEQUALS       reduce using rule 13 (variable -> ID pnSaveOperandos indexp .)
    AND             reduce using rule 13 (variable -> ID pnSaveOperandos indexp .)
    OR              reduce using rule 13 (variable -> ID pnSaveOperandos indexp .)
    SEMICOLON       reduce using rule 13 (variable -> ID pnSaveOperandos indexp .)
    RIGHT_PARENT    reduce using rule 13 (variable -> ID pnSaveOperandos indexp .)
    COMMA           reduce using rule 13 (variable -> ID pnSaveOperandos indexp .)
    RIGHT_SQR_BRACKET reduce using rule 13 (variable -> ID pnSaveOperandos indexp .)


state 159

    (14) indexp -> LEFT_SQR_BRACKET . pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop
    (167) pnArrIni -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)
    CTEI            reduce using rule 174 (empty -> .)
    CTEF            reduce using rule 174 (empty -> .)
    CTEC            reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)

    pnArrIni                       shift and go to state 210
    empty                          shift and go to state 211

state 160

    (15) indexp -> empty .

    ASIGN           reduce using rule 15 (indexp -> empty .)
    MULT            reduce using rule 15 (indexp -> empty .)
    DIV             reduce using rule 15 (indexp -> empty .)
    PLUS            reduce using rule 15 (indexp -> empty .)
    MINUS           reduce using rule 15 (indexp -> empty .)
    LESS_THAN       reduce using rule 15 (indexp -> empty .)
    GREATER_THAN    reduce using rule 15 (indexp -> empty .)
    EQUALS          reduce using rule 15 (indexp -> empty .)
    NOTEQUALS       reduce using rule 15 (indexp -> empty .)
    AND             reduce using rule 15 (indexp -> empty .)
    OR              reduce using rule 15 (indexp -> empty .)
    SEMICOLON       reduce using rule 15 (indexp -> empty .)
    RIGHT_PARENT    reduce using rule 15 (indexp -> empty .)
    COMMA           reduce using rule 15 (indexp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 15 (indexp -> empty .)


state 161

    (54) lee -> READ LEFT_PARENT variable . pnCuadLee RIGHT_PARENT SEMICOLON
    (149) pnCuadLee -> . empty
    (174) empty -> .

    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCuadLee                      shift and go to state 212
    empty                          shift and go to state 213

state 162

    (13) variable -> ID . pnSaveOperandos indexp
    (136) pnSaveOperandos -> . empty
    (174) empty -> .

    LEFT_SQR_BRACKET reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    ASIGN           reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)

    pnSaveOperandos                shift and go to state 117
    empty                          shift and go to state 214

state 163

    (55) escribe -> WRITE LEFT_PARENT escribep . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 215


state 164

    (56) escribep -> exp . pnCuadEscribe
    (148) pnCuadEscribe -> . empty
    (174) empty -> .

    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCuadEscribe                  shift and go to state 216
    empty                          shift and go to state 217

state 165

    (57) escribep -> LETRERO . pnCuadEscribe
    (148) pnCuadEscribe -> . empty
    (174) empty -> .

    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCuadEscribe                  shift and go to state 218
    empty                          shift and go to state 217

state 166

    (88) condicion -> IF LEFT_PARENT exp . pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (154) pnCheckBoolIf -> . empty
    (174) empty -> .

    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCheckBoolIf                  shift and go to state 219
    empty                          shift and go to state 220

state 167

    (91) ciclow -> WHILE pnSaveWhile LEFT_PARENT . exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    exp                            shift and go to state 221
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 168

    (92) ciclof -> FOR LEFT_PARENT variable . pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (159) pnSaveForID -> . empty
    (174) empty -> .

    ASIGN           reduce using rule 174 (empty -> .)

    pnSaveForID                    shift and go to state 222
    empty                          shift and go to state 223

state 169

    (58) return -> RETURNS exp pnCuadRet . SEMICOLON

    SEMICOLON       shift and go to state 224


state 170

    (130) pnCuadRet -> empty .

    SEMICOLON       reduce using rule 130 (pnCuadRet -> empty .)


state 171

    (59) exp -> exprel pnCuadOplog . logic
    (60) logic -> . logicsig exprel pnCuadOplog logic
    (61) logic -> . empty
    (62) logicsig -> . AND pnSaveOperadorLog
    (63) logicsig -> . OR pnSaveOperadorLog
    (174) empty -> .

    AND             shift and go to state 228
    OR              shift and go to state 229
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    logic                          shift and go to state 225
    logicsig                       shift and go to state 226
    empty                          shift and go to state 227

state 172

    (145) pnCuadOplog -> empty .

    AND             reduce using rule 145 (pnCuadOplog -> empty .)
    OR              reduce using rule 145 (pnCuadOplog -> empty .)
    SEMICOLON       reduce using rule 145 (pnCuadOplog -> empty .)
    RIGHT_PARENT    reduce using rule 145 (pnCuadOplog -> empty .)
    COMMA           reduce using rule 145 (pnCuadOplog -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 145 (pnCuadOplog -> empty .)


state 173

    (64) exprel -> e pnCuadOpRelacional . relacionalp
    (65) relacionalp -> . relsig e pnCuadOpRelacional relacionalp
    (66) relacionalp -> . empty
    (67) relsig -> . LESS_THAN pnSaveOperadorRel
    (68) relsig -> . GREATER_THAN pnSaveOperadorRel
    (69) relsig -> . EQUALS pnSaveOperadorRel
    (70) relsig -> . NOTEQUALS pnSaveOperadorRel
    (174) empty -> .

    LESS_THAN       shift and go to state 233
    GREATER_THAN    shift and go to state 234
    EQUALS          shift and go to state 235
    NOTEQUALS       shift and go to state 236
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    relacionalp                    shift and go to state 230
    relsig                         shift and go to state 231
    empty                          shift and go to state 232

state 174

    (144) pnCuadOpRelacional -> empty .

    LESS_THAN       reduce using rule 144 (pnCuadOpRelacional -> empty .)
    GREATER_THAN    reduce using rule 144 (pnCuadOpRelacional -> empty .)
    EQUALS          reduce using rule 144 (pnCuadOpRelacional -> empty .)
    NOTEQUALS       reduce using rule 144 (pnCuadOpRelacional -> empty .)
    AND             reduce using rule 144 (pnCuadOpRelacional -> empty .)
    OR              reduce using rule 144 (pnCuadOpRelacional -> empty .)
    SEMICOLON       reduce using rule 144 (pnCuadOpRelacional -> empty .)
    RIGHT_PARENT    reduce using rule 144 (pnCuadOpRelacional -> empty .)
    COMMA           reduce using rule 144 (pnCuadOpRelacional -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 144 (pnCuadOpRelacional -> empty .)


state 175

    (71) e -> t pnCuadPlMi . tp
    (72) tp -> . tsig t pnCuadPlMi tp
    (73) tp -> . empty
    (74) tsig -> . PLUS pnSaveOperadorPlMi
    (75) tsig -> . MINUS pnSaveOperadorPlMi
    (174) empty -> .

    PLUS            shift and go to state 240
    MINUS           shift and go to state 241
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    tp                             shift and go to state 237
    tsig                           shift and go to state 238
    empty                          shift and go to state 239

state 176

    (142) pnCuadPlMi -> empty .

    PLUS            reduce using rule 142 (pnCuadPlMi -> empty .)
    MINUS           reduce using rule 142 (pnCuadPlMi -> empty .)
    LESS_THAN       reduce using rule 142 (pnCuadPlMi -> empty .)
    GREATER_THAN    reduce using rule 142 (pnCuadPlMi -> empty .)
    EQUALS          reduce using rule 142 (pnCuadPlMi -> empty .)
    NOTEQUALS       reduce using rule 142 (pnCuadPlMi -> empty .)
    AND             reduce using rule 142 (pnCuadPlMi -> empty .)
    OR              reduce using rule 142 (pnCuadPlMi -> empty .)
    SEMICOLON       reduce using rule 142 (pnCuadPlMi -> empty .)
    RIGHT_PARENT    reduce using rule 142 (pnCuadPlMi -> empty .)
    COMMA           reduce using rule 142 (pnCuadPlMi -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 142 (pnCuadPlMi -> empty .)


state 177

    (76) t -> f pnCuadMuDi . fp
    (77) fp -> . fsig f pnCuadMuDi fp
    (78) fp -> . empty
    (79) fsig -> . MULT pnSaveOperadorMuDi
    (80) fsig -> . DIV pnSaveOperadorMuDi
    (174) empty -> .

    MULT            shift and go to state 245
    DIV             shift and go to state 246
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    fp                             shift and go to state 242
    fsig                           shift and go to state 243
    empty                          shift and go to state 244

state 178

    (143) pnCuadMuDi -> empty .

    MULT            reduce using rule 143 (pnCuadMuDi -> empty .)
    DIV             reduce using rule 143 (pnCuadMuDi -> empty .)
    PLUS            reduce using rule 143 (pnCuadMuDi -> empty .)
    MINUS           reduce using rule 143 (pnCuadMuDi -> empty .)
    LESS_THAN       reduce using rule 143 (pnCuadMuDi -> empty .)
    GREATER_THAN    reduce using rule 143 (pnCuadMuDi -> empty .)
    EQUALS          reduce using rule 143 (pnCuadMuDi -> empty .)
    NOTEQUALS       reduce using rule 143 (pnCuadMuDi -> empty .)
    AND             reduce using rule 143 (pnCuadMuDi -> empty .)
    OR              reduce using rule 143 (pnCuadMuDi -> empty .)
    SEMICOLON       reduce using rule 143 (pnCuadMuDi -> empty .)
    RIGHT_PARENT    reduce using rule 143 (pnCuadMuDi -> empty .)
    COMMA           reduce using rule 143 (pnCuadMuDi -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 143 (pnCuadMuDi -> empty .)


state 179

    (81) f -> LEFT_PARENT pnSaveFondoFalso . exp RIGHT_PARENT pnPopFondoFalso
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    exp                            shift and go to state 247
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 180

    (134) pnSaveFondoFalso -> empty .

    LEFT_PARENT     reduce using rule 134 (pnSaveFondoFalso -> empty .)
    CTEI            reduce using rule 134 (pnSaveFondoFalso -> empty .)
    CTEF            reduce using rule 134 (pnSaveFondoFalso -> empty .)
    CTEC            reduce using rule 134 (pnSaveFondoFalso -> empty .)
    ID              reduce using rule 134 (pnSaveFondoFalso -> empty .)
    MEAN            reduce using rule 134 (pnSaveFondoFalso -> empty .)
    MEDIAN          reduce using rule 134 (pnSaveFondoFalso -> empty .)
    VARIANCE        reduce using rule 134 (pnSaveFondoFalso -> empty .)
    MAX             reduce using rule 134 (pnSaveFondoFalso -> empty .)
    MIN             reduce using rule 134 (pnSaveFondoFalso -> empty .)
    STADDES         reduce using rule 134 (pnSaveFondoFalso -> empty .)
    BOXPLOT         reduce using rule 134 (pnSaveFondoFalso -> empty .)
    LINREG          reduce using rule 134 (pnSaveFondoFalso -> empty .)
    READ_FILE       reduce using rule 134 (pnSaveFondoFalso -> empty .)


state 181

    (82) f -> CTEI pnSaveCteI . pnSaveOperandoConstante
    (137) pnSaveOperandoConstante -> . empty
    (174) empty -> .

    MULT            reduce using rule 174 (empty -> .)
    DIV             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnSaveOperandoConstante        shift and go to state 248
    empty                          shift and go to state 249

state 182

    (131) pnSaveCteI -> empty .

    MULT            reduce using rule 131 (pnSaveCteI -> empty .)
    DIV             reduce using rule 131 (pnSaveCteI -> empty .)
    PLUS            reduce using rule 131 (pnSaveCteI -> empty .)
    MINUS           reduce using rule 131 (pnSaveCteI -> empty .)
    LESS_THAN       reduce using rule 131 (pnSaveCteI -> empty .)
    GREATER_THAN    reduce using rule 131 (pnSaveCteI -> empty .)
    EQUALS          reduce using rule 131 (pnSaveCteI -> empty .)
    NOTEQUALS       reduce using rule 131 (pnSaveCteI -> empty .)
    AND             reduce using rule 131 (pnSaveCteI -> empty .)
    OR              reduce using rule 131 (pnSaveCteI -> empty .)
    SEMICOLON       reduce using rule 131 (pnSaveCteI -> empty .)
    RIGHT_PARENT    reduce using rule 131 (pnSaveCteI -> empty .)
    COMMA           reduce using rule 131 (pnSaveCteI -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 131 (pnSaveCteI -> empty .)


state 183

    (83) f -> CTEF pnSaveCteF . pnSaveOperandoConstante
    (137) pnSaveOperandoConstante -> . empty
    (174) empty -> .

    MULT            reduce using rule 174 (empty -> .)
    DIV             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnSaveOperandoConstante        shift and go to state 250
    empty                          shift and go to state 249

state 184

    (132) pnSaveCteF -> empty .

    MULT            reduce using rule 132 (pnSaveCteF -> empty .)
    DIV             reduce using rule 132 (pnSaveCteF -> empty .)
    PLUS            reduce using rule 132 (pnSaveCteF -> empty .)
    MINUS           reduce using rule 132 (pnSaveCteF -> empty .)
    LESS_THAN       reduce using rule 132 (pnSaveCteF -> empty .)
    GREATER_THAN    reduce using rule 132 (pnSaveCteF -> empty .)
    EQUALS          reduce using rule 132 (pnSaveCteF -> empty .)
    NOTEQUALS       reduce using rule 132 (pnSaveCteF -> empty .)
    AND             reduce using rule 132 (pnSaveCteF -> empty .)
    OR              reduce using rule 132 (pnSaveCteF -> empty .)
    SEMICOLON       reduce using rule 132 (pnSaveCteF -> empty .)
    RIGHT_PARENT    reduce using rule 132 (pnSaveCteF -> empty .)
    COMMA           reduce using rule 132 (pnSaveCteF -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 132 (pnSaveCteF -> empty .)


state 185

    (84) f -> CTEC pnSaveCteC . pnSaveOperandoConstante
    (137) pnSaveOperandoConstante -> . empty
    (174) empty -> .

    MULT            reduce using rule 174 (empty -> .)
    DIV             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnSaveOperandoConstante        shift and go to state 251
    empty                          shift and go to state 249

state 186

    (133) pnSaveCteC -> empty .

    MULT            reduce using rule 133 (pnSaveCteC -> empty .)
    DIV             reduce using rule 133 (pnSaveCteC -> empty .)
    PLUS            reduce using rule 133 (pnSaveCteC -> empty .)
    MINUS           reduce using rule 133 (pnSaveCteC -> empty .)
    LESS_THAN       reduce using rule 133 (pnSaveCteC -> empty .)
    GREATER_THAN    reduce using rule 133 (pnSaveCteC -> empty .)
    EQUALS          reduce using rule 133 (pnSaveCteC -> empty .)
    NOTEQUALS       reduce using rule 133 (pnSaveCteC -> empty .)
    AND             reduce using rule 133 (pnSaveCteC -> empty .)
    OR              reduce using rule 133 (pnSaveCteC -> empty .)
    SEMICOLON       reduce using rule 133 (pnSaveCteC -> empty .)
    RIGHT_PARENT    reduce using rule 133 (pnSaveCteC -> empty .)
    COMMA           reduce using rule 133 (pnSaveCteC -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 133 (pnSaveCteC -> empty .)


state 187

    (136) pnSaveOperandos -> empty .
    (124) pnCheckFunc -> empty .

    LEFT_SQR_BRACKET reduce using rule 136 (pnSaveOperandos -> empty .)
    MULT            reduce using rule 136 (pnSaveOperandos -> empty .)
    DIV             reduce using rule 136 (pnSaveOperandos -> empty .)
    PLUS            reduce using rule 136 (pnSaveOperandos -> empty .)
    MINUS           reduce using rule 136 (pnSaveOperandos -> empty .)
    LESS_THAN       reduce using rule 136 (pnSaveOperandos -> empty .)
    GREATER_THAN    reduce using rule 136 (pnSaveOperandos -> empty .)
    EQUALS          reduce using rule 136 (pnSaveOperandos -> empty .)
    NOTEQUALS       reduce using rule 136 (pnSaveOperandos -> empty .)
    AND             reduce using rule 136 (pnSaveOperandos -> empty .)
    OR              reduce using rule 136 (pnSaveOperandos -> empty .)
    SEMICOLON       reduce using rule 136 (pnSaveOperandos -> empty .)
    RIGHT_PARENT    reduce using rule 136 (pnSaveOperandos -> empty .)
    COMMA           reduce using rule 136 (pnSaveOperandos -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 136 (pnSaveOperandos -> empty .)
    LEFT_PARENT     reduce using rule 124 (pnCheckFunc -> empty .)


state 188

    (12) copy -> READ_FILE LEFT_PARENT variable . COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    COMMA           shift and go to state 252


state 189

    (102) mean -> MEAN LEFT_PARENT variable . COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    COMMA           shift and go to state 253


state 190

    (103) median -> MEDIAN LEFT_PARENT variable . COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    COMMA           shift and go to state 254


state 191

    (104) variance -> VARIANCE LEFT_PARENT variable . COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    COMMA           shift and go to state 255


state 192

    (105) max -> MAX LEFT_PARENT variable . COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    COMMA           shift and go to state 256


state 193

    (106) min -> MIN LEFT_PARENT variable . COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    COMMA           shift and go to state 257


state 194

    (107) staddes -> STADDES LEFT_PARENT variable . COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON

    COMMA           shift and go to state 258


state 195

    (108) boxplot -> BOXPLOT LEFT_PARENT variable . COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON

    COMMA           shift and go to state 259


state 196

    (109) linreg -> LINREG LEFT_PARENT variable . COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON

    COMMA           shift and go to state 260


state 197

    (33) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param . RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    RIGHT_PARENT    shift and go to state 261


state 198

    (36) param -> paramlist .

    RIGHT_PARENT    reduce using rule 36 (param -> paramlist .)


state 199

    (37) param -> empty .

    RIGHT_PARENT    reduce using rule 37 (param -> empty .)


state 200

    (38) paramlist -> tipoparam . ARROW ID pnAddParametersTablaVar paramlistp

    ARROW           shift and go to state 262


state 201

    (39) tipoparam -> tipo_simp .

    ARROW           reduce using rule 39 (tipoparam -> tipo_simp .)


state 202

    (40) tipoparam -> DATAFRAME . pnSaveTypeVar
    (116) pnSaveTypeVar -> . empty
    (174) empty -> .

    ARROW           reduce using rule 174 (empty -> .)

    pnSaveTypeVar                  shift and go to state 263
    empty                          shift and go to state 40

state 203

    (31) idpp -> COMMA ID pnCheckNameTablaVar . pnArrAddDim idpp
    (166) pnArrAddDim -> . empty
    (174) empty -> .

    COMMA           reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)

    pnArrAddDim                    shift and go to state 264
    empty                          shift and go to state 65

state 204

    (26) vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim vpp RIGHT_SQR_BRACKET pnArrCuadriplificar .

    ARROW           reduce using rule 26 (vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim vpp RIGHT_SQR_BRACKET pnArrCuadriplificar .)


state 205

    (165) pnArrCuadriplificar -> empty .

    ARROW           reduce using rule 165 (pnArrCuadriplificar -> empty .)


state 206

    (28) vpp -> COMMA CTEI pnArrSaveLim .

    RIGHT_SQR_BRACKET reduce using rule 28 (vpp -> COMMA CTEI pnArrSaveLim .)


state 207

    (53) asign -> variable ASIGN pnSaveOperadorAsign exp . pnCuadAsign SEMICOLON
    (147) pnCuadAsign -> . empty
    (174) empty -> .

    SEMICOLON       reduce using rule 174 (empty -> .)

    pnCuadAsign                    shift and go to state 265
    empty                          shift and go to state 266

state 208

    (18) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra . expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (19) expp -> . exp pnCuadParametro exppp
    (20) expp -> . empty
    (59) exp -> . exprel pnCuadOplog logic
    (174) empty -> .
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    expp                           shift and go to state 267
    exp                            shift and go to state 268
    empty                          shift and go to state 269
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 209

    (125) pnGenerateEra -> empty .

    LEFT_PARENT     reduce using rule 125 (pnGenerateEra -> empty .)
    CTEI            reduce using rule 125 (pnGenerateEra -> empty .)
    CTEF            reduce using rule 125 (pnGenerateEra -> empty .)
    CTEC            reduce using rule 125 (pnGenerateEra -> empty .)
    ID              reduce using rule 125 (pnGenerateEra -> empty .)
    MEAN            reduce using rule 125 (pnGenerateEra -> empty .)
    MEDIAN          reduce using rule 125 (pnGenerateEra -> empty .)
    VARIANCE        reduce using rule 125 (pnGenerateEra -> empty .)
    MAX             reduce using rule 125 (pnGenerateEra -> empty .)
    MIN             reduce using rule 125 (pnGenerateEra -> empty .)
    STADDES         reduce using rule 125 (pnGenerateEra -> empty .)
    BOXPLOT         reduce using rule 125 (pnGenerateEra -> empty .)
    LINREG          reduce using rule 125 (pnGenerateEra -> empty .)
    READ_FILE       reduce using rule 125 (pnGenerateEra -> empty .)
    RIGHT_PARENT    reduce using rule 125 (pnGenerateEra -> empty .)


state 210

    (14) indexp -> LEFT_SQR_BRACKET pnArrIni . exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    exp                            shift and go to state 270
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 211

    (167) pnArrIni -> empty .

    LEFT_PARENT     reduce using rule 167 (pnArrIni -> empty .)
    CTEI            reduce using rule 167 (pnArrIni -> empty .)
    CTEF            reduce using rule 167 (pnArrIni -> empty .)
    CTEC            reduce using rule 167 (pnArrIni -> empty .)
    ID              reduce using rule 167 (pnArrIni -> empty .)
    MEAN            reduce using rule 167 (pnArrIni -> empty .)
    MEDIAN          reduce using rule 167 (pnArrIni -> empty .)
    VARIANCE        reduce using rule 167 (pnArrIni -> empty .)
    MAX             reduce using rule 167 (pnArrIni -> empty .)
    MIN             reduce using rule 167 (pnArrIni -> empty .)
    STADDES         reduce using rule 167 (pnArrIni -> empty .)
    BOXPLOT         reduce using rule 167 (pnArrIni -> empty .)
    LINREG          reduce using rule 167 (pnArrIni -> empty .)
    READ_FILE       reduce using rule 167 (pnArrIni -> empty .)


state 212

    (54) lee -> READ LEFT_PARENT variable pnCuadLee . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 271


state 213

    (149) pnCuadLee -> empty .

    RIGHT_PARENT    reduce using rule 149 (pnCuadLee -> empty .)


state 214

    (136) pnSaveOperandos -> empty .

    LEFT_SQR_BRACKET reduce using rule 136 (pnSaveOperandos -> empty .)
    RIGHT_PARENT    reduce using rule 136 (pnSaveOperandos -> empty .)
    ASIGN           reduce using rule 136 (pnSaveOperandos -> empty .)
    COMMA           reduce using rule 136 (pnSaveOperandos -> empty .)


state 215

    (55) escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 272


state 216

    (56) escribep -> exp pnCuadEscribe .

    RIGHT_PARENT    reduce using rule 56 (escribep -> exp pnCuadEscribe .)


state 217

    (148) pnCuadEscribe -> empty .

    RIGHT_PARENT    reduce using rule 148 (pnCuadEscribe -> empty .)


state 218

    (57) escribep -> LETRERO pnCuadEscribe .

    RIGHT_PARENT    reduce using rule 57 (escribep -> LETRERO pnCuadEscribe .)


state 219

    (88) condicion -> IF LEFT_PARENT exp pnCheckBoolIf . RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf

    RIGHT_PARENT    shift and go to state 273


state 220

    (154) pnCheckBoolIf -> empty .

    RIGHT_PARENT    reduce using rule 154 (pnCheckBoolIf -> empty .)


state 221

    (91) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp . pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (154) pnCheckBoolIf -> . empty
    (174) empty -> .

    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCheckBoolIf                  shift and go to state 274
    empty                          shift and go to state 220

state 222

    (92) ciclof -> FOR LEFT_PARENT variable pnSaveForID . ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    ASIGN           shift and go to state 275


state 223

    (159) pnSaveForID -> empty .

    ASIGN           reduce using rule 159 (pnSaveForID -> empty .)


state 224

    (58) return -> RETURNS exp pnCuadRet SEMICOLON .

    ID              reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    READ            reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    WRITE           reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    IF              reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    WHILE           reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    FOR             reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    RETURNS         reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    READ_FILE       reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    MEAN            reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    MEDIAN          reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    VARIANCE        reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    MAX             reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    MIN             reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    STADDES         reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    BOXPLOT         reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    LINREG          reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 58 (return -> RETURNS exp pnCuadRet SEMICOLON .)


state 225

    (59) exp -> exprel pnCuadOplog logic .

    SEMICOLON       reduce using rule 59 (exp -> exprel pnCuadOplog logic .)
    RIGHT_PARENT    reduce using rule 59 (exp -> exprel pnCuadOplog logic .)
    COMMA           reduce using rule 59 (exp -> exprel pnCuadOplog logic .)
    RIGHT_SQR_BRACKET reduce using rule 59 (exp -> exprel pnCuadOplog logic .)


state 226

    (60) logic -> logicsig . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    exprel                         shift and go to state 276
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 227

    (61) logic -> empty .

    SEMICOLON       reduce using rule 61 (logic -> empty .)
    RIGHT_PARENT    reduce using rule 61 (logic -> empty .)
    COMMA           reduce using rule 61 (logic -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 61 (logic -> empty .)


state 228

    (62) logicsig -> AND . pnSaveOperadorLog
    (141) pnSaveOperadorLog -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)
    CTEI            reduce using rule 174 (empty -> .)
    CTEF            reduce using rule 174 (empty -> .)
    CTEC            reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)

    pnSaveOperadorLog              shift and go to state 277
    empty                          shift and go to state 278

state 229

    (63) logicsig -> OR . pnSaveOperadorLog
    (141) pnSaveOperadorLog -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)
    CTEI            reduce using rule 174 (empty -> .)
    CTEF            reduce using rule 174 (empty -> .)
    CTEC            reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)

    pnSaveOperadorLog              shift and go to state 279
    empty                          shift and go to state 278

state 230

    (64) exprel -> e pnCuadOpRelacional relacionalp .

    AND             reduce using rule 64 (exprel -> e pnCuadOpRelacional relacionalp .)
    OR              reduce using rule 64 (exprel -> e pnCuadOpRelacional relacionalp .)
    SEMICOLON       reduce using rule 64 (exprel -> e pnCuadOpRelacional relacionalp .)
    RIGHT_PARENT    reduce using rule 64 (exprel -> e pnCuadOpRelacional relacionalp .)
    COMMA           reduce using rule 64 (exprel -> e pnCuadOpRelacional relacionalp .)
    RIGHT_SQR_BRACKET reduce using rule 64 (exprel -> e pnCuadOpRelacional relacionalp .)


state 231

    (65) relacionalp -> relsig . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    e                              shift and go to state 280
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 232

    (66) relacionalp -> empty .

    AND             reduce using rule 66 (relacionalp -> empty .)
    OR              reduce using rule 66 (relacionalp -> empty .)
    SEMICOLON       reduce using rule 66 (relacionalp -> empty .)
    RIGHT_PARENT    reduce using rule 66 (relacionalp -> empty .)
    COMMA           reduce using rule 66 (relacionalp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 66 (relacionalp -> empty .)


state 233

    (67) relsig -> LESS_THAN . pnSaveOperadorRel
    (140) pnSaveOperadorRel -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)
    CTEI            reduce using rule 174 (empty -> .)
    CTEF            reduce using rule 174 (empty -> .)
    CTEC            reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)

    pnSaveOperadorRel              shift and go to state 281
    empty                          shift and go to state 282

state 234

    (68) relsig -> GREATER_THAN . pnSaveOperadorRel
    (140) pnSaveOperadorRel -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)
    CTEI            reduce using rule 174 (empty -> .)
    CTEF            reduce using rule 174 (empty -> .)
    CTEC            reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)

    pnSaveOperadorRel              shift and go to state 283
    empty                          shift and go to state 282

state 235

    (69) relsig -> EQUALS . pnSaveOperadorRel
    (140) pnSaveOperadorRel -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)
    CTEI            reduce using rule 174 (empty -> .)
    CTEF            reduce using rule 174 (empty -> .)
    CTEC            reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)

    pnSaveOperadorRel              shift and go to state 284
    empty                          shift and go to state 282

state 236

    (70) relsig -> NOTEQUALS . pnSaveOperadorRel
    (140) pnSaveOperadorRel -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)
    CTEI            reduce using rule 174 (empty -> .)
    CTEF            reduce using rule 174 (empty -> .)
    CTEC            reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)

    pnSaveOperadorRel              shift and go to state 285
    empty                          shift and go to state 282

state 237

    (71) e -> t pnCuadPlMi tp .

    LESS_THAN       reduce using rule 71 (e -> t pnCuadPlMi tp .)
    GREATER_THAN    reduce using rule 71 (e -> t pnCuadPlMi tp .)
    EQUALS          reduce using rule 71 (e -> t pnCuadPlMi tp .)
    NOTEQUALS       reduce using rule 71 (e -> t pnCuadPlMi tp .)
    AND             reduce using rule 71 (e -> t pnCuadPlMi tp .)
    OR              reduce using rule 71 (e -> t pnCuadPlMi tp .)
    SEMICOLON       reduce using rule 71 (e -> t pnCuadPlMi tp .)
    RIGHT_PARENT    reduce using rule 71 (e -> t pnCuadPlMi tp .)
    COMMA           reduce using rule 71 (e -> t pnCuadPlMi tp .)
    RIGHT_SQR_BRACKET reduce using rule 71 (e -> t pnCuadPlMi tp .)


state 238

    (72) tp -> tsig . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    t                              shift and go to state 286
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 239

    (73) tp -> empty .

    LESS_THAN       reduce using rule 73 (tp -> empty .)
    GREATER_THAN    reduce using rule 73 (tp -> empty .)
    EQUALS          reduce using rule 73 (tp -> empty .)
    NOTEQUALS       reduce using rule 73 (tp -> empty .)
    AND             reduce using rule 73 (tp -> empty .)
    OR              reduce using rule 73 (tp -> empty .)
    SEMICOLON       reduce using rule 73 (tp -> empty .)
    RIGHT_PARENT    reduce using rule 73 (tp -> empty .)
    COMMA           reduce using rule 73 (tp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 73 (tp -> empty .)


state 240

    (74) tsig -> PLUS . pnSaveOperadorPlMi
    (138) pnSaveOperadorPlMi -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)
    CTEI            reduce using rule 174 (empty -> .)
    CTEF            reduce using rule 174 (empty -> .)
    CTEC            reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)

    pnSaveOperadorPlMi             shift and go to state 287
    empty                          shift and go to state 288

state 241

    (75) tsig -> MINUS . pnSaveOperadorPlMi
    (138) pnSaveOperadorPlMi -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)
    CTEI            reduce using rule 174 (empty -> .)
    CTEF            reduce using rule 174 (empty -> .)
    CTEC            reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)

    pnSaveOperadorPlMi             shift and go to state 289
    empty                          shift and go to state 288

state 242

    (76) t -> f pnCuadMuDi fp .

    PLUS            reduce using rule 76 (t -> f pnCuadMuDi fp .)
    MINUS           reduce using rule 76 (t -> f pnCuadMuDi fp .)
    LESS_THAN       reduce using rule 76 (t -> f pnCuadMuDi fp .)
    GREATER_THAN    reduce using rule 76 (t -> f pnCuadMuDi fp .)
    EQUALS          reduce using rule 76 (t -> f pnCuadMuDi fp .)
    NOTEQUALS       reduce using rule 76 (t -> f pnCuadMuDi fp .)
    AND             reduce using rule 76 (t -> f pnCuadMuDi fp .)
    OR              reduce using rule 76 (t -> f pnCuadMuDi fp .)
    SEMICOLON       reduce using rule 76 (t -> f pnCuadMuDi fp .)
    RIGHT_PARENT    reduce using rule 76 (t -> f pnCuadMuDi fp .)
    COMMA           reduce using rule 76 (t -> f pnCuadMuDi fp .)
    RIGHT_SQR_BRACKET reduce using rule 76 (t -> f pnCuadMuDi fp .)


state 243

    (77) fp -> fsig . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    f                              shift and go to state 290
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 244

    (78) fp -> empty .

    PLUS            reduce using rule 78 (fp -> empty .)
    MINUS           reduce using rule 78 (fp -> empty .)
    LESS_THAN       reduce using rule 78 (fp -> empty .)
    GREATER_THAN    reduce using rule 78 (fp -> empty .)
    EQUALS          reduce using rule 78 (fp -> empty .)
    NOTEQUALS       reduce using rule 78 (fp -> empty .)
    AND             reduce using rule 78 (fp -> empty .)
    OR              reduce using rule 78 (fp -> empty .)
    SEMICOLON       reduce using rule 78 (fp -> empty .)
    RIGHT_PARENT    reduce using rule 78 (fp -> empty .)
    COMMA           reduce using rule 78 (fp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 78 (fp -> empty .)


state 245

    (79) fsig -> MULT . pnSaveOperadorMuDi
    (139) pnSaveOperadorMuDi -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)
    CTEI            reduce using rule 174 (empty -> .)
    CTEF            reduce using rule 174 (empty -> .)
    CTEC            reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)

    pnSaveOperadorMuDi             shift and go to state 291
    empty                          shift and go to state 292

state 246

    (80) fsig -> DIV . pnSaveOperadorMuDi
    (139) pnSaveOperadorMuDi -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)
    CTEI            reduce using rule 174 (empty -> .)
    CTEF            reduce using rule 174 (empty -> .)
    CTEC            reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)

    pnSaveOperadorMuDi             shift and go to state 293
    empty                          shift and go to state 292

state 247

    (81) f -> LEFT_PARENT pnSaveFondoFalso exp . RIGHT_PARENT pnPopFondoFalso

    RIGHT_PARENT    shift and go to state 294


state 248

    (82) f -> CTEI pnSaveCteI pnSaveOperandoConstante .

    MULT            reduce using rule 82 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    DIV             reduce using rule 82 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    PLUS            reduce using rule 82 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    MINUS           reduce using rule 82 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    LESS_THAN       reduce using rule 82 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    GREATER_THAN    reduce using rule 82 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    EQUALS          reduce using rule 82 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    NOTEQUALS       reduce using rule 82 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    AND             reduce using rule 82 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    OR              reduce using rule 82 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    SEMICOLON       reduce using rule 82 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    RIGHT_PARENT    reduce using rule 82 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    COMMA           reduce using rule 82 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)
    RIGHT_SQR_BRACKET reduce using rule 82 (f -> CTEI pnSaveCteI pnSaveOperandoConstante .)


state 249

    (137) pnSaveOperandoConstante -> empty .

    MULT            reduce using rule 137 (pnSaveOperandoConstante -> empty .)
    DIV             reduce using rule 137 (pnSaveOperandoConstante -> empty .)
    PLUS            reduce using rule 137 (pnSaveOperandoConstante -> empty .)
    MINUS           reduce using rule 137 (pnSaveOperandoConstante -> empty .)
    LESS_THAN       reduce using rule 137 (pnSaveOperandoConstante -> empty .)
    GREATER_THAN    reduce using rule 137 (pnSaveOperandoConstante -> empty .)
    EQUALS          reduce using rule 137 (pnSaveOperandoConstante -> empty .)
    NOTEQUALS       reduce using rule 137 (pnSaveOperandoConstante -> empty .)
    AND             reduce using rule 137 (pnSaveOperandoConstante -> empty .)
    OR              reduce using rule 137 (pnSaveOperandoConstante -> empty .)
    SEMICOLON       reduce using rule 137 (pnSaveOperandoConstante -> empty .)
    RIGHT_PARENT    reduce using rule 137 (pnSaveOperandoConstante -> empty .)
    COMMA           reduce using rule 137 (pnSaveOperandoConstante -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 137 (pnSaveOperandoConstante -> empty .)


state 250

    (83) f -> CTEF pnSaveCteF pnSaveOperandoConstante .

    MULT            reduce using rule 83 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    DIV             reduce using rule 83 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    PLUS            reduce using rule 83 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    MINUS           reduce using rule 83 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    LESS_THAN       reduce using rule 83 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    GREATER_THAN    reduce using rule 83 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    EQUALS          reduce using rule 83 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    NOTEQUALS       reduce using rule 83 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    AND             reduce using rule 83 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    OR              reduce using rule 83 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    SEMICOLON       reduce using rule 83 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    RIGHT_PARENT    reduce using rule 83 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    COMMA           reduce using rule 83 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)
    RIGHT_SQR_BRACKET reduce using rule 83 (f -> CTEF pnSaveCteF pnSaveOperandoConstante .)


state 251

    (84) f -> CTEC pnSaveCteC pnSaveOperandoConstante .

    MULT            reduce using rule 84 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    DIV             reduce using rule 84 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    PLUS            reduce using rule 84 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    MINUS           reduce using rule 84 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    LESS_THAN       reduce using rule 84 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    GREATER_THAN    reduce using rule 84 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    EQUALS          reduce using rule 84 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    NOTEQUALS       reduce using rule 84 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    AND             reduce using rule 84 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    OR              reduce using rule 84 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    SEMICOLON       reduce using rule 84 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    RIGHT_PARENT    reduce using rule 84 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    COMMA           reduce using rule 84 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)
    RIGHT_SQR_BRACKET reduce using rule 84 (f -> CTEC pnSaveCteC pnSaveOperandoConstante .)


state 252

    (12) copy -> READ_FILE LEFT_PARENT variable COMMA . LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LETRERO         shift and go to state 295


state 253

    (102) mean -> MEAN LEFT_PARENT variable COMMA . exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    variable                       shift and go to state 134
    exp                            shift and go to state 296
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 254

    (103) median -> MEDIAN LEFT_PARENT variable COMMA . exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    variable                       shift and go to state 134
    exp                            shift and go to state 297
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 255

    (104) variance -> VARIANCE LEFT_PARENT variable COMMA . exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    variable                       shift and go to state 134
    exp                            shift and go to state 298
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 256

    (105) max -> MAX LEFT_PARENT variable COMMA . exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    variable                       shift and go to state 134
    exp                            shift and go to state 299
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 257

    (106) min -> MIN LEFT_PARENT variable COMMA . exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    variable                       shift and go to state 134
    exp                            shift and go to state 300
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 258

    (107) staddes -> STADDES LEFT_PARENT variable COMMA . exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    variable                       shift and go to state 134
    exp                            shift and go to state 301
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 259

    (108) boxplot -> BOXPLOT LEFT_PARENT variable COMMA . LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON

    LETRERO         shift and go to state 302


state 260

    (109) linreg -> LINREG LEFT_PARENT variable COMMA . exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    variable                       shift and go to state 134
    exp                            shift and go to state 303
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 261

    (33) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT . LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    LEFT_CUR_BRACKET shift and go to state 304


state 262

    (38) paramlist -> tipoparam ARROW . ID pnAddParametersTablaVar paramlistp

    ID              shift and go to state 305


state 263

    (40) tipoparam -> DATAFRAME pnSaveTypeVar .

    ARROW           reduce using rule 40 (tipoparam -> DATAFRAME pnSaveTypeVar .)


state 264

    (31) idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim . idpp
    (31) idpp -> . COMMA ID pnCheckNameTablaVar pnArrAddDim idpp
    (32) idpp -> . empty
    (174) empty -> .

    COMMA           shift and go to state 108
    SEMICOLON       reduce using rule 174 (empty -> .)

    idpp                           shift and go to state 306
    empty                          shift and go to state 109

state 265

    (53) asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign . SEMICOLON

    SEMICOLON       shift and go to state 307


state 266

    (147) pnCuadAsign -> empty .

    SEMICOLON       reduce using rule 147 (pnCuadAsign -> empty .)


state 267

    (18) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp . RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue

    RIGHT_PARENT    shift and go to state 308


state 268

    (19) expp -> exp . pnCuadParametro exppp
    (126) pnCuadParametro -> . empty
    (174) empty -> .

    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCuadParametro                shift and go to state 309
    empty                          shift and go to state 310

state 269

    (20) expp -> empty .

    RIGHT_PARENT    reduce using rule 20 (expp -> empty .)


state 270

    (14) indexp -> LEFT_SQR_BRACKET pnArrIni exp . pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop
    (168) pnArrVerify -> . empty
    (174) empty -> .

    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnArrVerify                    shift and go to state 311
    empty                          shift and go to state 312

state 271

    (54) lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 313


state 272

    (55) escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 55 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)


state 273

    (88) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT . IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf

    IF_TRUE         shift and go to state 314


state 274

    (91) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf . RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile

    RIGHT_PARENT    shift and go to state 315


state 275

    (92) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN . exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    variable                       shift and go to state 134
    exp                            shift and go to state 316
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 276

    (60) logic -> logicsig exprel . pnCuadOplog logic
    (145) pnCuadOplog -> . empty
    (174) empty -> .

    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnCuadOplog                    shift and go to state 317
    empty                          shift and go to state 172

state 277

    (62) logicsig -> AND pnSaveOperadorLog .

    LEFT_PARENT     reduce using rule 62 (logicsig -> AND pnSaveOperadorLog .)
    CTEI            reduce using rule 62 (logicsig -> AND pnSaveOperadorLog .)
    CTEF            reduce using rule 62 (logicsig -> AND pnSaveOperadorLog .)
    CTEC            reduce using rule 62 (logicsig -> AND pnSaveOperadorLog .)
    ID              reduce using rule 62 (logicsig -> AND pnSaveOperadorLog .)
    MEAN            reduce using rule 62 (logicsig -> AND pnSaveOperadorLog .)
    MEDIAN          reduce using rule 62 (logicsig -> AND pnSaveOperadorLog .)
    VARIANCE        reduce using rule 62 (logicsig -> AND pnSaveOperadorLog .)
    MAX             reduce using rule 62 (logicsig -> AND pnSaveOperadorLog .)
    MIN             reduce using rule 62 (logicsig -> AND pnSaveOperadorLog .)
    STADDES         reduce using rule 62 (logicsig -> AND pnSaveOperadorLog .)
    BOXPLOT         reduce using rule 62 (logicsig -> AND pnSaveOperadorLog .)
    LINREG          reduce using rule 62 (logicsig -> AND pnSaveOperadorLog .)
    READ_FILE       reduce using rule 62 (logicsig -> AND pnSaveOperadorLog .)


state 278

    (141) pnSaveOperadorLog -> empty .

    LEFT_PARENT     reduce using rule 141 (pnSaveOperadorLog -> empty .)
    CTEI            reduce using rule 141 (pnSaveOperadorLog -> empty .)
    CTEF            reduce using rule 141 (pnSaveOperadorLog -> empty .)
    CTEC            reduce using rule 141 (pnSaveOperadorLog -> empty .)
    ID              reduce using rule 141 (pnSaveOperadorLog -> empty .)
    MEAN            reduce using rule 141 (pnSaveOperadorLog -> empty .)
    MEDIAN          reduce using rule 141 (pnSaveOperadorLog -> empty .)
    VARIANCE        reduce using rule 141 (pnSaveOperadorLog -> empty .)
    MAX             reduce using rule 141 (pnSaveOperadorLog -> empty .)
    MIN             reduce using rule 141 (pnSaveOperadorLog -> empty .)
    STADDES         reduce using rule 141 (pnSaveOperadorLog -> empty .)
    BOXPLOT         reduce using rule 141 (pnSaveOperadorLog -> empty .)
    LINREG          reduce using rule 141 (pnSaveOperadorLog -> empty .)
    READ_FILE       reduce using rule 141 (pnSaveOperadorLog -> empty .)


state 279

    (63) logicsig -> OR pnSaveOperadorLog .

    LEFT_PARENT     reduce using rule 63 (logicsig -> OR pnSaveOperadorLog .)
    CTEI            reduce using rule 63 (logicsig -> OR pnSaveOperadorLog .)
    CTEF            reduce using rule 63 (logicsig -> OR pnSaveOperadorLog .)
    CTEC            reduce using rule 63 (logicsig -> OR pnSaveOperadorLog .)
    ID              reduce using rule 63 (logicsig -> OR pnSaveOperadorLog .)
    MEAN            reduce using rule 63 (logicsig -> OR pnSaveOperadorLog .)
    MEDIAN          reduce using rule 63 (logicsig -> OR pnSaveOperadorLog .)
    VARIANCE        reduce using rule 63 (logicsig -> OR pnSaveOperadorLog .)
    MAX             reduce using rule 63 (logicsig -> OR pnSaveOperadorLog .)
    MIN             reduce using rule 63 (logicsig -> OR pnSaveOperadorLog .)
    STADDES         reduce using rule 63 (logicsig -> OR pnSaveOperadorLog .)
    BOXPLOT         reduce using rule 63 (logicsig -> OR pnSaveOperadorLog .)
    LINREG          reduce using rule 63 (logicsig -> OR pnSaveOperadorLog .)
    READ_FILE       reduce using rule 63 (logicsig -> OR pnSaveOperadorLog .)


state 280

    (65) relacionalp -> relsig e . pnCuadOpRelacional relacionalp
    (144) pnCuadOpRelacional -> . empty
    (174) empty -> .

    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnCuadOpRelacional             shift and go to state 318
    empty                          shift and go to state 174

state 281

    (67) relsig -> LESS_THAN pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 67 (relsig -> LESS_THAN pnSaveOperadorRel .)
    CTEI            reduce using rule 67 (relsig -> LESS_THAN pnSaveOperadorRel .)
    CTEF            reduce using rule 67 (relsig -> LESS_THAN pnSaveOperadorRel .)
    CTEC            reduce using rule 67 (relsig -> LESS_THAN pnSaveOperadorRel .)
    ID              reduce using rule 67 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MEAN            reduce using rule 67 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MEDIAN          reduce using rule 67 (relsig -> LESS_THAN pnSaveOperadorRel .)
    VARIANCE        reduce using rule 67 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MAX             reduce using rule 67 (relsig -> LESS_THAN pnSaveOperadorRel .)
    MIN             reduce using rule 67 (relsig -> LESS_THAN pnSaveOperadorRel .)
    STADDES         reduce using rule 67 (relsig -> LESS_THAN pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 67 (relsig -> LESS_THAN pnSaveOperadorRel .)
    LINREG          reduce using rule 67 (relsig -> LESS_THAN pnSaveOperadorRel .)
    READ_FILE       reduce using rule 67 (relsig -> LESS_THAN pnSaveOperadorRel .)


state 282

    (140) pnSaveOperadorRel -> empty .

    LEFT_PARENT     reduce using rule 140 (pnSaveOperadorRel -> empty .)
    CTEI            reduce using rule 140 (pnSaveOperadorRel -> empty .)
    CTEF            reduce using rule 140 (pnSaveOperadorRel -> empty .)
    CTEC            reduce using rule 140 (pnSaveOperadorRel -> empty .)
    ID              reduce using rule 140 (pnSaveOperadorRel -> empty .)
    MEAN            reduce using rule 140 (pnSaveOperadorRel -> empty .)
    MEDIAN          reduce using rule 140 (pnSaveOperadorRel -> empty .)
    VARIANCE        reduce using rule 140 (pnSaveOperadorRel -> empty .)
    MAX             reduce using rule 140 (pnSaveOperadorRel -> empty .)
    MIN             reduce using rule 140 (pnSaveOperadorRel -> empty .)
    STADDES         reduce using rule 140 (pnSaveOperadorRel -> empty .)
    BOXPLOT         reduce using rule 140 (pnSaveOperadorRel -> empty .)
    LINREG          reduce using rule 140 (pnSaveOperadorRel -> empty .)
    READ_FILE       reduce using rule 140 (pnSaveOperadorRel -> empty .)


state 283

    (68) relsig -> GREATER_THAN pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 68 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    CTEI            reduce using rule 68 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    CTEF            reduce using rule 68 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    CTEC            reduce using rule 68 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    ID              reduce using rule 68 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MEAN            reduce using rule 68 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MEDIAN          reduce using rule 68 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    VARIANCE        reduce using rule 68 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MAX             reduce using rule 68 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    MIN             reduce using rule 68 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    STADDES         reduce using rule 68 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 68 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    LINREG          reduce using rule 68 (relsig -> GREATER_THAN pnSaveOperadorRel .)
    READ_FILE       reduce using rule 68 (relsig -> GREATER_THAN pnSaveOperadorRel .)


state 284

    (69) relsig -> EQUALS pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 69 (relsig -> EQUALS pnSaveOperadorRel .)
    CTEI            reduce using rule 69 (relsig -> EQUALS pnSaveOperadorRel .)
    CTEF            reduce using rule 69 (relsig -> EQUALS pnSaveOperadorRel .)
    CTEC            reduce using rule 69 (relsig -> EQUALS pnSaveOperadorRel .)
    ID              reduce using rule 69 (relsig -> EQUALS pnSaveOperadorRel .)
    MEAN            reduce using rule 69 (relsig -> EQUALS pnSaveOperadorRel .)
    MEDIAN          reduce using rule 69 (relsig -> EQUALS pnSaveOperadorRel .)
    VARIANCE        reduce using rule 69 (relsig -> EQUALS pnSaveOperadorRel .)
    MAX             reduce using rule 69 (relsig -> EQUALS pnSaveOperadorRel .)
    MIN             reduce using rule 69 (relsig -> EQUALS pnSaveOperadorRel .)
    STADDES         reduce using rule 69 (relsig -> EQUALS pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 69 (relsig -> EQUALS pnSaveOperadorRel .)
    LINREG          reduce using rule 69 (relsig -> EQUALS pnSaveOperadorRel .)
    READ_FILE       reduce using rule 69 (relsig -> EQUALS pnSaveOperadorRel .)


state 285

    (70) relsig -> NOTEQUALS pnSaveOperadorRel .

    LEFT_PARENT     reduce using rule 70 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    CTEI            reduce using rule 70 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    CTEF            reduce using rule 70 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    CTEC            reduce using rule 70 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    ID              reduce using rule 70 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MEAN            reduce using rule 70 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MEDIAN          reduce using rule 70 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    VARIANCE        reduce using rule 70 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MAX             reduce using rule 70 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    MIN             reduce using rule 70 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    STADDES         reduce using rule 70 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    BOXPLOT         reduce using rule 70 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    LINREG          reduce using rule 70 (relsig -> NOTEQUALS pnSaveOperadorRel .)
    READ_FILE       reduce using rule 70 (relsig -> NOTEQUALS pnSaveOperadorRel .)


state 286

    (72) tp -> tsig t . pnCuadPlMi tp
    (142) pnCuadPlMi -> . empty
    (174) empty -> .

    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnCuadPlMi                     shift and go to state 319
    empty                          shift and go to state 176

state 287

    (74) tsig -> PLUS pnSaveOperadorPlMi .

    LEFT_PARENT     reduce using rule 74 (tsig -> PLUS pnSaveOperadorPlMi .)
    CTEI            reduce using rule 74 (tsig -> PLUS pnSaveOperadorPlMi .)
    CTEF            reduce using rule 74 (tsig -> PLUS pnSaveOperadorPlMi .)
    CTEC            reduce using rule 74 (tsig -> PLUS pnSaveOperadorPlMi .)
    ID              reduce using rule 74 (tsig -> PLUS pnSaveOperadorPlMi .)
    MEAN            reduce using rule 74 (tsig -> PLUS pnSaveOperadorPlMi .)
    MEDIAN          reduce using rule 74 (tsig -> PLUS pnSaveOperadorPlMi .)
    VARIANCE        reduce using rule 74 (tsig -> PLUS pnSaveOperadorPlMi .)
    MAX             reduce using rule 74 (tsig -> PLUS pnSaveOperadorPlMi .)
    MIN             reduce using rule 74 (tsig -> PLUS pnSaveOperadorPlMi .)
    STADDES         reduce using rule 74 (tsig -> PLUS pnSaveOperadorPlMi .)
    BOXPLOT         reduce using rule 74 (tsig -> PLUS pnSaveOperadorPlMi .)
    LINREG          reduce using rule 74 (tsig -> PLUS pnSaveOperadorPlMi .)
    READ_FILE       reduce using rule 74 (tsig -> PLUS pnSaveOperadorPlMi .)


state 288

    (138) pnSaveOperadorPlMi -> empty .

    LEFT_PARENT     reduce using rule 138 (pnSaveOperadorPlMi -> empty .)
    CTEI            reduce using rule 138 (pnSaveOperadorPlMi -> empty .)
    CTEF            reduce using rule 138 (pnSaveOperadorPlMi -> empty .)
    CTEC            reduce using rule 138 (pnSaveOperadorPlMi -> empty .)
    ID              reduce using rule 138 (pnSaveOperadorPlMi -> empty .)
    MEAN            reduce using rule 138 (pnSaveOperadorPlMi -> empty .)
    MEDIAN          reduce using rule 138 (pnSaveOperadorPlMi -> empty .)
    VARIANCE        reduce using rule 138 (pnSaveOperadorPlMi -> empty .)
    MAX             reduce using rule 138 (pnSaveOperadorPlMi -> empty .)
    MIN             reduce using rule 138 (pnSaveOperadorPlMi -> empty .)
    STADDES         reduce using rule 138 (pnSaveOperadorPlMi -> empty .)
    BOXPLOT         reduce using rule 138 (pnSaveOperadorPlMi -> empty .)
    LINREG          reduce using rule 138 (pnSaveOperadorPlMi -> empty .)
    READ_FILE       reduce using rule 138 (pnSaveOperadorPlMi -> empty .)


state 289

    (75) tsig -> MINUS pnSaveOperadorPlMi .

    LEFT_PARENT     reduce using rule 75 (tsig -> MINUS pnSaveOperadorPlMi .)
    CTEI            reduce using rule 75 (tsig -> MINUS pnSaveOperadorPlMi .)
    CTEF            reduce using rule 75 (tsig -> MINUS pnSaveOperadorPlMi .)
    CTEC            reduce using rule 75 (tsig -> MINUS pnSaveOperadorPlMi .)
    ID              reduce using rule 75 (tsig -> MINUS pnSaveOperadorPlMi .)
    MEAN            reduce using rule 75 (tsig -> MINUS pnSaveOperadorPlMi .)
    MEDIAN          reduce using rule 75 (tsig -> MINUS pnSaveOperadorPlMi .)
    VARIANCE        reduce using rule 75 (tsig -> MINUS pnSaveOperadorPlMi .)
    MAX             reduce using rule 75 (tsig -> MINUS pnSaveOperadorPlMi .)
    MIN             reduce using rule 75 (tsig -> MINUS pnSaveOperadorPlMi .)
    STADDES         reduce using rule 75 (tsig -> MINUS pnSaveOperadorPlMi .)
    BOXPLOT         reduce using rule 75 (tsig -> MINUS pnSaveOperadorPlMi .)
    LINREG          reduce using rule 75 (tsig -> MINUS pnSaveOperadorPlMi .)
    READ_FILE       reduce using rule 75 (tsig -> MINUS pnSaveOperadorPlMi .)


state 290

    (77) fp -> fsig f . pnCuadMuDi fp
    (143) pnCuadMuDi -> . empty
    (174) empty -> .

    MULT            reduce using rule 174 (empty -> .)
    DIV             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnCuadMuDi                     shift and go to state 320
    empty                          shift and go to state 178

state 291

    (79) fsig -> MULT pnSaveOperadorMuDi .

    LEFT_PARENT     reduce using rule 79 (fsig -> MULT pnSaveOperadorMuDi .)
    CTEI            reduce using rule 79 (fsig -> MULT pnSaveOperadorMuDi .)
    CTEF            reduce using rule 79 (fsig -> MULT pnSaveOperadorMuDi .)
    CTEC            reduce using rule 79 (fsig -> MULT pnSaveOperadorMuDi .)
    ID              reduce using rule 79 (fsig -> MULT pnSaveOperadorMuDi .)
    MEAN            reduce using rule 79 (fsig -> MULT pnSaveOperadorMuDi .)
    MEDIAN          reduce using rule 79 (fsig -> MULT pnSaveOperadorMuDi .)
    VARIANCE        reduce using rule 79 (fsig -> MULT pnSaveOperadorMuDi .)
    MAX             reduce using rule 79 (fsig -> MULT pnSaveOperadorMuDi .)
    MIN             reduce using rule 79 (fsig -> MULT pnSaveOperadorMuDi .)
    STADDES         reduce using rule 79 (fsig -> MULT pnSaveOperadorMuDi .)
    BOXPLOT         reduce using rule 79 (fsig -> MULT pnSaveOperadorMuDi .)
    LINREG          reduce using rule 79 (fsig -> MULT pnSaveOperadorMuDi .)
    READ_FILE       reduce using rule 79 (fsig -> MULT pnSaveOperadorMuDi .)


state 292

    (139) pnSaveOperadorMuDi -> empty .

    LEFT_PARENT     reduce using rule 139 (pnSaveOperadorMuDi -> empty .)
    CTEI            reduce using rule 139 (pnSaveOperadorMuDi -> empty .)
    CTEF            reduce using rule 139 (pnSaveOperadorMuDi -> empty .)
    CTEC            reduce using rule 139 (pnSaveOperadorMuDi -> empty .)
    ID              reduce using rule 139 (pnSaveOperadorMuDi -> empty .)
    MEAN            reduce using rule 139 (pnSaveOperadorMuDi -> empty .)
    MEDIAN          reduce using rule 139 (pnSaveOperadorMuDi -> empty .)
    VARIANCE        reduce using rule 139 (pnSaveOperadorMuDi -> empty .)
    MAX             reduce using rule 139 (pnSaveOperadorMuDi -> empty .)
    MIN             reduce using rule 139 (pnSaveOperadorMuDi -> empty .)
    STADDES         reduce using rule 139 (pnSaveOperadorMuDi -> empty .)
    BOXPLOT         reduce using rule 139 (pnSaveOperadorMuDi -> empty .)
    LINREG          reduce using rule 139 (pnSaveOperadorMuDi -> empty .)
    READ_FILE       reduce using rule 139 (pnSaveOperadorMuDi -> empty .)


state 293

    (80) fsig -> DIV pnSaveOperadorMuDi .

    LEFT_PARENT     reduce using rule 80 (fsig -> DIV pnSaveOperadorMuDi .)
    CTEI            reduce using rule 80 (fsig -> DIV pnSaveOperadorMuDi .)
    CTEF            reduce using rule 80 (fsig -> DIV pnSaveOperadorMuDi .)
    CTEC            reduce using rule 80 (fsig -> DIV pnSaveOperadorMuDi .)
    ID              reduce using rule 80 (fsig -> DIV pnSaveOperadorMuDi .)
    MEAN            reduce using rule 80 (fsig -> DIV pnSaveOperadorMuDi .)
    MEDIAN          reduce using rule 80 (fsig -> DIV pnSaveOperadorMuDi .)
    VARIANCE        reduce using rule 80 (fsig -> DIV pnSaveOperadorMuDi .)
    MAX             reduce using rule 80 (fsig -> DIV pnSaveOperadorMuDi .)
    MIN             reduce using rule 80 (fsig -> DIV pnSaveOperadorMuDi .)
    STADDES         reduce using rule 80 (fsig -> DIV pnSaveOperadorMuDi .)
    BOXPLOT         reduce using rule 80 (fsig -> DIV pnSaveOperadorMuDi .)
    LINREG          reduce using rule 80 (fsig -> DIV pnSaveOperadorMuDi .)
    READ_FILE       reduce using rule 80 (fsig -> DIV pnSaveOperadorMuDi .)


state 294

    (81) f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT . pnPopFondoFalso
    (135) pnPopFondoFalso -> . empty
    (174) empty -> .

    MULT            reduce using rule 174 (empty -> .)
    DIV             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnPopFondoFalso                shift and go to state 321
    empty                          shift and go to state 322

state 295

    (12) copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO . pnCuadCopy RIGHT_PARENT SEMICOLON
    (150) pnCuadCopy -> . empty
    (174) empty -> .

    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCuadCopy                     shift and go to state 323
    empty                          shift and go to state 324

state 296

    (102) mean -> MEAN LEFT_PARENT variable COMMA exp . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (151) pnCuadFuncEsp -> . empty
    (174) empty -> .

    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 325
    empty                          shift and go to state 326

state 297

    (103) median -> MEDIAN LEFT_PARENT variable COMMA exp . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (151) pnCuadFuncEsp -> . empty
    (174) empty -> .

    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 327
    empty                          shift and go to state 326

state 298

    (104) variance -> VARIANCE LEFT_PARENT variable COMMA exp . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (151) pnCuadFuncEsp -> . empty
    (174) empty -> .

    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 328
    empty                          shift and go to state 326

state 299

    (105) max -> MAX LEFT_PARENT variable COMMA exp . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (151) pnCuadFuncEsp -> . empty
    (174) empty -> .

    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 329
    empty                          shift and go to state 326

state 300

    (106) min -> MIN LEFT_PARENT variable COMMA exp . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (151) pnCuadFuncEsp -> . empty
    (174) empty -> .

    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 330
    empty                          shift and go to state 326

state 301

    (107) staddes -> STADDES LEFT_PARENT variable COMMA exp . pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (151) pnCuadFuncEsp -> . empty
    (174) empty -> .

    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCuadFuncEsp                  shift and go to state 331
    empty                          shift and go to state 326

state 302

    (108) boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO . pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (152) pnCuadBoxplot -> . empty
    (174) empty -> .

    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCuadBoxplot                  shift and go to state 332
    empty                          shift and go to state 333

state 303

    (109) linreg -> LINREG LEFT_PARENT variable COMMA exp . COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON

    COMMA           shift and go to state 334


state 304

    (33) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET . varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (2) varp -> . var varp
    (3) varp -> . empty
    (23) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (174) empty -> .

    VAR             shift and go to state 14
    ID              reduce using rule 174 (empty -> .)
    READ            reduce using rule 174 (empty -> .)
    WRITE           reduce using rule 174 (empty -> .)
    IF              reduce using rule 174 (empty -> .)
    WHILE           reduce using rule 174 (empty -> .)
    FOR             reduce using rule 174 (empty -> .)
    RETURNS         reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)

    varp                           shift and go to state 335
    var                            shift and go to state 12
    empty                          shift and go to state 13

state 305

    (38) paramlist -> tipoparam ARROW ID . pnAddParametersTablaVar paramlistp
    (119) pnAddParametersTablaVar -> . empty
    (174) empty -> .

    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnAddParametersTablaVar        shift and go to state 336
    empty                          shift and go to state 337

state 306

    (31) idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim idpp .

    SEMICOLON       reduce using rule 31 (idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim idpp .)


state 307

    (53) asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .

    ID              reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    READ            reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    WRITE           reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    IF              reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    WHILE           reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    FOR             reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    RETURNS         reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    READ_FILE       reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MEAN            reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MEDIAN          reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    VARIANCE        reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MAX             reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    MIN             reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    STADDES         reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    BOXPLOT         reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    LINREG          reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 53 (asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON .)


state 308

    (18) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT . pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (127) pnCheckNoParam -> . empty
    (174) empty -> .

    SEMICOLON       reduce using rule 174 (empty -> .)

    pnCheckNoParam                 shift and go to state 338
    empty                          shift and go to state 339

state 309

    (19) expp -> exp pnCuadParametro . exppp
    (21) exppp -> . COMMA exp pnCuadParametro exppp
    (22) exppp -> . empty
    (174) empty -> .

    COMMA           shift and go to state 341
    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    exppp                          shift and go to state 340
    empty                          shift and go to state 342

state 310

    (126) pnCuadParametro -> empty .

    COMMA           reduce using rule 126 (pnCuadParametro -> empty .)
    RIGHT_PARENT    reduce using rule 126 (pnCuadParametro -> empty .)


state 311

    (14) indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify . indexpp RIGHT_SQR_BRACKET pnArrFFPop
    (16) indexpp -> . COMMA pnArrAccIncDim exp pnMatCalc
    (17) indexpp -> . empty pnArrCalc
    (174) empty -> .

    COMMA           shift and go to state 344
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    indexpp                        shift and go to state 343
    empty                          shift and go to state 345

state 312

    (168) pnArrVerify -> empty .

    COMMA           reduce using rule 168 (pnArrVerify -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 168 (pnArrVerify -> empty .)


state 313

    (54) lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 54 (lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON .)


state 314

    (88) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf

    LEFT_CUR_BRACKET shift and go to state 346


state 315

    (91) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile

    LEFT_CUR_BRACKET shift and go to state 347


state 316

    (92) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp . pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (160) pnCreateVControl -> . empty
    (174) empty -> .

    COMMA           reduce using rule 174 (empty -> .)

    pnCreateVControl               shift and go to state 348
    empty                          shift and go to state 349

state 317

    (60) logic -> logicsig exprel pnCuadOplog . logic
    (60) logic -> . logicsig exprel pnCuadOplog logic
    (61) logic -> . empty
    (62) logicsig -> . AND pnSaveOperadorLog
    (63) logicsig -> . OR pnSaveOperadorLog
    (174) empty -> .

    AND             shift and go to state 228
    OR              shift and go to state 229
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    logicsig                       shift and go to state 226
    logic                          shift and go to state 350
    empty                          shift and go to state 227

state 318

    (65) relacionalp -> relsig e pnCuadOpRelacional . relacionalp
    (65) relacionalp -> . relsig e pnCuadOpRelacional relacionalp
    (66) relacionalp -> . empty
    (67) relsig -> . LESS_THAN pnSaveOperadorRel
    (68) relsig -> . GREATER_THAN pnSaveOperadorRel
    (69) relsig -> . EQUALS pnSaveOperadorRel
    (70) relsig -> . NOTEQUALS pnSaveOperadorRel
    (174) empty -> .

    LESS_THAN       shift and go to state 233
    GREATER_THAN    shift and go to state 234
    EQUALS          shift and go to state 235
    NOTEQUALS       shift and go to state 236
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    relsig                         shift and go to state 231
    relacionalp                    shift and go to state 351
    empty                          shift and go to state 232

state 319

    (72) tp -> tsig t pnCuadPlMi . tp
    (72) tp -> . tsig t pnCuadPlMi tp
    (73) tp -> . empty
    (74) tsig -> . PLUS pnSaveOperadorPlMi
    (75) tsig -> . MINUS pnSaveOperadorPlMi
    (174) empty -> .

    PLUS            shift and go to state 240
    MINUS           shift and go to state 241
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    tsig                           shift and go to state 238
    tp                             shift and go to state 352
    empty                          shift and go to state 239

state 320

    (77) fp -> fsig f pnCuadMuDi . fp
    (77) fp -> . fsig f pnCuadMuDi fp
    (78) fp -> . empty
    (79) fsig -> . MULT pnSaveOperadorMuDi
    (80) fsig -> . DIV pnSaveOperadorMuDi
    (174) empty -> .

    MULT            shift and go to state 245
    DIV             shift and go to state 246
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    fsig                           shift and go to state 243
    fp                             shift and go to state 353
    empty                          shift and go to state 244

state 321

    (81) f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .

    MULT            reduce using rule 81 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    DIV             reduce using rule 81 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    PLUS            reduce using rule 81 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    MINUS           reduce using rule 81 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    LESS_THAN       reduce using rule 81 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    GREATER_THAN    reduce using rule 81 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    EQUALS          reduce using rule 81 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    NOTEQUALS       reduce using rule 81 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    AND             reduce using rule 81 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    OR              reduce using rule 81 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    SEMICOLON       reduce using rule 81 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    RIGHT_PARENT    reduce using rule 81 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    COMMA           reduce using rule 81 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)
    RIGHT_SQR_BRACKET reduce using rule 81 (f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso .)


state 322

    (135) pnPopFondoFalso -> empty .

    MULT            reduce using rule 135 (pnPopFondoFalso -> empty .)
    DIV             reduce using rule 135 (pnPopFondoFalso -> empty .)
    PLUS            reduce using rule 135 (pnPopFondoFalso -> empty .)
    MINUS           reduce using rule 135 (pnPopFondoFalso -> empty .)
    LESS_THAN       reduce using rule 135 (pnPopFondoFalso -> empty .)
    GREATER_THAN    reduce using rule 135 (pnPopFondoFalso -> empty .)
    EQUALS          reduce using rule 135 (pnPopFondoFalso -> empty .)
    NOTEQUALS       reduce using rule 135 (pnPopFondoFalso -> empty .)
    AND             reduce using rule 135 (pnPopFondoFalso -> empty .)
    OR              reduce using rule 135 (pnPopFondoFalso -> empty .)
    SEMICOLON       reduce using rule 135 (pnPopFondoFalso -> empty .)
    RIGHT_PARENT    reduce using rule 135 (pnPopFondoFalso -> empty .)
    COMMA           reduce using rule 135 (pnPopFondoFalso -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 135 (pnPopFondoFalso -> empty .)


state 323

    (12) copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 354


state 324

    (150) pnCuadCopy -> empty .

    RIGHT_PARENT    reduce using rule 150 (pnCuadCopy -> empty .)


state 325

    (102) mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 355


state 326

    (151) pnCuadFuncEsp -> empty .

    RIGHT_PARENT    reduce using rule 151 (pnCuadFuncEsp -> empty .)


state 327

    (103) median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 356


state 328

    (104) variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 357


state 329

    (105) max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 358


state 330

    (106) min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 359


state 331

    (107) staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 360


state 332

    (108) boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 361


state 333

    (152) pnCuadBoxplot -> empty .

    RIGHT_PARENT    reduce using rule 152 (pnCuadBoxplot -> empty .)


state 334

    (109) linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA . exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    variable                       shift and go to state 134
    exp                            shift and go to state 362
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 335

    (33) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp . pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (121) pnDirecIniFunc -> . empty
    (174) empty -> .

    ID              reduce using rule 174 (empty -> .)
    READ            reduce using rule 174 (empty -> .)
    WRITE           reduce using rule 174 (empty -> .)
    IF              reduce using rule 174 (empty -> .)
    WHILE           reduce using rule 174 (empty -> .)
    FOR             reduce using rule 174 (empty -> .)
    RETURNS         reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)

    pnDirecIniFunc                 shift and go to state 363
    empty                          shift and go to state 364

state 336

    (38) paramlist -> tipoparam ARROW ID pnAddParametersTablaVar . paramlistp
    (41) paramlistp -> . COMMA paramlist
    (42) paramlistp -> . empty
    (174) empty -> .

    COMMA           shift and go to state 366
    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    paramlistp                     shift and go to state 365
    empty                          shift and go to state 367

state 337

    (119) pnAddParametersTablaVar -> empty .

    COMMA           reduce using rule 119 (pnAddParametersTablaVar -> empty .)
    RIGHT_PARENT    reduce using rule 119 (pnAddParametersTablaVar -> empty .)


state 338

    (18) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam . SEMICOLON pnCuadGoSub pnHandleReturnValue

    SEMICOLON       shift and go to state 368


state 339

    (127) pnCheckNoParam -> empty .

    SEMICOLON       reduce using rule 127 (pnCheckNoParam -> empty .)


state 340

    (19) expp -> exp pnCuadParametro exppp .

    RIGHT_PARENT    reduce using rule 19 (expp -> exp pnCuadParametro exppp .)


state 341

    (21) exppp -> COMMA . exp pnCuadParametro exppp
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    exp                            shift and go to state 369
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 342

    (22) exppp -> empty .

    RIGHT_PARENT    reduce using rule 22 (exppp -> empty .)


state 343

    (14) indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp . RIGHT_SQR_BRACKET pnArrFFPop

    RIGHT_SQR_BRACKET shift and go to state 370


state 344

    (16) indexpp -> COMMA . pnArrAccIncDim exp pnMatCalc
    (169) pnArrAccIncDim -> . empty
    (174) empty -> .

    LEFT_PARENT     reduce using rule 174 (empty -> .)
    CTEI            reduce using rule 174 (empty -> .)
    CTEF            reduce using rule 174 (empty -> .)
    CTEC            reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)

    pnArrAccIncDim                 shift and go to state 371
    empty                          shift and go to state 372

state 345

    (17) indexpp -> empty . pnArrCalc
    (170) pnArrCalc -> . empty
    (174) empty -> .

    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    empty                          shift and go to state 373
    pnArrCalc                      shift and go to state 374

state 346

    (88) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (43) estatuto -> . asign
    (44) estatuto -> . llamada
    (45) estatuto -> . lee
    (46) estatuto -> . escribe
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclow
    (49) estatuto -> . ciclof
    (50) estatuto -> . funcesp
    (51) estatuto -> . return
    (52) estatuto -> . copy
    (174) empty -> .
    (53) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (54) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (55) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (88) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (91) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (92) ciclof -> . FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (58) return -> . RETURNS exp pnCuadRet SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)
    ID              shift and go to state 82
    READ            shift and go to state 83
    WRITE           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FOR             shift and go to state 87
    RETURNS         shift and go to state 96
    READ_FILE       shift and go to state 97
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105

    estatutop                      shift and go to state 375
    estatuto                       shift and go to state 69
    empty                          shift and go to state 70
    asign                          shift and go to state 71
    llamada                        shift and go to state 72
    lee                            shift and go to state 73
    escribe                        shift and go to state 74
    condicion                      shift and go to state 75
    ciclow                         shift and go to state 76
    ciclof                         shift and go to state 77
    funcesp                        shift and go to state 78
    return                         shift and go to state 79
    copy                           shift and go to state 80
    variable                       shift and go to state 81
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95

state 347

    (91) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET pnEndWhile
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (43) estatuto -> . asign
    (44) estatuto -> . llamada
    (45) estatuto -> . lee
    (46) estatuto -> . escribe
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclow
    (49) estatuto -> . ciclof
    (50) estatuto -> . funcesp
    (51) estatuto -> . return
    (52) estatuto -> . copy
    (174) empty -> .
    (53) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (54) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (55) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (88) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (91) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (92) ciclof -> . FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (58) return -> . RETURNS exp pnCuadRet SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)
    ID              shift and go to state 82
    READ            shift and go to state 83
    WRITE           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FOR             shift and go to state 87
    RETURNS         shift and go to state 96
    READ_FILE       shift and go to state 97
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105

    estatutop                      shift and go to state 376
    estatuto                       shift and go to state 69
    empty                          shift and go to state 70
    asign                          shift and go to state 71
    llamada                        shift and go to state 72
    lee                            shift and go to state 73
    escribe                        shift and go to state 74
    condicion                      shift and go to state 75
    ciclow                         shift and go to state 76
    ciclof                         shift and go to state 77
    funcesp                        shift and go to state 78
    return                         shift and go to state 79
    copy                           shift and go to state 80
    variable                       shift and go to state 81
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95

state 348

    (92) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl . COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    COMMA           shift and go to state 377


state 349

    (160) pnCreateVControl -> empty .

    COMMA           reduce using rule 160 (pnCreateVControl -> empty .)


state 350

    (60) logic -> logicsig exprel pnCuadOplog logic .

    SEMICOLON       reduce using rule 60 (logic -> logicsig exprel pnCuadOplog logic .)
    RIGHT_PARENT    reduce using rule 60 (logic -> logicsig exprel pnCuadOplog logic .)
    COMMA           reduce using rule 60 (logic -> logicsig exprel pnCuadOplog logic .)
    RIGHT_SQR_BRACKET reduce using rule 60 (logic -> logicsig exprel pnCuadOplog logic .)


state 351

    (65) relacionalp -> relsig e pnCuadOpRelacional relacionalp .

    AND             reduce using rule 65 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    OR              reduce using rule 65 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    SEMICOLON       reduce using rule 65 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    RIGHT_PARENT    reduce using rule 65 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    COMMA           reduce using rule 65 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)
    RIGHT_SQR_BRACKET reduce using rule 65 (relacionalp -> relsig e pnCuadOpRelacional relacionalp .)


state 352

    (72) tp -> tsig t pnCuadPlMi tp .

    LESS_THAN       reduce using rule 72 (tp -> tsig t pnCuadPlMi tp .)
    GREATER_THAN    reduce using rule 72 (tp -> tsig t pnCuadPlMi tp .)
    EQUALS          reduce using rule 72 (tp -> tsig t pnCuadPlMi tp .)
    NOTEQUALS       reduce using rule 72 (tp -> tsig t pnCuadPlMi tp .)
    AND             reduce using rule 72 (tp -> tsig t pnCuadPlMi tp .)
    OR              reduce using rule 72 (tp -> tsig t pnCuadPlMi tp .)
    SEMICOLON       reduce using rule 72 (tp -> tsig t pnCuadPlMi tp .)
    RIGHT_PARENT    reduce using rule 72 (tp -> tsig t pnCuadPlMi tp .)
    COMMA           reduce using rule 72 (tp -> tsig t pnCuadPlMi tp .)
    RIGHT_SQR_BRACKET reduce using rule 72 (tp -> tsig t pnCuadPlMi tp .)


state 353

    (77) fp -> fsig f pnCuadMuDi fp .

    PLUS            reduce using rule 77 (fp -> fsig f pnCuadMuDi fp .)
    MINUS           reduce using rule 77 (fp -> fsig f pnCuadMuDi fp .)
    LESS_THAN       reduce using rule 77 (fp -> fsig f pnCuadMuDi fp .)
    GREATER_THAN    reduce using rule 77 (fp -> fsig f pnCuadMuDi fp .)
    EQUALS          reduce using rule 77 (fp -> fsig f pnCuadMuDi fp .)
    NOTEQUALS       reduce using rule 77 (fp -> fsig f pnCuadMuDi fp .)
    AND             reduce using rule 77 (fp -> fsig f pnCuadMuDi fp .)
    OR              reduce using rule 77 (fp -> fsig f pnCuadMuDi fp .)
    SEMICOLON       reduce using rule 77 (fp -> fsig f pnCuadMuDi fp .)
    RIGHT_PARENT    reduce using rule 77 (fp -> fsig f pnCuadMuDi fp .)
    COMMA           reduce using rule 77 (fp -> fsig f pnCuadMuDi fp .)
    RIGHT_SQR_BRACKET reduce using rule 77 (fp -> fsig f pnCuadMuDi fp .)


state 354

    (12) copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 378


state 355

    (102) mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 379


state 356

    (103) median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 380


state 357

    (104) variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 381


state 358

    (105) max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 382


state 359

    (106) min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 383


state 360

    (107) staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 384


state 361

    (108) boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 385


state 362

    (109) linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp . pnCuadLinReg RIGHT_PARENT SEMICOLON
    (153) pnCuadLinReg -> . empty
    (174) empty -> .

    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCuadLinReg                   shift and go to state 386
    empty                          shift and go to state 387

state 363

    (33) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc . estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (43) estatuto -> . asign
    (44) estatuto -> . llamada
    (45) estatuto -> . lee
    (46) estatuto -> . escribe
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclow
    (49) estatuto -> . ciclof
    (50) estatuto -> . funcesp
    (51) estatuto -> . return
    (52) estatuto -> . copy
    (174) empty -> .
    (53) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (54) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (55) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (88) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (91) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (92) ciclof -> . FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (58) return -> . RETURNS exp pnCuadRet SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)
    ID              shift and go to state 82
    READ            shift and go to state 83
    WRITE           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FOR             shift and go to state 87
    RETURNS         shift and go to state 96
    READ_FILE       shift and go to state 97
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105

    estatutop                      shift and go to state 388
    estatuto                       shift and go to state 69
    empty                          shift and go to state 70
    asign                          shift and go to state 71
    llamada                        shift and go to state 72
    lee                            shift and go to state 73
    escribe                        shift and go to state 74
    condicion                      shift and go to state 75
    ciclow                         shift and go to state 76
    ciclof                         shift and go to state 77
    funcesp                        shift and go to state 78
    return                         shift and go to state 79
    copy                           shift and go to state 80
    variable                       shift and go to state 81
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95

state 364

    (121) pnDirecIniFunc -> empty .

    ID              reduce using rule 121 (pnDirecIniFunc -> empty .)
    READ            reduce using rule 121 (pnDirecIniFunc -> empty .)
    WRITE           reduce using rule 121 (pnDirecIniFunc -> empty .)
    IF              reduce using rule 121 (pnDirecIniFunc -> empty .)
    WHILE           reduce using rule 121 (pnDirecIniFunc -> empty .)
    FOR             reduce using rule 121 (pnDirecIniFunc -> empty .)
    RETURNS         reduce using rule 121 (pnDirecIniFunc -> empty .)
    READ_FILE       reduce using rule 121 (pnDirecIniFunc -> empty .)
    MEAN            reduce using rule 121 (pnDirecIniFunc -> empty .)
    MEDIAN          reduce using rule 121 (pnDirecIniFunc -> empty .)
    VARIANCE        reduce using rule 121 (pnDirecIniFunc -> empty .)
    MAX             reduce using rule 121 (pnDirecIniFunc -> empty .)
    MIN             reduce using rule 121 (pnDirecIniFunc -> empty .)
    STADDES         reduce using rule 121 (pnDirecIniFunc -> empty .)
    BOXPLOT         reduce using rule 121 (pnDirecIniFunc -> empty .)
    LINREG          reduce using rule 121 (pnDirecIniFunc -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 121 (pnDirecIniFunc -> empty .)


state 365

    (38) paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp .

    RIGHT_PARENT    reduce using rule 38 (paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp .)


state 366

    (41) paramlistp -> COMMA . paramlist
    (38) paramlist -> . tipoparam ARROW ID pnAddParametersTablaVar paramlistp
    (39) tipoparam -> . tipo_simp
    (40) tipoparam -> . DATAFRAME pnSaveTypeVar
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    DATAFRAME       shift and go to state 202
    INT             shift and go to state 28
    FLOAT           shift and go to state 29
    CHAR            shift and go to state 30

    paramlist                      shift and go to state 389
    tipoparam                      shift and go to state 200
    tipo_simp                      shift and go to state 201

state 367

    (42) paramlistp -> empty .

    RIGHT_PARENT    reduce using rule 42 (paramlistp -> empty .)


state 368

    (18) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON . pnCuadGoSub pnHandleReturnValue
    (128) pnCuadGoSub -> . empty
    (174) empty -> .

    ID              reduce using rule 174 (empty -> .)
    READ            reduce using rule 174 (empty -> .)
    WRITE           reduce using rule 174 (empty -> .)
    IF              reduce using rule 174 (empty -> .)
    WHILE           reduce using rule 174 (empty -> .)
    FOR             reduce using rule 174 (empty -> .)
    RETURNS         reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)
    MULT            reduce using rule 174 (empty -> .)
    DIV             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnCuadGoSub                    shift and go to state 390
    empty                          shift and go to state 391

state 369

    (21) exppp -> COMMA exp . pnCuadParametro exppp
    (126) pnCuadParametro -> . empty
    (174) empty -> .

    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCuadParametro                shift and go to state 392
    empty                          shift and go to state 310

state 370

    (14) indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET . pnArrFFPop
    (172) pnArrFFPop -> . empty
    (174) empty -> .

    ASIGN           reduce using rule 174 (empty -> .)
    MULT            reduce using rule 174 (empty -> .)
    DIV             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnArrFFPop                     shift and go to state 393
    empty                          shift and go to state 394

state 371

    (16) indexpp -> COMMA pnArrAccIncDim . exp pnMatCalc
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    exp                            shift and go to state 395
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    variable                       shift and go to state 134
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 372

    (169) pnArrAccIncDim -> empty .

    LEFT_PARENT     reduce using rule 169 (pnArrAccIncDim -> empty .)
    CTEI            reduce using rule 169 (pnArrAccIncDim -> empty .)
    CTEF            reduce using rule 169 (pnArrAccIncDim -> empty .)
    CTEC            reduce using rule 169 (pnArrAccIncDim -> empty .)
    ID              reduce using rule 169 (pnArrAccIncDim -> empty .)
    MEAN            reduce using rule 169 (pnArrAccIncDim -> empty .)
    MEDIAN          reduce using rule 169 (pnArrAccIncDim -> empty .)
    VARIANCE        reduce using rule 169 (pnArrAccIncDim -> empty .)
    MAX             reduce using rule 169 (pnArrAccIncDim -> empty .)
    MIN             reduce using rule 169 (pnArrAccIncDim -> empty .)
    STADDES         reduce using rule 169 (pnArrAccIncDim -> empty .)
    BOXPLOT         reduce using rule 169 (pnArrAccIncDim -> empty .)
    LINREG          reduce using rule 169 (pnArrAccIncDim -> empty .)
    READ_FILE       reduce using rule 169 (pnArrAccIncDim -> empty .)


state 373

    (170) pnArrCalc -> empty .

    RIGHT_SQR_BRACKET reduce using rule 170 (pnArrCalc -> empty .)


state 374

    (17) indexpp -> empty pnArrCalc .

    RIGHT_SQR_BRACKET reduce using rule 17 (indexpp -> empty pnArrCalc .)


state 375

    (88) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET falsop pnEndIf

    RIGHT_CUR_BRACKET shift and go to state 396


state 376

    (91) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET pnEndWhile

    RIGHT_CUR_BRACKET shift and go to state 397


state 377

    (92) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA . exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (59) exp -> . exprel pnCuadOplog logic
    (64) exprel -> . e pnCuadOpRelacional relacionalp
    (71) e -> . t pnCuadPlMi tp
    (76) t -> . f pnCuadMuDi fp
    (81) f -> . LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso
    (82) f -> . CTEI pnSaveCteI pnSaveOperandoConstante
    (83) f -> . CTEF pnSaveCteF pnSaveOperandoConstante
    (84) f -> . CTEC pnSaveCteC pnSaveOperandoConstante
    (85) f -> . variable
    (86) f -> . llamada
    (87) f -> . funcesp
    (13) variable -> . ID pnSaveOperandos indexp
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130
    CTEI            shift and go to state 131
    CTEF            shift and go to state 132
    CTEC            shift and go to state 133
    ID              shift and go to state 137
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105
    READ_FILE       shift and go to state 97

    variable                       shift and go to state 134
    exp                            shift and go to state 398
    exprel                         shift and go to state 126
    e                              shift and go to state 127
    t                              shift and go to state 128
    f                              shift and go to state 129
    llamada                        shift and go to state 135
    funcesp                        shift and go to state 136
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95
    copy                           shift and go to state 138

state 378

    (12) copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 12 (copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON .)


state 379

    (102) mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 102 (mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 380

    (103) median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 103 (median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 381

    (104) variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 104 (variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 382

    (105) max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 105 (max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 383

    (106) min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 106 (min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 384

    (107) staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 107 (staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON .)


state 385

    (108) boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 108 (boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON .)


state 386

    (109) linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 399


state 387

    (153) pnCuadLinReg -> empty .

    RIGHT_PARENT    reduce using rule 153 (pnCuadLinReg -> empty .)


state 388

    (33) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop . RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction

    RIGHT_CUR_BRACKET shift and go to state 400


state 389

    (41) paramlistp -> COMMA paramlist .

    RIGHT_PARENT    reduce using rule 41 (paramlistp -> COMMA paramlist .)


state 390

    (18) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub . pnHandleReturnValue
    (129) pnHandleReturnValue -> . empty
    (174) empty -> .

    ID              reduce using rule 174 (empty -> .)
    READ            reduce using rule 174 (empty -> .)
    WRITE           reduce using rule 174 (empty -> .)
    IF              reduce using rule 174 (empty -> .)
    WHILE           reduce using rule 174 (empty -> .)
    FOR             reduce using rule 174 (empty -> .)
    RETURNS         reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)
    MULT            reduce using rule 174 (empty -> .)
    DIV             reduce using rule 174 (empty -> .)
    PLUS            reduce using rule 174 (empty -> .)
    MINUS           reduce using rule 174 (empty -> .)
    LESS_THAN       reduce using rule 174 (empty -> .)
    GREATER_THAN    reduce using rule 174 (empty -> .)
    EQUALS          reduce using rule 174 (empty -> .)
    NOTEQUALS       reduce using rule 174 (empty -> .)
    AND             reduce using rule 174 (empty -> .)
    OR              reduce using rule 174 (empty -> .)
    SEMICOLON       reduce using rule 174 (empty -> .)
    RIGHT_PARENT    reduce using rule 174 (empty -> .)
    COMMA           reduce using rule 174 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnHandleReturnValue            shift and go to state 401
    empty                          shift and go to state 402

state 391

    (128) pnCuadGoSub -> empty .

    ID              reduce using rule 128 (pnCuadGoSub -> empty .)
    READ            reduce using rule 128 (pnCuadGoSub -> empty .)
    WRITE           reduce using rule 128 (pnCuadGoSub -> empty .)
    IF              reduce using rule 128 (pnCuadGoSub -> empty .)
    WHILE           reduce using rule 128 (pnCuadGoSub -> empty .)
    FOR             reduce using rule 128 (pnCuadGoSub -> empty .)
    RETURNS         reduce using rule 128 (pnCuadGoSub -> empty .)
    READ_FILE       reduce using rule 128 (pnCuadGoSub -> empty .)
    MEAN            reduce using rule 128 (pnCuadGoSub -> empty .)
    MEDIAN          reduce using rule 128 (pnCuadGoSub -> empty .)
    VARIANCE        reduce using rule 128 (pnCuadGoSub -> empty .)
    MAX             reduce using rule 128 (pnCuadGoSub -> empty .)
    MIN             reduce using rule 128 (pnCuadGoSub -> empty .)
    STADDES         reduce using rule 128 (pnCuadGoSub -> empty .)
    BOXPLOT         reduce using rule 128 (pnCuadGoSub -> empty .)
    LINREG          reduce using rule 128 (pnCuadGoSub -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 128 (pnCuadGoSub -> empty .)
    MULT            reduce using rule 128 (pnCuadGoSub -> empty .)
    DIV             reduce using rule 128 (pnCuadGoSub -> empty .)
    PLUS            reduce using rule 128 (pnCuadGoSub -> empty .)
    MINUS           reduce using rule 128 (pnCuadGoSub -> empty .)
    LESS_THAN       reduce using rule 128 (pnCuadGoSub -> empty .)
    GREATER_THAN    reduce using rule 128 (pnCuadGoSub -> empty .)
    EQUALS          reduce using rule 128 (pnCuadGoSub -> empty .)
    NOTEQUALS       reduce using rule 128 (pnCuadGoSub -> empty .)
    AND             reduce using rule 128 (pnCuadGoSub -> empty .)
    OR              reduce using rule 128 (pnCuadGoSub -> empty .)
    SEMICOLON       reduce using rule 128 (pnCuadGoSub -> empty .)
    RIGHT_PARENT    reduce using rule 128 (pnCuadGoSub -> empty .)
    COMMA           reduce using rule 128 (pnCuadGoSub -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 128 (pnCuadGoSub -> empty .)


state 392

    (21) exppp -> COMMA exp pnCuadParametro . exppp
    (21) exppp -> . COMMA exp pnCuadParametro exppp
    (22) exppp -> . empty
    (174) empty -> .

    COMMA           shift and go to state 341
    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    exppp                          shift and go to state 403
    empty                          shift and go to state 342

state 393

    (14) indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .

    ASIGN           reduce using rule 14 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    MULT            reduce using rule 14 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    DIV             reduce using rule 14 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    PLUS            reduce using rule 14 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    MINUS           reduce using rule 14 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    LESS_THAN       reduce using rule 14 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    GREATER_THAN    reduce using rule 14 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    EQUALS          reduce using rule 14 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    NOTEQUALS       reduce using rule 14 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    AND             reduce using rule 14 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    OR              reduce using rule 14 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    SEMICOLON       reduce using rule 14 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    RIGHT_PARENT    reduce using rule 14 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    COMMA           reduce using rule 14 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)
    RIGHT_SQR_BRACKET reduce using rule 14 (indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop .)


state 394

    (172) pnArrFFPop -> empty .

    ASIGN           reduce using rule 172 (pnArrFFPop -> empty .)
    MULT            reduce using rule 172 (pnArrFFPop -> empty .)
    DIV             reduce using rule 172 (pnArrFFPop -> empty .)
    PLUS            reduce using rule 172 (pnArrFFPop -> empty .)
    MINUS           reduce using rule 172 (pnArrFFPop -> empty .)
    LESS_THAN       reduce using rule 172 (pnArrFFPop -> empty .)
    GREATER_THAN    reduce using rule 172 (pnArrFFPop -> empty .)
    EQUALS          reduce using rule 172 (pnArrFFPop -> empty .)
    NOTEQUALS       reduce using rule 172 (pnArrFFPop -> empty .)
    AND             reduce using rule 172 (pnArrFFPop -> empty .)
    OR              reduce using rule 172 (pnArrFFPop -> empty .)
    SEMICOLON       reduce using rule 172 (pnArrFFPop -> empty .)
    RIGHT_PARENT    reduce using rule 172 (pnArrFFPop -> empty .)
    COMMA           reduce using rule 172 (pnArrFFPop -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 172 (pnArrFFPop -> empty .)


state 395

    (16) indexpp -> COMMA pnArrAccIncDim exp . pnMatCalc
    (171) pnMatCalc -> . empty
    (174) empty -> .

    RIGHT_SQR_BRACKET reduce using rule 174 (empty -> .)

    pnMatCalc                      shift and go to state 404
    empty                          shift and go to state 405

state 396

    (88) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET . falsop pnEndIf
    (89) falsop -> . IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (90) falsop -> . empty
    (174) empty -> .

    IF_FALSE        shift and go to state 407
    ID              reduce using rule 174 (empty -> .)
    READ            reduce using rule 174 (empty -> .)
    WRITE           reduce using rule 174 (empty -> .)
    IF              reduce using rule 174 (empty -> .)
    WHILE           reduce using rule 174 (empty -> .)
    FOR             reduce using rule 174 (empty -> .)
    RETURNS         reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)

    falsop                         shift and go to state 406
    empty                          shift and go to state 408

state 397

    (91) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET . pnEndWhile
    (158) pnEndWhile -> . empty
    (174) empty -> .

    ID              reduce using rule 174 (empty -> .)
    READ            reduce using rule 174 (empty -> .)
    WRITE           reduce using rule 174 (empty -> .)
    IF              reduce using rule 174 (empty -> .)
    WHILE           reduce using rule 174 (empty -> .)
    FOR             reduce using rule 174 (empty -> .)
    RETURNS         reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)

    pnEndWhile                     shift and go to state 409
    empty                          shift and go to state 410

state 398

    (92) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp . pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (161) pnCompControlFinal -> . empty
    (174) empty -> .

    RIGHT_PARENT    reduce using rule 174 (empty -> .)

    pnCompControlFinal             shift and go to state 411
    empty                          shift and go to state 412

state 399

    (109) linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 413


state 400

    (33) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET . pnCountVarsINTOResources pnCloseCurrentFunction
    (120) pnCountVarsINTOResources -> . empty
    (174) empty -> .

    FUNC            reduce using rule 174 (empty -> .)
    DO              reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    READ            reduce using rule 174 (empty -> .)
    WRITE           reduce using rule 174 (empty -> .)
    IF              reduce using rule 174 (empty -> .)
    WHILE           reduce using rule 174 (empty -> .)
    FOR             reduce using rule 174 (empty -> .)
    RETURNS         reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)

    pnCountVarsINTOResources       shift and go to state 414
    empty                          shift and go to state 415

state 401

    (18) llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .

    ID              reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    READ            reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    WRITE           reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    IF              reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    WHILE           reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    FOR             reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    RETURNS         reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    READ_FILE       reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    MEAN            reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    MEDIAN          reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    VARIANCE        reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    MAX             reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    MIN             reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    STADDES         reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    BOXPLOT         reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    LINREG          reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    RIGHT_CUR_BRACKET reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    MULT            reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    DIV             reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    PLUS            reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    MINUS           reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    LESS_THAN       reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    GREATER_THAN    reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    EQUALS          reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    NOTEQUALS       reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    AND             reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    OR              reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    SEMICOLON       reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    RIGHT_PARENT    reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    COMMA           reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)
    RIGHT_SQR_BRACKET reduce using rule 18 (llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue .)


state 402

    (129) pnHandleReturnValue -> empty .

    ID              reduce using rule 129 (pnHandleReturnValue -> empty .)
    READ            reduce using rule 129 (pnHandleReturnValue -> empty .)
    WRITE           reduce using rule 129 (pnHandleReturnValue -> empty .)
    IF              reduce using rule 129 (pnHandleReturnValue -> empty .)
    WHILE           reduce using rule 129 (pnHandleReturnValue -> empty .)
    FOR             reduce using rule 129 (pnHandleReturnValue -> empty .)
    RETURNS         reduce using rule 129 (pnHandleReturnValue -> empty .)
    READ_FILE       reduce using rule 129 (pnHandleReturnValue -> empty .)
    MEAN            reduce using rule 129 (pnHandleReturnValue -> empty .)
    MEDIAN          reduce using rule 129 (pnHandleReturnValue -> empty .)
    VARIANCE        reduce using rule 129 (pnHandleReturnValue -> empty .)
    MAX             reduce using rule 129 (pnHandleReturnValue -> empty .)
    MIN             reduce using rule 129 (pnHandleReturnValue -> empty .)
    STADDES         reduce using rule 129 (pnHandleReturnValue -> empty .)
    BOXPLOT         reduce using rule 129 (pnHandleReturnValue -> empty .)
    LINREG          reduce using rule 129 (pnHandleReturnValue -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 129 (pnHandleReturnValue -> empty .)
    MULT            reduce using rule 129 (pnHandleReturnValue -> empty .)
    DIV             reduce using rule 129 (pnHandleReturnValue -> empty .)
    PLUS            reduce using rule 129 (pnHandleReturnValue -> empty .)
    MINUS           reduce using rule 129 (pnHandleReturnValue -> empty .)
    LESS_THAN       reduce using rule 129 (pnHandleReturnValue -> empty .)
    GREATER_THAN    reduce using rule 129 (pnHandleReturnValue -> empty .)
    EQUALS          reduce using rule 129 (pnHandleReturnValue -> empty .)
    NOTEQUALS       reduce using rule 129 (pnHandleReturnValue -> empty .)
    AND             reduce using rule 129 (pnHandleReturnValue -> empty .)
    OR              reduce using rule 129 (pnHandleReturnValue -> empty .)
    SEMICOLON       reduce using rule 129 (pnHandleReturnValue -> empty .)
    RIGHT_PARENT    reduce using rule 129 (pnHandleReturnValue -> empty .)
    COMMA           reduce using rule 129 (pnHandleReturnValue -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 129 (pnHandleReturnValue -> empty .)


state 403

    (21) exppp -> COMMA exp pnCuadParametro exppp .

    RIGHT_PARENT    reduce using rule 21 (exppp -> COMMA exp pnCuadParametro exppp .)


state 404

    (16) indexpp -> COMMA pnArrAccIncDim exp pnMatCalc .

    RIGHT_SQR_BRACKET reduce using rule 16 (indexpp -> COMMA pnArrAccIncDim exp pnMatCalc .)


state 405

    (171) pnMatCalc -> empty .

    RIGHT_SQR_BRACKET reduce using rule 171 (pnMatCalc -> empty .)


state 406

    (88) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop . pnEndIf
    (156) pnEndIf -> . empty
    (174) empty -> .

    ID              reduce using rule 174 (empty -> .)
    READ            reduce using rule 174 (empty -> .)
    WRITE           reduce using rule 174 (empty -> .)
    IF              reduce using rule 174 (empty -> .)
    WHILE           reduce using rule 174 (empty -> .)
    FOR             reduce using rule 174 (empty -> .)
    RETURNS         reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)

    pnEndIf                        shift and go to state 416
    empty                          shift and go to state 417

state 407

    (89) falsop -> IF_FALSE . pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (155) pnElseIf -> . empty
    (174) empty -> .

    LEFT_CUR_BRACKET reduce using rule 174 (empty -> .)

    pnElseIf                       shift and go to state 418
    empty                          shift and go to state 419

state 408

    (90) falsop -> empty .

    ID              reduce using rule 90 (falsop -> empty .)
    READ            reduce using rule 90 (falsop -> empty .)
    WRITE           reduce using rule 90 (falsop -> empty .)
    IF              reduce using rule 90 (falsop -> empty .)
    WHILE           reduce using rule 90 (falsop -> empty .)
    FOR             reduce using rule 90 (falsop -> empty .)
    RETURNS         reduce using rule 90 (falsop -> empty .)
    READ_FILE       reduce using rule 90 (falsop -> empty .)
    MEAN            reduce using rule 90 (falsop -> empty .)
    MEDIAN          reduce using rule 90 (falsop -> empty .)
    VARIANCE        reduce using rule 90 (falsop -> empty .)
    MAX             reduce using rule 90 (falsop -> empty .)
    MIN             reduce using rule 90 (falsop -> empty .)
    STADDES         reduce using rule 90 (falsop -> empty .)
    BOXPLOT         reduce using rule 90 (falsop -> empty .)
    LINREG          reduce using rule 90 (falsop -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 90 (falsop -> empty .)


state 409

    (91) ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .

    ID              reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    READ            reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    WRITE           reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    IF              reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    WHILE           reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    FOR             reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    RETURNS         reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    READ_FILE       reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MEAN            reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MEDIAN          reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    VARIANCE        reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MAX             reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    MIN             reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    STADDES         reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    BOXPLOT         reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    LINREG          reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)
    RIGHT_CUR_BRACKET reduce using rule 91 (ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile .)


state 410

    (158) pnEndWhile -> empty .

    ID              reduce using rule 158 (pnEndWhile -> empty .)
    READ            reduce using rule 158 (pnEndWhile -> empty .)
    WRITE           reduce using rule 158 (pnEndWhile -> empty .)
    IF              reduce using rule 158 (pnEndWhile -> empty .)
    WHILE           reduce using rule 158 (pnEndWhile -> empty .)
    FOR             reduce using rule 158 (pnEndWhile -> empty .)
    RETURNS         reduce using rule 158 (pnEndWhile -> empty .)
    READ_FILE       reduce using rule 158 (pnEndWhile -> empty .)
    MEAN            reduce using rule 158 (pnEndWhile -> empty .)
    MEDIAN          reduce using rule 158 (pnEndWhile -> empty .)
    VARIANCE        reduce using rule 158 (pnEndWhile -> empty .)
    MAX             reduce using rule 158 (pnEndWhile -> empty .)
    MIN             reduce using rule 158 (pnEndWhile -> empty .)
    STADDES         reduce using rule 158 (pnEndWhile -> empty .)
    BOXPLOT         reduce using rule 158 (pnEndWhile -> empty .)
    LINREG          reduce using rule 158 (pnEndWhile -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 158 (pnEndWhile -> empty .)


state 411

    (92) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal . RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    RIGHT_PARENT    shift and go to state 420


state 412

    (161) pnCompControlFinal -> empty .

    RIGHT_PARENT    reduce using rule 161 (pnCompControlFinal -> empty .)


state 413

    (109) linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 109 (linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON .)


state 414

    (33) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources . pnCloseCurrentFunction
    (122) pnCloseCurrentFunction -> . empty
    (174) empty -> .

    FUNC            reduce using rule 174 (empty -> .)
    DO              reduce using rule 174 (empty -> .)
    ID              reduce using rule 174 (empty -> .)
    READ            reduce using rule 174 (empty -> .)
    WRITE           reduce using rule 174 (empty -> .)
    IF              reduce using rule 174 (empty -> .)
    WHILE           reduce using rule 174 (empty -> .)
    FOR             reduce using rule 174 (empty -> .)
    RETURNS         reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)

    pnCloseCurrentFunction         shift and go to state 421
    empty                          shift and go to state 422

state 415

    (120) pnCountVarsINTOResources -> empty .

    FUNC            reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    DO              reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    ID              reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    READ            reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    WRITE           reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    IF              reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    WHILE           reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    FOR             reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    RETURNS         reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    READ_FILE       reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    MEAN            reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    MEDIAN          reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    VARIANCE        reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    MAX             reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    MIN             reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    STADDES         reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    BOXPLOT         reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    LINREG          reduce using rule 120 (pnCountVarsINTOResources -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 120 (pnCountVarsINTOResources -> empty .)


state 416

    (88) condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .

    ID              reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    READ            reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    WRITE           reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    IF              reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    WHILE           reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    FOR             reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    RETURNS         reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    READ_FILE       reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MEAN            reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MEDIAN          reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    VARIANCE        reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MAX             reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    MIN             reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    STADDES         reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    BOXPLOT         reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    LINREG          reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)
    RIGHT_CUR_BRACKET reduce using rule 88 (condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf .)


state 417

    (156) pnEndIf -> empty .

    ID              reduce using rule 156 (pnEndIf -> empty .)
    READ            reduce using rule 156 (pnEndIf -> empty .)
    WRITE           reduce using rule 156 (pnEndIf -> empty .)
    IF              reduce using rule 156 (pnEndIf -> empty .)
    WHILE           reduce using rule 156 (pnEndIf -> empty .)
    FOR             reduce using rule 156 (pnEndIf -> empty .)
    RETURNS         reduce using rule 156 (pnEndIf -> empty .)
    READ_FILE       reduce using rule 156 (pnEndIf -> empty .)
    MEAN            reduce using rule 156 (pnEndIf -> empty .)
    MEDIAN          reduce using rule 156 (pnEndIf -> empty .)
    VARIANCE        reduce using rule 156 (pnEndIf -> empty .)
    MAX             reduce using rule 156 (pnEndIf -> empty .)
    MIN             reduce using rule 156 (pnEndIf -> empty .)
    STADDES         reduce using rule 156 (pnEndIf -> empty .)
    BOXPLOT         reduce using rule 156 (pnEndIf -> empty .)
    LINREG          reduce using rule 156 (pnEndIf -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 156 (pnEndIf -> empty .)


state 418

    (89) falsop -> IF_FALSE pnElseIf . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_CUR_BRACKET shift and go to state 423


state 419

    (155) pnElseIf -> empty .

    LEFT_CUR_BRACKET reduce using rule 155 (pnElseIf -> empty .)


state 420

    (92) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor

    LEFT_CUR_BRACKET shift and go to state 424


state 421

    (33) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .

    FUNC            reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    DO              reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    ID              reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    READ            reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    WRITE           reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    IF              reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    WHILE           reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    FOR             reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    RETURNS         reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    READ_FILE       reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MEAN            reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MEDIAN          reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    VARIANCE        reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MAX             reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    MIN             reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    STADDES         reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    BOXPLOT         reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    LINREG          reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)
    RIGHT_CUR_BRACKET reduce using rule 33 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction .)


state 422

    (122) pnCloseCurrentFunction -> empty .

    FUNC            reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    DO              reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    ID              reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    READ            reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    WRITE           reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    IF              reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    WHILE           reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    FOR             reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    RETURNS         reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    READ_FILE       reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    MEAN            reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    MEDIAN          reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    VARIANCE        reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    MAX             reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    MIN             reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    STADDES         reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    BOXPLOT         reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    LINREG          reduce using rule 122 (pnCloseCurrentFunction -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 122 (pnCloseCurrentFunction -> empty .)


state 423

    (89) falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (43) estatuto -> . asign
    (44) estatuto -> . llamada
    (45) estatuto -> . lee
    (46) estatuto -> . escribe
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclow
    (49) estatuto -> . ciclof
    (50) estatuto -> . funcesp
    (51) estatuto -> . return
    (52) estatuto -> . copy
    (174) empty -> .
    (53) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (54) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (55) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (88) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (91) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (92) ciclof -> . FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (58) return -> . RETURNS exp pnCuadRet SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)
    ID              shift and go to state 82
    READ            shift and go to state 83
    WRITE           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FOR             shift and go to state 87
    RETURNS         shift and go to state 96
    READ_FILE       shift and go to state 97
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105

    estatutop                      shift and go to state 425
    estatuto                       shift and go to state 69
    empty                          shift and go to state 70
    asign                          shift and go to state 71
    llamada                        shift and go to state 72
    lee                            shift and go to state 73
    escribe                        shift and go to state 74
    condicion                      shift and go to state 75
    ciclow                         shift and go to state 76
    ciclof                         shift and go to state 77
    funcesp                        shift and go to state 78
    return                         shift and go to state 79
    copy                           shift and go to state 80
    variable                       shift and go to state 81
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95

state 424

    (92) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET pnEndFor
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (43) estatuto -> . asign
    (44) estatuto -> . llamada
    (45) estatuto -> . lee
    (46) estatuto -> . escribe
    (47) estatuto -> . condicion
    (48) estatuto -> . ciclow
    (49) estatuto -> . ciclof
    (50) estatuto -> . funcesp
    (51) estatuto -> . return
    (52) estatuto -> . copy
    (174) empty -> .
    (53) asign -> . variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON
    (18) llamada -> . ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue
    (54) lee -> . READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON
    (55) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (88) condicion -> . IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf
    (91) ciclow -> . WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile
    (92) ciclof -> . FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor
    (93) funcesp -> . mean
    (94) funcesp -> . median
    (95) funcesp -> . variance
    (96) funcesp -> . max
    (97) funcesp -> . min
    (98) funcesp -> . staddes
    (99) funcesp -> . boxplot
    (100) funcesp -> . linreg
    (101) funcesp -> . copy
    (58) return -> . RETURNS exp pnCuadRet SEMICOLON
    (12) copy -> . READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON
    (13) variable -> . ID pnSaveOperandos indexp
    (102) mean -> . MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (103) median -> . MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (104) variance -> . VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (105) max -> . MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (106) min -> . MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (107) staddes -> . STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON
    (108) boxplot -> . BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON
    (109) linreg -> . LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)
    ID              shift and go to state 82
    READ            shift and go to state 83
    WRITE           shift and go to state 84
    IF              shift and go to state 85
    WHILE           shift and go to state 86
    FOR             shift and go to state 87
    RETURNS         shift and go to state 96
    READ_FILE       shift and go to state 97
    MEAN            shift and go to state 98
    MEDIAN          shift and go to state 99
    VARIANCE        shift and go to state 100
    MAX             shift and go to state 101
    MIN             shift and go to state 102
    STADDES         shift and go to state 103
    BOXPLOT         shift and go to state 104
    LINREG          shift and go to state 105

    variable                       shift and go to state 81
    estatutop                      shift and go to state 426
    estatuto                       shift and go to state 69
    empty                          shift and go to state 70
    asign                          shift and go to state 71
    llamada                        shift and go to state 72
    lee                            shift and go to state 73
    escribe                        shift and go to state 74
    condicion                      shift and go to state 75
    ciclow                         shift and go to state 76
    ciclof                         shift and go to state 77
    funcesp                        shift and go to state 78
    return                         shift and go to state 79
    copy                           shift and go to state 80
    mean                           shift and go to state 88
    median                         shift and go to state 89
    variance                       shift and go to state 90
    max                            shift and go to state 91
    min                            shift and go to state 92
    staddes                        shift and go to state 93
    boxplot                        shift and go to state 94
    linreg                         shift and go to state 95

state 425

    (89) falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET

    RIGHT_CUR_BRACKET shift and go to state 427


state 426

    (92) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET pnEndFor

    RIGHT_CUR_BRACKET shift and go to state 428


state 427

    (89) falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .

    ID              reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ            reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WRITE           reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    IF              reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WHILE           reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    FOR             reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RETURNS         reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ_FILE       reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEAN            reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEDIAN          reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    VARIANCE        reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MAX             reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MIN             reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    STADDES         reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    BOXPLOT         reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    LINREG          reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RIGHT_CUR_BRACKET reduce using rule 89 (falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)


state 428

    (92) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET . pnEndFor
    (162) pnEndFor -> . empty
    (174) empty -> .

    ID              reduce using rule 174 (empty -> .)
    READ            reduce using rule 174 (empty -> .)
    WRITE           reduce using rule 174 (empty -> .)
    IF              reduce using rule 174 (empty -> .)
    WHILE           reduce using rule 174 (empty -> .)
    FOR             reduce using rule 174 (empty -> .)
    RETURNS         reduce using rule 174 (empty -> .)
    READ_FILE       reduce using rule 174 (empty -> .)
    MEAN            reduce using rule 174 (empty -> .)
    MEDIAN          reduce using rule 174 (empty -> .)
    VARIANCE        reduce using rule 174 (empty -> .)
    MAX             reduce using rule 174 (empty -> .)
    MIN             reduce using rule 174 (empty -> .)
    STADDES         reduce using rule 174 (empty -> .)
    BOXPLOT         reduce using rule 174 (empty -> .)
    LINREG          reduce using rule 174 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 174 (empty -> .)

    pnEndFor                       shift and go to state 429
    empty                          shift and go to state 430

state 429

    (92) ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .

    ID              reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    READ            reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    WRITE           reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    IF              reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    WHILE           reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    FOR             reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    RETURNS         reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    READ_FILE       reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MEAN            reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MEDIAN          reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    VARIANCE        reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MAX             reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    MIN             reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    STADDES         reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    BOXPLOT         reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    LINREG          reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)
    RIGHT_CUR_BRACKET reduce using rule 92 (ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor .)


state 430

    (162) pnEndFor -> empty .

    ID              reduce using rule 162 (pnEndFor -> empty .)
    READ            reduce using rule 162 (pnEndFor -> empty .)
    WRITE           reduce using rule 162 (pnEndFor -> empty .)
    IF              reduce using rule 162 (pnEndFor -> empty .)
    WHILE           reduce using rule 162 (pnEndFor -> empty .)
    FOR             reduce using rule 162 (pnEndFor -> empty .)
    RETURNS         reduce using rule 162 (pnEndFor -> empty .)
    READ_FILE       reduce using rule 162 (pnEndFor -> empty .)
    MEAN            reduce using rule 162 (pnEndFor -> empty .)
    MEDIAN          reduce using rule 162 (pnEndFor -> empty .)
    VARIANCE        reduce using rule 162 (pnEndFor -> empty .)
    MAX             reduce using rule 162 (pnEndFor -> empty .)
    MIN             reduce using rule 162 (pnEndFor -> empty .)
    STADDES         reduce using rule 162 (pnEndFor -> empty .)
    BOXPLOT         reduce using rule 162 (pnEndFor -> empty .)
    LINREG          reduce using rule 162 (pnEndFor -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 162 (pnEndFor -> empty .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 80 resolved using rule (estatuto -> copy)
WARNING: rejected rule (funcesp -> copy) in state 80

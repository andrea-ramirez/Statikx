Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> programa
Rule 1     programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque
Rule 2     varp -> var varp
Rule 3     varp -> empty
Rule 4     funcp -> func funcp
Rule 5     funcp -> empty
Rule 6     bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript
Rule 7     estatutop -> estatuto estatutop
Rule 8     estatutop -> empty
Rule 9     tipo_simp -> INT pnSaveTypeVar
Rule 10    tipo_simp -> FLOAT pnSaveTypeVar
Rule 11    tipo_simp -> CHAR pnSaveTypeVar
Rule 12    tipo_comp -> DATAFRAME
Rule 13    tipo_comp -> file
Rule 14    copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON
Rule 15    file -> ID
Rule 16    variable -> ID indexp
Rule 17    indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET
Rule 18    indexp -> empty
Rule 19    indexpp -> COMMA exp
Rule 20    indexpp -> empty
Rule 21    llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
Rule 22    expp -> exp exppp
Rule 23    expp -> empty
Rule 24    exppp -> COMMA exp exppp
Rule 25    exppp -> empty
Rule 26    var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON
Rule 27    v -> DATAFRAME pnSaveTypeVar
Rule 28    v -> tipo_simp vp
Rule 29    vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET
Rule 30    vp -> empty
Rule 31    vpp -> COMMA CTEI
Rule 32    vpp -> empty
Rule 33    idp -> ID pnCheckNameTablaVar idpp
Rule 34    idpp -> COMMA ID pnCheckNameTablaVar idpp
Rule 35    idpp -> empty
Rule 36    func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
Rule 37    returnval -> tipo_simp
Rule 38    returnval -> VOID pnSaveTypeVar
Rule 39    param -> paramlist
Rule 40    param -> empty
Rule 41    paramlist -> tipoparam ARROW ID paramlistp
Rule 42    tipoparam -> tipo_simp
Rule 43    tipoparam -> DATAFRAME
Rule 44    paramlistp -> COMMA paramlist
Rule 45    paramlistp -> empty
Rule 46    estatuto -> asign
Rule 47    estatuto -> llamada
Rule 48    estatuto -> lee
Rule 49    estatuto -> escribe
Rule 50    estatuto -> condicion
Rule 51    estatuto -> ciclow
Rule 52    estatuto -> ciclof
Rule 53    estatuto -> funcesp
Rule 54    estatuto -> return
Rule 55    estatuto -> copy
Rule 56    asign -> variable ASIGN exp SEMICOLON
Rule 57    lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 58    escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
Rule 59    escribep -> exp
Rule 60    escribep -> LETRERO
Rule 61    return -> RETURNS exp SEMICOLON
Rule 62    exp -> exprel logic
Rule 63    logic -> logicsig exprel logic
Rule 64    logic -> empty
Rule 65    logicsig -> AND
Rule 66    logicsig -> OR
Rule 67    exprel -> e relacionalp
Rule 68    relacionalp -> relsig e relacionalp
Rule 69    relacionalp -> empty
Rule 70    relsig -> LESS_THAN
Rule 71    relsig -> GREATER_THAN
Rule 72    relsig -> EQUALS
Rule 73    relsig -> NOTEQUALS
Rule 74    e -> t tp
Rule 75    tp -> tsig t tp
Rule 76    tp -> empty
Rule 77    tsig -> PLUS
Rule 78    tsig -> MINUS
Rule 79    t -> f fp
Rule 80    fp -> fsig f fp
Rule 81    fp -> empty
Rule 82    fsig -> MULT
Rule 83    fsig -> DIV
Rule 84    f -> LEFT_PARENT exp RIGHT_PARENT
Rule 85    f -> CTEI
Rule 86    f -> CTEF
Rule 87    f -> CTEC
Rule 88    f -> variable
Rule 89    f -> llamada
Rule 90    f -> funcesp
Rule 91    condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
Rule 92    falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
Rule 93    falsop -> empty
Rule 94    ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
Rule 95    ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
Rule 96    funcesp -> mean
Rule 97    funcesp -> mode
Rule 98    funcesp -> median
Rule 99    funcesp -> variance
Rule 100   funcesp -> max
Rule 101   funcesp -> min
Rule 102   funcesp -> staddes
Rule 103   funcesp -> boxplot
Rule 104   funcesp -> linreg
Rule 105   funcesp -> copy
Rule 106   mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 107   mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 108   median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 109   variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 110   max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 111   min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 112   staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 113   boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 114   linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
Rule 115   pnCrearDirFunc -> empty
Rule 116   pnScriptFuncDir -> empty
Rule 117   pnCheckTablaVar -> empty
Rule 118   pnSaveTypeVar -> empty
Rule 119   pnCheckNameTablaVar -> empty
Rule 120   pnAddFuncinDir -> empty
Rule 121   pnCloseCurrentFunction -> empty
Rule 122   pnEndScript -> empty
Rule 123   empty -> <empty>

Terminals, with rules where they appear

AND                  : 65
ARROW                : 26 36 41
ASIGN                : 56
BOXPLOT              : 113
CHAR                 : 11
COMMA                : 19 24 31 34 44
COMMENT              : 
CTEC                 : 87
CTEF                 : 86
CTEI                 : 29 31 85
DATAFRAME            : 12 27 43
DIV                  : 83
DO                   : 6
EQUALS               : 72
FLOAT                : 10
FOR                  : 95
FUNC                 : 36
GREATER_THAN         : 71
ID                   : 1 15 16 21 33 34 36 41
IF                   : 91
IF_FALSE             : 92
IF_TRUE              : 91
INT                  : 9
LEFT_CUR_BRACKET     : 6 36 91 92 94 95
LEFT_PARENT          : 14 21 36 57 58 84 91 94 95 106 107 108 109 110 111 112 113 114
LEFT_SQR_BRACKET     : 17 29
LESS_THAN            : 70
LETRERO              : 14 60
LINREG               : 114
MAX                  : 110
MEAN                 : 106
MEDIAN               : 108
MIN                  : 111
MINUS                : 78
MODE                 : 107
MULT                 : 82
NOTEQUALS            : 73
OR                   : 66
PLUS                 : 77
READ                 : 57
READ_FILE            : 14
RETURNS              : 61
RIGHT_CUR_BRACKET    : 6 36 91 92 94 95
RIGHT_PARENT         : 14 21 36 57 58 84 91 94 95 106 107 108 109 110 111 112 113 114
RIGHT_SQR_BRACKET    : 17 29
SCRIPT               : 1
SEMICOLON            : 1 14 21 26 56 57 58 61 106 107 108 109 110 111 112 113 114
STADDES              : 112
VAR                  : 26
VARIANCE             : 109
VOID                 : 38
WHILE                : 94
WRITE                : 58
error                : 

Nonterminals, with rules where they appear

asign                : 46 95
bloque               : 1
boxplot              : 103
ciclof               : 52
ciclow               : 51
condicion            : 50
copy                 : 55 105
e                    : 67 68
empty                : 3 5 8 18 20 23 25 30 32 35 40 45 64 69 76 81 93 115 116 117 118 119 120 121 122
escribe              : 49
escribep             : 58
estatuto             : 7
estatutop            : 6 7 36 91 92 94 95
exp                  : 17 19 22 24 56 59 61 84 91 94 95
expp                 : 21
exppp                : 22 24
exprel               : 62 63
f                    : 79 80
falsop               : 91
file                 : 13
fp                   : 79 80
fsig                 : 80
func                 : 4
funcesp              : 53 90
funcp                : 1 4 6
idp                  : 26
idpp                 : 33 34
indexp               : 16
indexpp              : 17
lee                  : 48
linreg               : 104
llamada              : 47 89
logic                : 62 63
logicsig             : 63
max                  : 100
mean                 : 96
median               : 98
min                  : 101
mode                 : 97
param                : 36
paramlist            : 39 44
paramlistp           : 41
pnAddFuncinDir       : 36
pnCheckNameTablaVar  : 33 34
pnCheckTablaVar      : 26 36
pnCloseCurrentFunction : 36
pnCrearDirFunc       : 1
pnEndScript          : 6
pnSaveTypeVar        : 9 10 11 27 38
pnScriptFuncDir      : 1
programa             : 0
relacionalp          : 67 68
relsig               : 68
return               : 54
returnval            : 36
staddes              : 102
t                    : 74 75
tipo_comp            : 
tipo_simp            : 28 37 42
tipoparam            : 41
tp                   : 74 75
tsig                 : 75
v                    : 26
var                  : 2
variable             : 56 57 88 106 107 108 109 110 111 112 113 114
variance             : 99
varp                 : 1 2 6 36
vp                   : 28
vpp                  : 29

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque

    SCRIPT          shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (1) programa -> SCRIPT . pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque
    (115) pnCrearDirFunc -> . empty
    (123) empty -> .

    ID              reduce using rule 123 (empty -> .)

    pnCrearDirFunc                 shift and go to state 3
    empty                          shift and go to state 4

state 3

    (1) programa -> SCRIPT pnCrearDirFunc . ID pnScriptFuncDir SEMICOLON varp funcp bloque

    ID              shift and go to state 5


state 4

    (115) pnCrearDirFunc -> empty .

    ID              reduce using rule 115 (pnCrearDirFunc -> empty .)


state 5

    (1) programa -> SCRIPT pnCrearDirFunc ID . pnScriptFuncDir SEMICOLON varp funcp bloque
    (116) pnScriptFuncDir -> . empty
    (123) empty -> .

    SEMICOLON       reduce using rule 123 (empty -> .)

    pnScriptFuncDir                shift and go to state 6
    empty                          shift and go to state 7

state 6

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir . SEMICOLON varp funcp bloque

    SEMICOLON       shift and go to state 8


state 7

    (116) pnScriptFuncDir -> empty .

    SEMICOLON       reduce using rule 116 (pnScriptFuncDir -> empty .)


state 8

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON . varp funcp bloque
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (123) empty -> .

    VAR             shift and go to state 12
    FUNC            reduce using rule 123 (empty -> .)
    DO              reduce using rule 123 (empty -> .)

    varp                           shift and go to state 9
    var                            shift and go to state 10
    empty                          shift and go to state 11

state 9

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp . funcp bloque
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (123) empty -> .

    FUNC            shift and go to state 16
    DO              reduce using rule 123 (empty -> .)

    funcp                          shift and go to state 13
    func                           shift and go to state 14
    empty                          shift and go to state 15

state 10

    (2) varp -> var . varp
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (123) empty -> .

    VAR             shift and go to state 12
    FUNC            reduce using rule 123 (empty -> .)
    DO              reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    READ            reduce using rule 123 (empty -> .)
    WRITE           reduce using rule 123 (empty -> .)
    IF              reduce using rule 123 (empty -> .)
    WHILE           reduce using rule 123 (empty -> .)
    FOR             reduce using rule 123 (empty -> .)
    RETURNS         reduce using rule 123 (empty -> .)
    READ_FILE       reduce using rule 123 (empty -> .)
    MEAN            reduce using rule 123 (empty -> .)
    MODE            reduce using rule 123 (empty -> .)
    MEDIAN          reduce using rule 123 (empty -> .)
    VARIANCE        reduce using rule 123 (empty -> .)
    MAX             reduce using rule 123 (empty -> .)
    MIN             reduce using rule 123 (empty -> .)
    STADDES         reduce using rule 123 (empty -> .)
    BOXPLOT         reduce using rule 123 (empty -> .)
    LINREG          reduce using rule 123 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 123 (empty -> .)

    var                            shift and go to state 10
    varp                           shift and go to state 17
    empty                          shift and go to state 11

state 11

    (3) varp -> empty .

    FUNC            reduce using rule 3 (varp -> empty .)
    DO              reduce using rule 3 (varp -> empty .)
    ID              reduce using rule 3 (varp -> empty .)
    READ            reduce using rule 3 (varp -> empty .)
    WRITE           reduce using rule 3 (varp -> empty .)
    IF              reduce using rule 3 (varp -> empty .)
    WHILE           reduce using rule 3 (varp -> empty .)
    FOR             reduce using rule 3 (varp -> empty .)
    RETURNS         reduce using rule 3 (varp -> empty .)
    READ_FILE       reduce using rule 3 (varp -> empty .)
    MEAN            reduce using rule 3 (varp -> empty .)
    MODE            reduce using rule 3 (varp -> empty .)
    MEDIAN          reduce using rule 3 (varp -> empty .)
    VARIANCE        reduce using rule 3 (varp -> empty .)
    MAX             reduce using rule 3 (varp -> empty .)
    MIN             reduce using rule 3 (varp -> empty .)
    STADDES         reduce using rule 3 (varp -> empty .)
    BOXPLOT         reduce using rule 3 (varp -> empty .)
    LINREG          reduce using rule 3 (varp -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 3 (varp -> empty .)


state 12

    (26) var -> VAR . pnCheckTablaVar v ARROW idp SEMICOLON
    (117) pnCheckTablaVar -> . empty
    (123) empty -> .

    DATAFRAME       reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    CHAR            reduce using rule 123 (empty -> .)

    pnCheckTablaVar                shift and go to state 18
    empty                          shift and go to state 19

state 13

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp . bloque
    (6) bloque -> . DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript

    DO              shift and go to state 21

    bloque                         shift and go to state 20

state 14

    (4) funcp -> func . funcp
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (123) empty -> .

    FUNC            shift and go to state 16
    DO              reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    READ            reduce using rule 123 (empty -> .)
    WRITE           reduce using rule 123 (empty -> .)
    IF              reduce using rule 123 (empty -> .)
    WHILE           reduce using rule 123 (empty -> .)
    FOR             reduce using rule 123 (empty -> .)
    RETURNS         reduce using rule 123 (empty -> .)
    READ_FILE       reduce using rule 123 (empty -> .)
    MEAN            reduce using rule 123 (empty -> .)
    MODE            reduce using rule 123 (empty -> .)
    MEDIAN          reduce using rule 123 (empty -> .)
    VARIANCE        reduce using rule 123 (empty -> .)
    MAX             reduce using rule 123 (empty -> .)
    MIN             reduce using rule 123 (empty -> .)
    STADDES         reduce using rule 123 (empty -> .)
    BOXPLOT         reduce using rule 123 (empty -> .)
    LINREG          reduce using rule 123 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 123 (empty -> .)

    func                           shift and go to state 14
    funcp                          shift and go to state 22
    empty                          shift and go to state 15

state 15

    (5) funcp -> empty .

    DO              reduce using rule 5 (funcp -> empty .)
    ID              reduce using rule 5 (funcp -> empty .)
    READ            reduce using rule 5 (funcp -> empty .)
    WRITE           reduce using rule 5 (funcp -> empty .)
    IF              reduce using rule 5 (funcp -> empty .)
    WHILE           reduce using rule 5 (funcp -> empty .)
    FOR             reduce using rule 5 (funcp -> empty .)
    RETURNS         reduce using rule 5 (funcp -> empty .)
    READ_FILE       reduce using rule 5 (funcp -> empty .)
    MEAN            reduce using rule 5 (funcp -> empty .)
    MODE            reduce using rule 5 (funcp -> empty .)
    MEDIAN          reduce using rule 5 (funcp -> empty .)
    VARIANCE        reduce using rule 5 (funcp -> empty .)
    MAX             reduce using rule 5 (funcp -> empty .)
    MIN             reduce using rule 5 (funcp -> empty .)
    STADDES         reduce using rule 5 (funcp -> empty .)
    BOXPLOT         reduce using rule 5 (funcp -> empty .)
    LINREG          reduce using rule 5 (funcp -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 5 (funcp -> empty .)


state 16

    (36) func -> FUNC . returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (37) returnval -> . tipo_simp
    (38) returnval -> . VOID pnSaveTypeVar
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    VOID            shift and go to state 25
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28

    returnval                      shift and go to state 23
    tipo_simp                      shift and go to state 24

state 17

    (2) varp -> var varp .

    FUNC            reduce using rule 2 (varp -> var varp .)
    DO              reduce using rule 2 (varp -> var varp .)
    ID              reduce using rule 2 (varp -> var varp .)
    READ            reduce using rule 2 (varp -> var varp .)
    WRITE           reduce using rule 2 (varp -> var varp .)
    IF              reduce using rule 2 (varp -> var varp .)
    WHILE           reduce using rule 2 (varp -> var varp .)
    FOR             reduce using rule 2 (varp -> var varp .)
    RETURNS         reduce using rule 2 (varp -> var varp .)
    READ_FILE       reduce using rule 2 (varp -> var varp .)
    MEAN            reduce using rule 2 (varp -> var varp .)
    MODE            reduce using rule 2 (varp -> var varp .)
    MEDIAN          reduce using rule 2 (varp -> var varp .)
    VARIANCE        reduce using rule 2 (varp -> var varp .)
    MAX             reduce using rule 2 (varp -> var varp .)
    MIN             reduce using rule 2 (varp -> var varp .)
    STADDES         reduce using rule 2 (varp -> var varp .)
    BOXPLOT         reduce using rule 2 (varp -> var varp .)
    LINREG          reduce using rule 2 (varp -> var varp .)
    RIGHT_CUR_BRACKET reduce using rule 2 (varp -> var varp .)


state 18

    (26) var -> VAR pnCheckTablaVar . v ARROW idp SEMICOLON
    (27) v -> . DATAFRAME pnSaveTypeVar
    (28) v -> . tipo_simp vp
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    DATAFRAME       shift and go to state 30
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28

    v                              shift and go to state 29
    tipo_simp                      shift and go to state 31

state 19

    (117) pnCheckTablaVar -> empty .

    DATAFRAME       reduce using rule 117 (pnCheckTablaVar -> empty .)
    INT             reduce using rule 117 (pnCheckTablaVar -> empty .)
    FLOAT           reduce using rule 117 (pnCheckTablaVar -> empty .)
    CHAR            reduce using rule 117 (pnCheckTablaVar -> empty .)
    RIGHT_PARENT    reduce using rule 117 (pnCheckTablaVar -> empty .)


state 20

    (1) programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque .

    $end            reduce using rule 1 (programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque .)


state 21

    (6) bloque -> DO . LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript

    LEFT_CUR_BRACKET shift and go to state 32


state 22

    (4) funcp -> func funcp .

    DO              reduce using rule 4 (funcp -> func funcp .)
    ID              reduce using rule 4 (funcp -> func funcp .)
    READ            reduce using rule 4 (funcp -> func funcp .)
    WRITE           reduce using rule 4 (funcp -> func funcp .)
    IF              reduce using rule 4 (funcp -> func funcp .)
    WHILE           reduce using rule 4 (funcp -> func funcp .)
    FOR             reduce using rule 4 (funcp -> func funcp .)
    RETURNS         reduce using rule 4 (funcp -> func funcp .)
    READ_FILE       reduce using rule 4 (funcp -> func funcp .)
    MEAN            reduce using rule 4 (funcp -> func funcp .)
    MODE            reduce using rule 4 (funcp -> func funcp .)
    MEDIAN          reduce using rule 4 (funcp -> func funcp .)
    VARIANCE        reduce using rule 4 (funcp -> func funcp .)
    MAX             reduce using rule 4 (funcp -> func funcp .)
    MIN             reduce using rule 4 (funcp -> func funcp .)
    STADDES         reduce using rule 4 (funcp -> func funcp .)
    BOXPLOT         reduce using rule 4 (funcp -> func funcp .)
    LINREG          reduce using rule 4 (funcp -> func funcp .)
    RIGHT_CUR_BRACKET reduce using rule 4 (funcp -> func funcp .)


state 23

    (36) func -> FUNC returnval . ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction

    ARROW           shift and go to state 33


state 24

    (37) returnval -> tipo_simp .

    ARROW           reduce using rule 37 (returnval -> tipo_simp .)


state 25

    (38) returnval -> VOID . pnSaveTypeVar
    (118) pnSaveTypeVar -> . empty
    (123) empty -> .

    ARROW           reduce using rule 123 (empty -> .)

    pnSaveTypeVar                  shift and go to state 34
    empty                          shift and go to state 35

state 26

    (9) tipo_simp -> INT . pnSaveTypeVar
    (118) pnSaveTypeVar -> . empty
    (123) empty -> .

    ARROW           reduce using rule 123 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 123 (empty -> .)

    pnSaveTypeVar                  shift and go to state 36
    empty                          shift and go to state 35

state 27

    (10) tipo_simp -> FLOAT . pnSaveTypeVar
    (118) pnSaveTypeVar -> . empty
    (123) empty -> .

    ARROW           reduce using rule 123 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 123 (empty -> .)

    pnSaveTypeVar                  shift and go to state 37
    empty                          shift and go to state 35

state 28

    (11) tipo_simp -> CHAR . pnSaveTypeVar
    (118) pnSaveTypeVar -> . empty
    (123) empty -> .

    ARROW           reduce using rule 123 (empty -> .)
    LEFT_SQR_BRACKET reduce using rule 123 (empty -> .)

    pnSaveTypeVar                  shift and go to state 38
    empty                          shift and go to state 35

state 29

    (26) var -> VAR pnCheckTablaVar v . ARROW idp SEMICOLON

    ARROW           shift and go to state 39


state 30

    (27) v -> DATAFRAME . pnSaveTypeVar
    (118) pnSaveTypeVar -> . empty
    (123) empty -> .

    ARROW           reduce using rule 123 (empty -> .)

    pnSaveTypeVar                  shift and go to state 40
    empty                          shift and go to state 35

state 31

    (28) v -> tipo_simp . vp
    (29) vp -> . LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET
    (30) vp -> . empty
    (123) empty -> .

    LEFT_SQR_BRACKET shift and go to state 42
    ARROW           reduce using rule 123 (empty -> .)

    vp                             shift and go to state 41
    empty                          shift and go to state 43

state 32

    (6) bloque -> DO LEFT_CUR_BRACKET . varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (123) empty -> .

    VAR             shift and go to state 12
    FUNC            reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    READ            reduce using rule 123 (empty -> .)
    WRITE           reduce using rule 123 (empty -> .)
    IF              reduce using rule 123 (empty -> .)
    WHILE           reduce using rule 123 (empty -> .)
    FOR             reduce using rule 123 (empty -> .)
    RETURNS         reduce using rule 123 (empty -> .)
    READ_FILE       reduce using rule 123 (empty -> .)
    MEAN            reduce using rule 123 (empty -> .)
    MODE            reduce using rule 123 (empty -> .)
    MEDIAN          reduce using rule 123 (empty -> .)
    VARIANCE        reduce using rule 123 (empty -> .)
    MAX             reduce using rule 123 (empty -> .)
    MIN             reduce using rule 123 (empty -> .)
    STADDES         reduce using rule 123 (empty -> .)
    BOXPLOT         reduce using rule 123 (empty -> .)
    LINREG          reduce using rule 123 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 123 (empty -> .)

    varp                           shift and go to state 44
    var                            shift and go to state 10
    empty                          shift and go to state 11

state 33

    (36) func -> FUNC returnval ARROW . ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction

    ID              shift and go to state 45


state 34

    (38) returnval -> VOID pnSaveTypeVar .

    ARROW           reduce using rule 38 (returnval -> VOID pnSaveTypeVar .)


state 35

    (118) pnSaveTypeVar -> empty .

    ARROW           reduce using rule 118 (pnSaveTypeVar -> empty .)
    LEFT_SQR_BRACKET reduce using rule 118 (pnSaveTypeVar -> empty .)


state 36

    (9) tipo_simp -> INT pnSaveTypeVar .

    ARROW           reduce using rule 9 (tipo_simp -> INT pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 9 (tipo_simp -> INT pnSaveTypeVar .)


state 37

    (10) tipo_simp -> FLOAT pnSaveTypeVar .

    ARROW           reduce using rule 10 (tipo_simp -> FLOAT pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 10 (tipo_simp -> FLOAT pnSaveTypeVar .)


state 38

    (11) tipo_simp -> CHAR pnSaveTypeVar .

    ARROW           reduce using rule 11 (tipo_simp -> CHAR pnSaveTypeVar .)
    LEFT_SQR_BRACKET reduce using rule 11 (tipo_simp -> CHAR pnSaveTypeVar .)


state 39

    (26) var -> VAR pnCheckTablaVar v ARROW . idp SEMICOLON
    (33) idp -> . ID pnCheckNameTablaVar idpp

    ID              shift and go to state 47

    idp                            shift and go to state 46

state 40

    (27) v -> DATAFRAME pnSaveTypeVar .

    ARROW           reduce using rule 27 (v -> DATAFRAME pnSaveTypeVar .)


state 41

    (28) v -> tipo_simp vp .

    ARROW           reduce using rule 28 (v -> tipo_simp vp .)


state 42

    (29) vp -> LEFT_SQR_BRACKET . CTEI vpp RIGHT_SQR_BRACKET

    CTEI            shift and go to state 48


state 43

    (30) vp -> empty .

    ARROW           reduce using rule 30 (vp -> empty .)


state 44

    (6) bloque -> DO LEFT_CUR_BRACKET varp . funcp estatutop RIGHT_CUR_BRACKET pnEndScript
    (4) funcp -> . func funcp
    (5) funcp -> . empty
    (36) func -> . FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (123) empty -> .

    FUNC            shift and go to state 16
    ID              reduce using rule 123 (empty -> .)
    READ            reduce using rule 123 (empty -> .)
    WRITE           reduce using rule 123 (empty -> .)
    IF              reduce using rule 123 (empty -> .)
    WHILE           reduce using rule 123 (empty -> .)
    FOR             reduce using rule 123 (empty -> .)
    RETURNS         reduce using rule 123 (empty -> .)
    READ_FILE       reduce using rule 123 (empty -> .)
    MEAN            reduce using rule 123 (empty -> .)
    MODE            reduce using rule 123 (empty -> .)
    MEDIAN          reduce using rule 123 (empty -> .)
    VARIANCE        reduce using rule 123 (empty -> .)
    MAX             reduce using rule 123 (empty -> .)
    MIN             reduce using rule 123 (empty -> .)
    STADDES         reduce using rule 123 (empty -> .)
    BOXPLOT         reduce using rule 123 (empty -> .)
    LINREG          reduce using rule 123 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 123 (empty -> .)

    funcp                          shift and go to state 49
    func                           shift and go to state 14
    empty                          shift and go to state 15

state 45

    (36) func -> FUNC returnval ARROW ID . pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (120) pnAddFuncinDir -> . empty
    (123) empty -> .

    LEFT_PARENT     reduce using rule 123 (empty -> .)

    pnAddFuncinDir                 shift and go to state 50
    empty                          shift and go to state 51

state 46

    (26) var -> VAR pnCheckTablaVar v ARROW idp . SEMICOLON

    SEMICOLON       shift and go to state 52


state 47

    (33) idp -> ID . pnCheckNameTablaVar idpp
    (119) pnCheckNameTablaVar -> . empty
    (123) empty -> .

    COMMA           reduce using rule 123 (empty -> .)
    SEMICOLON       reduce using rule 123 (empty -> .)

    pnCheckNameTablaVar            shift and go to state 53
    empty                          shift and go to state 54

state 48

    (29) vp -> LEFT_SQR_BRACKET CTEI . vpp RIGHT_SQR_BRACKET
    (31) vpp -> . COMMA CTEI
    (32) vpp -> . empty
    (123) empty -> .

    COMMA           shift and go to state 56
    RIGHT_SQR_BRACKET reduce using rule 123 (empty -> .)

    vpp                            shift and go to state 55
    empty                          shift and go to state 57

state 49

    (6) bloque -> DO LEFT_CUR_BRACKET varp funcp . estatutop RIGHT_CUR_BRACKET pnEndScript
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (123) empty -> .
    (56) asign -> . variable ASIGN exp SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (57) lee -> . READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (94) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (95) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 123 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatutop                      shift and go to state 58
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 50

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir . LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction

    LEFT_PARENT     shift and go to state 98


state 51

    (120) pnAddFuncinDir -> empty .

    LEFT_PARENT     reduce using rule 120 (pnAddFuncinDir -> empty .)


state 52

    (26) var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .

    VAR             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    FUNC            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    DO              reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    ID              reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    READ            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    WRITE           reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    IF              reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    WHILE           reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    FOR             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    RETURNS         reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    READ_FILE       reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MEAN            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MODE            reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MEDIAN          reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    VARIANCE        reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MAX             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    MIN             reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    STADDES         reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    BOXPLOT         reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    LINREG          reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 26 (var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON .)


state 53

    (33) idp -> ID pnCheckNameTablaVar . idpp
    (34) idpp -> . COMMA ID pnCheckNameTablaVar idpp
    (35) idpp -> . empty
    (123) empty -> .

    COMMA           shift and go to state 100
    SEMICOLON       reduce using rule 123 (empty -> .)

    idpp                           shift and go to state 99
    empty                          shift and go to state 101

state 54

    (119) pnCheckNameTablaVar -> empty .

    COMMA           reduce using rule 119 (pnCheckNameTablaVar -> empty .)
    SEMICOLON       reduce using rule 119 (pnCheckNameTablaVar -> empty .)


state 55

    (29) vp -> LEFT_SQR_BRACKET CTEI vpp . RIGHT_SQR_BRACKET

    RIGHT_SQR_BRACKET shift and go to state 102


state 56

    (31) vpp -> COMMA . CTEI

    CTEI            shift and go to state 103


state 57

    (32) vpp -> empty .

    RIGHT_SQR_BRACKET reduce using rule 32 (vpp -> empty .)


state 58

    (6) bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop . RIGHT_CUR_BRACKET pnEndScript

    RIGHT_CUR_BRACKET shift and go to state 104


state 59

    (7) estatutop -> estatuto . estatutop
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (123) empty -> .
    (56) asign -> . variable ASIGN exp SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (57) lee -> . READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (94) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (95) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 123 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatuto                       shift and go to state 59
    estatutop                      shift and go to state 105
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 60

    (8) estatutop -> empty .

    RIGHT_CUR_BRACKET reduce using rule 8 (estatutop -> empty .)


state 61

    (46) estatuto -> asign .

    ID              reduce using rule 46 (estatuto -> asign .)
    READ            reduce using rule 46 (estatuto -> asign .)
    WRITE           reduce using rule 46 (estatuto -> asign .)
    IF              reduce using rule 46 (estatuto -> asign .)
    WHILE           reduce using rule 46 (estatuto -> asign .)
    FOR             reduce using rule 46 (estatuto -> asign .)
    RETURNS         reduce using rule 46 (estatuto -> asign .)
    READ_FILE       reduce using rule 46 (estatuto -> asign .)
    MEAN            reduce using rule 46 (estatuto -> asign .)
    MODE            reduce using rule 46 (estatuto -> asign .)
    MEDIAN          reduce using rule 46 (estatuto -> asign .)
    VARIANCE        reduce using rule 46 (estatuto -> asign .)
    MAX             reduce using rule 46 (estatuto -> asign .)
    MIN             reduce using rule 46 (estatuto -> asign .)
    STADDES         reduce using rule 46 (estatuto -> asign .)
    BOXPLOT         reduce using rule 46 (estatuto -> asign .)
    LINREG          reduce using rule 46 (estatuto -> asign .)
    RIGHT_CUR_BRACKET reduce using rule 46 (estatuto -> asign .)


state 62

    (47) estatuto -> llamada .

    ID              reduce using rule 47 (estatuto -> llamada .)
    READ            reduce using rule 47 (estatuto -> llamada .)
    WRITE           reduce using rule 47 (estatuto -> llamada .)
    IF              reduce using rule 47 (estatuto -> llamada .)
    WHILE           reduce using rule 47 (estatuto -> llamada .)
    FOR             reduce using rule 47 (estatuto -> llamada .)
    RETURNS         reduce using rule 47 (estatuto -> llamada .)
    READ_FILE       reduce using rule 47 (estatuto -> llamada .)
    MEAN            reduce using rule 47 (estatuto -> llamada .)
    MODE            reduce using rule 47 (estatuto -> llamada .)
    MEDIAN          reduce using rule 47 (estatuto -> llamada .)
    VARIANCE        reduce using rule 47 (estatuto -> llamada .)
    MAX             reduce using rule 47 (estatuto -> llamada .)
    MIN             reduce using rule 47 (estatuto -> llamada .)
    STADDES         reduce using rule 47 (estatuto -> llamada .)
    BOXPLOT         reduce using rule 47 (estatuto -> llamada .)
    LINREG          reduce using rule 47 (estatuto -> llamada .)
    RIGHT_CUR_BRACKET reduce using rule 47 (estatuto -> llamada .)


state 63

    (48) estatuto -> lee .

    ID              reduce using rule 48 (estatuto -> lee .)
    READ            reduce using rule 48 (estatuto -> lee .)
    WRITE           reduce using rule 48 (estatuto -> lee .)
    IF              reduce using rule 48 (estatuto -> lee .)
    WHILE           reduce using rule 48 (estatuto -> lee .)
    FOR             reduce using rule 48 (estatuto -> lee .)
    RETURNS         reduce using rule 48 (estatuto -> lee .)
    READ_FILE       reduce using rule 48 (estatuto -> lee .)
    MEAN            reduce using rule 48 (estatuto -> lee .)
    MODE            reduce using rule 48 (estatuto -> lee .)
    MEDIAN          reduce using rule 48 (estatuto -> lee .)
    VARIANCE        reduce using rule 48 (estatuto -> lee .)
    MAX             reduce using rule 48 (estatuto -> lee .)
    MIN             reduce using rule 48 (estatuto -> lee .)
    STADDES         reduce using rule 48 (estatuto -> lee .)
    BOXPLOT         reduce using rule 48 (estatuto -> lee .)
    LINREG          reduce using rule 48 (estatuto -> lee .)
    RIGHT_CUR_BRACKET reduce using rule 48 (estatuto -> lee .)


state 64

    (49) estatuto -> escribe .

    ID              reduce using rule 49 (estatuto -> escribe .)
    READ            reduce using rule 49 (estatuto -> escribe .)
    WRITE           reduce using rule 49 (estatuto -> escribe .)
    IF              reduce using rule 49 (estatuto -> escribe .)
    WHILE           reduce using rule 49 (estatuto -> escribe .)
    FOR             reduce using rule 49 (estatuto -> escribe .)
    RETURNS         reduce using rule 49 (estatuto -> escribe .)
    READ_FILE       reduce using rule 49 (estatuto -> escribe .)
    MEAN            reduce using rule 49 (estatuto -> escribe .)
    MODE            reduce using rule 49 (estatuto -> escribe .)
    MEDIAN          reduce using rule 49 (estatuto -> escribe .)
    VARIANCE        reduce using rule 49 (estatuto -> escribe .)
    MAX             reduce using rule 49 (estatuto -> escribe .)
    MIN             reduce using rule 49 (estatuto -> escribe .)
    STADDES         reduce using rule 49 (estatuto -> escribe .)
    BOXPLOT         reduce using rule 49 (estatuto -> escribe .)
    LINREG          reduce using rule 49 (estatuto -> escribe .)
    RIGHT_CUR_BRACKET reduce using rule 49 (estatuto -> escribe .)


state 65

    (50) estatuto -> condicion .

    ID              reduce using rule 50 (estatuto -> condicion .)
    READ            reduce using rule 50 (estatuto -> condicion .)
    WRITE           reduce using rule 50 (estatuto -> condicion .)
    IF              reduce using rule 50 (estatuto -> condicion .)
    WHILE           reduce using rule 50 (estatuto -> condicion .)
    FOR             reduce using rule 50 (estatuto -> condicion .)
    RETURNS         reduce using rule 50 (estatuto -> condicion .)
    READ_FILE       reduce using rule 50 (estatuto -> condicion .)
    MEAN            reduce using rule 50 (estatuto -> condicion .)
    MODE            reduce using rule 50 (estatuto -> condicion .)
    MEDIAN          reduce using rule 50 (estatuto -> condicion .)
    VARIANCE        reduce using rule 50 (estatuto -> condicion .)
    MAX             reduce using rule 50 (estatuto -> condicion .)
    MIN             reduce using rule 50 (estatuto -> condicion .)
    STADDES         reduce using rule 50 (estatuto -> condicion .)
    BOXPLOT         reduce using rule 50 (estatuto -> condicion .)
    LINREG          reduce using rule 50 (estatuto -> condicion .)
    RIGHT_CUR_BRACKET reduce using rule 50 (estatuto -> condicion .)


state 66

    (51) estatuto -> ciclow .

    ID              reduce using rule 51 (estatuto -> ciclow .)
    READ            reduce using rule 51 (estatuto -> ciclow .)
    WRITE           reduce using rule 51 (estatuto -> ciclow .)
    IF              reduce using rule 51 (estatuto -> ciclow .)
    WHILE           reduce using rule 51 (estatuto -> ciclow .)
    FOR             reduce using rule 51 (estatuto -> ciclow .)
    RETURNS         reduce using rule 51 (estatuto -> ciclow .)
    READ_FILE       reduce using rule 51 (estatuto -> ciclow .)
    MEAN            reduce using rule 51 (estatuto -> ciclow .)
    MODE            reduce using rule 51 (estatuto -> ciclow .)
    MEDIAN          reduce using rule 51 (estatuto -> ciclow .)
    VARIANCE        reduce using rule 51 (estatuto -> ciclow .)
    MAX             reduce using rule 51 (estatuto -> ciclow .)
    MIN             reduce using rule 51 (estatuto -> ciclow .)
    STADDES         reduce using rule 51 (estatuto -> ciclow .)
    BOXPLOT         reduce using rule 51 (estatuto -> ciclow .)
    LINREG          reduce using rule 51 (estatuto -> ciclow .)
    RIGHT_CUR_BRACKET reduce using rule 51 (estatuto -> ciclow .)


state 67

    (52) estatuto -> ciclof .

    ID              reduce using rule 52 (estatuto -> ciclof .)
    READ            reduce using rule 52 (estatuto -> ciclof .)
    WRITE           reduce using rule 52 (estatuto -> ciclof .)
    IF              reduce using rule 52 (estatuto -> ciclof .)
    WHILE           reduce using rule 52 (estatuto -> ciclof .)
    FOR             reduce using rule 52 (estatuto -> ciclof .)
    RETURNS         reduce using rule 52 (estatuto -> ciclof .)
    READ_FILE       reduce using rule 52 (estatuto -> ciclof .)
    MEAN            reduce using rule 52 (estatuto -> ciclof .)
    MODE            reduce using rule 52 (estatuto -> ciclof .)
    MEDIAN          reduce using rule 52 (estatuto -> ciclof .)
    VARIANCE        reduce using rule 52 (estatuto -> ciclof .)
    MAX             reduce using rule 52 (estatuto -> ciclof .)
    MIN             reduce using rule 52 (estatuto -> ciclof .)
    STADDES         reduce using rule 52 (estatuto -> ciclof .)
    BOXPLOT         reduce using rule 52 (estatuto -> ciclof .)
    LINREG          reduce using rule 52 (estatuto -> ciclof .)
    RIGHT_CUR_BRACKET reduce using rule 52 (estatuto -> ciclof .)


state 68

    (53) estatuto -> funcesp .

    ID              reduce using rule 53 (estatuto -> funcesp .)
    READ            reduce using rule 53 (estatuto -> funcesp .)
    WRITE           reduce using rule 53 (estatuto -> funcesp .)
    IF              reduce using rule 53 (estatuto -> funcesp .)
    WHILE           reduce using rule 53 (estatuto -> funcesp .)
    FOR             reduce using rule 53 (estatuto -> funcesp .)
    RETURNS         reduce using rule 53 (estatuto -> funcesp .)
    READ_FILE       reduce using rule 53 (estatuto -> funcesp .)
    MEAN            reduce using rule 53 (estatuto -> funcesp .)
    MODE            reduce using rule 53 (estatuto -> funcesp .)
    MEDIAN          reduce using rule 53 (estatuto -> funcesp .)
    VARIANCE        reduce using rule 53 (estatuto -> funcesp .)
    MAX             reduce using rule 53 (estatuto -> funcesp .)
    MIN             reduce using rule 53 (estatuto -> funcesp .)
    STADDES         reduce using rule 53 (estatuto -> funcesp .)
    BOXPLOT         reduce using rule 53 (estatuto -> funcesp .)
    LINREG          reduce using rule 53 (estatuto -> funcesp .)
    RIGHT_CUR_BRACKET reduce using rule 53 (estatuto -> funcesp .)


state 69

    (54) estatuto -> return .

    ID              reduce using rule 54 (estatuto -> return .)
    READ            reduce using rule 54 (estatuto -> return .)
    WRITE           reduce using rule 54 (estatuto -> return .)
    IF              reduce using rule 54 (estatuto -> return .)
    WHILE           reduce using rule 54 (estatuto -> return .)
    FOR             reduce using rule 54 (estatuto -> return .)
    RETURNS         reduce using rule 54 (estatuto -> return .)
    READ_FILE       reduce using rule 54 (estatuto -> return .)
    MEAN            reduce using rule 54 (estatuto -> return .)
    MODE            reduce using rule 54 (estatuto -> return .)
    MEDIAN          reduce using rule 54 (estatuto -> return .)
    VARIANCE        reduce using rule 54 (estatuto -> return .)
    MAX             reduce using rule 54 (estatuto -> return .)
    MIN             reduce using rule 54 (estatuto -> return .)
    STADDES         reduce using rule 54 (estatuto -> return .)
    BOXPLOT         reduce using rule 54 (estatuto -> return .)
    LINREG          reduce using rule 54 (estatuto -> return .)
    RIGHT_CUR_BRACKET reduce using rule 54 (estatuto -> return .)


state 70

    (55) estatuto -> copy .
    (105) funcesp -> copy .

  ! reduce/reduce conflict for ID resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for READ resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for WRITE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for IF resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for WHILE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for FOR resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for RETURNS resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for READ_FILE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MEAN resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MODE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MEDIAN resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for VARIANCE resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MAX resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for MIN resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for STADDES resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for BOXPLOT resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for LINREG resolved using rule 55 (estatuto -> copy .)
  ! reduce/reduce conflict for RIGHT_CUR_BRACKET resolved using rule 55 (estatuto -> copy .)
    ID              reduce using rule 55 (estatuto -> copy .)
    READ            reduce using rule 55 (estatuto -> copy .)
    WRITE           reduce using rule 55 (estatuto -> copy .)
    IF              reduce using rule 55 (estatuto -> copy .)
    WHILE           reduce using rule 55 (estatuto -> copy .)
    FOR             reduce using rule 55 (estatuto -> copy .)
    RETURNS         reduce using rule 55 (estatuto -> copy .)
    READ_FILE       reduce using rule 55 (estatuto -> copy .)
    MEAN            reduce using rule 55 (estatuto -> copy .)
    MODE            reduce using rule 55 (estatuto -> copy .)
    MEDIAN          reduce using rule 55 (estatuto -> copy .)
    VARIANCE        reduce using rule 55 (estatuto -> copy .)
    MAX             reduce using rule 55 (estatuto -> copy .)
    MIN             reduce using rule 55 (estatuto -> copy .)
    STADDES         reduce using rule 55 (estatuto -> copy .)
    BOXPLOT         reduce using rule 55 (estatuto -> copy .)
    LINREG          reduce using rule 55 (estatuto -> copy .)
    RIGHT_CUR_BRACKET reduce using rule 55 (estatuto -> copy .)

  ! ID              [ reduce using rule 105 (funcesp -> copy .) ]
  ! READ            [ reduce using rule 105 (funcesp -> copy .) ]
  ! WRITE           [ reduce using rule 105 (funcesp -> copy .) ]
  ! IF              [ reduce using rule 105 (funcesp -> copy .) ]
  ! WHILE           [ reduce using rule 105 (funcesp -> copy .) ]
  ! FOR             [ reduce using rule 105 (funcesp -> copy .) ]
  ! RETURNS         [ reduce using rule 105 (funcesp -> copy .) ]
  ! READ_FILE       [ reduce using rule 105 (funcesp -> copy .) ]
  ! MEAN            [ reduce using rule 105 (funcesp -> copy .) ]
  ! MODE            [ reduce using rule 105 (funcesp -> copy .) ]
  ! MEDIAN          [ reduce using rule 105 (funcesp -> copy .) ]
  ! VARIANCE        [ reduce using rule 105 (funcesp -> copy .) ]
  ! MAX             [ reduce using rule 105 (funcesp -> copy .) ]
  ! MIN             [ reduce using rule 105 (funcesp -> copy .) ]
  ! STADDES         [ reduce using rule 105 (funcesp -> copy .) ]
  ! BOXPLOT         [ reduce using rule 105 (funcesp -> copy .) ]
  ! LINREG          [ reduce using rule 105 (funcesp -> copy .) ]
  ! RIGHT_CUR_BRACKET [ reduce using rule 105 (funcesp -> copy .) ]


state 71

    (56) asign -> variable . ASIGN exp SEMICOLON

    ASIGN           shift and go to state 106


state 72

    (21) llamada -> ID . LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (16) variable -> ID . indexp
    (17) indexp -> . LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET
    (18) indexp -> . empty
    (123) empty -> .

    LEFT_PARENT     shift and go to state 107
    LEFT_SQR_BRACKET shift and go to state 109
    ASIGN           reduce using rule 123 (empty -> .)

    indexp                         shift and go to state 108
    empty                          shift and go to state 110

state 73

    (57) lee -> READ . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 111


state 74

    (58) escribe -> WRITE . LEFT_PARENT escribep RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 112


state 75

    (91) condicion -> IF . LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop

    LEFT_PARENT     shift and go to state 113


state 76

    (94) ciclow -> WHILE . LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_PARENT     shift and go to state 114


state 77

    (95) ciclof -> FOR . LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_PARENT     shift and go to state 115


state 78

    (96) funcesp -> mean .

    ID              reduce using rule 96 (funcesp -> mean .)
    READ            reduce using rule 96 (funcesp -> mean .)
    WRITE           reduce using rule 96 (funcesp -> mean .)
    IF              reduce using rule 96 (funcesp -> mean .)
    WHILE           reduce using rule 96 (funcesp -> mean .)
    FOR             reduce using rule 96 (funcesp -> mean .)
    RETURNS         reduce using rule 96 (funcesp -> mean .)
    READ_FILE       reduce using rule 96 (funcesp -> mean .)
    MEAN            reduce using rule 96 (funcesp -> mean .)
    MODE            reduce using rule 96 (funcesp -> mean .)
    MEDIAN          reduce using rule 96 (funcesp -> mean .)
    VARIANCE        reduce using rule 96 (funcesp -> mean .)
    MAX             reduce using rule 96 (funcesp -> mean .)
    MIN             reduce using rule 96 (funcesp -> mean .)
    STADDES         reduce using rule 96 (funcesp -> mean .)
    BOXPLOT         reduce using rule 96 (funcesp -> mean .)
    LINREG          reduce using rule 96 (funcesp -> mean .)
    RIGHT_CUR_BRACKET reduce using rule 96 (funcesp -> mean .)
    MULT            reduce using rule 96 (funcesp -> mean .)
    DIV             reduce using rule 96 (funcesp -> mean .)
    PLUS            reduce using rule 96 (funcesp -> mean .)
    MINUS           reduce using rule 96 (funcesp -> mean .)
    LESS_THAN       reduce using rule 96 (funcesp -> mean .)
    GREATER_THAN    reduce using rule 96 (funcesp -> mean .)
    EQUALS          reduce using rule 96 (funcesp -> mean .)
    NOTEQUALS       reduce using rule 96 (funcesp -> mean .)
    AND             reduce using rule 96 (funcesp -> mean .)
    OR              reduce using rule 96 (funcesp -> mean .)
    SEMICOLON       reduce using rule 96 (funcesp -> mean .)
    COMMA           reduce using rule 96 (funcesp -> mean .)
    RIGHT_PARENT    reduce using rule 96 (funcesp -> mean .)
    RIGHT_SQR_BRACKET reduce using rule 96 (funcesp -> mean .)


state 79

    (97) funcesp -> mode .

    ID              reduce using rule 97 (funcesp -> mode .)
    READ            reduce using rule 97 (funcesp -> mode .)
    WRITE           reduce using rule 97 (funcesp -> mode .)
    IF              reduce using rule 97 (funcesp -> mode .)
    WHILE           reduce using rule 97 (funcesp -> mode .)
    FOR             reduce using rule 97 (funcesp -> mode .)
    RETURNS         reduce using rule 97 (funcesp -> mode .)
    READ_FILE       reduce using rule 97 (funcesp -> mode .)
    MEAN            reduce using rule 97 (funcesp -> mode .)
    MODE            reduce using rule 97 (funcesp -> mode .)
    MEDIAN          reduce using rule 97 (funcesp -> mode .)
    VARIANCE        reduce using rule 97 (funcesp -> mode .)
    MAX             reduce using rule 97 (funcesp -> mode .)
    MIN             reduce using rule 97 (funcesp -> mode .)
    STADDES         reduce using rule 97 (funcesp -> mode .)
    BOXPLOT         reduce using rule 97 (funcesp -> mode .)
    LINREG          reduce using rule 97 (funcesp -> mode .)
    RIGHT_CUR_BRACKET reduce using rule 97 (funcesp -> mode .)
    MULT            reduce using rule 97 (funcesp -> mode .)
    DIV             reduce using rule 97 (funcesp -> mode .)
    PLUS            reduce using rule 97 (funcesp -> mode .)
    MINUS           reduce using rule 97 (funcesp -> mode .)
    LESS_THAN       reduce using rule 97 (funcesp -> mode .)
    GREATER_THAN    reduce using rule 97 (funcesp -> mode .)
    EQUALS          reduce using rule 97 (funcesp -> mode .)
    NOTEQUALS       reduce using rule 97 (funcesp -> mode .)
    AND             reduce using rule 97 (funcesp -> mode .)
    OR              reduce using rule 97 (funcesp -> mode .)
    SEMICOLON       reduce using rule 97 (funcesp -> mode .)
    COMMA           reduce using rule 97 (funcesp -> mode .)
    RIGHT_PARENT    reduce using rule 97 (funcesp -> mode .)
    RIGHT_SQR_BRACKET reduce using rule 97 (funcesp -> mode .)


state 80

    (98) funcesp -> median .

    ID              reduce using rule 98 (funcesp -> median .)
    READ            reduce using rule 98 (funcesp -> median .)
    WRITE           reduce using rule 98 (funcesp -> median .)
    IF              reduce using rule 98 (funcesp -> median .)
    WHILE           reduce using rule 98 (funcesp -> median .)
    FOR             reduce using rule 98 (funcesp -> median .)
    RETURNS         reduce using rule 98 (funcesp -> median .)
    READ_FILE       reduce using rule 98 (funcesp -> median .)
    MEAN            reduce using rule 98 (funcesp -> median .)
    MODE            reduce using rule 98 (funcesp -> median .)
    MEDIAN          reduce using rule 98 (funcesp -> median .)
    VARIANCE        reduce using rule 98 (funcesp -> median .)
    MAX             reduce using rule 98 (funcesp -> median .)
    MIN             reduce using rule 98 (funcesp -> median .)
    STADDES         reduce using rule 98 (funcesp -> median .)
    BOXPLOT         reduce using rule 98 (funcesp -> median .)
    LINREG          reduce using rule 98 (funcesp -> median .)
    RIGHT_CUR_BRACKET reduce using rule 98 (funcesp -> median .)
    MULT            reduce using rule 98 (funcesp -> median .)
    DIV             reduce using rule 98 (funcesp -> median .)
    PLUS            reduce using rule 98 (funcesp -> median .)
    MINUS           reduce using rule 98 (funcesp -> median .)
    LESS_THAN       reduce using rule 98 (funcesp -> median .)
    GREATER_THAN    reduce using rule 98 (funcesp -> median .)
    EQUALS          reduce using rule 98 (funcesp -> median .)
    NOTEQUALS       reduce using rule 98 (funcesp -> median .)
    AND             reduce using rule 98 (funcesp -> median .)
    OR              reduce using rule 98 (funcesp -> median .)
    SEMICOLON       reduce using rule 98 (funcesp -> median .)
    COMMA           reduce using rule 98 (funcesp -> median .)
    RIGHT_PARENT    reduce using rule 98 (funcesp -> median .)
    RIGHT_SQR_BRACKET reduce using rule 98 (funcesp -> median .)


state 81

    (99) funcesp -> variance .

    ID              reduce using rule 99 (funcesp -> variance .)
    READ            reduce using rule 99 (funcesp -> variance .)
    WRITE           reduce using rule 99 (funcesp -> variance .)
    IF              reduce using rule 99 (funcesp -> variance .)
    WHILE           reduce using rule 99 (funcesp -> variance .)
    FOR             reduce using rule 99 (funcesp -> variance .)
    RETURNS         reduce using rule 99 (funcesp -> variance .)
    READ_FILE       reduce using rule 99 (funcesp -> variance .)
    MEAN            reduce using rule 99 (funcesp -> variance .)
    MODE            reduce using rule 99 (funcesp -> variance .)
    MEDIAN          reduce using rule 99 (funcesp -> variance .)
    VARIANCE        reduce using rule 99 (funcesp -> variance .)
    MAX             reduce using rule 99 (funcesp -> variance .)
    MIN             reduce using rule 99 (funcesp -> variance .)
    STADDES         reduce using rule 99 (funcesp -> variance .)
    BOXPLOT         reduce using rule 99 (funcesp -> variance .)
    LINREG          reduce using rule 99 (funcesp -> variance .)
    RIGHT_CUR_BRACKET reduce using rule 99 (funcesp -> variance .)
    MULT            reduce using rule 99 (funcesp -> variance .)
    DIV             reduce using rule 99 (funcesp -> variance .)
    PLUS            reduce using rule 99 (funcesp -> variance .)
    MINUS           reduce using rule 99 (funcesp -> variance .)
    LESS_THAN       reduce using rule 99 (funcesp -> variance .)
    GREATER_THAN    reduce using rule 99 (funcesp -> variance .)
    EQUALS          reduce using rule 99 (funcesp -> variance .)
    NOTEQUALS       reduce using rule 99 (funcesp -> variance .)
    AND             reduce using rule 99 (funcesp -> variance .)
    OR              reduce using rule 99 (funcesp -> variance .)
    SEMICOLON       reduce using rule 99 (funcesp -> variance .)
    COMMA           reduce using rule 99 (funcesp -> variance .)
    RIGHT_PARENT    reduce using rule 99 (funcesp -> variance .)
    RIGHT_SQR_BRACKET reduce using rule 99 (funcesp -> variance .)


state 82

    (100) funcesp -> max .

    ID              reduce using rule 100 (funcesp -> max .)
    READ            reduce using rule 100 (funcesp -> max .)
    WRITE           reduce using rule 100 (funcesp -> max .)
    IF              reduce using rule 100 (funcesp -> max .)
    WHILE           reduce using rule 100 (funcesp -> max .)
    FOR             reduce using rule 100 (funcesp -> max .)
    RETURNS         reduce using rule 100 (funcesp -> max .)
    READ_FILE       reduce using rule 100 (funcesp -> max .)
    MEAN            reduce using rule 100 (funcesp -> max .)
    MODE            reduce using rule 100 (funcesp -> max .)
    MEDIAN          reduce using rule 100 (funcesp -> max .)
    VARIANCE        reduce using rule 100 (funcesp -> max .)
    MAX             reduce using rule 100 (funcesp -> max .)
    MIN             reduce using rule 100 (funcesp -> max .)
    STADDES         reduce using rule 100 (funcesp -> max .)
    BOXPLOT         reduce using rule 100 (funcesp -> max .)
    LINREG          reduce using rule 100 (funcesp -> max .)
    RIGHT_CUR_BRACKET reduce using rule 100 (funcesp -> max .)
    MULT            reduce using rule 100 (funcesp -> max .)
    DIV             reduce using rule 100 (funcesp -> max .)
    PLUS            reduce using rule 100 (funcesp -> max .)
    MINUS           reduce using rule 100 (funcesp -> max .)
    LESS_THAN       reduce using rule 100 (funcesp -> max .)
    GREATER_THAN    reduce using rule 100 (funcesp -> max .)
    EQUALS          reduce using rule 100 (funcesp -> max .)
    NOTEQUALS       reduce using rule 100 (funcesp -> max .)
    AND             reduce using rule 100 (funcesp -> max .)
    OR              reduce using rule 100 (funcesp -> max .)
    SEMICOLON       reduce using rule 100 (funcesp -> max .)
    COMMA           reduce using rule 100 (funcesp -> max .)
    RIGHT_PARENT    reduce using rule 100 (funcesp -> max .)
    RIGHT_SQR_BRACKET reduce using rule 100 (funcesp -> max .)


state 83

    (101) funcesp -> min .

    ID              reduce using rule 101 (funcesp -> min .)
    READ            reduce using rule 101 (funcesp -> min .)
    WRITE           reduce using rule 101 (funcesp -> min .)
    IF              reduce using rule 101 (funcesp -> min .)
    WHILE           reduce using rule 101 (funcesp -> min .)
    FOR             reduce using rule 101 (funcesp -> min .)
    RETURNS         reduce using rule 101 (funcesp -> min .)
    READ_FILE       reduce using rule 101 (funcesp -> min .)
    MEAN            reduce using rule 101 (funcesp -> min .)
    MODE            reduce using rule 101 (funcesp -> min .)
    MEDIAN          reduce using rule 101 (funcesp -> min .)
    VARIANCE        reduce using rule 101 (funcesp -> min .)
    MAX             reduce using rule 101 (funcesp -> min .)
    MIN             reduce using rule 101 (funcesp -> min .)
    STADDES         reduce using rule 101 (funcesp -> min .)
    BOXPLOT         reduce using rule 101 (funcesp -> min .)
    LINREG          reduce using rule 101 (funcesp -> min .)
    RIGHT_CUR_BRACKET reduce using rule 101 (funcesp -> min .)
    MULT            reduce using rule 101 (funcesp -> min .)
    DIV             reduce using rule 101 (funcesp -> min .)
    PLUS            reduce using rule 101 (funcesp -> min .)
    MINUS           reduce using rule 101 (funcesp -> min .)
    LESS_THAN       reduce using rule 101 (funcesp -> min .)
    GREATER_THAN    reduce using rule 101 (funcesp -> min .)
    EQUALS          reduce using rule 101 (funcesp -> min .)
    NOTEQUALS       reduce using rule 101 (funcesp -> min .)
    AND             reduce using rule 101 (funcesp -> min .)
    OR              reduce using rule 101 (funcesp -> min .)
    SEMICOLON       reduce using rule 101 (funcesp -> min .)
    COMMA           reduce using rule 101 (funcesp -> min .)
    RIGHT_PARENT    reduce using rule 101 (funcesp -> min .)
    RIGHT_SQR_BRACKET reduce using rule 101 (funcesp -> min .)


state 84

    (102) funcesp -> staddes .

    ID              reduce using rule 102 (funcesp -> staddes .)
    READ            reduce using rule 102 (funcesp -> staddes .)
    WRITE           reduce using rule 102 (funcesp -> staddes .)
    IF              reduce using rule 102 (funcesp -> staddes .)
    WHILE           reduce using rule 102 (funcesp -> staddes .)
    FOR             reduce using rule 102 (funcesp -> staddes .)
    RETURNS         reduce using rule 102 (funcesp -> staddes .)
    READ_FILE       reduce using rule 102 (funcesp -> staddes .)
    MEAN            reduce using rule 102 (funcesp -> staddes .)
    MODE            reduce using rule 102 (funcesp -> staddes .)
    MEDIAN          reduce using rule 102 (funcesp -> staddes .)
    VARIANCE        reduce using rule 102 (funcesp -> staddes .)
    MAX             reduce using rule 102 (funcesp -> staddes .)
    MIN             reduce using rule 102 (funcesp -> staddes .)
    STADDES         reduce using rule 102 (funcesp -> staddes .)
    BOXPLOT         reduce using rule 102 (funcesp -> staddes .)
    LINREG          reduce using rule 102 (funcesp -> staddes .)
    RIGHT_CUR_BRACKET reduce using rule 102 (funcesp -> staddes .)
    MULT            reduce using rule 102 (funcesp -> staddes .)
    DIV             reduce using rule 102 (funcesp -> staddes .)
    PLUS            reduce using rule 102 (funcesp -> staddes .)
    MINUS           reduce using rule 102 (funcesp -> staddes .)
    LESS_THAN       reduce using rule 102 (funcesp -> staddes .)
    GREATER_THAN    reduce using rule 102 (funcesp -> staddes .)
    EQUALS          reduce using rule 102 (funcesp -> staddes .)
    NOTEQUALS       reduce using rule 102 (funcesp -> staddes .)
    AND             reduce using rule 102 (funcesp -> staddes .)
    OR              reduce using rule 102 (funcesp -> staddes .)
    SEMICOLON       reduce using rule 102 (funcesp -> staddes .)
    COMMA           reduce using rule 102 (funcesp -> staddes .)
    RIGHT_PARENT    reduce using rule 102 (funcesp -> staddes .)
    RIGHT_SQR_BRACKET reduce using rule 102 (funcesp -> staddes .)


state 85

    (103) funcesp -> boxplot .

    ID              reduce using rule 103 (funcesp -> boxplot .)
    READ            reduce using rule 103 (funcesp -> boxplot .)
    WRITE           reduce using rule 103 (funcesp -> boxplot .)
    IF              reduce using rule 103 (funcesp -> boxplot .)
    WHILE           reduce using rule 103 (funcesp -> boxplot .)
    FOR             reduce using rule 103 (funcesp -> boxplot .)
    RETURNS         reduce using rule 103 (funcesp -> boxplot .)
    READ_FILE       reduce using rule 103 (funcesp -> boxplot .)
    MEAN            reduce using rule 103 (funcesp -> boxplot .)
    MODE            reduce using rule 103 (funcesp -> boxplot .)
    MEDIAN          reduce using rule 103 (funcesp -> boxplot .)
    VARIANCE        reduce using rule 103 (funcesp -> boxplot .)
    MAX             reduce using rule 103 (funcesp -> boxplot .)
    MIN             reduce using rule 103 (funcesp -> boxplot .)
    STADDES         reduce using rule 103 (funcesp -> boxplot .)
    BOXPLOT         reduce using rule 103 (funcesp -> boxplot .)
    LINREG          reduce using rule 103 (funcesp -> boxplot .)
    RIGHT_CUR_BRACKET reduce using rule 103 (funcesp -> boxplot .)
    MULT            reduce using rule 103 (funcesp -> boxplot .)
    DIV             reduce using rule 103 (funcesp -> boxplot .)
    PLUS            reduce using rule 103 (funcesp -> boxplot .)
    MINUS           reduce using rule 103 (funcesp -> boxplot .)
    LESS_THAN       reduce using rule 103 (funcesp -> boxplot .)
    GREATER_THAN    reduce using rule 103 (funcesp -> boxplot .)
    EQUALS          reduce using rule 103 (funcesp -> boxplot .)
    NOTEQUALS       reduce using rule 103 (funcesp -> boxplot .)
    AND             reduce using rule 103 (funcesp -> boxplot .)
    OR              reduce using rule 103 (funcesp -> boxplot .)
    SEMICOLON       reduce using rule 103 (funcesp -> boxplot .)
    COMMA           reduce using rule 103 (funcesp -> boxplot .)
    RIGHT_PARENT    reduce using rule 103 (funcesp -> boxplot .)
    RIGHT_SQR_BRACKET reduce using rule 103 (funcesp -> boxplot .)


state 86

    (104) funcesp -> linreg .

    ID              reduce using rule 104 (funcesp -> linreg .)
    READ            reduce using rule 104 (funcesp -> linreg .)
    WRITE           reduce using rule 104 (funcesp -> linreg .)
    IF              reduce using rule 104 (funcesp -> linreg .)
    WHILE           reduce using rule 104 (funcesp -> linreg .)
    FOR             reduce using rule 104 (funcesp -> linreg .)
    RETURNS         reduce using rule 104 (funcesp -> linreg .)
    READ_FILE       reduce using rule 104 (funcesp -> linreg .)
    MEAN            reduce using rule 104 (funcesp -> linreg .)
    MODE            reduce using rule 104 (funcesp -> linreg .)
    MEDIAN          reduce using rule 104 (funcesp -> linreg .)
    VARIANCE        reduce using rule 104 (funcesp -> linreg .)
    MAX             reduce using rule 104 (funcesp -> linreg .)
    MIN             reduce using rule 104 (funcesp -> linreg .)
    STADDES         reduce using rule 104 (funcesp -> linreg .)
    BOXPLOT         reduce using rule 104 (funcesp -> linreg .)
    LINREG          reduce using rule 104 (funcesp -> linreg .)
    RIGHT_CUR_BRACKET reduce using rule 104 (funcesp -> linreg .)
    MULT            reduce using rule 104 (funcesp -> linreg .)
    DIV             reduce using rule 104 (funcesp -> linreg .)
    PLUS            reduce using rule 104 (funcesp -> linreg .)
    MINUS           reduce using rule 104 (funcesp -> linreg .)
    LESS_THAN       reduce using rule 104 (funcesp -> linreg .)
    GREATER_THAN    reduce using rule 104 (funcesp -> linreg .)
    EQUALS          reduce using rule 104 (funcesp -> linreg .)
    NOTEQUALS       reduce using rule 104 (funcesp -> linreg .)
    AND             reduce using rule 104 (funcesp -> linreg .)
    OR              reduce using rule 104 (funcesp -> linreg .)
    SEMICOLON       reduce using rule 104 (funcesp -> linreg .)
    COMMA           reduce using rule 104 (funcesp -> linreg .)
    RIGHT_PARENT    reduce using rule 104 (funcesp -> linreg .)
    RIGHT_SQR_BRACKET reduce using rule 104 (funcesp -> linreg .)


state 87

    (61) return -> RETURNS . exp SEMICOLON
    (62) exp -> . exprel logic
    (67) exprel -> . e relacionalp
    (74) e -> . t tp
    (79) t -> . f fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI
    (86) f -> . CTEF
    (87) f -> . CTEC
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 116
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 88

    (14) copy -> READ_FILE . LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 130


state 89

    (106) mean -> MEAN . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 131


state 90

    (107) mode -> MODE . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 132


state 91

    (108) median -> MEDIAN . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 133


state 92

    (109) variance -> VARIANCE . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 134


state 93

    (110) max -> MAX . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 135


state 94

    (111) min -> MIN . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 136


state 95

    (112) staddes -> STADDES . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 137


state 96

    (113) boxplot -> BOXPLOT . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 138


state 97

    (114) linreg -> LINREG . LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 139


state 98

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT . pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (117) pnCheckTablaVar -> . empty
    (123) empty -> .

    DATAFRAME       reduce using rule 123 (empty -> .)
    INT             reduce using rule 123 (empty -> .)
    FLOAT           reduce using rule 123 (empty -> .)
    CHAR            reduce using rule 123 (empty -> .)
    RIGHT_PARENT    reduce using rule 123 (empty -> .)

    pnCheckTablaVar                shift and go to state 140
    empty                          shift and go to state 19

state 99

    (33) idp -> ID pnCheckNameTablaVar idpp .

    SEMICOLON       reduce using rule 33 (idp -> ID pnCheckNameTablaVar idpp .)


state 100

    (34) idpp -> COMMA . ID pnCheckNameTablaVar idpp

    ID              shift and go to state 141


state 101

    (35) idpp -> empty .

    SEMICOLON       reduce using rule 35 (idpp -> empty .)


state 102

    (29) vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET .

    ARROW           reduce using rule 29 (vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET .)


state 103

    (31) vpp -> COMMA CTEI .

    RIGHT_SQR_BRACKET reduce using rule 31 (vpp -> COMMA CTEI .)


state 104

    (6) bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET . pnEndScript
    (122) pnEndScript -> . empty
    (123) empty -> .

    $end            reduce using rule 123 (empty -> .)

    pnEndScript                    shift and go to state 142
    empty                          shift and go to state 143

state 105

    (7) estatutop -> estatuto estatutop .

    RIGHT_CUR_BRACKET reduce using rule 7 (estatutop -> estatuto estatutop .)


state 106

    (56) asign -> variable ASIGN . exp SEMICOLON
    (62) exp -> . exprel logic
    (67) exprel -> . e relacionalp
    (74) e -> . t tp
    (79) t -> . f fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI
    (86) f -> . CTEF
    (87) f -> . CTEC
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    variable                       shift and go to state 125
    exp                            shift and go to state 144
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 107

    (21) llamada -> ID LEFT_PARENT . expp RIGHT_PARENT SEMICOLON
    (22) expp -> . exp exppp
    (23) expp -> . empty
    (62) exp -> . exprel logic
    (123) empty -> .
    (67) exprel -> . e relacionalp
    (74) e -> . t tp
    (79) t -> . f fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI
    (86) f -> . CTEF
    (87) f -> . CTEC
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    reduce using rule 123 (empty -> .)
    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    expp                           shift and go to state 145
    exp                            shift and go to state 146
    empty                          shift and go to state 147
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 108

    (16) variable -> ID indexp .

    ASIGN           reduce using rule 16 (variable -> ID indexp .)
    MULT            reduce using rule 16 (variable -> ID indexp .)
    DIV             reduce using rule 16 (variable -> ID indexp .)
    PLUS            reduce using rule 16 (variable -> ID indexp .)
    MINUS           reduce using rule 16 (variable -> ID indexp .)
    LESS_THAN       reduce using rule 16 (variable -> ID indexp .)
    GREATER_THAN    reduce using rule 16 (variable -> ID indexp .)
    EQUALS          reduce using rule 16 (variable -> ID indexp .)
    NOTEQUALS       reduce using rule 16 (variable -> ID indexp .)
    AND             reduce using rule 16 (variable -> ID indexp .)
    OR              reduce using rule 16 (variable -> ID indexp .)
    SEMICOLON       reduce using rule 16 (variable -> ID indexp .)
    COMMA           reduce using rule 16 (variable -> ID indexp .)
    RIGHT_PARENT    reduce using rule 16 (variable -> ID indexp .)
    RIGHT_SQR_BRACKET reduce using rule 16 (variable -> ID indexp .)


state 109

    (17) indexp -> LEFT_SQR_BRACKET . exp indexpp RIGHT_SQR_BRACKET
    (62) exp -> . exprel logic
    (67) exprel -> . e relacionalp
    (74) e -> . t tp
    (79) t -> . f fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI
    (86) f -> . CTEF
    (87) f -> . CTEC
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 148
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 110

    (18) indexp -> empty .

    ASIGN           reduce using rule 18 (indexp -> empty .)
    MULT            reduce using rule 18 (indexp -> empty .)
    DIV             reduce using rule 18 (indexp -> empty .)
    PLUS            reduce using rule 18 (indexp -> empty .)
    MINUS           reduce using rule 18 (indexp -> empty .)
    LESS_THAN       reduce using rule 18 (indexp -> empty .)
    GREATER_THAN    reduce using rule 18 (indexp -> empty .)
    EQUALS          reduce using rule 18 (indexp -> empty .)
    NOTEQUALS       reduce using rule 18 (indexp -> empty .)
    AND             reduce using rule 18 (indexp -> empty .)
    OR              reduce using rule 18 (indexp -> empty .)
    SEMICOLON       reduce using rule 18 (indexp -> empty .)
    COMMA           reduce using rule 18 (indexp -> empty .)
    RIGHT_PARENT    reduce using rule 18 (indexp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 18 (indexp -> empty .)


state 111

    (57) lee -> READ LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 150

    variable                       shift and go to state 149

state 112

    (58) escribe -> WRITE LEFT_PARENT . escribep RIGHT_PARENT SEMICOLON
    (59) escribep -> . exp
    (60) escribep -> . LETRERO
    (62) exp -> . exprel logic
    (67) exprel -> . e relacionalp
    (74) e -> . t tp
    (79) t -> . f fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI
    (86) f -> . CTEF
    (87) f -> . CTEC
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LETRERO         shift and go to state 153
    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    escribep                       shift and go to state 151
    exp                            shift and go to state 152
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 113

    (91) condicion -> IF LEFT_PARENT . exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (62) exp -> . exprel logic
    (67) exprel -> . e relacionalp
    (74) e -> . t tp
    (79) t -> . f fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI
    (86) f -> . CTEF
    (87) f -> . CTEC
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 154
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 114

    (94) ciclow -> WHILE LEFT_PARENT . exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (62) exp -> . exprel logic
    (67) exprel -> . e relacionalp
    (74) e -> . t tp
    (79) t -> . f fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI
    (86) f -> . CTEF
    (87) f -> . CTEC
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 155
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 115

    (95) ciclof -> FOR LEFT_PARENT . asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (56) asign -> . variable ASIGN exp SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 150

    asign                          shift and go to state 156
    variable                       shift and go to state 71

state 116

    (61) return -> RETURNS exp . SEMICOLON

    SEMICOLON       shift and go to state 157


state 117

    (62) exp -> exprel . logic
    (63) logic -> . logicsig exprel logic
    (64) logic -> . empty
    (65) logicsig -> . AND
    (66) logicsig -> . OR
    (123) empty -> .

    AND             shift and go to state 161
    OR              shift and go to state 162
    SEMICOLON       reduce using rule 123 (empty -> .)
    COMMA           reduce using rule 123 (empty -> .)
    RIGHT_PARENT    reduce using rule 123 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 123 (empty -> .)

    logic                          shift and go to state 158
    logicsig                       shift and go to state 159
    empty                          shift and go to state 160

state 118

    (67) exprel -> e . relacionalp
    (68) relacionalp -> . relsig e relacionalp
    (69) relacionalp -> . empty
    (70) relsig -> . LESS_THAN
    (71) relsig -> . GREATER_THAN
    (72) relsig -> . EQUALS
    (73) relsig -> . NOTEQUALS
    (123) empty -> .

    LESS_THAN       shift and go to state 166
    GREATER_THAN    shift and go to state 167
    EQUALS          shift and go to state 168
    NOTEQUALS       shift and go to state 169
    AND             reduce using rule 123 (empty -> .)
    OR              reduce using rule 123 (empty -> .)
    SEMICOLON       reduce using rule 123 (empty -> .)
    COMMA           reduce using rule 123 (empty -> .)
    RIGHT_PARENT    reduce using rule 123 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 123 (empty -> .)

    relacionalp                    shift and go to state 163
    relsig                         shift and go to state 164
    empty                          shift and go to state 165

state 119

    (74) e -> t . tp
    (75) tp -> . tsig t tp
    (76) tp -> . empty
    (77) tsig -> . PLUS
    (78) tsig -> . MINUS
    (123) empty -> .

    PLUS            shift and go to state 173
    MINUS           shift and go to state 174
    LESS_THAN       reduce using rule 123 (empty -> .)
    GREATER_THAN    reduce using rule 123 (empty -> .)
    EQUALS          reduce using rule 123 (empty -> .)
    NOTEQUALS       reduce using rule 123 (empty -> .)
    AND             reduce using rule 123 (empty -> .)
    OR              reduce using rule 123 (empty -> .)
    SEMICOLON       reduce using rule 123 (empty -> .)
    COMMA           reduce using rule 123 (empty -> .)
    RIGHT_PARENT    reduce using rule 123 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 123 (empty -> .)

    tp                             shift and go to state 170
    tsig                           shift and go to state 171
    empty                          shift and go to state 172

state 120

    (79) t -> f . fp
    (80) fp -> . fsig f fp
    (81) fp -> . empty
    (82) fsig -> . MULT
    (83) fsig -> . DIV
    (123) empty -> .

    MULT            shift and go to state 178
    DIV             shift and go to state 179
    PLUS            reduce using rule 123 (empty -> .)
    MINUS           reduce using rule 123 (empty -> .)
    LESS_THAN       reduce using rule 123 (empty -> .)
    GREATER_THAN    reduce using rule 123 (empty -> .)
    EQUALS          reduce using rule 123 (empty -> .)
    NOTEQUALS       reduce using rule 123 (empty -> .)
    AND             reduce using rule 123 (empty -> .)
    OR              reduce using rule 123 (empty -> .)
    SEMICOLON       reduce using rule 123 (empty -> .)
    COMMA           reduce using rule 123 (empty -> .)
    RIGHT_PARENT    reduce using rule 123 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 123 (empty -> .)

    fp                             shift and go to state 175
    fsig                           shift and go to state 176
    empty                          shift and go to state 177

state 121

    (84) f -> LEFT_PARENT . exp RIGHT_PARENT
    (62) exp -> . exprel logic
    (67) exprel -> . e relacionalp
    (74) e -> . t tp
    (79) t -> . f fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI
    (86) f -> . CTEF
    (87) f -> . CTEC
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 180
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 122

    (85) f -> CTEI .

    MULT            reduce using rule 85 (f -> CTEI .)
    DIV             reduce using rule 85 (f -> CTEI .)
    PLUS            reduce using rule 85 (f -> CTEI .)
    MINUS           reduce using rule 85 (f -> CTEI .)
    LESS_THAN       reduce using rule 85 (f -> CTEI .)
    GREATER_THAN    reduce using rule 85 (f -> CTEI .)
    EQUALS          reduce using rule 85 (f -> CTEI .)
    NOTEQUALS       reduce using rule 85 (f -> CTEI .)
    AND             reduce using rule 85 (f -> CTEI .)
    OR              reduce using rule 85 (f -> CTEI .)
    SEMICOLON       reduce using rule 85 (f -> CTEI .)
    COMMA           reduce using rule 85 (f -> CTEI .)
    RIGHT_PARENT    reduce using rule 85 (f -> CTEI .)
    RIGHT_SQR_BRACKET reduce using rule 85 (f -> CTEI .)


state 123

    (86) f -> CTEF .

    MULT            reduce using rule 86 (f -> CTEF .)
    DIV             reduce using rule 86 (f -> CTEF .)
    PLUS            reduce using rule 86 (f -> CTEF .)
    MINUS           reduce using rule 86 (f -> CTEF .)
    LESS_THAN       reduce using rule 86 (f -> CTEF .)
    GREATER_THAN    reduce using rule 86 (f -> CTEF .)
    EQUALS          reduce using rule 86 (f -> CTEF .)
    NOTEQUALS       reduce using rule 86 (f -> CTEF .)
    AND             reduce using rule 86 (f -> CTEF .)
    OR              reduce using rule 86 (f -> CTEF .)
    SEMICOLON       reduce using rule 86 (f -> CTEF .)
    COMMA           reduce using rule 86 (f -> CTEF .)
    RIGHT_PARENT    reduce using rule 86 (f -> CTEF .)
    RIGHT_SQR_BRACKET reduce using rule 86 (f -> CTEF .)


state 124

    (87) f -> CTEC .

    MULT            reduce using rule 87 (f -> CTEC .)
    DIV             reduce using rule 87 (f -> CTEC .)
    PLUS            reduce using rule 87 (f -> CTEC .)
    MINUS           reduce using rule 87 (f -> CTEC .)
    LESS_THAN       reduce using rule 87 (f -> CTEC .)
    GREATER_THAN    reduce using rule 87 (f -> CTEC .)
    EQUALS          reduce using rule 87 (f -> CTEC .)
    NOTEQUALS       reduce using rule 87 (f -> CTEC .)
    AND             reduce using rule 87 (f -> CTEC .)
    OR              reduce using rule 87 (f -> CTEC .)
    SEMICOLON       reduce using rule 87 (f -> CTEC .)
    COMMA           reduce using rule 87 (f -> CTEC .)
    RIGHT_PARENT    reduce using rule 87 (f -> CTEC .)
    RIGHT_SQR_BRACKET reduce using rule 87 (f -> CTEC .)


state 125

    (88) f -> variable .

    MULT            reduce using rule 88 (f -> variable .)
    DIV             reduce using rule 88 (f -> variable .)
    PLUS            reduce using rule 88 (f -> variable .)
    MINUS           reduce using rule 88 (f -> variable .)
    LESS_THAN       reduce using rule 88 (f -> variable .)
    GREATER_THAN    reduce using rule 88 (f -> variable .)
    EQUALS          reduce using rule 88 (f -> variable .)
    NOTEQUALS       reduce using rule 88 (f -> variable .)
    AND             reduce using rule 88 (f -> variable .)
    OR              reduce using rule 88 (f -> variable .)
    SEMICOLON       reduce using rule 88 (f -> variable .)
    COMMA           reduce using rule 88 (f -> variable .)
    RIGHT_PARENT    reduce using rule 88 (f -> variable .)
    RIGHT_SQR_BRACKET reduce using rule 88 (f -> variable .)


state 126

    (89) f -> llamada .

    MULT            reduce using rule 89 (f -> llamada .)
    DIV             reduce using rule 89 (f -> llamada .)
    PLUS            reduce using rule 89 (f -> llamada .)
    MINUS           reduce using rule 89 (f -> llamada .)
    LESS_THAN       reduce using rule 89 (f -> llamada .)
    GREATER_THAN    reduce using rule 89 (f -> llamada .)
    EQUALS          reduce using rule 89 (f -> llamada .)
    NOTEQUALS       reduce using rule 89 (f -> llamada .)
    AND             reduce using rule 89 (f -> llamada .)
    OR              reduce using rule 89 (f -> llamada .)
    SEMICOLON       reduce using rule 89 (f -> llamada .)
    COMMA           reduce using rule 89 (f -> llamada .)
    RIGHT_PARENT    reduce using rule 89 (f -> llamada .)
    RIGHT_SQR_BRACKET reduce using rule 89 (f -> llamada .)


state 127

    (90) f -> funcesp .

    MULT            reduce using rule 90 (f -> funcesp .)
    DIV             reduce using rule 90 (f -> funcesp .)
    PLUS            reduce using rule 90 (f -> funcesp .)
    MINUS           reduce using rule 90 (f -> funcesp .)
    LESS_THAN       reduce using rule 90 (f -> funcesp .)
    GREATER_THAN    reduce using rule 90 (f -> funcesp .)
    EQUALS          reduce using rule 90 (f -> funcesp .)
    NOTEQUALS       reduce using rule 90 (f -> funcesp .)
    AND             reduce using rule 90 (f -> funcesp .)
    OR              reduce using rule 90 (f -> funcesp .)
    SEMICOLON       reduce using rule 90 (f -> funcesp .)
    COMMA           reduce using rule 90 (f -> funcesp .)
    RIGHT_PARENT    reduce using rule 90 (f -> funcesp .)
    RIGHT_SQR_BRACKET reduce using rule 90 (f -> funcesp .)


state 128

    (16) variable -> ID . indexp
    (21) llamada -> ID . LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (17) indexp -> . LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET
    (18) indexp -> . empty
    (123) empty -> .

    LEFT_PARENT     shift and go to state 107
    LEFT_SQR_BRACKET shift and go to state 109
    MULT            reduce using rule 123 (empty -> .)
    DIV             reduce using rule 123 (empty -> .)
    PLUS            reduce using rule 123 (empty -> .)
    MINUS           reduce using rule 123 (empty -> .)
    LESS_THAN       reduce using rule 123 (empty -> .)
    GREATER_THAN    reduce using rule 123 (empty -> .)
    EQUALS          reduce using rule 123 (empty -> .)
    NOTEQUALS       reduce using rule 123 (empty -> .)
    AND             reduce using rule 123 (empty -> .)
    OR              reduce using rule 123 (empty -> .)
    SEMICOLON       reduce using rule 123 (empty -> .)
    COMMA           reduce using rule 123 (empty -> .)
    RIGHT_PARENT    reduce using rule 123 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 123 (empty -> .)

    indexp                         shift and go to state 108
    empty                          shift and go to state 110

state 129

    (105) funcesp -> copy .

    MULT            reduce using rule 105 (funcesp -> copy .)
    DIV             reduce using rule 105 (funcesp -> copy .)
    PLUS            reduce using rule 105 (funcesp -> copy .)
    MINUS           reduce using rule 105 (funcesp -> copy .)
    LESS_THAN       reduce using rule 105 (funcesp -> copy .)
    GREATER_THAN    reduce using rule 105 (funcesp -> copy .)
    EQUALS          reduce using rule 105 (funcesp -> copy .)
    NOTEQUALS       reduce using rule 105 (funcesp -> copy .)
    AND             reduce using rule 105 (funcesp -> copy .)
    OR              reduce using rule 105 (funcesp -> copy .)
    SEMICOLON       reduce using rule 105 (funcesp -> copy .)
    COMMA           reduce using rule 105 (funcesp -> copy .)
    RIGHT_PARENT    reduce using rule 105 (funcesp -> copy .)
    RIGHT_SQR_BRACKET reduce using rule 105 (funcesp -> copy .)


state 130

    (14) copy -> READ_FILE LEFT_PARENT . LETRERO RIGHT_PARENT SEMICOLON

    LETRERO         shift and go to state 181


state 131

    (106) mean -> MEAN LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 150

    variable                       shift and go to state 182

state 132

    (107) mode -> MODE LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 150

    variable                       shift and go to state 183

state 133

    (108) median -> MEDIAN LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 150

    variable                       shift and go to state 184

state 134

    (109) variance -> VARIANCE LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 150

    variable                       shift and go to state 185

state 135

    (110) max -> MAX LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 150

    variable                       shift and go to state 186

state 136

    (111) min -> MIN LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 150

    variable                       shift and go to state 187

state 137

    (112) staddes -> STADDES LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 150

    variable                       shift and go to state 188

state 138

    (113) boxplot -> BOXPLOT LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 150

    variable                       shift and go to state 189

state 139

    (114) linreg -> LINREG LEFT_PARENT . variable RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp

    ID              shift and go to state 150

    variable                       shift and go to state 190

state 140

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar . param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (39) param -> . paramlist
    (40) param -> . empty
    (41) paramlist -> . tipoparam ARROW ID paramlistp
    (123) empty -> .
    (42) tipoparam -> . tipo_simp
    (43) tipoparam -> . DATAFRAME
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    RIGHT_PARENT    reduce using rule 123 (empty -> .)
    DATAFRAME       shift and go to state 196
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28

    param                          shift and go to state 191
    paramlist                      shift and go to state 192
    empty                          shift and go to state 193
    tipoparam                      shift and go to state 194
    tipo_simp                      shift and go to state 195

state 141

    (34) idpp -> COMMA ID . pnCheckNameTablaVar idpp
    (119) pnCheckNameTablaVar -> . empty
    (123) empty -> .

    COMMA           reduce using rule 123 (empty -> .)
    SEMICOLON       reduce using rule 123 (empty -> .)

    pnCheckNameTablaVar            shift and go to state 197
    empty                          shift and go to state 54

state 142

    (6) bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript .

    $end            reduce using rule 6 (bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript .)


state 143

    (122) pnEndScript -> empty .

    $end            reduce using rule 122 (pnEndScript -> empty .)


state 144

    (56) asign -> variable ASIGN exp . SEMICOLON

    SEMICOLON       shift and go to state 198


state 145

    (21) llamada -> ID LEFT_PARENT expp . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 199


state 146

    (22) expp -> exp . exppp
    (24) exppp -> . COMMA exp exppp
    (25) exppp -> . empty
    (123) empty -> .

    COMMA           shift and go to state 201
    RIGHT_PARENT    reduce using rule 123 (empty -> .)

    exppp                          shift and go to state 200
    empty                          shift and go to state 202

state 147

    (23) expp -> empty .

    RIGHT_PARENT    reduce using rule 23 (expp -> empty .)


state 148

    (17) indexp -> LEFT_SQR_BRACKET exp . indexpp RIGHT_SQR_BRACKET
    (19) indexpp -> . COMMA exp
    (20) indexpp -> . empty
    (123) empty -> .

    COMMA           shift and go to state 204
    RIGHT_SQR_BRACKET reduce using rule 123 (empty -> .)

    indexpp                        shift and go to state 203
    empty                          shift and go to state 205

state 149

    (57) lee -> READ LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 206


state 150

    (16) variable -> ID . indexp
    (17) indexp -> . LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET
    (18) indexp -> . empty
    (123) empty -> .

    LEFT_SQR_BRACKET shift and go to state 109
    RIGHT_PARENT    reduce using rule 123 (empty -> .)
    ASIGN           reduce using rule 123 (empty -> .)

    indexp                         shift and go to state 108
    empty                          shift and go to state 110

state 151

    (58) escribe -> WRITE LEFT_PARENT escribep . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 207


state 152

    (59) escribep -> exp .

    RIGHT_PARENT    reduce using rule 59 (escribep -> exp .)


state 153

    (60) escribep -> LETRERO .

    RIGHT_PARENT    reduce using rule 60 (escribep -> LETRERO .)


state 154

    (91) condicion -> IF LEFT_PARENT exp . RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop

    RIGHT_PARENT    shift and go to state 208


state 155

    (94) ciclow -> WHILE LEFT_PARENT exp . RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    RIGHT_PARENT    shift and go to state 209


state 156

    (95) ciclof -> FOR LEFT_PARENT asign . exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (62) exp -> . exprel logic
    (67) exprel -> . e relacionalp
    (74) e -> . t tp
    (79) t -> . f fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI
    (86) f -> . CTEF
    (87) f -> . CTEC
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 210
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 157

    (61) return -> RETURNS exp SEMICOLON .

    ID              reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    READ            reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    WRITE           reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    IF              reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    WHILE           reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    FOR             reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    RETURNS         reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    READ_FILE       reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MEAN            reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MODE            reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MEDIAN          reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    VARIANCE        reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MAX             reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    MIN             reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    STADDES         reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    BOXPLOT         reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    LINREG          reduce using rule 61 (return -> RETURNS exp SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 61 (return -> RETURNS exp SEMICOLON .)


state 158

    (62) exp -> exprel logic .

    SEMICOLON       reduce using rule 62 (exp -> exprel logic .)
    COMMA           reduce using rule 62 (exp -> exprel logic .)
    RIGHT_PARENT    reduce using rule 62 (exp -> exprel logic .)
    RIGHT_SQR_BRACKET reduce using rule 62 (exp -> exprel logic .)


state 159

    (63) logic -> logicsig . exprel logic
    (67) exprel -> . e relacionalp
    (74) e -> . t tp
    (79) t -> . f fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI
    (86) f -> . CTEF
    (87) f -> . CTEC
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exprel                         shift and go to state 211
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 160

    (64) logic -> empty .

    SEMICOLON       reduce using rule 64 (logic -> empty .)
    COMMA           reduce using rule 64 (logic -> empty .)
    RIGHT_PARENT    reduce using rule 64 (logic -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 64 (logic -> empty .)


state 161

    (65) logicsig -> AND .

    LEFT_PARENT     reduce using rule 65 (logicsig -> AND .)
    CTEI            reduce using rule 65 (logicsig -> AND .)
    CTEF            reduce using rule 65 (logicsig -> AND .)
    CTEC            reduce using rule 65 (logicsig -> AND .)
    ID              reduce using rule 65 (logicsig -> AND .)
    MEAN            reduce using rule 65 (logicsig -> AND .)
    MODE            reduce using rule 65 (logicsig -> AND .)
    MEDIAN          reduce using rule 65 (logicsig -> AND .)
    VARIANCE        reduce using rule 65 (logicsig -> AND .)
    MAX             reduce using rule 65 (logicsig -> AND .)
    MIN             reduce using rule 65 (logicsig -> AND .)
    STADDES         reduce using rule 65 (logicsig -> AND .)
    BOXPLOT         reduce using rule 65 (logicsig -> AND .)
    LINREG          reduce using rule 65 (logicsig -> AND .)
    READ_FILE       reduce using rule 65 (logicsig -> AND .)


state 162

    (66) logicsig -> OR .

    LEFT_PARENT     reduce using rule 66 (logicsig -> OR .)
    CTEI            reduce using rule 66 (logicsig -> OR .)
    CTEF            reduce using rule 66 (logicsig -> OR .)
    CTEC            reduce using rule 66 (logicsig -> OR .)
    ID              reduce using rule 66 (logicsig -> OR .)
    MEAN            reduce using rule 66 (logicsig -> OR .)
    MODE            reduce using rule 66 (logicsig -> OR .)
    MEDIAN          reduce using rule 66 (logicsig -> OR .)
    VARIANCE        reduce using rule 66 (logicsig -> OR .)
    MAX             reduce using rule 66 (logicsig -> OR .)
    MIN             reduce using rule 66 (logicsig -> OR .)
    STADDES         reduce using rule 66 (logicsig -> OR .)
    BOXPLOT         reduce using rule 66 (logicsig -> OR .)
    LINREG          reduce using rule 66 (logicsig -> OR .)
    READ_FILE       reduce using rule 66 (logicsig -> OR .)


state 163

    (67) exprel -> e relacionalp .

    AND             reduce using rule 67 (exprel -> e relacionalp .)
    OR              reduce using rule 67 (exprel -> e relacionalp .)
    SEMICOLON       reduce using rule 67 (exprel -> e relacionalp .)
    COMMA           reduce using rule 67 (exprel -> e relacionalp .)
    RIGHT_PARENT    reduce using rule 67 (exprel -> e relacionalp .)
    RIGHT_SQR_BRACKET reduce using rule 67 (exprel -> e relacionalp .)


state 164

    (68) relacionalp -> relsig . e relacionalp
    (74) e -> . t tp
    (79) t -> . f fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI
    (86) f -> . CTEF
    (87) f -> . CTEC
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    e                              shift and go to state 212
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 165

    (69) relacionalp -> empty .

    AND             reduce using rule 69 (relacionalp -> empty .)
    OR              reduce using rule 69 (relacionalp -> empty .)
    SEMICOLON       reduce using rule 69 (relacionalp -> empty .)
    COMMA           reduce using rule 69 (relacionalp -> empty .)
    RIGHT_PARENT    reduce using rule 69 (relacionalp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 69 (relacionalp -> empty .)


state 166

    (70) relsig -> LESS_THAN .

    LEFT_PARENT     reduce using rule 70 (relsig -> LESS_THAN .)
    CTEI            reduce using rule 70 (relsig -> LESS_THAN .)
    CTEF            reduce using rule 70 (relsig -> LESS_THAN .)
    CTEC            reduce using rule 70 (relsig -> LESS_THAN .)
    ID              reduce using rule 70 (relsig -> LESS_THAN .)
    MEAN            reduce using rule 70 (relsig -> LESS_THAN .)
    MODE            reduce using rule 70 (relsig -> LESS_THAN .)
    MEDIAN          reduce using rule 70 (relsig -> LESS_THAN .)
    VARIANCE        reduce using rule 70 (relsig -> LESS_THAN .)
    MAX             reduce using rule 70 (relsig -> LESS_THAN .)
    MIN             reduce using rule 70 (relsig -> LESS_THAN .)
    STADDES         reduce using rule 70 (relsig -> LESS_THAN .)
    BOXPLOT         reduce using rule 70 (relsig -> LESS_THAN .)
    LINREG          reduce using rule 70 (relsig -> LESS_THAN .)
    READ_FILE       reduce using rule 70 (relsig -> LESS_THAN .)


state 167

    (71) relsig -> GREATER_THAN .

    LEFT_PARENT     reduce using rule 71 (relsig -> GREATER_THAN .)
    CTEI            reduce using rule 71 (relsig -> GREATER_THAN .)
    CTEF            reduce using rule 71 (relsig -> GREATER_THAN .)
    CTEC            reduce using rule 71 (relsig -> GREATER_THAN .)
    ID              reduce using rule 71 (relsig -> GREATER_THAN .)
    MEAN            reduce using rule 71 (relsig -> GREATER_THAN .)
    MODE            reduce using rule 71 (relsig -> GREATER_THAN .)
    MEDIAN          reduce using rule 71 (relsig -> GREATER_THAN .)
    VARIANCE        reduce using rule 71 (relsig -> GREATER_THAN .)
    MAX             reduce using rule 71 (relsig -> GREATER_THAN .)
    MIN             reduce using rule 71 (relsig -> GREATER_THAN .)
    STADDES         reduce using rule 71 (relsig -> GREATER_THAN .)
    BOXPLOT         reduce using rule 71 (relsig -> GREATER_THAN .)
    LINREG          reduce using rule 71 (relsig -> GREATER_THAN .)
    READ_FILE       reduce using rule 71 (relsig -> GREATER_THAN .)


state 168

    (72) relsig -> EQUALS .

    LEFT_PARENT     reduce using rule 72 (relsig -> EQUALS .)
    CTEI            reduce using rule 72 (relsig -> EQUALS .)
    CTEF            reduce using rule 72 (relsig -> EQUALS .)
    CTEC            reduce using rule 72 (relsig -> EQUALS .)
    ID              reduce using rule 72 (relsig -> EQUALS .)
    MEAN            reduce using rule 72 (relsig -> EQUALS .)
    MODE            reduce using rule 72 (relsig -> EQUALS .)
    MEDIAN          reduce using rule 72 (relsig -> EQUALS .)
    VARIANCE        reduce using rule 72 (relsig -> EQUALS .)
    MAX             reduce using rule 72 (relsig -> EQUALS .)
    MIN             reduce using rule 72 (relsig -> EQUALS .)
    STADDES         reduce using rule 72 (relsig -> EQUALS .)
    BOXPLOT         reduce using rule 72 (relsig -> EQUALS .)
    LINREG          reduce using rule 72 (relsig -> EQUALS .)
    READ_FILE       reduce using rule 72 (relsig -> EQUALS .)


state 169

    (73) relsig -> NOTEQUALS .

    LEFT_PARENT     reduce using rule 73 (relsig -> NOTEQUALS .)
    CTEI            reduce using rule 73 (relsig -> NOTEQUALS .)
    CTEF            reduce using rule 73 (relsig -> NOTEQUALS .)
    CTEC            reduce using rule 73 (relsig -> NOTEQUALS .)
    ID              reduce using rule 73 (relsig -> NOTEQUALS .)
    MEAN            reduce using rule 73 (relsig -> NOTEQUALS .)
    MODE            reduce using rule 73 (relsig -> NOTEQUALS .)
    MEDIAN          reduce using rule 73 (relsig -> NOTEQUALS .)
    VARIANCE        reduce using rule 73 (relsig -> NOTEQUALS .)
    MAX             reduce using rule 73 (relsig -> NOTEQUALS .)
    MIN             reduce using rule 73 (relsig -> NOTEQUALS .)
    STADDES         reduce using rule 73 (relsig -> NOTEQUALS .)
    BOXPLOT         reduce using rule 73 (relsig -> NOTEQUALS .)
    LINREG          reduce using rule 73 (relsig -> NOTEQUALS .)
    READ_FILE       reduce using rule 73 (relsig -> NOTEQUALS .)


state 170

    (74) e -> t tp .

    LESS_THAN       reduce using rule 74 (e -> t tp .)
    GREATER_THAN    reduce using rule 74 (e -> t tp .)
    EQUALS          reduce using rule 74 (e -> t tp .)
    NOTEQUALS       reduce using rule 74 (e -> t tp .)
    AND             reduce using rule 74 (e -> t tp .)
    OR              reduce using rule 74 (e -> t tp .)
    SEMICOLON       reduce using rule 74 (e -> t tp .)
    COMMA           reduce using rule 74 (e -> t tp .)
    RIGHT_PARENT    reduce using rule 74 (e -> t tp .)
    RIGHT_SQR_BRACKET reduce using rule 74 (e -> t tp .)


state 171

    (75) tp -> tsig . t tp
    (79) t -> . f fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI
    (86) f -> . CTEF
    (87) f -> . CTEC
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    t                              shift and go to state 213
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 172

    (76) tp -> empty .

    LESS_THAN       reduce using rule 76 (tp -> empty .)
    GREATER_THAN    reduce using rule 76 (tp -> empty .)
    EQUALS          reduce using rule 76 (tp -> empty .)
    NOTEQUALS       reduce using rule 76 (tp -> empty .)
    AND             reduce using rule 76 (tp -> empty .)
    OR              reduce using rule 76 (tp -> empty .)
    SEMICOLON       reduce using rule 76 (tp -> empty .)
    COMMA           reduce using rule 76 (tp -> empty .)
    RIGHT_PARENT    reduce using rule 76 (tp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 76 (tp -> empty .)


state 173

    (77) tsig -> PLUS .

    LEFT_PARENT     reduce using rule 77 (tsig -> PLUS .)
    CTEI            reduce using rule 77 (tsig -> PLUS .)
    CTEF            reduce using rule 77 (tsig -> PLUS .)
    CTEC            reduce using rule 77 (tsig -> PLUS .)
    ID              reduce using rule 77 (tsig -> PLUS .)
    MEAN            reduce using rule 77 (tsig -> PLUS .)
    MODE            reduce using rule 77 (tsig -> PLUS .)
    MEDIAN          reduce using rule 77 (tsig -> PLUS .)
    VARIANCE        reduce using rule 77 (tsig -> PLUS .)
    MAX             reduce using rule 77 (tsig -> PLUS .)
    MIN             reduce using rule 77 (tsig -> PLUS .)
    STADDES         reduce using rule 77 (tsig -> PLUS .)
    BOXPLOT         reduce using rule 77 (tsig -> PLUS .)
    LINREG          reduce using rule 77 (tsig -> PLUS .)
    READ_FILE       reduce using rule 77 (tsig -> PLUS .)


state 174

    (78) tsig -> MINUS .

    LEFT_PARENT     reduce using rule 78 (tsig -> MINUS .)
    CTEI            reduce using rule 78 (tsig -> MINUS .)
    CTEF            reduce using rule 78 (tsig -> MINUS .)
    CTEC            reduce using rule 78 (tsig -> MINUS .)
    ID              reduce using rule 78 (tsig -> MINUS .)
    MEAN            reduce using rule 78 (tsig -> MINUS .)
    MODE            reduce using rule 78 (tsig -> MINUS .)
    MEDIAN          reduce using rule 78 (tsig -> MINUS .)
    VARIANCE        reduce using rule 78 (tsig -> MINUS .)
    MAX             reduce using rule 78 (tsig -> MINUS .)
    MIN             reduce using rule 78 (tsig -> MINUS .)
    STADDES         reduce using rule 78 (tsig -> MINUS .)
    BOXPLOT         reduce using rule 78 (tsig -> MINUS .)
    LINREG          reduce using rule 78 (tsig -> MINUS .)
    READ_FILE       reduce using rule 78 (tsig -> MINUS .)


state 175

    (79) t -> f fp .

    PLUS            reduce using rule 79 (t -> f fp .)
    MINUS           reduce using rule 79 (t -> f fp .)
    LESS_THAN       reduce using rule 79 (t -> f fp .)
    GREATER_THAN    reduce using rule 79 (t -> f fp .)
    EQUALS          reduce using rule 79 (t -> f fp .)
    NOTEQUALS       reduce using rule 79 (t -> f fp .)
    AND             reduce using rule 79 (t -> f fp .)
    OR              reduce using rule 79 (t -> f fp .)
    SEMICOLON       reduce using rule 79 (t -> f fp .)
    COMMA           reduce using rule 79 (t -> f fp .)
    RIGHT_PARENT    reduce using rule 79 (t -> f fp .)
    RIGHT_SQR_BRACKET reduce using rule 79 (t -> f fp .)


state 176

    (80) fp -> fsig . f fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI
    (86) f -> . CTEF
    (87) f -> . CTEC
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    f                              shift and go to state 214
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 177

    (81) fp -> empty .

    PLUS            reduce using rule 81 (fp -> empty .)
    MINUS           reduce using rule 81 (fp -> empty .)
    LESS_THAN       reduce using rule 81 (fp -> empty .)
    GREATER_THAN    reduce using rule 81 (fp -> empty .)
    EQUALS          reduce using rule 81 (fp -> empty .)
    NOTEQUALS       reduce using rule 81 (fp -> empty .)
    AND             reduce using rule 81 (fp -> empty .)
    OR              reduce using rule 81 (fp -> empty .)
    SEMICOLON       reduce using rule 81 (fp -> empty .)
    COMMA           reduce using rule 81 (fp -> empty .)
    RIGHT_PARENT    reduce using rule 81 (fp -> empty .)
    RIGHT_SQR_BRACKET reduce using rule 81 (fp -> empty .)


state 178

    (82) fsig -> MULT .

    LEFT_PARENT     reduce using rule 82 (fsig -> MULT .)
    CTEI            reduce using rule 82 (fsig -> MULT .)
    CTEF            reduce using rule 82 (fsig -> MULT .)
    CTEC            reduce using rule 82 (fsig -> MULT .)
    ID              reduce using rule 82 (fsig -> MULT .)
    MEAN            reduce using rule 82 (fsig -> MULT .)
    MODE            reduce using rule 82 (fsig -> MULT .)
    MEDIAN          reduce using rule 82 (fsig -> MULT .)
    VARIANCE        reduce using rule 82 (fsig -> MULT .)
    MAX             reduce using rule 82 (fsig -> MULT .)
    MIN             reduce using rule 82 (fsig -> MULT .)
    STADDES         reduce using rule 82 (fsig -> MULT .)
    BOXPLOT         reduce using rule 82 (fsig -> MULT .)
    LINREG          reduce using rule 82 (fsig -> MULT .)
    READ_FILE       reduce using rule 82 (fsig -> MULT .)


state 179

    (83) fsig -> DIV .

    LEFT_PARENT     reduce using rule 83 (fsig -> DIV .)
    CTEI            reduce using rule 83 (fsig -> DIV .)
    CTEF            reduce using rule 83 (fsig -> DIV .)
    CTEC            reduce using rule 83 (fsig -> DIV .)
    ID              reduce using rule 83 (fsig -> DIV .)
    MEAN            reduce using rule 83 (fsig -> DIV .)
    MODE            reduce using rule 83 (fsig -> DIV .)
    MEDIAN          reduce using rule 83 (fsig -> DIV .)
    VARIANCE        reduce using rule 83 (fsig -> DIV .)
    MAX             reduce using rule 83 (fsig -> DIV .)
    MIN             reduce using rule 83 (fsig -> DIV .)
    STADDES         reduce using rule 83 (fsig -> DIV .)
    BOXPLOT         reduce using rule 83 (fsig -> DIV .)
    LINREG          reduce using rule 83 (fsig -> DIV .)
    READ_FILE       reduce using rule 83 (fsig -> DIV .)


state 180

    (84) f -> LEFT_PARENT exp . RIGHT_PARENT

    RIGHT_PARENT    shift and go to state 215


state 181

    (14) copy -> READ_FILE LEFT_PARENT LETRERO . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 216


state 182

    (106) mean -> MEAN LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 217


state 183

    (107) mode -> MODE LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 218


state 184

    (108) median -> MEDIAN LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 219


state 185

    (109) variance -> VARIANCE LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 220


state 186

    (110) max -> MAX LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 221


state 187

    (111) min -> MIN LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 222


state 188

    (112) staddes -> STADDES LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 223


state 189

    (113) boxplot -> BOXPLOT LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 224


state 190

    (114) linreg -> LINREG LEFT_PARENT variable . RIGHT_PARENT SEMICOLON

    RIGHT_PARENT    shift and go to state 225


state 191

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param . RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction

    RIGHT_PARENT    shift and go to state 226


state 192

    (39) param -> paramlist .

    RIGHT_PARENT    reduce using rule 39 (param -> paramlist .)


state 193

    (40) param -> empty .

    RIGHT_PARENT    reduce using rule 40 (param -> empty .)


state 194

    (41) paramlist -> tipoparam . ARROW ID paramlistp

    ARROW           shift and go to state 227


state 195

    (42) tipoparam -> tipo_simp .

    ARROW           reduce using rule 42 (tipoparam -> tipo_simp .)


state 196

    (43) tipoparam -> DATAFRAME .

    ARROW           reduce using rule 43 (tipoparam -> DATAFRAME .)


state 197

    (34) idpp -> COMMA ID pnCheckNameTablaVar . idpp
    (34) idpp -> . COMMA ID pnCheckNameTablaVar idpp
    (35) idpp -> . empty
    (123) empty -> .

    COMMA           shift and go to state 100
    SEMICOLON       reduce using rule 123 (empty -> .)

    idpp                           shift and go to state 228
    empty                          shift and go to state 101

state 198

    (56) asign -> variable ASIGN exp SEMICOLON .

    ID              reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    READ            reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    WRITE           reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    IF              reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    WHILE           reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    FOR             reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    RETURNS         reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    READ_FILE       reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    MEAN            reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    MODE            reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    MEDIAN          reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    VARIANCE        reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    MAX             reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    MIN             reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    STADDES         reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    BOXPLOT         reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    LINREG          reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    LEFT_PARENT     reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    CTEI            reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    CTEF            reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)
    CTEC            reduce using rule 56 (asign -> variable ASIGN exp SEMICOLON .)


state 199

    (21) llamada -> ID LEFT_PARENT expp RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 229


state 200

    (22) expp -> exp exppp .

    RIGHT_PARENT    reduce using rule 22 (expp -> exp exppp .)


state 201

    (24) exppp -> COMMA . exp exppp
    (62) exp -> . exprel logic
    (67) exprel -> . e relacionalp
    (74) e -> . t tp
    (79) t -> . f fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI
    (86) f -> . CTEF
    (87) f -> . CTEC
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 230
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 202

    (25) exppp -> empty .

    RIGHT_PARENT    reduce using rule 25 (exppp -> empty .)


state 203

    (17) indexp -> LEFT_SQR_BRACKET exp indexpp . RIGHT_SQR_BRACKET

    RIGHT_SQR_BRACKET shift and go to state 231


state 204

    (19) indexpp -> COMMA . exp
    (62) exp -> . exprel logic
    (67) exprel -> . e relacionalp
    (74) e -> . t tp
    (79) t -> . f fp
    (84) f -> . LEFT_PARENT exp RIGHT_PARENT
    (85) f -> . CTEI
    (86) f -> . CTEF
    (87) f -> . CTEC
    (88) f -> . variable
    (89) f -> . llamada
    (90) f -> . funcesp
    (16) variable -> . ID indexp
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON

    LEFT_PARENT     shift and go to state 121
    CTEI            shift and go to state 122
    CTEF            shift and go to state 123
    CTEC            shift and go to state 124
    ID              shift and go to state 128
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97
    READ_FILE       shift and go to state 88

    exp                            shift and go to state 232
    exprel                         shift and go to state 117
    e                              shift and go to state 118
    t                              shift and go to state 119
    f                              shift and go to state 120
    variable                       shift and go to state 125
    llamada                        shift and go to state 126
    funcesp                        shift and go to state 127
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86
    copy                           shift and go to state 129

state 205

    (20) indexpp -> empty .

    RIGHT_SQR_BRACKET reduce using rule 20 (indexpp -> empty .)


state 206

    (57) lee -> READ LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 233


state 207

    (58) escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 234


state 208

    (91) condicion -> IF LEFT_PARENT exp RIGHT_PARENT . IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop

    IF_TRUE         shift and go to state 235


state 209

    (94) ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_CUR_BRACKET shift and go to state 236


state 210

    (95) ciclof -> FOR LEFT_PARENT asign exp . RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    RIGHT_PARENT    shift and go to state 237


state 211

    (63) logic -> logicsig exprel . logic
    (63) logic -> . logicsig exprel logic
    (64) logic -> . empty
    (65) logicsig -> . AND
    (66) logicsig -> . OR
    (123) empty -> .

    AND             shift and go to state 161
    OR              shift and go to state 162
    SEMICOLON       reduce using rule 123 (empty -> .)
    COMMA           reduce using rule 123 (empty -> .)
    RIGHT_PARENT    reduce using rule 123 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 123 (empty -> .)

    logicsig                       shift and go to state 159
    logic                          shift and go to state 238
    empty                          shift and go to state 160

state 212

    (68) relacionalp -> relsig e . relacionalp
    (68) relacionalp -> . relsig e relacionalp
    (69) relacionalp -> . empty
    (70) relsig -> . LESS_THAN
    (71) relsig -> . GREATER_THAN
    (72) relsig -> . EQUALS
    (73) relsig -> . NOTEQUALS
    (123) empty -> .

    LESS_THAN       shift and go to state 166
    GREATER_THAN    shift and go to state 167
    EQUALS          shift and go to state 168
    NOTEQUALS       shift and go to state 169
    AND             reduce using rule 123 (empty -> .)
    OR              reduce using rule 123 (empty -> .)
    SEMICOLON       reduce using rule 123 (empty -> .)
    COMMA           reduce using rule 123 (empty -> .)
    RIGHT_PARENT    reduce using rule 123 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 123 (empty -> .)

    relsig                         shift and go to state 164
    relacionalp                    shift and go to state 239
    empty                          shift and go to state 165

state 213

    (75) tp -> tsig t . tp
    (75) tp -> . tsig t tp
    (76) tp -> . empty
    (77) tsig -> . PLUS
    (78) tsig -> . MINUS
    (123) empty -> .

    PLUS            shift and go to state 173
    MINUS           shift and go to state 174
    LESS_THAN       reduce using rule 123 (empty -> .)
    GREATER_THAN    reduce using rule 123 (empty -> .)
    EQUALS          reduce using rule 123 (empty -> .)
    NOTEQUALS       reduce using rule 123 (empty -> .)
    AND             reduce using rule 123 (empty -> .)
    OR              reduce using rule 123 (empty -> .)
    SEMICOLON       reduce using rule 123 (empty -> .)
    COMMA           reduce using rule 123 (empty -> .)
    RIGHT_PARENT    reduce using rule 123 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 123 (empty -> .)

    tsig                           shift and go to state 171
    tp                             shift and go to state 240
    empty                          shift and go to state 172

state 214

    (80) fp -> fsig f . fp
    (80) fp -> . fsig f fp
    (81) fp -> . empty
    (82) fsig -> . MULT
    (83) fsig -> . DIV
    (123) empty -> .

    MULT            shift and go to state 178
    DIV             shift and go to state 179
    PLUS            reduce using rule 123 (empty -> .)
    MINUS           reduce using rule 123 (empty -> .)
    LESS_THAN       reduce using rule 123 (empty -> .)
    GREATER_THAN    reduce using rule 123 (empty -> .)
    EQUALS          reduce using rule 123 (empty -> .)
    NOTEQUALS       reduce using rule 123 (empty -> .)
    AND             reduce using rule 123 (empty -> .)
    OR              reduce using rule 123 (empty -> .)
    SEMICOLON       reduce using rule 123 (empty -> .)
    COMMA           reduce using rule 123 (empty -> .)
    RIGHT_PARENT    reduce using rule 123 (empty -> .)
    RIGHT_SQR_BRACKET reduce using rule 123 (empty -> .)

    fsig                           shift and go to state 176
    fp                             shift and go to state 241
    empty                          shift and go to state 177

state 215

    (84) f -> LEFT_PARENT exp RIGHT_PARENT .

    MULT            reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    DIV             reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    PLUS            reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    MINUS           reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    LESS_THAN       reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    GREATER_THAN    reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    EQUALS          reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    NOTEQUALS       reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    AND             reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    OR              reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    SEMICOLON       reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    COMMA           reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    RIGHT_PARENT    reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)
    RIGHT_SQR_BRACKET reduce using rule 84 (f -> LEFT_PARENT exp RIGHT_PARENT .)


state 216

    (14) copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 242


state 217

    (106) mean -> MEAN LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 243


state 218

    (107) mode -> MODE LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 244


state 219

    (108) median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 245


state 220

    (109) variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 246


state 221

    (110) max -> MAX LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 247


state 222

    (111) min -> MIN LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 248


state 223

    (112) staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 249


state 224

    (113) boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 250


state 225

    (114) linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT . SEMICOLON

    SEMICOLON       shift and go to state 251


state 226

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT . LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction

    LEFT_CUR_BRACKET shift and go to state 252


state 227

    (41) paramlist -> tipoparam ARROW . ID paramlistp

    ID              shift and go to state 253


state 228

    (34) idpp -> COMMA ID pnCheckNameTablaVar idpp .

    SEMICOLON       reduce using rule 34 (idpp -> COMMA ID pnCheckNameTablaVar idpp .)


state 229

    (21) llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 21 (llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON .)


state 230

    (24) exppp -> COMMA exp . exppp
    (24) exppp -> . COMMA exp exppp
    (25) exppp -> . empty
    (123) empty -> .

    COMMA           shift and go to state 201
    RIGHT_PARENT    reduce using rule 123 (empty -> .)

    exppp                          shift and go to state 254
    empty                          shift and go to state 202

state 231

    (17) indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .

    ASIGN           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    MULT            reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    DIV             reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    PLUS            reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    MINUS           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    LESS_THAN       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    GREATER_THAN    reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    EQUALS          reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    NOTEQUALS       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    AND             reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    OR              reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    SEMICOLON       reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    COMMA           reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    RIGHT_PARENT    reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)
    RIGHT_SQR_BRACKET reduce using rule 17 (indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET .)


state 232

    (19) indexpp -> COMMA exp .

    RIGHT_SQR_BRACKET reduce using rule 19 (indexpp -> COMMA exp .)


state 233

    (57) lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 57 (lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 234

    (58) escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 58 (escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON .)


state 235

    (91) condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop

    LEFT_CUR_BRACKET shift and go to state 255


state 236

    (94) ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (123) empty -> .
    (56) asign -> . variable ASIGN exp SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (57) lee -> . READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (94) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (95) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 123 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatutop                      shift and go to state 256
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 237

    (95) ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_CUR_BRACKET shift and go to state 257


state 238

    (63) logic -> logicsig exprel logic .

    SEMICOLON       reduce using rule 63 (logic -> logicsig exprel logic .)
    COMMA           reduce using rule 63 (logic -> logicsig exprel logic .)
    RIGHT_PARENT    reduce using rule 63 (logic -> logicsig exprel logic .)
    RIGHT_SQR_BRACKET reduce using rule 63 (logic -> logicsig exprel logic .)


state 239

    (68) relacionalp -> relsig e relacionalp .

    AND             reduce using rule 68 (relacionalp -> relsig e relacionalp .)
    OR              reduce using rule 68 (relacionalp -> relsig e relacionalp .)
    SEMICOLON       reduce using rule 68 (relacionalp -> relsig e relacionalp .)
    COMMA           reduce using rule 68 (relacionalp -> relsig e relacionalp .)
    RIGHT_PARENT    reduce using rule 68 (relacionalp -> relsig e relacionalp .)
    RIGHT_SQR_BRACKET reduce using rule 68 (relacionalp -> relsig e relacionalp .)


state 240

    (75) tp -> tsig t tp .

    LESS_THAN       reduce using rule 75 (tp -> tsig t tp .)
    GREATER_THAN    reduce using rule 75 (tp -> tsig t tp .)
    EQUALS          reduce using rule 75 (tp -> tsig t tp .)
    NOTEQUALS       reduce using rule 75 (tp -> tsig t tp .)
    AND             reduce using rule 75 (tp -> tsig t tp .)
    OR              reduce using rule 75 (tp -> tsig t tp .)
    SEMICOLON       reduce using rule 75 (tp -> tsig t tp .)
    COMMA           reduce using rule 75 (tp -> tsig t tp .)
    RIGHT_PARENT    reduce using rule 75 (tp -> tsig t tp .)
    RIGHT_SQR_BRACKET reduce using rule 75 (tp -> tsig t tp .)


state 241

    (80) fp -> fsig f fp .

    PLUS            reduce using rule 80 (fp -> fsig f fp .)
    MINUS           reduce using rule 80 (fp -> fsig f fp .)
    LESS_THAN       reduce using rule 80 (fp -> fsig f fp .)
    GREATER_THAN    reduce using rule 80 (fp -> fsig f fp .)
    EQUALS          reduce using rule 80 (fp -> fsig f fp .)
    NOTEQUALS       reduce using rule 80 (fp -> fsig f fp .)
    AND             reduce using rule 80 (fp -> fsig f fp .)
    OR              reduce using rule 80 (fp -> fsig f fp .)
    SEMICOLON       reduce using rule 80 (fp -> fsig f fp .)
    COMMA           reduce using rule 80 (fp -> fsig f fp .)
    RIGHT_PARENT    reduce using rule 80 (fp -> fsig f fp .)
    RIGHT_SQR_BRACKET reduce using rule 80 (fp -> fsig f fp .)


state 242

    (14) copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 14 (copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON .)


state 243

    (106) mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 106 (mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 244

    (107) mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 107 (mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 245

    (108) median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 108 (median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 246

    (109) variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 109 (variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 247

    (110) max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 110 (max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 248

    (111) min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 111 (min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 249

    (112) staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 112 (staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 250

    (113) boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 113 (boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 251

    (114) linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .

    ID              reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WRITE           reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    IF              reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    WHILE           reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    FOR             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RETURNS         reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    READ_FILE       reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEAN            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MODE            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MEDIAN          reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    VARIANCE        reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MAX             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MIN             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    STADDES         reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    BOXPLOT         reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LINREG          reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_CUR_BRACKET reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MULT            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    DIV             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    PLUS            reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    MINUS           reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    LESS_THAN       reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    GREATER_THAN    reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    EQUALS          reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    NOTEQUALS       reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    AND             reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    OR              reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    SEMICOLON       reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    COMMA           reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_PARENT    reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)
    RIGHT_SQR_BRACKET reduce using rule 114 (linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON .)


state 252

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET . varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (2) varp -> . var varp
    (3) varp -> . empty
    (26) var -> . VAR pnCheckTablaVar v ARROW idp SEMICOLON
    (123) empty -> .

    VAR             shift and go to state 12
    ID              reduce using rule 123 (empty -> .)
    READ            reduce using rule 123 (empty -> .)
    WRITE           reduce using rule 123 (empty -> .)
    IF              reduce using rule 123 (empty -> .)
    WHILE           reduce using rule 123 (empty -> .)
    FOR             reduce using rule 123 (empty -> .)
    RETURNS         reduce using rule 123 (empty -> .)
    READ_FILE       reduce using rule 123 (empty -> .)
    MEAN            reduce using rule 123 (empty -> .)
    MODE            reduce using rule 123 (empty -> .)
    MEDIAN          reduce using rule 123 (empty -> .)
    VARIANCE        reduce using rule 123 (empty -> .)
    MAX             reduce using rule 123 (empty -> .)
    MIN             reduce using rule 123 (empty -> .)
    STADDES         reduce using rule 123 (empty -> .)
    BOXPLOT         reduce using rule 123 (empty -> .)
    LINREG          reduce using rule 123 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 123 (empty -> .)

    varp                           shift and go to state 258
    var                            shift and go to state 10
    empty                          shift and go to state 11

state 253

    (41) paramlist -> tipoparam ARROW ID . paramlistp
    (44) paramlistp -> . COMMA paramlist
    (45) paramlistp -> . empty
    (123) empty -> .

    COMMA           shift and go to state 260
    RIGHT_PARENT    reduce using rule 123 (empty -> .)

    paramlistp                     shift and go to state 259
    empty                          shift and go to state 261

state 254

    (24) exppp -> COMMA exp exppp .

    RIGHT_PARENT    reduce using rule 24 (exppp -> COMMA exp exppp .)


state 255

    (91) condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET falsop
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (123) empty -> .
    (56) asign -> . variable ASIGN exp SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (57) lee -> . READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (94) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (95) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 123 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatutop                      shift and go to state 262
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 256

    (94) ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET

    RIGHT_CUR_BRACKET shift and go to state 263


state 257

    (95) ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (123) empty -> .
    (56) asign -> . variable ASIGN exp SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (57) lee -> . READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (94) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (95) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 123 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    asign                          shift and go to state 61
    estatutop                      shift and go to state 264
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 258

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp . estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (123) empty -> .
    (56) asign -> . variable ASIGN exp SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (57) lee -> . READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (94) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (95) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 123 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatutop                      shift and go to state 265
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 259

    (41) paramlist -> tipoparam ARROW ID paramlistp .

    RIGHT_PARENT    reduce using rule 41 (paramlist -> tipoparam ARROW ID paramlistp .)


state 260

    (44) paramlistp -> COMMA . paramlist
    (41) paramlist -> . tipoparam ARROW ID paramlistp
    (42) tipoparam -> . tipo_simp
    (43) tipoparam -> . DATAFRAME
    (9) tipo_simp -> . INT pnSaveTypeVar
    (10) tipo_simp -> . FLOAT pnSaveTypeVar
    (11) tipo_simp -> . CHAR pnSaveTypeVar

    DATAFRAME       shift and go to state 196
    INT             shift and go to state 26
    FLOAT           shift and go to state 27
    CHAR            shift and go to state 28

    paramlist                      shift and go to state 266
    tipoparam                      shift and go to state 194
    tipo_simp                      shift and go to state 195

state 261

    (45) paramlistp -> empty .

    RIGHT_PARENT    reduce using rule 45 (paramlistp -> empty .)


state 262

    (91) condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET falsop

    RIGHT_CUR_BRACKET shift and go to state 267


state 263

    (94) ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .

    ID              reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ            reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WRITE           reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    IF              reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WHILE           reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    FOR             reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RETURNS         reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ_FILE       reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEAN            reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MODE            reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEDIAN          reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    VARIANCE        reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MAX             reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MIN             reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    STADDES         reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    BOXPLOT         reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    LINREG          reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RIGHT_CUR_BRACKET reduce using rule 94 (ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)


state 264

    (95) ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET

    RIGHT_CUR_BRACKET shift and go to state 268


state 265

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop . RIGHT_CUR_BRACKET pnCloseCurrentFunction

    RIGHT_CUR_BRACKET shift and go to state 269


state 266

    (44) paramlistp -> COMMA paramlist .

    RIGHT_PARENT    reduce using rule 44 (paramlistp -> COMMA paramlist .)


state 267

    (91) condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET . falsop
    (92) falsop -> . IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (93) falsop -> . empty
    (123) empty -> .

    IF_FALSE        shift and go to state 271
    ID              reduce using rule 123 (empty -> .)
    READ            reduce using rule 123 (empty -> .)
    WRITE           reduce using rule 123 (empty -> .)
    IF              reduce using rule 123 (empty -> .)
    WHILE           reduce using rule 123 (empty -> .)
    FOR             reduce using rule 123 (empty -> .)
    RETURNS         reduce using rule 123 (empty -> .)
    READ_FILE       reduce using rule 123 (empty -> .)
    MEAN            reduce using rule 123 (empty -> .)
    MODE            reduce using rule 123 (empty -> .)
    MEDIAN          reduce using rule 123 (empty -> .)
    VARIANCE        reduce using rule 123 (empty -> .)
    MAX             reduce using rule 123 (empty -> .)
    MIN             reduce using rule 123 (empty -> .)
    STADDES         reduce using rule 123 (empty -> .)
    BOXPLOT         reduce using rule 123 (empty -> .)
    LINREG          reduce using rule 123 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 123 (empty -> .)

    falsop                         shift and go to state 270
    empty                          shift and go to state 272

state 268

    (95) ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .

    ID              reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ            reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WRITE           reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    IF              reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WHILE           reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    FOR             reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RETURNS         reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ_FILE       reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEAN            reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MODE            reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEDIAN          reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    VARIANCE        reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MAX             reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MIN             reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    STADDES         reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    BOXPLOT         reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    LINREG          reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RIGHT_CUR_BRACKET reduce using rule 95 (ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)


state 269

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET . pnCloseCurrentFunction
    (121) pnCloseCurrentFunction -> . empty
    (123) empty -> .

    FUNC            reduce using rule 123 (empty -> .)
    DO              reduce using rule 123 (empty -> .)
    ID              reduce using rule 123 (empty -> .)
    READ            reduce using rule 123 (empty -> .)
    WRITE           reduce using rule 123 (empty -> .)
    IF              reduce using rule 123 (empty -> .)
    WHILE           reduce using rule 123 (empty -> .)
    FOR             reduce using rule 123 (empty -> .)
    RETURNS         reduce using rule 123 (empty -> .)
    READ_FILE       reduce using rule 123 (empty -> .)
    MEAN            reduce using rule 123 (empty -> .)
    MODE            reduce using rule 123 (empty -> .)
    MEDIAN          reduce using rule 123 (empty -> .)
    VARIANCE        reduce using rule 123 (empty -> .)
    MAX             reduce using rule 123 (empty -> .)
    MIN             reduce using rule 123 (empty -> .)
    STADDES         reduce using rule 123 (empty -> .)
    BOXPLOT         reduce using rule 123 (empty -> .)
    LINREG          reduce using rule 123 (empty -> .)
    RIGHT_CUR_BRACKET reduce using rule 123 (empty -> .)

    pnCloseCurrentFunction         shift and go to state 273
    empty                          shift and go to state 274

state 270

    (91) condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .

    ID              reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    READ            reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    WRITE           reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    IF              reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    WHILE           reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    FOR             reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    RETURNS         reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    READ_FILE       reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    MEAN            reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    MODE            reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    MEDIAN          reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    VARIANCE        reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    MAX             reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    MIN             reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    STADDES         reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    BOXPLOT         reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    LINREG          reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)
    RIGHT_CUR_BRACKET reduce using rule 91 (condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop .)


state 271

    (92) falsop -> IF_FALSE . LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET

    LEFT_CUR_BRACKET shift and go to state 275


state 272

    (93) falsop -> empty .

    ID              reduce using rule 93 (falsop -> empty .)
    READ            reduce using rule 93 (falsop -> empty .)
    WRITE           reduce using rule 93 (falsop -> empty .)
    IF              reduce using rule 93 (falsop -> empty .)
    WHILE           reduce using rule 93 (falsop -> empty .)
    FOR             reduce using rule 93 (falsop -> empty .)
    RETURNS         reduce using rule 93 (falsop -> empty .)
    READ_FILE       reduce using rule 93 (falsop -> empty .)
    MEAN            reduce using rule 93 (falsop -> empty .)
    MODE            reduce using rule 93 (falsop -> empty .)
    MEDIAN          reduce using rule 93 (falsop -> empty .)
    VARIANCE        reduce using rule 93 (falsop -> empty .)
    MAX             reduce using rule 93 (falsop -> empty .)
    MIN             reduce using rule 93 (falsop -> empty .)
    STADDES         reduce using rule 93 (falsop -> empty .)
    BOXPLOT         reduce using rule 93 (falsop -> empty .)
    LINREG          reduce using rule 93 (falsop -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 93 (falsop -> empty .)


state 273

    (36) func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .

    FUNC            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    DO              reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    ID              reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    READ            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    WRITE           reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    IF              reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    WHILE           reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    FOR             reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    RETURNS         reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    READ_FILE       reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    MEAN            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    MODE            reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    MEDIAN          reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    VARIANCE        reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    MAX             reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    MIN             reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    STADDES         reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    BOXPLOT         reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    LINREG          reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)
    RIGHT_CUR_BRACKET reduce using rule 36 (func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction .)


state 274

    (121) pnCloseCurrentFunction -> empty .

    FUNC            reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    DO              reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    ID              reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    READ            reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    WRITE           reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    IF              reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    WHILE           reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    FOR             reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    RETURNS         reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    READ_FILE       reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    MEAN            reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    MODE            reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    MEDIAN          reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    VARIANCE        reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    MAX             reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    MIN             reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    STADDES         reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    BOXPLOT         reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    LINREG          reduce using rule 121 (pnCloseCurrentFunction -> empty .)
    RIGHT_CUR_BRACKET reduce using rule 121 (pnCloseCurrentFunction -> empty .)


state 275

    (92) falsop -> IF_FALSE LEFT_CUR_BRACKET . estatutop RIGHT_CUR_BRACKET
    (7) estatutop -> . estatuto estatutop
    (8) estatutop -> . empty
    (46) estatuto -> . asign
    (47) estatuto -> . llamada
    (48) estatuto -> . lee
    (49) estatuto -> . escribe
    (50) estatuto -> . condicion
    (51) estatuto -> . ciclow
    (52) estatuto -> . ciclof
    (53) estatuto -> . funcesp
    (54) estatuto -> . return
    (55) estatuto -> . copy
    (123) empty -> .
    (56) asign -> . variable ASIGN exp SEMICOLON
    (21) llamada -> . ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON
    (57) lee -> . READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (58) escribe -> . WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON
    (91) condicion -> . IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop
    (94) ciclow -> . WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (95) ciclof -> . FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET
    (96) funcesp -> . mean
    (97) funcesp -> . mode
    (98) funcesp -> . median
    (99) funcesp -> . variance
    (100) funcesp -> . max
    (101) funcesp -> . min
    (102) funcesp -> . staddes
    (103) funcesp -> . boxplot
    (104) funcesp -> . linreg
    (105) funcesp -> . copy
    (61) return -> . RETURNS exp SEMICOLON
    (14) copy -> . READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON
    (16) variable -> . ID indexp
    (106) mean -> . MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (107) mode -> . MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (108) median -> . MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (109) variance -> . VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (110) max -> . MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (111) min -> . MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (112) staddes -> . STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (113) boxplot -> . BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON
    (114) linreg -> . LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON

    RIGHT_CUR_BRACKET reduce using rule 123 (empty -> .)
    ID              shift and go to state 72
    READ            shift and go to state 73
    WRITE           shift and go to state 74
    IF              shift and go to state 75
    WHILE           shift and go to state 76
    FOR             shift and go to state 77
    RETURNS         shift and go to state 87
    READ_FILE       shift and go to state 88
    MEAN            shift and go to state 89
    MODE            shift and go to state 90
    MEDIAN          shift and go to state 91
    VARIANCE        shift and go to state 92
    MAX             shift and go to state 93
    MIN             shift and go to state 94
    STADDES         shift and go to state 95
    BOXPLOT         shift and go to state 96
    LINREG          shift and go to state 97

    estatutop                      shift and go to state 276
    estatuto                       shift and go to state 59
    empty                          shift and go to state 60
    asign                          shift and go to state 61
    llamada                        shift and go to state 62
    lee                            shift and go to state 63
    escribe                        shift and go to state 64
    condicion                      shift and go to state 65
    ciclow                         shift and go to state 66
    ciclof                         shift and go to state 67
    funcesp                        shift and go to state 68
    return                         shift and go to state 69
    copy                           shift and go to state 70
    variable                       shift and go to state 71
    mean                           shift and go to state 78
    mode                           shift and go to state 79
    median                         shift and go to state 80
    variance                       shift and go to state 81
    max                            shift and go to state 82
    min                            shift and go to state 83
    staddes                        shift and go to state 84
    boxplot                        shift and go to state 85
    linreg                         shift and go to state 86

state 276

    (92) falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop . RIGHT_CUR_BRACKET

    RIGHT_CUR_BRACKET shift and go to state 277


state 277

    (92) falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .

    ID              reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ            reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WRITE           reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    IF              reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    WHILE           reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    FOR             reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RETURNS         reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    READ_FILE       reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEAN            reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MODE            reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MEDIAN          reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    VARIANCE        reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MAX             reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    MIN             reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    STADDES         reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    BOXPLOT         reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    LINREG          reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)
    RIGHT_CUR_BRACKET reduce using rule 92 (falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 70 resolved using rule (estatuto -> copy)
WARNING: rejected rule (funcesp -> copy) in state 70

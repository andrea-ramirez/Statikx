
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVAND ARROW ASIGN BOXPLOT CHAR COMMA COMMENT CTEC CTEF CTEI DATAFRAME DIV DO EQUALS FLOAT FOR FUNC GREATER_THAN ID IF IF_FALSE IF_TRUE INT LEFT_CUR_BRACKET LEFT_PARENT LEFT_SQR_BRACKET LESS_THAN LETRERO LINREG MAX MEAN MEDIAN MIN MINUS MODE MULT NOTEQUALS OR PLUS READ READ_FILE RETURNS RIGHT_CUR_BRACKET RIGHT_PARENT RIGHT_SQR_BRACKET SCRIPT SEMICOLON STADDES VAR VARIANCE VOID WHILE WRITE\n    programa : SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque\n    varp : var varp \n         | empty\n    funcp : func funcp \n          | empty\n    \n    bloque : DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript\n    estatutop : estatuto estatutop \n              | empty\n    \n    tipo_simp : INT pnSaveTypeVar\n              | FLOAT pnSaveTypeVar\n              | CHAR pnSaveTypeVar\n    \n    tipo_comp : DATAFRAME \n              | file\n    \n    copy : READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON\n    \n    file : ID\n    \n    variable : ID pnSaveOperandos indexp\n    indexp : LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET \n           | empty\n    indexpp : COMMA exp \n            | empty\n    \n    llamada : ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON\n    expp : exp exppp\n         | empty\n    exppp : COMMA exp exppp\n          | empty\n    \n    var : VAR pnCheckTablaVar v ARROW idp SEMICOLON\n    v : DATAFRAME pnSaveTypeVar\n      | tipo_simp vp\n    vp : LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET \n       | empty\n    vpp : COMMA CTEI \n        | empty\n    idp : ID pnCheckNameTablaVar idpp\n    idpp : COMMA ID pnCheckNameTablaVar idpp\n         | empty\n    \n    func : FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction\n    returnval : tipo_simp \n              | VOID pnSaveTypeVar\n    \n    param : paramlist\n          | empty\n    paramlist : tipoparam ARROW ID pnAddParametersTablaVar paramlistp\n    tipoparam : tipo_simp\n              | DATAFRAME pnSaveTypeVar\n    paramlistp : COMMA paramlist\n               | empty\n    \n    estatuto : asign\n             | llamada\n             | lee\n             | escribe\n             | condicion\n             | ciclow\n             | ciclof\n             | funcesp\n             | return\n             | copy\n    \n    asign : variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON\n    \n    lee : READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON\n    \n    escribe :  WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON\n    escribep : exp pnCuadEscribe\n             | LETRERO pnCuadEscribe\n    \n    return : RETURNS exp SEMICOLON\n    \n    exp : exprel pnCuadOplog logic\n    logic : logicsig exprel pnCuadOplog logic \n          | empty\n    logicsig : AND pnSaveOperadorLog\n             | OR pnSaveOperadorLog\n    \n    exprel : e pnCuadOpRelacional relacionalp\n    relacionalp : relsig e pnCuadOpRelacional relacionalp \n                | empty\n    relsig : LESS_THAN pnSaveOperadorRel\n           | GREATER_THAN pnSaveOperadorRel\n           | EQUALS pnSaveOperadorRel\n           | NOTEQUALS pnSaveOperadorRel\n    \n    e : t pnCuadPlMi tp\n    tp : tsig t pnCuadPlMi tp \n       | empty\n    tsig : PLUS pnSaveOperadorPlMi\n         | MINUS pnSaveOperadorPlMi\n    \n    t : f pnCuadMuDi fp\n    fp : fsig f pnCuadMuDi fp \n       | empty\n    fsig : MULT pnSaveOperadorMuDi\n         | DIV pnSaveOperadorMuDi\n    \n    f : LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso\n      | CTEI pnSaveCteI  pnSaveOperandoConstante\n      | CTEF pnSaveCteF pnSaveOperandoConstante\n      | CTEC pnSaveCteC pnSaveOperandoConstante\n      | variable\n      | llamada\n      | funcesp\n    \n    condicion : IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf\n    falsop : IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET \n           | empty\n    \n    ciclow : WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile\n    \n    ciclof : FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor\n    \n    funcesp : mean\n            | mode\n            | median\n            | variance\n            | max\n            | min\n            | staddes\n            | boxplot\n            | linreg\n            | copy\n    \n    mean : MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    mode : MODE LEFT_PARENT variable  pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    median : MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    variance : VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    max : MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    min : MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    staddes : STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    boxplot : BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    linreg : LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    pnCrearDirFunc : empty\n    \n    pnScriptFuncDir : empty\n    \n    pnCheckTablaVar : empty\n    \n    pnSaveTypeVar : empty\n    \n    pnCheckNameTablaVar : empty\n    \n    pnAddFuncinDir : empty\n    \n    pnAddParametersTablaVar : empty\n    \n    pnCloseCurrentFunction : empty\n    \n    pnEndScript : empty\n    \n    pnSaveCteI : empty\n    \n    pnSaveCteF : empty\n    \n    pnSaveCteC : empty\n    \n    pnSaveFondoFalso : empty\n    \n    pnPopFondoFalso : empty\n    \n    pnSaveOperandos : empty\n    \n    pnSaveOperandoConstante : empty\n    \n    pnSaveOperadorPlMi : empty\n    \n    pnSaveOperadorMuDi : empty\n    \n    pnSaveOperadorRel : empty\n    \n    pnSaveOperadorLog : empty\n    \n    pnCuadPlMi : empty\n    \n    pnCuadMuDi : empty\n    \n    pnCuadOpRelacional : empty\n    \n    pnCuadOplog : empty\n    \n    pnSaveOperadorAsign : empty\n    \n    pnCuadAsign : empty\n    \n    pnCuadEscribe : empty\n    \n    pnCuadLee : empty\n    \n    pnCuadCopy : empty\n    \n    pnCuadFuncEsp : empty\n    \n    pnCheckBoolIf : empty\n    \n    pnElseIf : empty\n    \n    pnEndIf : empty\n    \n    pnSaveWhile : empty\n    \n    pnEndWhile : empty\n    \n    pnSaveForID : empty\n    \n    pnCreateVControl : empty\n    \n    pnCompControlFinal : empty\n    \n    pnEndFor : empty\n    \n    empty :'
    
_lr_action_items = {'SCRIPT':([0,],[2,]),'$end':([1,20,104,142,143,],[0,-1,-154,-6,-123,]),'ID':([2,3,4,10,11,14,15,17,22,32,33,39,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,100,106,107,110,111,112,115,121,131,132,133,134,135,136,137,138,139,144,145,150,158,160,169,170,197,212,214,215,217,219,220,221,222,224,226,227,229,231,232,251,256,259,262,265,267,268,269,271,272,273,274,275,277,278,279,281,282,283,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,338,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,5,-115,-154,-3,-154,-5,-2,-4,-154,45,47,-154,72,-26,72,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,128,141,-154,128,153,128,128,159,-154,153,153,153,153,153,153,153,153,153,128,-139,128,128,-61,128,-127,128,128,-154,-154,128,-154,-154,-154,-154,128,-154,-154,128,-154,-154,296,-21,128,-58,128,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,72,72,72,128,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,72,72,-92,-154,-95,-153,]),'SEMICOLON':([5,6,7,46,47,53,54,78,79,80,81,82,83,84,85,86,99,101,108,109,116,117,118,119,120,122,123,124,125,126,127,128,129,141,149,151,161,162,163,164,165,166,167,168,171,172,173,174,175,176,193,194,195,202,211,213,216,218,223,225,228,230,234,235,236,237,253,254,255,256,261,266,270,276,280,284,285,286,287,288,289,290,291,292,293,294,299,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,328,329,330,331,],[-154,8,-116,52,-154,-154,-119,-96,-97,-98,-99,-100,-101,-102,-103,-104,-33,-35,-154,-129,160,-154,-154,-154,-154,-154,-154,-154,-88,-89,-90,-154,-105,-154,-16,-18,-154,-138,-154,-137,-154,-135,-154,-136,-154,-124,-154,-125,-154,-126,-154,-154,256,262,-62,-64,-67,-69,-74,-76,-79,-81,-85,-130,-86,-87,-34,297,-140,-21,301,-154,-154,-154,-154,-154,311,312,313,314,315,316,317,318,319,320,-17,-154,-154,-154,-154,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-63,-68,-75,-80,]),'VAR':([8,10,32,52,295,],[12,12,12,-26,12,]),'FUNC':([8,9,10,11,14,17,32,44,52,339,344,345,],[-154,16,-154,-3,16,-2,-154,16,-26,-154,-36,-122,]),'DO':([8,9,10,11,13,14,15,17,22,52,339,344,345,],[-154,-154,-154,-3,21,-154,-5,-2,-4,-26,-154,-36,-122,]),'READ':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,256,262,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,73,-26,73,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,73,73,73,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,73,73,-92,-154,-95,-153,]),'WRITE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,256,262,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,74,-26,74,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,74,74,74,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,74,74,-92,-154,-95,-153,]),'IF':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,256,262,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,75,-26,75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,75,75,75,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,75,75,-92,-154,-95,-153,]),'WHILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,256,262,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,76,-26,76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,76,76,76,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,76,76,-92,-154,-95,-153,]),'FOR':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,256,262,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,77,-26,77,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,77,77,77,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,77,77,-92,-154,-95,-153,]),'RETURNS':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,256,262,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,87,-26,87,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,87,87,87,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,87,87,-92,-154,-95,-153,]),'READ_FILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,197,212,214,215,217,219,220,221,222,224,226,227,229,231,232,256,259,262,265,267,268,269,271,272,273,274,275,277,278,279,281,282,283,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,338,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,88,-26,88,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,88,-154,88,88,88,-154,88,-139,88,88,-61,88,-127,88,88,-154,-154,88,-154,-154,-154,-154,88,-154,-154,88,-154,-154,-21,88,-58,88,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,88,88,88,88,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,88,88,-92,-154,-95,-153,]),'MEAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,197,212,214,215,217,219,220,221,222,224,226,227,229,231,232,256,259,262,265,267,268,269,271,272,273,274,275,277,278,279,281,282,283,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,338,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,89,-26,89,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,89,-154,89,89,89,-154,89,-139,89,89,-61,89,-127,89,89,-154,-154,89,-154,-154,-154,-154,89,-154,-154,89,-154,-154,-21,89,-58,89,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,89,89,89,89,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,89,89,-92,-154,-95,-153,]),'MODE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,197,212,214,215,217,219,220,221,222,224,226,227,229,231,232,256,259,262,265,267,268,269,271,272,273,274,275,277,278,279,281,282,283,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,338,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,90,-26,90,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,90,-154,90,90,90,-154,90,-139,90,90,-61,90,-127,90,90,-154,-154,90,-154,-154,-154,-154,90,-154,-154,90,-154,-154,-21,90,-58,90,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,90,90,90,90,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,90,90,-92,-154,-95,-153,]),'MEDIAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,197,212,214,215,217,219,220,221,222,224,226,227,229,231,232,256,259,262,265,267,268,269,271,272,273,274,275,277,278,279,281,282,283,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,338,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,91,-26,91,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,91,-154,91,91,91,-154,91,-139,91,91,-61,91,-127,91,91,-154,-154,91,-154,-154,-154,-154,91,-154,-154,91,-154,-154,-21,91,-58,91,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,91,91,91,91,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,91,91,-92,-154,-95,-153,]),'VARIANCE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,197,212,214,215,217,219,220,221,222,224,226,227,229,231,232,256,259,262,265,267,268,269,271,272,273,274,275,277,278,279,281,282,283,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,338,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,92,-26,92,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,92,-154,92,92,92,-154,92,-139,92,92,-61,92,-127,92,92,-154,-154,92,-154,-154,-154,-154,92,-154,-154,92,-154,-154,-21,92,-58,92,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,92,92,92,92,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,92,92,-92,-154,-95,-153,]),'MAX':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,197,212,214,215,217,219,220,221,222,224,226,227,229,231,232,256,259,262,265,267,268,269,271,272,273,274,275,277,278,279,281,282,283,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,338,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,93,-26,93,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,93,-154,93,93,93,-154,93,-139,93,93,-61,93,-127,93,93,-154,-154,93,-154,-154,-154,-154,93,-154,-154,93,-154,-154,-21,93,-58,93,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,93,93,93,93,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,93,93,-92,-154,-95,-153,]),'MIN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,197,212,214,215,217,219,220,221,222,224,226,227,229,231,232,256,259,262,265,267,268,269,271,272,273,274,275,277,278,279,281,282,283,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,338,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,94,-26,94,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,94,-154,94,94,94,-154,94,-139,94,94,-61,94,-127,94,94,-154,-154,94,-154,-154,-154,-154,94,-154,-154,94,-154,-154,-21,94,-58,94,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,94,94,94,94,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,94,94,-92,-154,-95,-153,]),'STADDES':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,197,212,214,215,217,219,220,221,222,224,226,227,229,231,232,256,259,262,265,267,268,269,271,272,273,274,275,277,278,279,281,282,283,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,338,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,95,-26,95,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,95,-154,95,95,95,-154,95,-139,95,95,-61,95,-127,95,95,-154,-154,95,-154,-154,-154,-154,95,-154,-154,95,-154,-154,-21,95,-58,95,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,95,95,95,95,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,95,95,-92,-154,-95,-153,]),'BOXPLOT':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,197,212,214,215,217,219,220,221,222,224,226,227,229,231,232,256,259,262,265,267,268,269,271,272,273,274,275,277,278,279,281,282,283,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,338,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,96,-26,96,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,96,-154,96,96,96,-154,96,-139,96,96,-61,96,-127,96,96,-154,-154,96,-154,-154,-154,-154,96,-154,-154,96,-154,-154,-21,96,-58,96,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,96,96,96,96,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,96,96,-92,-154,-95,-153,]),'LINREG':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,197,212,214,215,217,219,220,221,222,224,226,227,229,231,232,256,259,262,265,267,268,269,271,272,273,274,275,277,278,279,281,282,283,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,338,339,341,342,344,345,346,348,349,350,353,354,358,359,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,97,-26,97,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,97,-154,97,97,97,-154,97,-139,97,97,-61,97,-127,97,97,-154,-154,97,-154,-154,-154,-154,97,-154,-154,97,-154,-154,-21,97,-58,97,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,97,97,97,97,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,97,97,-92,-154,-95,-153,]),'RIGHT_CUR_BRACKET':([10,11,14,15,17,22,32,44,49,52,58,59,60,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,105,160,256,262,295,297,301,311,312,313,314,315,316,317,318,319,320,321,324,325,332,336,337,339,341,342,344,345,346,348,349,350,353,354,358,359,360,361,362,363,364,365,],[-154,-3,-154,-5,-2,-4,-154,-154,-154,-26,104,-154,-8,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-7,-61,-21,-58,-154,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-154,-154,-154,339,341,342,-154,-154,-154,-36,-122,-154,-93,-94,-149,-91,-147,-154,-154,362,363,-92,-154,-95,-153,]),'DATAFRAME':([12,18,19,98,140,334,],[-154,30,-117,-154,192,192,]),'INT':([12,16,18,19,98,140,334,],[-154,26,26,-117,-154,26,26,]),'FLOAT':([12,16,18,19,98,140,334,],[-154,27,27,-117,-154,27,27,]),'CHAR':([12,16,18,19,98,140,334,],[-154,28,28,-117,-154,28,28,]),'VOID':([16,],[25,]),'RIGHT_PARENT':([19,78,79,80,81,82,83,84,85,86,98,107,108,109,117,118,119,120,122,123,124,125,126,127,128,129,140,146,147,148,149,151,152,153,154,155,156,157,161,162,163,164,165,166,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,196,198,200,201,203,204,205,206,207,208,211,213,216,218,223,225,228,230,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,256,257,264,266,270,276,280,284,296,298,299,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,323,328,329,330,331,333,335,340,343,351,352,],[-117,-96,-97,-98,-99,-100,-101,-102,-103,-104,-154,-154,-154,-129,-154,-154,-154,-154,-154,-154,-154,-88,-89,-90,-154,-105,-154,195,-154,-23,-16,-18,-154,-154,202,-154,-154,-154,-154,-138,-154,-137,-154,-135,-154,-136,-154,-124,-154,-125,-154,-126,-154,-154,-154,-154,-154,-154,-154,-154,-154,-154,250,-39,-40,-22,-25,261,-142,-59,-141,-60,263,-145,-154,-62,-64,-67,-69,-74,-76,-79,-81,284,-85,-130,-86,-87,285,-143,286,-144,287,288,289,290,291,292,293,294,-21,-154,303,-154,-154,-154,-154,-154,-154,-24,-17,-154,-154,-154,-154,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-154,-121,-63,-68,-75,-80,-41,-45,-44,-154,357,-152,]),'LEFT_CUR_BRACKET':([21,250,302,303,347,355,356,357,],[32,295,324,325,-154,358,-146,359,]),'ARROW':([23,24,25,26,27,28,29,30,31,34,35,36,37,38,40,41,43,102,190,191,192,252,],[33,-37,-154,-154,-154,-154,39,-154,-154,-38,-118,-9,-10,-11,-27,-28,-30,-29,251,-42,-154,-43,]),'LEFT_SQR_BRACKET':([26,27,28,31,35,36,37,38,72,108,109,128,153,],[-154,-154,-154,42,-118,-9,-10,-11,-154,150,-129,-154,-154,]),'CTEI':([42,56,87,106,107,111,112,121,144,145,150,158,169,170,197,212,214,215,217,219,220,221,222,224,226,227,229,231,232,259,265,267,268,269,271,272,273,274,275,277,278,279,281,282,283,338,],[48,103,122,-154,122,122,122,-154,122,-139,122,122,122,-127,122,122,-154,-154,122,-154,-154,-154,-154,122,-154,-154,122,-154,-154,122,122,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,122,]),'LEFT_PARENT':([45,50,51,72,73,74,75,76,77,87,88,89,90,91,92,93,94,95,96,97,106,107,111,112,113,114,121,128,144,145,150,158,169,170,197,212,214,215,217,219,220,221,222,224,226,227,229,231,232,259,265,267,268,269,271,272,273,274,275,277,278,279,281,282,283,338,],[-154,98,-120,107,110,111,112,-154,115,121,130,131,132,133,134,135,136,137,138,139,-154,121,121,121,158,-148,-154,107,121,-139,121,121,121,-127,121,121,-154,-154,121,-154,-154,-154,-154,121,-154,-154,121,-154,-154,121,121,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,121,]),'COMMA':([47,48,53,54,78,79,80,81,82,83,84,85,86,108,109,117,118,119,120,122,123,124,125,126,127,128,129,141,147,149,151,161,162,163,164,165,166,167,168,171,172,173,174,175,176,193,199,211,213,216,218,223,225,228,230,234,235,236,237,256,257,266,270,276,280,284,296,299,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,323,326,327,328,329,330,331,],[-154,56,100,-119,-96,-97,-98,-99,-100,-101,-102,-103,-104,-154,-129,-154,-154,-154,-154,-154,-154,-154,-88,-89,-90,-154,-105,-154,197,-16,-18,-154,-138,-154,-137,-154,-135,-154,-136,-154,-124,-154,-125,-154,-126,100,259,-62,-64,-67,-69,-74,-76,-79,-81,-85,-130,-86,-87,-21,197,-154,-154,-154,-154,-154,-154,-17,-154,-154,-154,-154,-154,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,334,-121,338,-151,-63,-68,-75,-80,]),'RIGHT_SQR_BRACKET':([48,55,57,78,79,80,81,82,83,84,85,86,103,108,109,117,118,119,120,122,123,124,125,126,127,128,129,149,151,161,162,163,164,165,166,167,168,171,172,173,174,175,176,199,211,213,216,218,223,225,228,230,234,235,236,237,256,258,260,266,270,276,280,284,299,300,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,328,329,330,331,],[-154,102,-32,-96,-97,-98,-99,-100,-101,-102,-103,-104,-31,-154,-129,-154,-154,-154,-154,-154,-154,-154,-88,-89,-90,-154,-105,-16,-18,-154,-138,-154,-137,-154,-135,-154,-136,-154,-124,-154,-125,-154,-126,-154,-62,-64,-67,-69,-74,-76,-79,-81,-85,-130,-86,-87,-21,299,-20,-154,-154,-154,-154,-154,-17,-19,-154,-154,-154,-154,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-63,-68,-75,-80,]),'ASIGN':([71,72,108,109,149,151,159,209,210,299,],[106,-154,-154,-129,-16,-18,-154,265,-150,-17,]),'MULT':([78,79,80,81,82,83,84,85,86,108,109,120,122,123,124,125,126,127,128,129,149,151,167,168,171,172,173,174,175,176,234,235,236,237,256,280,284,299,308,309,310,311,312,313,314,315,316,317,318,319,320,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-154,-129,-154,-154,-154,-154,-88,-89,-90,-154,-105,-16,-18,231,-136,-154,-124,-154,-125,-154,-126,-85,-130,-86,-87,-21,-154,-154,-17,231,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'DIV':([78,79,80,81,82,83,84,85,86,108,109,120,122,123,124,125,126,127,128,129,149,151,167,168,171,172,173,174,175,176,234,235,236,237,256,280,284,299,308,309,310,311,312,313,314,315,316,317,318,319,320,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-154,-129,-154,-154,-154,-154,-88,-89,-90,-154,-105,-16,-18,232,-136,-154,-124,-154,-125,-154,-126,-85,-130,-86,-87,-21,-154,-154,-17,232,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'PLUS':([78,79,80,81,82,83,84,85,86,108,109,119,120,122,123,124,125,126,127,128,129,149,151,165,166,167,168,171,172,173,174,175,176,228,230,234,235,236,237,256,276,280,284,299,307,308,309,310,311,312,313,314,315,316,317,318,319,320,331,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-154,-129,-154,-154,-154,-154,-154,-88,-89,-90,-154,-105,-16,-18,226,-135,-154,-136,-154,-124,-154,-125,-154,-126,-79,-81,-85,-130,-86,-87,-21,-154,-154,-154,-17,226,-154,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-80,]),'MINUS':([78,79,80,81,82,83,84,85,86,108,109,119,120,122,123,124,125,126,127,128,129,149,151,165,166,167,168,171,172,173,174,175,176,228,230,234,235,236,237,256,276,280,284,299,307,308,309,310,311,312,313,314,315,316,317,318,319,320,331,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-154,-129,-154,-154,-154,-154,-154,-88,-89,-90,-154,-105,-16,-18,227,-135,-154,-136,-154,-124,-154,-125,-154,-126,-79,-81,-85,-130,-86,-87,-21,-154,-154,-154,-17,227,-154,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-80,]),'LESS_THAN':([78,79,80,81,82,83,84,85,86,108,109,118,119,120,122,123,124,125,126,127,128,129,149,151,163,164,165,166,167,168,171,172,173,174,175,176,223,225,228,230,234,235,236,237,256,270,276,280,284,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,330,331,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-154,-129,-154,-154,-154,-154,-154,-154,-88,-89,-90,-154,-105,-16,-18,219,-137,-154,-135,-154,-136,-154,-124,-154,-125,-154,-126,-74,-76,-79,-81,-85,-130,-86,-87,-21,-154,-154,-154,-154,-17,219,-154,-154,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,]),'GREATER_THAN':([78,79,80,81,82,83,84,85,86,108,109,118,119,120,122,123,124,125,126,127,128,129,149,151,163,164,165,166,167,168,171,172,173,174,175,176,223,225,228,230,234,235,236,237,256,270,276,280,284,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,330,331,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-154,-129,-154,-154,-154,-154,-154,-154,-88,-89,-90,-154,-105,-16,-18,220,-137,-154,-135,-154,-136,-154,-124,-154,-125,-154,-126,-74,-76,-79,-81,-85,-130,-86,-87,-21,-154,-154,-154,-154,-17,220,-154,-154,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,]),'EQUALS':([78,79,80,81,82,83,84,85,86,108,109,118,119,120,122,123,124,125,126,127,128,129,149,151,163,164,165,166,167,168,171,172,173,174,175,176,223,225,228,230,234,235,236,237,256,270,276,280,284,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,330,331,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-154,-129,-154,-154,-154,-154,-154,-154,-88,-89,-90,-154,-105,-16,-18,221,-137,-154,-135,-154,-136,-154,-124,-154,-125,-154,-126,-74,-76,-79,-81,-85,-130,-86,-87,-21,-154,-154,-154,-154,-17,221,-154,-154,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,]),'NOTEQUALS':([78,79,80,81,82,83,84,85,86,108,109,118,119,120,122,123,124,125,126,127,128,129,149,151,163,164,165,166,167,168,171,172,173,174,175,176,223,225,228,230,234,235,236,237,256,270,276,280,284,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,330,331,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-154,-129,-154,-154,-154,-154,-154,-154,-88,-89,-90,-154,-105,-16,-18,222,-137,-154,-135,-154,-136,-154,-124,-154,-125,-154,-126,-74,-76,-79,-81,-85,-130,-86,-87,-21,-154,-154,-154,-154,-17,222,-154,-154,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,]),'AND':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,120,122,123,124,125,126,127,128,129,149,151,161,162,163,164,165,166,167,168,171,172,173,174,175,176,216,218,223,225,228,230,234,235,236,237,256,266,270,276,280,284,299,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,329,330,331,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-154,-129,-154,-154,-154,-154,-154,-154,-154,-88,-89,-90,-154,-105,-16,-18,214,-138,-154,-137,-154,-135,-154,-136,-154,-124,-154,-125,-154,-126,-67,-69,-74,-76,-79,-81,-85,-130,-86,-87,-21,-154,-154,-154,-154,-154,-17,214,-154,-154,-154,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-68,-75,-80,]),'OR':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,120,122,123,124,125,126,127,128,129,149,151,161,162,163,164,165,166,167,168,171,172,173,174,175,176,216,218,223,225,228,230,234,235,236,237,256,266,270,276,280,284,299,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,329,330,331,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-154,-129,-154,-154,-154,-154,-154,-154,-154,-88,-89,-90,-154,-105,-16,-18,215,-138,-154,-137,-154,-135,-154,-136,-154,-124,-154,-125,-154,-126,-67,-69,-74,-76,-79,-81,-85,-130,-86,-87,-21,-154,-154,-154,-154,-154,-17,215,-154,-154,-154,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-68,-75,-80,]),'CTEF':([87,106,107,111,112,121,144,145,150,158,169,170,197,212,214,215,217,219,220,221,222,224,226,227,229,231,232,259,265,267,268,269,271,272,273,274,275,277,278,279,281,282,283,338,],[123,-154,123,123,123,-154,123,-139,123,123,123,-127,123,123,-154,-154,123,-154,-154,-154,-154,123,-154,-154,123,-154,-154,123,123,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,123,]),'CTEC':([87,106,107,111,112,121,144,145,150,158,169,170,197,212,214,215,217,219,220,221,222,224,226,227,229,231,232,259,265,267,268,269,271,272,273,274,275,277,278,279,281,282,283,338,],[124,-154,124,124,124,-154,124,-139,124,124,124,-127,124,124,-154,-154,124,-154,-154,-154,-154,124,-154,-154,124,-154,-154,124,124,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,124,]),'LETRERO':([111,130,],[156,177,]),'IF_TRUE':([263,],[302,]),'IF_FALSE':([341,],[347,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pnCrearDirFunc':([2,],[3,]),'empty':([2,5,8,9,10,12,14,25,26,27,28,30,31,32,44,45,47,48,49,53,59,72,76,98,104,106,107,108,117,118,119,120,121,122,123,124,128,140,141,147,152,153,155,156,157,159,161,163,165,167,171,173,175,177,178,179,180,181,182,183,184,185,186,192,193,194,199,208,214,215,219,220,221,222,226,227,231,232,257,266,270,276,280,284,295,296,304,305,306,307,308,321,322,324,325,339,341,342,343,346,347,358,359,363,],[4,7,11,15,11,19,15,35,35,35,35,35,43,11,15,51,54,57,60,101,60,109,114,19,143,145,148,151,162,164,166,168,170,172,174,176,109,189,54,198,201,109,204,204,207,210,213,218,225,230,235,235,235,239,241,241,241,241,241,241,241,241,241,35,101,255,260,207,268,268,272,272,272,272,278,278,282,282,198,162,164,166,168,310,11,323,327,213,218,225,230,60,335,60,60,345,348,350,352,354,356,60,60,365,]),'pnScriptFuncDir':([5,],[6,]),'varp':([8,10,32,295,],[9,17,44,321,]),'var':([8,10,32,295,],[10,10,10,10,]),'funcp':([9,14,44,],[13,22,49,]),'func':([9,14,44,],[14,14,14,]),'pnCheckTablaVar':([12,98,],[18,140,]),'bloque':([13,],[20,]),'returnval':([16,],[23,]),'tipo_simp':([16,18,140,334,],[24,31,191,191,]),'v':([18,],[29,]),'pnSaveTypeVar':([25,26,27,28,30,192,],[34,36,37,38,40,252,]),'vp':([31,],[41,]),'idp':([39,],[46,]),'pnAddFuncinDir':([45,],[50,]),'pnCheckNameTablaVar':([47,141,],[53,193,]),'vpp':([48,],[55,]),'estatutop':([49,59,321,324,325,358,359,],[58,105,332,336,337,360,361,]),'estatuto':([49,59,321,324,325,358,359,],[59,59,59,59,59,59,59,]),'asign':([49,59,321,324,325,358,359,],[61,61,61,61,61,61,61,]),'llamada':([49,59,87,107,111,112,144,150,158,169,197,212,217,224,229,259,265,321,324,325,338,358,359,],[62,62,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,62,62,62,126,62,62,]),'lee':([49,59,321,324,325,358,359,],[63,63,63,63,63,63,63,]),'escribe':([49,59,321,324,325,358,359,],[64,64,64,64,64,64,64,]),'condicion':([49,59,321,324,325,358,359,],[65,65,65,65,65,65,65,]),'ciclow':([49,59,321,324,325,358,359,],[66,66,66,66,66,66,66,]),'ciclof':([49,59,321,324,325,358,359,],[67,67,67,67,67,67,67,]),'funcesp':([49,59,87,107,111,112,144,150,158,169,197,212,217,224,229,259,265,321,324,325,338,358,359,],[68,68,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,68,68,68,127,68,68,]),'return':([49,59,321,324,325,358,359,],[69,69,69,69,69,69,69,]),'copy':([49,59,87,107,111,112,144,150,158,169,197,212,217,224,229,259,265,321,324,325,338,358,359,],[70,70,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,70,70,70,129,70,70,]),'variable':([49,59,87,107,110,111,112,131,132,133,134,135,136,137,138,139,144,150,158,169,197,212,217,224,229,259,265,321,324,325,338,358,359,],[71,71,125,125,152,125,125,178,179,180,181,182,183,184,185,186,125,125,125,125,125,125,125,125,125,125,125,71,71,71,125,71,71,]),'mean':([49,59,87,107,111,112,144,150,158,169,197,212,217,224,229,259,265,321,324,325,338,358,359,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'mode':([49,59,87,107,111,112,144,150,158,169,197,212,217,224,229,259,265,321,324,325,338,358,359,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'median':([49,59,87,107,111,112,144,150,158,169,197,212,217,224,229,259,265,321,324,325,338,358,359,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'variance':([49,59,87,107,111,112,144,150,158,169,197,212,217,224,229,259,265,321,324,325,338,358,359,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'max':([49,59,87,107,111,112,144,150,158,169,197,212,217,224,229,259,265,321,324,325,338,358,359,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'min':([49,59,87,107,111,112,144,150,158,169,197,212,217,224,229,259,265,321,324,325,338,358,359,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'staddes':([49,59,87,107,111,112,144,150,158,169,197,212,217,224,229,259,265,321,324,325,338,358,359,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'boxplot':([49,59,87,107,111,112,144,150,158,169,197,212,217,224,229,259,265,321,324,325,338,358,359,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'linreg':([49,59,87,107,111,112,144,150,158,169,197,212,217,224,229,259,265,321,324,325,338,358,359,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'idpp':([53,193,],[99,253,]),'pnSaveOperandos':([72,128,153,],[108,108,108,]),'pnSaveWhile':([76,],[113,]),'exp':([87,107,111,112,144,150,158,169,197,259,265,338,],[116,147,155,157,194,199,208,233,257,300,304,343,]),'exprel':([87,107,111,112,144,150,158,169,197,212,259,265,338,],[117,117,117,117,117,117,117,117,117,266,117,117,117,]),'e':([87,107,111,112,144,150,158,169,197,212,217,259,265,338,],[118,118,118,118,118,118,118,118,118,118,270,118,118,118,]),'t':([87,107,111,112,144,150,158,169,197,212,217,224,259,265,338,],[119,119,119,119,119,119,119,119,119,119,119,276,119,119,119,]),'f':([87,107,111,112,144,150,158,169,197,212,217,224,229,259,265,338,],[120,120,120,120,120,120,120,120,120,120,120,120,280,120,120,120,]),'pnEndScript':([104,],[142,]),'pnSaveOperadorAsign':([106,],[144,]),'expp':([107,],[146,]),'indexp':([108,],[149,]),'escribep':([111,],[154,]),'pnCuadOplog':([117,266,],[161,305,]),'pnCuadOpRelacional':([118,270,],[163,306,]),'pnCuadPlMi':([119,276,],[165,307,]),'pnCuadMuDi':([120,280,],[167,308,]),'pnSaveFondoFalso':([121,],[169,]),'pnSaveCteI':([122,],[171,]),'pnSaveCteF':([123,],[173,]),'pnSaveCteC':([124,],[175,]),'param':([140,],[187,]),'paramlist':([140,334,],[188,340,]),'tipoparam':([140,334,],[190,190,]),'exppp':([147,257,],[196,298,]),'pnCuadLee':([152,],[200,]),'pnCuadEscribe':([155,156,],[203,205,]),'pnCheckBoolIf':([157,208,],[206,264,]),'pnSaveForID':([159,],[209,]),'logic':([161,305,],[211,328,]),'logicsig':([161,305,],[212,212,]),'relacionalp':([163,306,],[216,329,]),'relsig':([163,306,],[217,217,]),'tp':([165,307,],[223,330,]),'tsig':([165,307,],[224,224,]),'fp':([167,308,],[228,331,]),'fsig':([167,308,],[229,229,]),'pnSaveOperandoConstante':([171,173,175,],[234,236,237,]),'pnCuadCopy':([177,],[238,]),'pnCuadFuncEsp':([178,179,180,181,182,183,184,185,186,],[240,242,243,244,245,246,247,248,249,]),'pnCuadAsign':([194,],[254,]),'indexpp':([199,],[258,]),'pnSaveOperadorLog':([214,215,],[267,269,]),'pnSaveOperadorRel':([219,220,221,222,],[271,273,274,275,]),'pnSaveOperadorPlMi':([226,227,],[277,279,]),'pnSaveOperadorMuDi':([231,232,],[281,283,]),'pnPopFondoFalso':([284,],[309,]),'pnAddParametersTablaVar':([296,],[322,]),'pnCreateVControl':([304,],[326,]),'paramlistp':([322,],[333,]),'pnCloseCurrentFunction':([339,],[344,]),'falsop':([341,],[346,]),'pnEndWhile':([342,],[349,]),'pnCompControlFinal':([343,],[351,]),'pnEndIf':([346,],[353,]),'pnElseIf':([347,],[355,]),'pnEndFor':([363,],[364,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque','programa',8,'p_programa','lexer-parser.py',186),
  ('varp -> var varp','varp',2,'p_programa','lexer-parser.py',187),
  ('varp -> empty','varp',1,'p_programa','lexer-parser.py',188),
  ('funcp -> func funcp','funcp',2,'p_programa','lexer-parser.py',189),
  ('funcp -> empty','funcp',1,'p_programa','lexer-parser.py',190),
  ('bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript','bloque',7,'p_bloque','lexer-parser.py',196),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_bloque','lexer-parser.py',197),
  ('estatutop -> empty','estatutop',1,'p_bloque','lexer-parser.py',198),
  ('tipo_simp -> INT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',204),
  ('tipo_simp -> FLOAT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',205),
  ('tipo_simp -> CHAR pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',206),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','lexer-parser.py',212),
  ('tipo_comp -> file','tipo_comp',1,'p_tipo_comp','lexer-parser.py',213),
  ('copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON','copy',6,'p_copy','lexer-parser.py',219),
  ('file -> ID','file',1,'p_file','lexer-parser.py',225),
  ('variable -> ID pnSaveOperandos indexp','variable',3,'p_variable','lexer-parser.py',231),
  ('indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET','indexp',4,'p_variable','lexer-parser.py',232),
  ('indexp -> empty','indexp',1,'p_variable','lexer-parser.py',233),
  ('indexpp -> COMMA exp','indexpp',2,'p_variable','lexer-parser.py',234),
  ('indexpp -> empty','indexpp',1,'p_variable','lexer-parser.py',235),
  ('llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON','llamada',5,'p_llamada','lexer-parser.py',241),
  ('expp -> exp exppp','expp',2,'p_llamada','lexer-parser.py',242),
  ('expp -> empty','expp',1,'p_llamada','lexer-parser.py',243),
  ('exppp -> COMMA exp exppp','exppp',3,'p_llamada','lexer-parser.py',244),
  ('exppp -> empty','exppp',1,'p_llamada','lexer-parser.py',245),
  ('var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON','var',6,'p_var','lexer-parser.py',251),
  ('v -> DATAFRAME pnSaveTypeVar','v',2,'p_var','lexer-parser.py',252),
  ('v -> tipo_simp vp','v',2,'p_var','lexer-parser.py',253),
  ('vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET','vp',4,'p_var','lexer-parser.py',254),
  ('vp -> empty','vp',1,'p_var','lexer-parser.py',255),
  ('vpp -> COMMA CTEI','vpp',2,'p_var','lexer-parser.py',256),
  ('vpp -> empty','vpp',1,'p_var','lexer-parser.py',257),
  ('idp -> ID pnCheckNameTablaVar idpp','idp',3,'p_var','lexer-parser.py',258),
  ('idpp -> COMMA ID pnCheckNameTablaVar idpp','idpp',4,'p_var','lexer-parser.py',259),
  ('idpp -> empty','idpp',1,'p_var','lexer-parser.py',260),
  ('func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction','func',14,'p_func','lexer-parser.py',266),
  ('returnval -> tipo_simp','returnval',1,'p_func','lexer-parser.py',267),
  ('returnval -> VOID pnSaveTypeVar','returnval',2,'p_func','lexer-parser.py',268),
  ('param -> paramlist','param',1,'p_param','lexer-parser.py',274),
  ('param -> empty','param',1,'p_param','lexer-parser.py',275),
  ('paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp','paramlist',5,'p_param','lexer-parser.py',276),
  ('tipoparam -> tipo_simp','tipoparam',1,'p_param','lexer-parser.py',277),
  ('tipoparam -> DATAFRAME pnSaveTypeVar','tipoparam',2,'p_param','lexer-parser.py',278),
  ('paramlistp -> COMMA paramlist','paramlistp',2,'p_param','lexer-parser.py',279),
  ('paramlistp -> empty','paramlistp',1,'p_param','lexer-parser.py',280),
  ('estatuto -> asign','estatuto',1,'p_estatuto','lexer-parser.py',286),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','lexer-parser.py',287),
  ('estatuto -> lee','estatuto',1,'p_estatuto','lexer-parser.py',288),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','lexer-parser.py',289),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexer-parser.py',290),
  ('estatuto -> ciclow','estatuto',1,'p_estatuto','lexer-parser.py',291),
  ('estatuto -> ciclof','estatuto',1,'p_estatuto','lexer-parser.py',292),
  ('estatuto -> funcesp','estatuto',1,'p_estatuto','lexer-parser.py',293),
  ('estatuto -> return','estatuto',1,'p_estatuto','lexer-parser.py',294),
  ('estatuto -> copy','estatuto',1,'p_estatuto','lexer-parser.py',295),
  ('asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON','asign',6,'p_asign','lexer-parser.py',301),
  ('lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON','lee',6,'p_lee','lexer-parser.py',307),
  ('escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON','escribe',5,'p_escribe','lexer-parser.py',313),
  ('escribep -> exp pnCuadEscribe','escribep',2,'p_escribe','lexer-parser.py',314),
  ('escribep -> LETRERO pnCuadEscribe','escribep',2,'p_escribe','lexer-parser.py',315),
  ('return -> RETURNS exp SEMICOLON','return',3,'p_return','lexer-parser.py',321),
  ('exp -> exprel pnCuadOplog logic','exp',3,'p_exp','lexer-parser.py',327),
  ('logic -> logicsig exprel pnCuadOplog logic','logic',4,'p_exp','lexer-parser.py',328),
  ('logic -> empty','logic',1,'p_exp','lexer-parser.py',329),
  ('logicsig -> AND pnSaveOperadorLog','logicsig',2,'p_exp','lexer-parser.py',330),
  ('logicsig -> OR pnSaveOperadorLog','logicsig',2,'p_exp','lexer-parser.py',331),
  ('exprel -> e pnCuadOpRelacional relacionalp','exprel',3,'p_exprel','lexer-parser.py',337),
  ('relacionalp -> relsig e pnCuadOpRelacional relacionalp','relacionalp',4,'p_exprel','lexer-parser.py',338),
  ('relacionalp -> empty','relacionalp',1,'p_exprel','lexer-parser.py',339),
  ('relsig -> LESS_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',340),
  ('relsig -> GREATER_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',341),
  ('relsig -> EQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',342),
  ('relsig -> NOTEQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',343),
  ('e -> t pnCuadPlMi tp','e',3,'p_e','lexer-parser.py',349),
  ('tp -> tsig t pnCuadPlMi tp','tp',4,'p_e','lexer-parser.py',350),
  ('tp -> empty','tp',1,'p_e','lexer-parser.py',351),
  ('tsig -> PLUS pnSaveOperadorPlMi','tsig',2,'p_e','lexer-parser.py',352),
  ('tsig -> MINUS pnSaveOperadorPlMi','tsig',2,'p_e','lexer-parser.py',353),
  ('t -> f pnCuadMuDi fp','t',3,'p_t','lexer-parser.py',359),
  ('fp -> fsig f pnCuadMuDi fp','fp',4,'p_t','lexer-parser.py',360),
  ('fp -> empty','fp',1,'p_t','lexer-parser.py',361),
  ('fsig -> MULT pnSaveOperadorMuDi','fsig',2,'p_t','lexer-parser.py',362),
  ('fsig -> DIV pnSaveOperadorMuDi','fsig',2,'p_t','lexer-parser.py',363),
  ('f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso','f',5,'p_f','lexer-parser.py',369),
  ('f -> CTEI pnSaveCteI pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',370),
  ('f -> CTEF pnSaveCteF pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',371),
  ('f -> CTEC pnSaveCteC pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',372),
  ('f -> variable','f',1,'p_f','lexer-parser.py',373),
  ('f -> llamada','f',1,'p_f','lexer-parser.py',374),
  ('f -> funcesp','f',1,'p_f','lexer-parser.py',375),
  ('condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf','condicion',11,'p_condicion','lexer-parser.py',381),
  ('falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','falsop',5,'p_condicion','lexer-parser.py',382),
  ('falsop -> empty','falsop',1,'p_condicion','lexer-parser.py',383),
  ('ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile','ciclow',10,'p_ciclow','lexer-parser.py',389),
  ('ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor','ciclof',15,'p_ciclof','lexer-parser.py',395),
  ('funcesp -> mean','funcesp',1,'p_funcesp','lexer-parser.py',401),
  ('funcesp -> mode','funcesp',1,'p_funcesp','lexer-parser.py',402),
  ('funcesp -> median','funcesp',1,'p_funcesp','lexer-parser.py',403),
  ('funcesp -> variance','funcesp',1,'p_funcesp','lexer-parser.py',404),
  ('funcesp -> max','funcesp',1,'p_funcesp','lexer-parser.py',405),
  ('funcesp -> min','funcesp',1,'p_funcesp','lexer-parser.py',406),
  ('funcesp -> staddes','funcesp',1,'p_funcesp','lexer-parser.py',407),
  ('funcesp -> boxplot','funcesp',1,'p_funcesp','lexer-parser.py',408),
  ('funcesp -> linreg','funcesp',1,'p_funcesp','lexer-parser.py',409),
  ('funcesp -> copy','funcesp',1,'p_funcesp','lexer-parser.py',410),
  ('mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mean',6,'p_mean','lexer-parser.py',416),
  ('mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mode',6,'p_mode','lexer-parser.py',422),
  ('median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','median',6,'p_median','lexer-parser.py',428),
  ('variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','variance',6,'p_variance','lexer-parser.py',434),
  ('max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','max',6,'p_max','lexer-parser.py',440),
  ('min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','min',6,'p_min','lexer-parser.py',446),
  ('staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','staddes',6,'p_staddes','lexer-parser.py',452),
  ('boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','boxplot',6,'p_boxplot','lexer-parser.py',458),
  ('linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','linreg',6,'p_linreg','lexer-parser.py',464),
  ('pnCrearDirFunc -> empty','pnCrearDirFunc',1,'p_pnCrearDirFunc','lexer-parser.py',474),
  ('pnScriptFuncDir -> empty','pnScriptFuncDir',1,'p_pnScriptFuncDir','lexer-parser.py',484),
  ('pnCheckTablaVar -> empty','pnCheckTablaVar',1,'p_pnCheckTablaVar','lexer-parser.py',493),
  ('pnSaveTypeVar -> empty','pnSaveTypeVar',1,'p_pnSaveTypeVar','lexer-parser.py',501),
  ('pnCheckNameTablaVar -> empty','pnCheckNameTablaVar',1,'p_pnCheckNameTablaVar','lexer-parser.py',510),
  ('pnAddFuncinDir -> empty','pnAddFuncinDir',1,'p_pnAddFuncinDir','lexer-parser.py',517),
  ('pnAddParametersTablaVar -> empty','pnAddParametersTablaVar',1,'p_pnAddParametersTablaVar','lexer-parser.py',531),
  ('pnCloseCurrentFunction -> empty','pnCloseCurrentFunction',1,'p_pnCloseCurrentFunction','lexer-parser.py',539),
  ('pnEndScript -> empty','pnEndScript',1,'p_pnEndScript','lexer-parser.py',548),
  ('pnSaveCteI -> empty','pnSaveCteI',1,'p_pnSaveCteI','lexer-parser.py',556),
  ('pnSaveCteF -> empty','pnSaveCteF',1,'p_pnSaveCteF','lexer-parser.py',563),
  ('pnSaveCteC -> empty','pnSaveCteC',1,'p_pnSaveCteC','lexer-parser.py',570),
  ('pnSaveFondoFalso -> empty','pnSaveFondoFalso',1,'p_pnSaveFondoFalso','lexer-parser.py',577),
  ('pnPopFondoFalso -> empty','pnPopFondoFalso',1,'p_pnPopFondoFalso','lexer-parser.py',584),
  ('pnSaveOperandos -> empty','pnSaveOperandos',1,'p_pnSaveOperandos','lexer-parser.py',594),
  ('pnSaveOperandoConstante -> empty','pnSaveOperandoConstante',1,'p_pnSaveOperandoConstante','lexer-parser.py',610),
  ('pnSaveOperadorPlMi -> empty','pnSaveOperadorPlMi',1,'p_pnSaveOperadorPlMi','lexer-parser.py',618),
  ('pnSaveOperadorMuDi -> empty','pnSaveOperadorMuDi',1,'p_pnSaveOperadorMuDi','lexer-parser.py',625),
  ('pnSaveOperadorRel -> empty','pnSaveOperadorRel',1,'p_pnSaveOperadorRel','lexer-parser.py',632),
  ('pnSaveOperadorLog -> empty','pnSaveOperadorLog',1,'p_pnSaveOperadorLog','lexer-parser.py',639),
  ('pnCuadPlMi -> empty','pnCuadPlMi',1,'p_pnCuadPlMi','lexer-parser.py',646),
  ('pnCuadMuDi -> empty','pnCuadMuDi',1,'p_pnCuadMuDi','lexer-parser.py',680),
  ('pnCuadOpRelacional -> empty','pnCuadOpRelacional',1,'p_pnCuadOpRelacional','lexer-parser.py',714),
  ('pnCuadOplog -> empty','pnCuadOplog',1,'p_pnCuadOplog','lexer-parser.py',749),
  ('pnSaveOperadorAsign -> empty','pnSaveOperadorAsign',1,'p_pnSaveOperadorAsign','lexer-parser.py',782),
  ('pnCuadAsign -> empty','pnCuadAsign',1,'p_pnCuadAsign','lexer-parser.py',789),
  ('pnCuadEscribe -> empty','pnCuadEscribe',1,'p_pnCuadEscribe','lexer-parser.py',815),
  ('pnCuadLee -> empty','pnCuadLee',1,'p_pnCuadLee','lexer-parser.py',845),
  ('pnCuadCopy -> empty','pnCuadCopy',1,'p_pnCuadCopy','lexer-parser.py',862),
  ('pnCuadFuncEsp -> empty','pnCuadFuncEsp',1,'p_pnCuadFuncEsp','lexer-parser.py',881),
  ('pnCheckBoolIf -> empty','pnCheckBoolIf',1,'p_pnCheckBoolIf','lexer-parser.py',927),
  ('pnElseIf -> empty','pnElseIf',1,'p_pnElseIf','lexer-parser.py',945),
  ('pnEndIf -> empty','pnEndIf',1,'p_pnEndIf','lexer-parser.py',956),
  ('pnSaveWhile -> empty','pnSaveWhile',1,'p_pnSaveWhile','lexer-parser.py',965),
  ('pnEndWhile -> empty','pnEndWhile',1,'p_pnEndWhile','lexer-parser.py',975),
  ('pnSaveForID -> empty','pnSaveForID',1,'p_pnSaveForID','lexer-parser.py',989),
  ('pnCreateVControl -> empty','pnCreateVControl',1,'p_pnCreateVControl','lexer-parser.py',1014),
  ('pnCompControlFinal -> empty','pnCompControlFinal',1,'p_pnCompControlFinal','lexer-parser.py',1042),
  ('pnEndFor -> empty','pnEndFor',1,'p_pnEndFor','lexer-parser.py',1072),
  ('empty -> <empty>','empty',0,'p_empty','lexer-parser.py',1106),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVAND ARROW ASIGN BOXPLOT CHAR COMMA COMMENT CTEC CTEF CTEI DATAFRAME DIV DO EQUALS FLOAT FOR FUNC GREATER_THAN ID IF IF_FALSE IF_TRUE INT LEFT_CUR_BRACKET LEFT_PARENT LEFT_SQR_BRACKET LESS_THAN LETRERO LINREG MAX MEAN MEDIAN MIN MINUS MODE MULT NOTEQUALS OR PLUS READ READ_FILE RETURNS RIGHT_CUR_BRACKET RIGHT_PARENT RIGHT_SQR_BRACKET SCRIPT SEMICOLON STADDES VAR VARIANCE VOID WHILE WRITE\n    programa : SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque\n    varp : var varp \n         | empty\n    funcp : func funcp \n          | empty\n    \n    bloque : DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript\n    estatutop : estatuto estatutop \n              | empty\n    \n    tipo_simp : INT pnSaveTypeVar\n              | FLOAT pnSaveTypeVar\n              | CHAR pnSaveTypeVar\n    \n    tipo_comp : DATAFRAME \n              | file\n    \n    copy : READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON\n    \n    file : ID\n    \n    variable : ID pnSaveOperandos indexp\n    indexp : LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET \n           | empty\n    indexpp : COMMA exp \n            | empty\n    \n    llamada : ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON\n    expp : exp exppp\n         | empty\n    exppp : COMMA exp exppp\n          | empty\n    \n    var : VAR pnCheckTablaVar v ARROW idp SEMICOLON\n    v : DATAFRAME pnSaveTypeVar\n      | tipo_simp vp\n    vp : LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET \n       | empty\n    vpp : COMMA CTEI \n        | empty\n    idp : ID pnCheckNameTablaVar idpp\n    idpp : COMMA ID pnCheckNameTablaVar idpp\n         | empty\n    \n    func : FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction\n    returnval : tipo_simp \n              | VOID pnSaveTypeVar\n    \n    param : paramlist\n          | empty\n    paramlist : tipoparam ARROW ID pnAddParametersTablaVar paramlistp\n    tipoparam : tipo_simp\n              | DATAFRAME pnSaveTypeVar\n    paramlistp : COMMA paramlist\n               | empty\n    \n    estatuto : asign\n             | llamada\n             | lee\n             | escribe\n             | condicion\n             | ciclow\n             | ciclof\n             | funcesp\n             | return\n             | copy\n    \n    asign : variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON\n    \n    lee : READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON\n    \n    escribe :  WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON\n    escribep : exp pnCuadEscribe\n             | LETRERO pnCuadEscribe\n    \n    return : RETURNS exp SEMICOLON\n    \n    exp : exprel pnCuadOplog logic\n    logic : logicsig exprel pnCuadOplog logic \n          | empty\n    logicsig : AND pnSaveOperadorLog\n             | OR pnSaveOperadorLog\n    \n    exprel : e pnCuadOpRelacional relacionalp\n    relacionalp : relsig e pnCuadOpRelacional relacionalp \n                | empty\n    relsig : LESS_THAN pnSaveOperadorRel\n           | GREATER_THAN pnSaveOperadorRel\n           | EQUALS pnSaveOperadorRel\n           | NOTEQUALS pnSaveOperadorRel\n    \n    e : t pnCuadPlMi tp\n    tp : tsig t pnCuadPlMi tp \n       | empty\n    tsig : PLUS pnSaveOperadorPlMi\n         | MINUS pnSaveOperadorPlMi\n    \n    t : f pnCuadMuDi fp\n    fp : fsig f pnCuadMuDi fp \n       | empty\n    fsig : MULT pnSaveOperadorMuDi\n         | DIV pnSaveOperadorMuDi\n    \n    f : LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso\n      | CTEI pnSaveCteI  pnSaveOperandoConstante\n      | CTEF pnSaveCteF pnSaveOperandoConstante\n      | CTEC pnSaveCteC pnSaveOperandoConstante\n      | variable\n      | llamada\n      | funcesp\n    \n    condicion : IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf\n    falsop : IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET \n           | empty\n    \n    ciclow : WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile\n    \n    ciclof : FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor\n    \n    funcesp : mean\n            | mode\n            | median\n            | variance\n            | max\n            | min\n            | staddes\n            | boxplot\n            | linreg\n            | copy\n    \n    mean : MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    mode : MODE LEFT_PARENT variable  pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    median : MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    variance : VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    max : MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    min : MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    staddes : STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    boxplot : BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    linreg : LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    pnCrearDirFunc : empty\n    \n    pnScriptFuncDir : empty\n    \n    pnCheckTablaVar : empty\n    \n    pnCrearListaParam : empty\n    \n    pnSaveTypeVar : empty\n    \n    pnCheckNameTablaVar : empty\n    \n    pnAddFuncinDir : empty\n    \n    pnAddParametersTablaVar : empty\n    \n    pnDirecIniFunc : empty\n    \n    pnCloseCurrentFunction : empty\n    \n    pnEndScript : empty\n    \n    pnSaveCteI : empty\n    \n    pnSaveCteF : empty\n    \n    pnSaveCteC : empty\n    \n    pnSaveFondoFalso : empty\n    \n    pnPopFondoFalso : empty\n    \n    pnSaveOperandos : empty\n    \n    pnSaveOperandoConstante : empty\n    \n    pnSaveOperadorPlMi : empty\n    \n    pnSaveOperadorMuDi : empty\n    \n    pnSaveOperadorRel : empty\n    \n    pnSaveOperadorLog : empty\n    \n    pnCuadPlMi : empty\n    \n    pnCuadMuDi : empty\n    \n    pnCuadOpRelacional : empty\n    \n    pnCuadOplog : empty\n    \n    pnSaveOperadorAsign : empty\n    \n    pnCuadAsign : empty\n    \n    pnCuadEscribe : empty\n    \n    pnCuadLee : empty\n    \n    pnCuadCopy : empty\n    \n    pnCuadFuncEsp : empty\n    \n    pnCheckBoolIf : empty\n    \n    pnElseIf : empty\n    \n    pnEndIf : empty\n    \n    pnSaveWhile : empty\n    \n    pnEndWhile : empty\n    \n    pnSaveForID : empty\n    \n    pnCreateVControl : empty\n    \n    pnCompControlFinal : empty\n    \n    pnEndFor : empty\n    \n    empty :'
    
_lr_action_items = {'SCRIPT':([0,],[2,]),'$end':([1,20,104,142,143,],[0,-1,-156,-6,-125,]),'ID':([2,3,4,10,11,14,15,17,22,32,33,39,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,100,106,107,110,111,112,115,121,131,132,133,134,135,136,137,138,139,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,295,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,336,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,5,-115,-156,-3,-156,-5,-2,-4,-156,45,47,-156,72,-26,72,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,128,141,-156,128,153,128,128,159,-156,153,153,153,153,153,153,153,153,153,128,-141,128,128,-61,128,-129,128,128,-156,-156,128,-156,-156,-156,-156,128,-156,-156,128,-156,-156,-21,128,-58,128,-65,-136,-66,-70,-135,-71,-72,-73,-77,-133,-78,-82,-134,-83,322,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,72,72,-156,128,72,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,72,72,-92,-156,-95,-155,]),'SEMICOLON':([5,6,7,46,47,53,54,78,79,80,81,82,83,84,85,86,99,101,108,109,116,117,118,119,120,122,123,124,125,126,127,128,129,141,149,151,161,162,163,164,165,166,167,168,171,172,173,174,175,176,189,190,191,198,207,209,212,214,219,221,224,226,230,231,232,233,252,253,254,255,260,265,269,275,279,283,284,285,286,287,288,289,290,291,292,293,299,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,327,328,329,330,],[-156,8,-116,52,-156,-156,-120,-96,-97,-98,-99,-100,-101,-102,-103,-104,-33,-35,-156,-131,160,-156,-156,-156,-156,-156,-156,-156,-88,-89,-90,-156,-105,-156,-16,-18,-156,-140,-156,-139,-156,-137,-156,-138,-156,-126,-156,-127,-156,-128,-156,-156,255,261,-62,-64,-67,-69,-74,-76,-79,-81,-85,-132,-86,-87,-34,297,-142,-21,301,-156,-156,-156,-156,-156,311,312,313,314,315,316,317,318,319,320,-17,-156,-156,-156,-156,-84,-130,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-63,-68,-75,-80,]),'VAR':([8,10,32,52,321,],[12,12,12,-26,12,]),'FUNC':([8,9,10,11,14,17,32,44,52,354,360,361,],[-156,16,-156,-3,16,-2,-156,16,-26,-156,-36,-124,]),'DO':([8,9,10,11,13,14,15,17,22,52,354,360,361,],[-156,-156,-156,-3,21,-156,-5,-2,-4,-26,-156,-36,-124,]),'READ':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,255,261,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,73,-26,73,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,73,73,-156,73,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,73,73,-92,-156,-95,-155,]),'WRITE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,255,261,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,74,-26,74,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,74,74,-156,74,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,74,74,-92,-156,-95,-155,]),'IF':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,255,261,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,75,-26,75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,75,75,-156,75,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,75,75,-92,-156,-95,-155,]),'WHILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,255,261,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,76,-26,76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,76,76,-156,76,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,76,76,-92,-156,-95,-155,]),'FOR':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,255,261,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,77,-26,77,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,77,77,-156,77,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,77,77,-92,-156,-95,-155,]),'RETURNS':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,255,261,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,87,-26,87,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,87,87,-156,87,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,87,87,-92,-156,-95,-155,]),'READ_FILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,336,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,88,-26,88,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,88,-156,88,88,88,-156,88,-141,88,88,-61,88,-129,88,88,-156,-156,88,-156,-156,-156,-156,88,-156,-156,88,-156,-156,-21,88,-58,88,-65,-136,-66,-70,-135,-71,-72,-73,-77,-133,-78,-82,-134,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,88,88,-156,88,88,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,88,88,-92,-156,-95,-155,]),'MEAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,336,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,89,-26,89,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,89,-156,89,89,89,-156,89,-141,89,89,-61,89,-129,89,89,-156,-156,89,-156,-156,-156,-156,89,-156,-156,89,-156,-156,-21,89,-58,89,-65,-136,-66,-70,-135,-71,-72,-73,-77,-133,-78,-82,-134,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,89,89,-156,89,89,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,89,89,-92,-156,-95,-155,]),'MODE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,336,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,90,-26,90,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,90,-156,90,90,90,-156,90,-141,90,90,-61,90,-129,90,90,-156,-156,90,-156,-156,-156,-156,90,-156,-156,90,-156,-156,-21,90,-58,90,-65,-136,-66,-70,-135,-71,-72,-73,-77,-133,-78,-82,-134,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,90,90,-156,90,90,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,90,90,-92,-156,-95,-155,]),'MEDIAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,336,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,91,-26,91,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,91,-156,91,91,91,-156,91,-141,91,91,-61,91,-129,91,91,-156,-156,91,-156,-156,-156,-156,91,-156,-156,91,-156,-156,-21,91,-58,91,-65,-136,-66,-70,-135,-71,-72,-73,-77,-133,-78,-82,-134,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,91,91,-156,91,91,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,91,91,-92,-156,-95,-155,]),'VARIANCE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,336,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,92,-26,92,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,92,-156,92,92,92,-156,92,-141,92,92,-61,92,-129,92,92,-156,-156,92,-156,-156,-156,-156,92,-156,-156,92,-156,-156,-21,92,-58,92,-65,-136,-66,-70,-135,-71,-72,-73,-77,-133,-78,-82,-134,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,92,92,-156,92,92,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,92,92,-92,-156,-95,-155,]),'MAX':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,336,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,93,-26,93,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,93,-156,93,93,93,-156,93,-141,93,93,-61,93,-129,93,93,-156,-156,93,-156,-156,-156,-156,93,-156,-156,93,-156,-156,-21,93,-58,93,-65,-136,-66,-70,-135,-71,-72,-73,-77,-133,-78,-82,-134,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,93,93,-156,93,93,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,93,93,-92,-156,-95,-155,]),'MIN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,336,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,94,-26,94,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,94,-156,94,94,94,-156,94,-141,94,94,-61,94,-129,94,94,-156,-156,94,-156,-156,-156,-156,94,-156,-156,94,-156,-156,-21,94,-58,94,-65,-136,-66,-70,-135,-71,-72,-73,-77,-133,-78,-82,-134,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,94,94,-156,94,94,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,94,94,-92,-156,-95,-155,]),'STADDES':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,336,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,95,-26,95,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,95,-156,95,95,95,-156,95,-141,95,95,-61,95,-129,95,95,-156,-156,95,-156,-156,-156,-156,95,-156,-156,95,-156,-156,-21,95,-58,95,-65,-136,-66,-70,-135,-71,-72,-73,-77,-133,-78,-82,-134,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,95,95,-156,95,95,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,95,95,-92,-156,-95,-155,]),'BOXPLOT':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,336,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,96,-26,96,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,96,-156,96,96,96,-156,96,-141,96,96,-61,96,-129,96,96,-156,-156,96,-156,-156,-156,-156,96,-156,-156,96,-156,-156,-21,96,-58,96,-65,-136,-66,-70,-135,-71,-72,-73,-77,-133,-78,-82,-134,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,96,96,-156,96,96,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,96,96,-92,-156,-95,-155,]),'LINREG':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,336,337,338,342,343,347,349,350,351,354,355,356,360,361,362,363,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,97,-26,97,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,97,-156,97,97,97,-156,97,-141,97,97,-61,97,-129,97,97,-156,-156,97,-156,-156,-156,-156,97,-156,-156,97,-156,-156,-21,97,-58,97,-65,-136,-66,-70,-135,-71,-72,-73,-77,-133,-78,-82,-134,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,97,97,-156,97,97,-123,-156,-156,-156,-93,-94,-151,-156,-91,-149,-36,-124,97,97,-92,-156,-95,-155,]),'RIGHT_CUR_BRACKET':([10,11,14,15,17,22,32,44,49,52,58,59,60,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,105,160,255,261,297,301,311,312,313,314,315,316,317,318,319,320,321,323,324,331,334,335,337,338,342,343,345,347,349,350,351,354,355,356,360,361,362,363,364,365,366,367,368,369,],[-156,-3,-156,-5,-2,-4,-156,-156,-156,-26,104,-156,-8,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-7,-61,-21,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,-156,-156,-156,342,343,-156,-123,-156,-156,354,-156,-93,-94,-151,-156,-91,-149,-36,-124,-156,-156,366,367,-92,-156,-95,-155,]),'DATAFRAME':([12,18,19,98,140,187,188,340,],[-156,30,-117,-156,-156,251,-118,251,]),'INT':([12,16,18,19,98,140,187,188,340,],[-156,26,26,-117,-156,-156,26,-118,26,]),'FLOAT':([12,16,18,19,98,140,187,188,340,],[-156,27,27,-117,-156,-156,27,-118,27,]),'CHAR':([12,16,18,19,98,140,187,188,340,],[-156,28,28,-117,-156,-156,28,-118,28,]),'VOID':([16,],[25,]),'RIGHT_PARENT':([19,78,79,80,81,82,83,84,85,86,98,107,108,109,117,118,119,120,122,123,124,125,126,127,128,129,140,146,147,148,149,151,152,153,154,155,156,157,161,162,163,164,165,166,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,192,194,196,197,199,200,201,202,203,204,207,209,212,214,219,221,224,226,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,255,256,263,265,269,275,279,283,298,299,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,327,328,329,330,332,333,339,341,344,346,352,353,],[-117,-96,-97,-98,-99,-100,-101,-102,-103,-104,-156,-156,-156,-131,-156,-156,-156,-156,-156,-156,-156,-88,-89,-90,-156,-105,-156,191,-156,-23,-16,-18,-156,-156,198,-156,-156,-156,-156,-140,-156,-139,-156,-137,-156,-138,-156,-126,-156,-127,-156,-128,-156,-156,-156,-156,-156,-156,-156,-156,-156,-156,-156,-118,-22,-25,260,-144,-59,-143,-60,262,-147,-156,-62,-64,-67,-69,-74,-76,-79,-81,283,-85,-132,-86,-87,284,-145,285,-146,286,287,288,289,290,291,292,293,294,-39,-40,-21,-156,303,-156,-156,-156,-156,-156,-24,-17,-156,-156,-156,-156,-84,-130,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,-63,-68,-75,-80,-156,-122,-41,-45,-156,-44,359,-154,]),'LEFT_CUR_BRACKET':([21,294,302,303,348,357,358,359,],[32,321,323,324,-156,362,-148,363,]),'ARROW':([23,24,25,26,27,28,29,30,31,34,35,36,37,38,40,41,43,102,249,250,251,296,],[33,-37,-156,-156,-156,-156,39,-156,-156,-38,-119,-9,-10,-11,-27,-28,-30,-29,295,-42,-156,-43,]),'LEFT_SQR_BRACKET':([26,27,28,31,35,36,37,38,72,108,109,128,153,],[-156,-156,-156,42,-119,-9,-10,-11,-156,150,-131,-156,-156,]),'CTEI':([42,56,87,106,107,111,112,121,144,145,150,158,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,258,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,336,],[48,103,122,-156,122,122,122,-156,122,-141,122,122,122,-129,122,122,-156,-156,122,-156,-156,-156,-156,122,-156,-156,122,-156,-156,122,122,-65,-136,-66,-70,-135,-71,-72,-73,-77,-133,-78,-82,-134,-83,122,]),'LEFT_PARENT':([45,50,51,72,73,74,75,76,77,87,88,89,90,91,92,93,94,95,96,97,106,107,111,112,113,114,121,128,144,145,150,158,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,258,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,336,],[-156,98,-121,107,110,111,112,-156,115,121,130,131,132,133,134,135,136,137,138,139,-156,121,121,121,158,-150,-156,107,121,-141,121,121,121,-129,121,121,-156,-156,121,-156,-156,-156,-156,121,-156,-156,121,-156,-156,121,121,-65,-136,-66,-70,-135,-71,-72,-73,-77,-133,-78,-82,-134,-83,121,]),'COMMA':([47,48,53,54,78,79,80,81,82,83,84,85,86,108,109,117,118,119,120,122,123,124,125,126,127,128,129,141,147,149,151,161,162,163,164,165,166,167,168,171,172,173,174,175,176,189,195,207,209,212,214,219,221,224,226,230,231,232,233,255,256,265,269,275,279,283,299,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,322,325,326,327,328,329,330,332,333,],[-156,56,100,-120,-96,-97,-98,-99,-100,-101,-102,-103,-104,-156,-131,-156,-156,-156,-156,-156,-156,-156,-88,-89,-90,-156,-105,-156,193,-16,-18,-156,-140,-156,-139,-156,-137,-156,-138,-156,-126,-156,-127,-156,-128,100,258,-62,-64,-67,-69,-74,-76,-79,-81,-85,-132,-86,-87,-21,193,-156,-156,-156,-156,-156,-17,-156,-156,-156,-156,-156,-84,-130,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-156,336,-153,-63,-68,-75,-80,340,-122,]),'RIGHT_SQR_BRACKET':([48,55,57,78,79,80,81,82,83,84,85,86,103,108,109,117,118,119,120,122,123,124,125,126,127,128,129,149,151,161,162,163,164,165,166,167,168,171,172,173,174,175,176,195,207,209,212,214,219,221,224,226,230,231,232,233,255,257,259,265,269,275,279,283,299,300,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,327,328,329,330,],[-156,102,-32,-96,-97,-98,-99,-100,-101,-102,-103,-104,-31,-156,-131,-156,-156,-156,-156,-156,-156,-156,-88,-89,-90,-156,-105,-16,-18,-156,-140,-156,-139,-156,-137,-156,-138,-156,-126,-156,-127,-156,-128,-156,-62,-64,-67,-69,-74,-76,-79,-81,-85,-132,-86,-87,-21,299,-20,-156,-156,-156,-156,-156,-17,-19,-156,-156,-156,-156,-84,-130,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-63,-68,-75,-80,]),'ASIGN':([71,72,108,109,149,151,159,205,206,299,],[106,-156,-156,-131,-16,-18,-156,264,-152,-17,]),'MULT':([78,79,80,81,82,83,84,85,86,108,109,120,122,123,124,125,126,127,128,129,149,151,167,168,171,172,173,174,175,176,230,231,232,233,255,279,283,299,308,309,310,311,312,313,314,315,316,317,318,319,320,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-156,-131,-156,-156,-156,-156,-88,-89,-90,-156,-105,-16,-18,227,-138,-156,-126,-156,-127,-156,-128,-85,-132,-86,-87,-21,-156,-156,-17,227,-84,-130,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'DIV':([78,79,80,81,82,83,84,85,86,108,109,120,122,123,124,125,126,127,128,129,149,151,167,168,171,172,173,174,175,176,230,231,232,233,255,279,283,299,308,309,310,311,312,313,314,315,316,317,318,319,320,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-156,-131,-156,-156,-156,-156,-88,-89,-90,-156,-105,-16,-18,228,-138,-156,-126,-156,-127,-156,-128,-85,-132,-86,-87,-21,-156,-156,-17,228,-84,-130,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'PLUS':([78,79,80,81,82,83,84,85,86,108,109,119,120,122,123,124,125,126,127,128,129,149,151,165,166,167,168,171,172,173,174,175,176,224,226,230,231,232,233,255,275,279,283,299,307,308,309,310,311,312,313,314,315,316,317,318,319,320,330,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-156,-131,-156,-156,-156,-156,-156,-88,-89,-90,-156,-105,-16,-18,222,-137,-156,-138,-156,-126,-156,-127,-156,-128,-79,-81,-85,-132,-86,-87,-21,-156,-156,-156,-17,222,-156,-84,-130,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-80,]),'MINUS':([78,79,80,81,82,83,84,85,86,108,109,119,120,122,123,124,125,126,127,128,129,149,151,165,166,167,168,171,172,173,174,175,176,224,226,230,231,232,233,255,275,279,283,299,307,308,309,310,311,312,313,314,315,316,317,318,319,320,330,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-156,-131,-156,-156,-156,-156,-156,-88,-89,-90,-156,-105,-16,-18,223,-137,-156,-138,-156,-126,-156,-127,-156,-128,-79,-81,-85,-132,-86,-87,-21,-156,-156,-156,-17,223,-156,-84,-130,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-80,]),'LESS_THAN':([78,79,80,81,82,83,84,85,86,108,109,118,119,120,122,123,124,125,126,127,128,129,149,151,163,164,165,166,167,168,171,172,173,174,175,176,219,221,224,226,230,231,232,233,255,269,275,279,283,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,329,330,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-156,-131,-156,-156,-156,-156,-156,-156,-88,-89,-90,-156,-105,-16,-18,215,-139,-156,-137,-156,-138,-156,-126,-156,-127,-156,-128,-74,-76,-79,-81,-85,-132,-86,-87,-21,-156,-156,-156,-156,-17,215,-156,-156,-84,-130,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,]),'GREATER_THAN':([78,79,80,81,82,83,84,85,86,108,109,118,119,120,122,123,124,125,126,127,128,129,149,151,163,164,165,166,167,168,171,172,173,174,175,176,219,221,224,226,230,231,232,233,255,269,275,279,283,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,329,330,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-156,-131,-156,-156,-156,-156,-156,-156,-88,-89,-90,-156,-105,-16,-18,216,-139,-156,-137,-156,-138,-156,-126,-156,-127,-156,-128,-74,-76,-79,-81,-85,-132,-86,-87,-21,-156,-156,-156,-156,-17,216,-156,-156,-84,-130,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,]),'EQUALS':([78,79,80,81,82,83,84,85,86,108,109,118,119,120,122,123,124,125,126,127,128,129,149,151,163,164,165,166,167,168,171,172,173,174,175,176,219,221,224,226,230,231,232,233,255,269,275,279,283,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,329,330,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-156,-131,-156,-156,-156,-156,-156,-156,-88,-89,-90,-156,-105,-16,-18,217,-139,-156,-137,-156,-138,-156,-126,-156,-127,-156,-128,-74,-76,-79,-81,-85,-132,-86,-87,-21,-156,-156,-156,-156,-17,217,-156,-156,-84,-130,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,]),'NOTEQUALS':([78,79,80,81,82,83,84,85,86,108,109,118,119,120,122,123,124,125,126,127,128,129,149,151,163,164,165,166,167,168,171,172,173,174,175,176,219,221,224,226,230,231,232,233,255,269,275,279,283,299,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,329,330,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-156,-131,-156,-156,-156,-156,-156,-156,-88,-89,-90,-156,-105,-16,-18,218,-139,-156,-137,-156,-138,-156,-126,-156,-127,-156,-128,-74,-76,-79,-81,-85,-132,-86,-87,-21,-156,-156,-156,-156,-17,218,-156,-156,-84,-130,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,]),'AND':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,120,122,123,124,125,126,127,128,129,149,151,161,162,163,164,165,166,167,168,171,172,173,174,175,176,212,214,219,221,224,226,230,231,232,233,255,265,269,275,279,283,299,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,328,329,330,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-156,-131,-156,-156,-156,-156,-156,-156,-156,-88,-89,-90,-156,-105,-16,-18,210,-140,-156,-139,-156,-137,-156,-138,-156,-126,-156,-127,-156,-128,-67,-69,-74,-76,-79,-81,-85,-132,-86,-87,-21,-156,-156,-156,-156,-156,-17,210,-156,-156,-156,-84,-130,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-68,-75,-80,]),'OR':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,120,122,123,124,125,126,127,128,129,149,151,161,162,163,164,165,166,167,168,171,172,173,174,175,176,212,214,219,221,224,226,230,231,232,233,255,265,269,275,279,283,299,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,328,329,330,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-156,-131,-156,-156,-156,-156,-156,-156,-156,-88,-89,-90,-156,-105,-16,-18,211,-140,-156,-139,-156,-137,-156,-138,-156,-126,-156,-127,-156,-128,-67,-69,-74,-76,-79,-81,-85,-132,-86,-87,-21,-156,-156,-156,-156,-156,-17,211,-156,-156,-156,-84,-130,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-68,-75,-80,]),'CTEF':([87,106,107,111,112,121,144,145,150,158,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,258,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,336,],[123,-156,123,123,123,-156,123,-141,123,123,123,-129,123,123,-156,-156,123,-156,-156,-156,-156,123,-156,-156,123,-156,-156,123,123,-65,-136,-66,-70,-135,-71,-72,-73,-77,-133,-78,-82,-134,-83,123,]),'CTEC':([87,106,107,111,112,121,144,145,150,158,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,258,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,336,],[124,-156,124,124,124,-156,124,-141,124,124,124,-129,124,124,-156,-156,124,-156,-156,-156,-156,124,-156,-156,124,-156,-156,124,124,-65,-136,-66,-70,-135,-71,-72,-73,-77,-133,-78,-82,-134,-83,124,]),'LETRERO':([111,130,],[156,177,]),'IF_TRUE':([262,],[302,]),'IF_FALSE':([342,],[348,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pnCrearDirFunc':([2,],[3,]),'empty':([2,5,8,9,10,12,14,25,26,27,28,30,31,32,44,45,47,48,49,53,59,72,76,98,104,106,107,108,117,118,119,120,121,122,123,124,128,140,141,147,152,153,155,156,157,159,161,163,165,167,171,173,175,177,178,179,180,181,182,183,184,185,186,187,189,190,195,204,210,211,215,216,217,218,222,223,227,228,251,256,265,269,275,279,283,304,305,306,307,308,321,322,323,324,331,332,337,342,343,344,347,348,354,362,363,367,],[4,7,11,15,11,19,15,35,35,35,35,35,43,11,15,51,54,57,60,101,60,109,114,19,143,145,148,151,162,164,166,168,170,172,174,176,109,188,54,194,197,109,200,200,203,206,209,214,221,226,231,231,231,235,237,237,237,237,237,237,237,237,237,248,101,254,259,203,267,267,271,271,271,271,277,277,281,281,35,194,162,164,166,168,310,326,209,214,221,226,11,333,60,60,338,341,60,349,351,353,356,358,361,60,60,369,]),'pnScriptFuncDir':([5,],[6,]),'varp':([8,10,32,321,],[9,17,44,331,]),'var':([8,10,32,321,],[10,10,10,10,]),'funcp':([9,14,44,],[13,22,49,]),'func':([9,14,44,],[14,14,14,]),'pnCheckTablaVar':([12,98,],[18,140,]),'bloque':([13,],[20,]),'returnval':([16,],[23,]),'tipo_simp':([16,18,187,340,],[24,31,250,250,]),'v':([18,],[29,]),'pnSaveTypeVar':([25,26,27,28,30,251,],[34,36,37,38,40,296,]),'vp':([31,],[41,]),'idp':([39,],[46,]),'pnAddFuncinDir':([45,],[50,]),'pnCheckNameTablaVar':([47,141,],[53,189,]),'vpp':([48,],[55,]),'estatutop':([49,59,323,324,337,362,363,],[58,105,334,335,345,364,365,]),'estatuto':([49,59,323,324,337,362,363,],[59,59,59,59,59,59,59,]),'asign':([49,59,323,324,337,362,363,],[61,61,61,61,61,61,61,]),'llamada':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,323,324,336,337,362,363,],[62,62,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,62,62,126,62,62,62,]),'lee':([49,59,323,324,337,362,363,],[63,63,63,63,63,63,63,]),'escribe':([49,59,323,324,337,362,363,],[64,64,64,64,64,64,64,]),'condicion':([49,59,323,324,337,362,363,],[65,65,65,65,65,65,65,]),'ciclow':([49,59,323,324,337,362,363,],[66,66,66,66,66,66,66,]),'ciclof':([49,59,323,324,337,362,363,],[67,67,67,67,67,67,67,]),'funcesp':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,323,324,336,337,362,363,],[68,68,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,68,68,127,68,68,68,]),'return':([49,59,323,324,337,362,363,],[69,69,69,69,69,69,69,]),'copy':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,323,324,336,337,362,363,],[70,70,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,70,70,129,70,70,70,]),'variable':([49,59,87,107,110,111,112,131,132,133,134,135,136,137,138,139,144,150,158,169,193,208,213,220,225,258,264,323,324,336,337,362,363,],[71,71,125,125,152,125,125,178,179,180,181,182,183,184,185,186,125,125,125,125,125,125,125,125,125,125,125,71,71,125,71,71,71,]),'mean':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,323,324,336,337,362,363,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'mode':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,323,324,336,337,362,363,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'median':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,323,324,336,337,362,363,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'variance':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,323,324,336,337,362,363,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'max':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,323,324,336,337,362,363,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'min':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,323,324,336,337,362,363,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'staddes':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,323,324,336,337,362,363,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'boxplot':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,323,324,336,337,362,363,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'linreg':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,323,324,336,337,362,363,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'idpp':([53,189,],[99,252,]),'pnSaveOperandos':([72,128,153,],[108,108,108,]),'pnSaveWhile':([76,],[113,]),'exp':([87,107,111,112,144,150,158,169,193,258,264,336,],[116,147,155,157,190,195,204,229,256,300,304,344,]),'exprel':([87,107,111,112,144,150,158,169,193,208,258,264,336,],[117,117,117,117,117,117,117,117,117,265,117,117,117,]),'e':([87,107,111,112,144,150,158,169,193,208,213,258,264,336,],[118,118,118,118,118,118,118,118,118,118,269,118,118,118,]),'t':([87,107,111,112,144,150,158,169,193,208,213,220,258,264,336,],[119,119,119,119,119,119,119,119,119,119,119,275,119,119,119,]),'f':([87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,336,],[120,120,120,120,120,120,120,120,120,120,120,120,279,120,120,120,]),'pnEndScript':([104,],[142,]),'pnSaveOperadorAsign':([106,],[144,]),'expp':([107,],[146,]),'indexp':([108,],[149,]),'escribep':([111,],[154,]),'pnCuadOplog':([117,265,],[161,305,]),'pnCuadOpRelacional':([118,269,],[163,306,]),'pnCuadPlMi':([119,275,],[165,307,]),'pnCuadMuDi':([120,279,],[167,308,]),'pnSaveFondoFalso':([121,],[169,]),'pnSaveCteI':([122,],[171,]),'pnSaveCteF':([123,],[173,]),'pnSaveCteC':([124,],[175,]),'pnCrearListaParam':([140,],[187,]),'exppp':([147,256,],[192,298,]),'pnCuadLee':([152,],[196,]),'pnCuadEscribe':([155,156,],[199,201,]),'pnCheckBoolIf':([157,204,],[202,263,]),'pnSaveForID':([159,],[205,]),'logic':([161,305,],[207,327,]),'logicsig':([161,305,],[208,208,]),'relacionalp':([163,306,],[212,328,]),'relsig':([163,306,],[213,213,]),'tp':([165,307,],[219,329,]),'tsig':([165,307,],[220,220,]),'fp':([167,308,],[224,330,]),'fsig':([167,308,],[225,225,]),'pnSaveOperandoConstante':([171,173,175,],[230,232,233,]),'pnCuadCopy':([177,],[234,]),'pnCuadFuncEsp':([178,179,180,181,182,183,184,185,186,],[236,238,239,240,241,242,243,244,245,]),'param':([187,],[246,]),'paramlist':([187,340,],[247,346,]),'tipoparam':([187,340,],[249,249,]),'pnCuadAsign':([190,],[253,]),'indexpp':([195,],[257,]),'pnSaveOperadorLog':([210,211,],[266,268,]),'pnSaveOperadorRel':([215,216,217,218,],[270,272,273,274,]),'pnSaveOperadorPlMi':([222,223,],[276,278,]),'pnSaveOperadorMuDi':([227,228,],[280,282,]),'pnPopFondoFalso':([283,],[309,]),'pnCreateVControl':([304,],[325,]),'pnAddParametersTablaVar':([322,],[332,]),'pnDirecIniFunc':([331,],[337,]),'paramlistp':([332,],[339,]),'falsop':([342,],[347,]),'pnEndWhile':([343,],[350,]),'pnCompControlFinal':([344,],[352,]),'pnEndIf':([347,],[355,]),'pnElseIf':([348,],[357,]),'pnCloseCurrentFunction':([354,],[360,]),'pnEndFor':([367,],[368,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque','programa',8,'p_programa','lexer-parser.py',186),
  ('varp -> var varp','varp',2,'p_programa','lexer-parser.py',187),
  ('varp -> empty','varp',1,'p_programa','lexer-parser.py',188),
  ('funcp -> func funcp','funcp',2,'p_programa','lexer-parser.py',189),
  ('funcp -> empty','funcp',1,'p_programa','lexer-parser.py',190),
  ('bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript','bloque',7,'p_bloque','lexer-parser.py',196),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_bloque','lexer-parser.py',197),
  ('estatutop -> empty','estatutop',1,'p_bloque','lexer-parser.py',198),
  ('tipo_simp -> INT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',204),
  ('tipo_simp -> FLOAT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',205),
  ('tipo_simp -> CHAR pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',206),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','lexer-parser.py',212),
  ('tipo_comp -> file','tipo_comp',1,'p_tipo_comp','lexer-parser.py',213),
  ('copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON','copy',6,'p_copy','lexer-parser.py',219),
  ('file -> ID','file',1,'p_file','lexer-parser.py',225),
  ('variable -> ID pnSaveOperandos indexp','variable',3,'p_variable','lexer-parser.py',231),
  ('indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET','indexp',4,'p_variable','lexer-parser.py',232),
  ('indexp -> empty','indexp',1,'p_variable','lexer-parser.py',233),
  ('indexpp -> COMMA exp','indexpp',2,'p_variable','lexer-parser.py',234),
  ('indexpp -> empty','indexpp',1,'p_variable','lexer-parser.py',235),
  ('llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON','llamada',5,'p_llamada','lexer-parser.py',241),
  ('expp -> exp exppp','expp',2,'p_llamada','lexer-parser.py',242),
  ('expp -> empty','expp',1,'p_llamada','lexer-parser.py',243),
  ('exppp -> COMMA exp exppp','exppp',3,'p_llamada','lexer-parser.py',244),
  ('exppp -> empty','exppp',1,'p_llamada','lexer-parser.py',245),
  ('var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON','var',6,'p_var','lexer-parser.py',251),
  ('v -> DATAFRAME pnSaveTypeVar','v',2,'p_var','lexer-parser.py',252),
  ('v -> tipo_simp vp','v',2,'p_var','lexer-parser.py',253),
  ('vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET','vp',4,'p_var','lexer-parser.py',254),
  ('vp -> empty','vp',1,'p_var','lexer-parser.py',255),
  ('vpp -> COMMA CTEI','vpp',2,'p_var','lexer-parser.py',256),
  ('vpp -> empty','vpp',1,'p_var','lexer-parser.py',257),
  ('idp -> ID pnCheckNameTablaVar idpp','idp',3,'p_var','lexer-parser.py',258),
  ('idpp -> COMMA ID pnCheckNameTablaVar idpp','idpp',4,'p_var','lexer-parser.py',259),
  ('idpp -> empty','idpp',1,'p_var','lexer-parser.py',260),
  ('func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction','func',16,'p_func','lexer-parser.py',266),
  ('returnval -> tipo_simp','returnval',1,'p_func','lexer-parser.py',267),
  ('returnval -> VOID pnSaveTypeVar','returnval',2,'p_func','lexer-parser.py',268),
  ('param -> paramlist','param',1,'p_param','lexer-parser.py',274),
  ('param -> empty','param',1,'p_param','lexer-parser.py',275),
  ('paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp','paramlist',5,'p_param','lexer-parser.py',276),
  ('tipoparam -> tipo_simp','tipoparam',1,'p_param','lexer-parser.py',277),
  ('tipoparam -> DATAFRAME pnSaveTypeVar','tipoparam',2,'p_param','lexer-parser.py',278),
  ('paramlistp -> COMMA paramlist','paramlistp',2,'p_param','lexer-parser.py',279),
  ('paramlistp -> empty','paramlistp',1,'p_param','lexer-parser.py',280),
  ('estatuto -> asign','estatuto',1,'p_estatuto','lexer-parser.py',286),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','lexer-parser.py',287),
  ('estatuto -> lee','estatuto',1,'p_estatuto','lexer-parser.py',288),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','lexer-parser.py',289),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexer-parser.py',290),
  ('estatuto -> ciclow','estatuto',1,'p_estatuto','lexer-parser.py',291),
  ('estatuto -> ciclof','estatuto',1,'p_estatuto','lexer-parser.py',292),
  ('estatuto -> funcesp','estatuto',1,'p_estatuto','lexer-parser.py',293),
  ('estatuto -> return','estatuto',1,'p_estatuto','lexer-parser.py',294),
  ('estatuto -> copy','estatuto',1,'p_estatuto','lexer-parser.py',295),
  ('asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON','asign',6,'p_asign','lexer-parser.py',301),
  ('lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON','lee',6,'p_lee','lexer-parser.py',307),
  ('escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON','escribe',5,'p_escribe','lexer-parser.py',313),
  ('escribep -> exp pnCuadEscribe','escribep',2,'p_escribe','lexer-parser.py',314),
  ('escribep -> LETRERO pnCuadEscribe','escribep',2,'p_escribe','lexer-parser.py',315),
  ('return -> RETURNS exp SEMICOLON','return',3,'p_return','lexer-parser.py',321),
  ('exp -> exprel pnCuadOplog logic','exp',3,'p_exp','lexer-parser.py',327),
  ('logic -> logicsig exprel pnCuadOplog logic','logic',4,'p_exp','lexer-parser.py',328),
  ('logic -> empty','logic',1,'p_exp','lexer-parser.py',329),
  ('logicsig -> AND pnSaveOperadorLog','logicsig',2,'p_exp','lexer-parser.py',330),
  ('logicsig -> OR pnSaveOperadorLog','logicsig',2,'p_exp','lexer-parser.py',331),
  ('exprel -> e pnCuadOpRelacional relacionalp','exprel',3,'p_exprel','lexer-parser.py',337),
  ('relacionalp -> relsig e pnCuadOpRelacional relacionalp','relacionalp',4,'p_exprel','lexer-parser.py',338),
  ('relacionalp -> empty','relacionalp',1,'p_exprel','lexer-parser.py',339),
  ('relsig -> LESS_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',340),
  ('relsig -> GREATER_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',341),
  ('relsig -> EQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',342),
  ('relsig -> NOTEQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',343),
  ('e -> t pnCuadPlMi tp','e',3,'p_e','lexer-parser.py',349),
  ('tp -> tsig t pnCuadPlMi tp','tp',4,'p_e','lexer-parser.py',350),
  ('tp -> empty','tp',1,'p_e','lexer-parser.py',351),
  ('tsig -> PLUS pnSaveOperadorPlMi','tsig',2,'p_e','lexer-parser.py',352),
  ('tsig -> MINUS pnSaveOperadorPlMi','tsig',2,'p_e','lexer-parser.py',353),
  ('t -> f pnCuadMuDi fp','t',3,'p_t','lexer-parser.py',359),
  ('fp -> fsig f pnCuadMuDi fp','fp',4,'p_t','lexer-parser.py',360),
  ('fp -> empty','fp',1,'p_t','lexer-parser.py',361),
  ('fsig -> MULT pnSaveOperadorMuDi','fsig',2,'p_t','lexer-parser.py',362),
  ('fsig -> DIV pnSaveOperadorMuDi','fsig',2,'p_t','lexer-parser.py',363),
  ('f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso','f',5,'p_f','lexer-parser.py',369),
  ('f -> CTEI pnSaveCteI pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',370),
  ('f -> CTEF pnSaveCteF pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',371),
  ('f -> CTEC pnSaveCteC pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',372),
  ('f -> variable','f',1,'p_f','lexer-parser.py',373),
  ('f -> llamada','f',1,'p_f','lexer-parser.py',374),
  ('f -> funcesp','f',1,'p_f','lexer-parser.py',375),
  ('condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf','condicion',11,'p_condicion','lexer-parser.py',381),
  ('falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','falsop',5,'p_condicion','lexer-parser.py',382),
  ('falsop -> empty','falsop',1,'p_condicion','lexer-parser.py',383),
  ('ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile','ciclow',10,'p_ciclow','lexer-parser.py',389),
  ('ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor','ciclof',15,'p_ciclof','lexer-parser.py',395),
  ('funcesp -> mean','funcesp',1,'p_funcesp','lexer-parser.py',401),
  ('funcesp -> mode','funcesp',1,'p_funcesp','lexer-parser.py',402),
  ('funcesp -> median','funcesp',1,'p_funcesp','lexer-parser.py',403),
  ('funcesp -> variance','funcesp',1,'p_funcesp','lexer-parser.py',404),
  ('funcesp -> max','funcesp',1,'p_funcesp','lexer-parser.py',405),
  ('funcesp -> min','funcesp',1,'p_funcesp','lexer-parser.py',406),
  ('funcesp -> staddes','funcesp',1,'p_funcesp','lexer-parser.py',407),
  ('funcesp -> boxplot','funcesp',1,'p_funcesp','lexer-parser.py',408),
  ('funcesp -> linreg','funcesp',1,'p_funcesp','lexer-parser.py',409),
  ('funcesp -> copy','funcesp',1,'p_funcesp','lexer-parser.py',410),
  ('mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mean',6,'p_mean','lexer-parser.py',416),
  ('mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mode',6,'p_mode','lexer-parser.py',422),
  ('median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','median',6,'p_median','lexer-parser.py',428),
  ('variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','variance',6,'p_variance','lexer-parser.py',434),
  ('max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','max',6,'p_max','lexer-parser.py',440),
  ('min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','min',6,'p_min','lexer-parser.py',446),
  ('staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','staddes',6,'p_staddes','lexer-parser.py',452),
  ('boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','boxplot',6,'p_boxplot','lexer-parser.py',458),
  ('linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','linreg',6,'p_linreg','lexer-parser.py',464),
  ('pnCrearDirFunc -> empty','pnCrearDirFunc',1,'p_pnCrearDirFunc','lexer-parser.py',474),
  ('pnScriptFuncDir -> empty','pnScriptFuncDir',1,'p_pnScriptFuncDir','lexer-parser.py',484),
  ('pnCheckTablaVar -> empty','pnCheckTablaVar',1,'p_pnCheckTablaVar','lexer-parser.py',493),
  ('pnCrearListaParam -> empty','pnCrearListaParam',1,'p_pnCrearListaParam','lexer-parser.py',501),
  ('pnSaveTypeVar -> empty','pnSaveTypeVar',1,'p_pnSaveTypeVar','lexer-parser.py',508),
  ('pnCheckNameTablaVar -> empty','pnCheckNameTablaVar',1,'p_pnCheckNameTablaVar','lexer-parser.py',517),
  ('pnAddFuncinDir -> empty','pnAddFuncinDir',1,'p_pnAddFuncinDir','lexer-parser.py',524),
  ('pnAddParametersTablaVar -> empty','pnAddParametersTablaVar',1,'p_pnAddParametersTablaVar','lexer-parser.py',538),
  ('pnDirecIniFunc -> empty','pnDirecIniFunc',1,'p_pnDirecIniFunc','lexer-parser.py',547),
  ('pnCloseCurrentFunction -> empty','pnCloseCurrentFunction',1,'p_pnCloseCurrentFunction','lexer-parser.py',557),
  ('pnEndScript -> empty','pnEndScript',1,'p_pnEndScript','lexer-parser.py',566),
  ('pnSaveCteI -> empty','pnSaveCteI',1,'p_pnSaveCteI','lexer-parser.py',574),
  ('pnSaveCteF -> empty','pnSaveCteF',1,'p_pnSaveCteF','lexer-parser.py',581),
  ('pnSaveCteC -> empty','pnSaveCteC',1,'p_pnSaveCteC','lexer-parser.py',588),
  ('pnSaveFondoFalso -> empty','pnSaveFondoFalso',1,'p_pnSaveFondoFalso','lexer-parser.py',595),
  ('pnPopFondoFalso -> empty','pnPopFondoFalso',1,'p_pnPopFondoFalso','lexer-parser.py',602),
  ('pnSaveOperandos -> empty','pnSaveOperandos',1,'p_pnSaveOperandos','lexer-parser.py',612),
  ('pnSaveOperandoConstante -> empty','pnSaveOperandoConstante',1,'p_pnSaveOperandoConstante','lexer-parser.py',628),
  ('pnSaveOperadorPlMi -> empty','pnSaveOperadorPlMi',1,'p_pnSaveOperadorPlMi','lexer-parser.py',636),
  ('pnSaveOperadorMuDi -> empty','pnSaveOperadorMuDi',1,'p_pnSaveOperadorMuDi','lexer-parser.py',643),
  ('pnSaveOperadorRel -> empty','pnSaveOperadorRel',1,'p_pnSaveOperadorRel','lexer-parser.py',650),
  ('pnSaveOperadorLog -> empty','pnSaveOperadorLog',1,'p_pnSaveOperadorLog','lexer-parser.py',657),
  ('pnCuadPlMi -> empty','pnCuadPlMi',1,'p_pnCuadPlMi','lexer-parser.py',664),
  ('pnCuadMuDi -> empty','pnCuadMuDi',1,'p_pnCuadMuDi','lexer-parser.py',698),
  ('pnCuadOpRelacional -> empty','pnCuadOpRelacional',1,'p_pnCuadOpRelacional','lexer-parser.py',732),
  ('pnCuadOplog -> empty','pnCuadOplog',1,'p_pnCuadOplog','lexer-parser.py',767),
  ('pnSaveOperadorAsign -> empty','pnSaveOperadorAsign',1,'p_pnSaveOperadorAsign','lexer-parser.py',800),
  ('pnCuadAsign -> empty','pnCuadAsign',1,'p_pnCuadAsign','lexer-parser.py',807),
  ('pnCuadEscribe -> empty','pnCuadEscribe',1,'p_pnCuadEscribe','lexer-parser.py',833),
  ('pnCuadLee -> empty','pnCuadLee',1,'p_pnCuadLee','lexer-parser.py',863),
  ('pnCuadCopy -> empty','pnCuadCopy',1,'p_pnCuadCopy','lexer-parser.py',880),
  ('pnCuadFuncEsp -> empty','pnCuadFuncEsp',1,'p_pnCuadFuncEsp','lexer-parser.py',899),
  ('pnCheckBoolIf -> empty','pnCheckBoolIf',1,'p_pnCheckBoolIf','lexer-parser.py',945),
  ('pnElseIf -> empty','pnElseIf',1,'p_pnElseIf','lexer-parser.py',963),
  ('pnEndIf -> empty','pnEndIf',1,'p_pnEndIf','lexer-parser.py',974),
  ('pnSaveWhile -> empty','pnSaveWhile',1,'p_pnSaveWhile','lexer-parser.py',983),
  ('pnEndWhile -> empty','pnEndWhile',1,'p_pnEndWhile','lexer-parser.py',993),
  ('pnSaveForID -> empty','pnSaveForID',1,'p_pnSaveForID','lexer-parser.py',1007),
  ('pnCreateVControl -> empty','pnCreateVControl',1,'p_pnCreateVControl','lexer-parser.py',1031),
  ('pnCompControlFinal -> empty','pnCompControlFinal',1,'p_pnCompControlFinal','lexer-parser.py',1062),
  ('pnEndFor -> empty','pnEndFor',1,'p_pnEndFor','lexer-parser.py',1092),
  ('empty -> <empty>','empty',0,'p_empty','lexer-parser.py',1126),
]

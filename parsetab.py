
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVAND ARROW ASIGN BOXPLOT CHAR COMMA COMMENT CTEC CTEF CTEI DATAFRAME DIV DO EQUALS FLOAT FOR FUNC GREATER_THAN ID IF IF_FALSE IF_TRUE INT LEFT_CUR_BRACKET LEFT_PARENT LEFT_SQR_BRACKET LESS_THAN LETRERO LINREG MAX MEAN MEDIAN MIN MINUS MODE MULT NOTEQUALS OR PLUS READ READ_FILE RETURNS RIGHT_CUR_BRACKET RIGHT_PARENT RIGHT_SQR_BRACKET SCRIPT SEMICOLON STADDES VAR VARIANCE VOID WHILE WRITE\n    programa : SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque\n    varp : var varp \n         | empty\n    funcp : func funcp \n          | empty\n    \n    bloque : DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript\n    estatutop : estatuto estatutop \n              | empty\n    \n    tipo_simp : INT pnSaveTypeVar\n              | FLOAT pnSaveTypeVar\n              | CHAR pnSaveTypeVar\n    \n    tipo_comp : DATAFRAME \n              | file\n    \n    copy : READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON\n    \n    file : ID\n    \n    variable : ID pnSaveOperandos indexp\n    indexp : LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET \n           | empty\n    indexpp : COMMA exp \n            | empty\n    \n    llamada : ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON\n    expp : exp exppp\n         | empty\n    exppp : COMMA exp exppp\n          | empty\n    \n    var : VAR pnCheckTablaVar v ARROW idp SEMICOLON\n    v : DATAFRAME pnSaveTypeVar\n      | tipo_simp vp\n    vp : LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET \n       | empty\n    vpp : COMMA CTEI \n        | empty\n    idp : ID pnCheckNameTablaVar idpp\n    idpp : COMMA ID pnCheckNameTablaVar idpp\n         | empty\n    \n    func : FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction\n    returnval : tipo_simp \n              | VOID pnSaveTypeVar\n    \n    param : paramlist\n          | empty\n    paramlist : tipoparam ARROW ID pnAddParametersTablaVar paramlistp\n    tipoparam : tipo_simp\n              | DATAFRAME pnSaveTypeVar\n    paramlistp : COMMA paramlist\n               | empty\n    \n    estatuto : asign\n             | llamada\n             | lee\n             | escribe\n             | condicion\n             | ciclow\n             | ciclof\n             | funcesp\n             | return\n             | copy\n    \n    asign : variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON\n    \n    lee : READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    escribe :  WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON\n    escribep : exp \n             | LETRERO\n    \n    return : RETURNS exp SEMICOLON\n    \n    exp : exprel logic\n    logic : logicsig exprel logic \n          | empty\n    logicsig : AND \n             | OR\n    \n    exprel : e relacionalp\n    relacionalp : relsig e relacionalp \n                | empty\n    relsig : LESS_THAN \n           | GREATER_THAN \n           | EQUALS \n           | NOTEQUALS\n    \n    e : t pnCuadPlMi tp\n    tp : tsig t pnCuadPlMi tp \n       | empty\n    tsig : PLUS pnSaveOperadorPlMi\n         | MINUS pnSaveOperadorPlMi\n    \n    t : f pnCuadMuDi fp\n    fp : fsig f pnCuadMuDi fp \n       | empty\n    fsig : MULT pnSaveOperadorMuDi\n         | DIV pnSaveOperadorMuDi\n    \n    f : LEFT_PARENT exp RIGHT_PARENT\n      | CTEI pnSaveCteI  pnSaveOperandoConstante\n      | CTEF pnSaveCteF pnSaveOperandoConstante\n      | CTEC pnSaveCteC pnSaveOperandoConstante\n      | variable\n      | llamada\n      | funcesp\n    \n    condicion : IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop\n    falsop : IF_FALSE  LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET \n           | empty\n    \n    ciclow : WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET\n    \n    ciclof : FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET\n    \n    funcesp : mean\n            | mode\n            | median\n            | variance\n            | max\n            | min\n            | staddes\n            | boxplot\n            | linreg\n            | copy\n    \n    mean : MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    mode : MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    median : MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    variance : VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    max : MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    min : MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    staddes : STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    boxplot : BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    linreg : LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    pnCrearDirFunc : empty\n    \n    pnScriptFuncDir : empty\n    \n    pnCheckTablaVar : empty\n    \n    pnSaveTypeVar : empty\n    \n    pnCheckNameTablaVar : empty\n    \n    pnAddFuncinDir : empty\n    \n    pnAddParametersTablaVar : empty\n    \n    pnCloseCurrentFunction : empty\n    \n    pnEndScript : empty\n    \n    pnSaveCteI : empty\n    \n    pnSaveCteF : empty\n    \n    pnSaveCteC : empty\n    \n    pnSaveOperandos : empty\n    \n    pnSaveOperandoConstante : empty\n    \n    pnSaveOperadorPlMi : empty\n    \n    pnSaveOperadorMuDi : empty\n    \n    pnCuadPlMi : empty\n    \n    pnCuadMuDi : empty\n    \n    pnSaveOperadorAsign : empty\n    \n    pnCuadAsign : empty\n    \n    empty :'
    
_lr_action_items = {'SCRIPT':([0,],[2,]),'$end':([1,20,104,141,142,],[0,-1,-135,-6,-123,]),'ID':([2,3,4,10,11,14,15,17,22,32,33,39,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,100,106,107,110,111,112,113,114,120,130,131,132,133,134,135,136,137,138,143,144,149,158,159,161,163,164,166,168,169,170,171,203,214,216,217,219,221,222,239,244,247,249,250,252,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,5,-115,-135,-3,-135,-5,-2,-4,-135,45,47,-135,72,-26,72,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,127,140,-135,127,152,127,127,127,152,127,152,152,152,152,152,152,152,152,152,127,-133,127,127,-61,127,-65,-66,127,-70,-71,-72,-73,127,127,-135,-135,127,-135,-135,275,-21,127,-57,-58,72,-77,-129,-78,-82,-130,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,72,72,72,-94,-135,-95,-135,-91,-93,-36,-122,72,-92,]),'SEMICOLON':([5,6,7,46,47,53,54,78,79,80,81,82,83,84,85,86,99,101,108,109,115,116,117,118,119,121,122,123,124,125,126,127,128,140,148,150,160,162,165,167,172,173,174,175,177,178,179,180,181,182,199,200,201,206,207,211,212,213,215,218,220,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,241,242,243,244,254,255,256,260,264,265,266,267,268,269,270,271,272,273,278,283,284,291,292,],[-135,8,-116,52,-135,-135,-119,-96,-97,-98,-99,-100,-101,-102,-103,-104,-33,-35,-135,-127,159,-135,-135,-135,-135,-135,-135,-135,-88,-89,-90,-135,-105,-135,-16,-18,-62,-64,-67,-69,-135,-131,-135,-132,-135,-124,-135,-125,-135,-126,-135,-135,244,249,250,-135,-135,-74,-76,-79,-81,-84,-85,-128,-86,-87,264,265,266,267,268,269,270,271,272,273,-34,276,-134,-21,-63,-68,-135,-135,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,-135,-135,-75,-80,]),'VAR':([8,10,32,52,274,],[12,12,12,-26,12,]),'FUNC':([8,9,10,11,14,17,32,44,52,299,304,305,],[-135,16,-135,-3,16,-2,-135,16,-26,-135,-36,-122,]),'DO':([8,9,10,11,13,14,15,17,22,52,299,304,305,],[-135,-135,-135,-3,21,-135,-5,-2,-4,-26,-135,-36,-122,]),'READ':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,244,249,250,252,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,-3,-135,-5,-2,-4,-135,-135,73,-26,73,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,-58,73,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,73,73,73,-94,-135,-95,-135,-91,-93,-36,-122,73,-92,]),'WRITE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,244,249,250,252,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,-3,-135,-5,-2,-4,-135,-135,74,-26,74,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,-58,74,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,74,74,74,-94,-135,-95,-135,-91,-93,-36,-122,74,-92,]),'IF':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,244,249,250,252,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,-3,-135,-5,-2,-4,-135,-135,75,-26,75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,-58,75,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,75,75,75,-94,-135,-95,-135,-91,-93,-36,-122,75,-92,]),'WHILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,244,249,250,252,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,-3,-135,-5,-2,-4,-135,-135,76,-26,76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,-58,76,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,76,76,76,-94,-135,-95,-135,-91,-93,-36,-122,76,-92,]),'FOR':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,244,249,250,252,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,-3,-135,-5,-2,-4,-135,-135,77,-26,77,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,-58,77,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,77,77,77,-94,-135,-95,-135,-91,-93,-36,-122,77,-92,]),'RETURNS':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,244,249,250,252,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,-3,-135,-5,-2,-4,-135,-135,87,-26,87,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,-58,87,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,87,87,87,-94,-135,-95,-135,-91,-93,-36,-122,87,-92,]),'READ_FILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,203,214,216,217,219,221,222,244,247,249,250,252,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,-3,-135,-5,-2,-4,-135,-135,88,-26,88,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,88,-135,88,88,88,88,88,88,-133,88,88,-61,88,-65,-66,88,-70,-71,-72,-73,88,88,-135,-135,88,-135,-135,-21,88,-57,-58,88,-77,-129,-78,-82,-130,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,88,88,88,-94,-135,-95,-135,-91,-93,-36,-122,88,-92,]),'MEAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,203,214,216,217,219,221,222,244,247,249,250,252,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,-3,-135,-5,-2,-4,-135,-135,89,-26,89,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,89,-135,89,89,89,89,89,89,-133,89,89,-61,89,-65,-66,89,-70,-71,-72,-73,89,89,-135,-135,89,-135,-135,-21,89,-57,-58,89,-77,-129,-78,-82,-130,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,89,89,89,-94,-135,-95,-135,-91,-93,-36,-122,89,-92,]),'MODE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,203,214,216,217,219,221,222,244,247,249,250,252,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,-3,-135,-5,-2,-4,-135,-135,90,-26,90,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,90,-135,90,90,90,90,90,90,-133,90,90,-61,90,-65,-66,90,-70,-71,-72,-73,90,90,-135,-135,90,-135,-135,-21,90,-57,-58,90,-77,-129,-78,-82,-130,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,90,90,90,-94,-135,-95,-135,-91,-93,-36,-122,90,-92,]),'MEDIAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,203,214,216,217,219,221,222,244,247,249,250,252,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,-3,-135,-5,-2,-4,-135,-135,91,-26,91,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,91,-135,91,91,91,91,91,91,-133,91,91,-61,91,-65,-66,91,-70,-71,-72,-73,91,91,-135,-135,91,-135,-135,-21,91,-57,-58,91,-77,-129,-78,-82,-130,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,91,91,91,-94,-135,-95,-135,-91,-93,-36,-122,91,-92,]),'VARIANCE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,203,214,216,217,219,221,222,244,247,249,250,252,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,-3,-135,-5,-2,-4,-135,-135,92,-26,92,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,92,-135,92,92,92,92,92,92,-133,92,92,-61,92,-65,-66,92,-70,-71,-72,-73,92,92,-135,-135,92,-135,-135,-21,92,-57,-58,92,-77,-129,-78,-82,-130,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,92,92,92,-94,-135,-95,-135,-91,-93,-36,-122,92,-92,]),'MAX':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,203,214,216,217,219,221,222,244,247,249,250,252,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,-3,-135,-5,-2,-4,-135,-135,93,-26,93,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,93,-135,93,93,93,93,93,93,-133,93,93,-61,93,-65,-66,93,-70,-71,-72,-73,93,93,-135,-135,93,-135,-135,-21,93,-57,-58,93,-77,-129,-78,-82,-130,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,93,93,93,-94,-135,-95,-135,-91,-93,-36,-122,93,-92,]),'MIN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,203,214,216,217,219,221,222,244,247,249,250,252,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,-3,-135,-5,-2,-4,-135,-135,94,-26,94,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,94,-135,94,94,94,94,94,94,-133,94,94,-61,94,-65,-66,94,-70,-71,-72,-73,94,94,-135,-135,94,-135,-135,-21,94,-57,-58,94,-77,-129,-78,-82,-130,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,94,94,94,-94,-135,-95,-135,-91,-93,-36,-122,94,-92,]),'STADDES':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,203,214,216,217,219,221,222,244,247,249,250,252,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,-3,-135,-5,-2,-4,-135,-135,95,-26,95,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,95,-135,95,95,95,95,95,95,-133,95,95,-61,95,-65,-66,95,-70,-71,-72,-73,95,95,-135,-135,95,-135,-135,-21,95,-57,-58,95,-77,-129,-78,-82,-130,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,95,95,95,-94,-135,-95,-135,-91,-93,-36,-122,95,-92,]),'BOXPLOT':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,203,214,216,217,219,221,222,244,247,249,250,252,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,-3,-135,-5,-2,-4,-135,-135,96,-26,96,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,96,-135,96,96,96,96,96,96,-133,96,96,-61,96,-65,-66,96,-70,-71,-72,-73,96,96,-135,-135,96,-135,-135,-21,96,-57,-58,96,-77,-129,-78,-82,-130,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,96,96,96,-94,-135,-95,-135,-91,-93,-36,-122,96,-92,]),'LINREG':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,203,214,216,217,219,221,222,244,247,249,250,252,257,258,259,261,262,263,264,265,266,267,268,269,270,271,272,273,274,276,280,282,285,289,297,298,299,301,303,304,305,306,308,],[-135,-3,-135,-5,-2,-4,-135,-135,97,-26,97,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,97,-135,97,97,97,97,97,97,-133,97,97,-61,97,-65,-66,97,-70,-71,-72,-73,97,97,-135,-135,97,-135,-135,-21,97,-57,-58,97,-77,-129,-78,-82,-130,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,97,97,97,-94,-135,-95,-135,-91,-93,-36,-122,97,-92,]),'RIGHT_CUR_BRACKET':([10,11,14,15,17,22,32,44,49,52,58,59,60,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,105,159,244,249,250,252,264,265,266,267,268,269,270,271,272,273,274,276,280,281,282,285,288,289,290,293,297,298,299,301,303,304,305,306,307,308,],[-135,-3,-135,-5,-2,-4,-135,-135,-135,-26,104,-135,-8,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-7,-61,-21,-57,-58,-135,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-56,-135,289,-135,-135,297,-94,298,299,-135,-95,-135,-91,-93,-36,-122,-135,308,-92,]),'DATAFRAME':([12,18,19,98,139,295,],[-135,30,-117,-135,198,198,]),'INT':([12,16,18,19,98,139,295,],[-135,26,26,-117,-135,26,26,]),'FLOAT':([12,16,18,19,98,139,295,],[-135,27,27,-117,-135,27,27,]),'CHAR':([12,16,18,19,98,139,295,],[-135,28,28,-117,-135,28,28,]),'VOID':([16,],[25,]),'RIGHT_PARENT':([19,78,79,80,81,82,83,84,85,86,98,107,108,109,116,117,118,119,121,122,123,124,125,126,127,128,139,145,146,147,148,150,151,152,153,154,155,156,157,160,162,165,167,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,202,204,210,211,212,213,215,218,220,223,224,225,226,227,244,245,254,255,256,260,264,265,266,267,268,269,270,271,272,273,275,277,278,283,284,286,287,291,292,294,296,300,],[-117,-96,-97,-98,-99,-100,-101,-102,-103,-104,-135,-135,-135,-127,-135,-135,-135,-135,-135,-135,-135,-88,-89,-90,-135,-105,-135,201,-135,-23,-16,-18,206,-135,207,-59,-60,208,209,-62,-64,-67,-69,-135,-131,-135,-132,223,-135,-124,-135,-125,-135,-126,228,229,230,231,232,233,234,235,236,237,238,-39,-40,-22,-25,253,-135,-135,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,-135,-63,-68,-135,-135,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-24,-17,-135,-135,-135,-121,-75,-80,-41,-45,-44,]),'LEFT_CUR_BRACKET':([21,209,238,251,253,302,],[32,252,274,280,282,306,]),'ARROW':([23,24,25,26,27,28,29,30,31,34,35,36,37,38,40,41,43,102,196,197,198,240,],[33,-37,-135,-135,-135,-135,39,-135,-135,-38,-118,-9,-10,-11,-27,-28,-30,-29,239,-42,-135,-43,]),'LEFT_SQR_BRACKET':([26,27,28,31,35,36,37,38,72,108,109,127,152,],[-135,-135,-135,42,-118,-9,-10,-11,-135,149,-127,-135,-135,]),'CTEI':([42,56,87,106,107,111,112,113,120,143,144,149,158,161,163,164,166,168,169,170,171,203,214,216,217,219,221,222,247,257,258,259,261,262,263,276,],[48,103,121,-135,121,121,121,121,121,121,-133,121,121,121,-65,-66,121,-70,-71,-72,-73,121,121,-135,-135,121,-135,-135,121,-77,-129,-78,-82,-130,-83,-56,]),'LEFT_PARENT':([45,50,51,72,73,74,75,76,77,87,88,89,90,91,92,93,94,95,96,97,106,107,111,112,113,120,127,143,144,149,158,161,163,164,166,168,169,170,171,203,214,216,217,219,221,222,247,257,258,259,261,262,263,276,],[-135,98,-120,107,110,111,112,113,114,120,129,130,131,132,133,134,135,136,137,138,-135,120,120,120,120,120,107,120,-133,120,120,120,-65,-66,120,-70,-71,-72,-73,120,120,-135,-135,120,-135,-135,120,-77,-129,-78,-82,-130,-83,-56,]),'COMMA':([47,48,53,54,78,79,80,81,82,83,84,85,86,108,109,116,117,118,119,121,122,123,124,125,126,127,128,140,146,148,150,160,162,165,167,172,173,174,175,177,178,179,180,181,182,199,205,211,212,213,215,218,220,223,224,225,226,227,244,245,254,255,256,260,264,265,266,267,268,269,270,271,272,273,275,278,283,284,286,287,291,292,],[-135,56,100,-119,-96,-97,-98,-99,-100,-101,-102,-103,-104,-135,-127,-135,-135,-135,-135,-135,-135,-135,-88,-89,-90,-135,-105,-135,203,-16,-18,-62,-64,-67,-69,-135,-131,-135,-132,-135,-124,-135,-125,-135,-126,100,247,-135,-135,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,203,-63,-68,-135,-135,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-135,-17,-135,-135,295,-121,-75,-80,]),'RIGHT_SQR_BRACKET':([48,55,57,78,79,80,81,82,83,84,85,86,103,108,109,116,117,118,119,121,122,123,124,125,126,127,128,148,150,160,162,165,167,172,173,174,175,177,178,179,180,181,182,205,211,212,213,215,218,220,223,224,225,226,227,244,246,248,254,255,256,260,264,265,266,267,268,269,270,271,272,273,278,279,283,284,291,292,],[-135,102,-32,-96,-97,-98,-99,-100,-101,-102,-103,-104,-31,-135,-127,-135,-135,-135,-135,-135,-135,-135,-88,-89,-90,-135,-105,-16,-18,-62,-64,-67,-69,-135,-131,-135,-132,-135,-124,-135,-125,-135,-126,-135,-135,-135,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,278,-20,-63,-68,-135,-135,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,-19,-135,-135,-75,-80,]),'ASIGN':([71,72,108,109,148,150,152,278,],[106,-135,-135,-127,-16,-18,-135,-17,]),'MULT':([78,79,80,81,82,83,84,85,86,108,109,119,121,122,123,124,125,126,127,128,148,150,174,175,177,178,179,180,181,182,223,224,225,226,227,244,260,264,265,266,267,268,269,270,271,272,273,278,284,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-135,-127,-135,-135,-135,-135,-88,-89,-90,-135,-105,-16,-18,221,-132,-135,-124,-135,-125,-135,-126,-84,-85,-128,-86,-87,-21,-135,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,221,]),'DIV':([78,79,80,81,82,83,84,85,86,108,109,119,121,122,123,124,125,126,127,128,148,150,174,175,177,178,179,180,181,182,223,224,225,226,227,244,260,264,265,266,267,268,269,270,271,272,273,278,284,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-135,-127,-135,-135,-135,-135,-88,-89,-90,-135,-105,-16,-18,222,-132,-135,-124,-135,-125,-135,-126,-84,-85,-128,-86,-87,-21,-135,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,222,]),'PLUS':([78,79,80,81,82,83,84,85,86,108,109,118,119,121,122,123,124,125,126,127,128,148,150,172,173,174,175,177,178,179,180,181,182,218,220,223,224,225,226,227,244,256,260,264,265,266,267,268,269,270,271,272,273,278,283,284,292,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-135,-127,-135,-135,-135,-135,-135,-88,-89,-90,-135,-105,-16,-18,216,-131,-135,-132,-135,-124,-135,-125,-135,-126,-79,-81,-84,-85,-128,-86,-87,-21,-135,-135,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,216,-135,-80,]),'MINUS':([78,79,80,81,82,83,84,85,86,108,109,118,119,121,122,123,124,125,126,127,128,148,150,172,173,174,175,177,178,179,180,181,182,218,220,223,224,225,226,227,244,256,260,264,265,266,267,268,269,270,271,272,273,278,283,284,292,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-135,-127,-135,-135,-135,-135,-135,-88,-89,-90,-135,-105,-16,-18,217,-131,-135,-132,-135,-124,-135,-125,-135,-126,-79,-81,-84,-85,-128,-86,-87,-21,-135,-135,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,217,-135,-80,]),'LESS_THAN':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,121,122,123,124,125,126,127,128,148,150,172,173,174,175,177,178,179,180,181,182,212,213,215,218,220,223,224,225,226,227,244,256,260,264,265,266,267,268,269,270,271,272,273,278,283,284,291,292,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-135,-127,168,-135,-135,-135,-135,-135,-88,-89,-90,-135,-105,-16,-18,-135,-131,-135,-132,-135,-124,-135,-125,-135,-126,168,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,-135,-135,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,-135,-135,-75,-80,]),'GREATER_THAN':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,121,122,123,124,125,126,127,128,148,150,172,173,174,175,177,178,179,180,181,182,212,213,215,218,220,223,224,225,226,227,244,256,260,264,265,266,267,268,269,270,271,272,273,278,283,284,291,292,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-135,-127,169,-135,-135,-135,-135,-135,-88,-89,-90,-135,-105,-16,-18,-135,-131,-135,-132,-135,-124,-135,-125,-135,-126,169,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,-135,-135,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,-135,-135,-75,-80,]),'EQUALS':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,121,122,123,124,125,126,127,128,148,150,172,173,174,175,177,178,179,180,181,182,212,213,215,218,220,223,224,225,226,227,244,256,260,264,265,266,267,268,269,270,271,272,273,278,283,284,291,292,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-135,-127,170,-135,-135,-135,-135,-135,-88,-89,-90,-135,-105,-16,-18,-135,-131,-135,-132,-135,-124,-135,-125,-135,-126,170,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,-135,-135,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,-135,-135,-75,-80,]),'NOTEQUALS':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,121,122,123,124,125,126,127,128,148,150,172,173,174,175,177,178,179,180,181,182,212,213,215,218,220,223,224,225,226,227,244,256,260,264,265,266,267,268,269,270,271,272,273,278,283,284,291,292,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-135,-127,171,-135,-135,-135,-135,-135,-88,-89,-90,-135,-105,-16,-18,-135,-131,-135,-132,-135,-124,-135,-125,-135,-126,171,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,-135,-135,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,-135,-135,-75,-80,]),'AND':([78,79,80,81,82,83,84,85,86,108,109,116,117,118,119,121,122,123,124,125,126,127,128,148,150,165,167,172,173,174,175,177,178,179,180,181,182,211,212,213,215,218,220,223,224,225,226,227,244,255,256,260,264,265,266,267,268,269,270,271,272,273,278,283,284,291,292,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-135,-127,163,-135,-135,-135,-135,-135,-135,-88,-89,-90,-135,-105,-16,-18,-67,-69,-135,-131,-135,-132,-135,-124,-135,-125,-135,-126,163,-135,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,-68,-135,-135,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,-135,-135,-75,-80,]),'OR':([78,79,80,81,82,83,84,85,86,108,109,116,117,118,119,121,122,123,124,125,126,127,128,148,150,165,167,172,173,174,175,177,178,179,180,181,182,211,212,213,215,218,220,223,224,225,226,227,244,255,256,260,264,265,266,267,268,269,270,271,272,273,278,283,284,291,292,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-135,-127,164,-135,-135,-135,-135,-135,-135,-88,-89,-90,-135,-105,-16,-18,-67,-69,-135,-131,-135,-132,-135,-124,-135,-125,-135,-126,164,-135,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,-68,-135,-135,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,-135,-135,-75,-80,]),'CTEF':([87,106,107,111,112,113,120,143,144,149,158,161,163,164,166,168,169,170,171,203,214,216,217,219,221,222,247,257,258,259,261,262,263,276,],[122,-135,122,122,122,122,122,122,-133,122,122,122,-65,-66,122,-70,-71,-72,-73,122,122,-135,-135,122,-135,-135,122,-77,-129,-78,-82,-130,-83,-56,]),'CTEC':([87,106,107,111,112,113,120,143,144,149,158,161,163,164,166,168,169,170,171,203,214,216,217,219,221,222,247,257,258,259,261,262,263,276,],[123,-135,123,123,123,123,123,123,-133,123,123,123,-65,-66,123,-70,-71,-72,-73,123,123,-135,-135,123,-135,-135,123,-77,-129,-78,-82,-130,-83,-56,]),'LETRERO':([111,129,],[155,183,]),'IF_TRUE':([208,],[251,]),'IF_FALSE':([297,],[302,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pnCrearDirFunc':([2,],[3,]),'empty':([2,5,8,9,10,12,14,25,26,27,28,30,31,32,44,45,47,48,49,53,59,72,98,104,106,107,108,116,117,118,119,121,122,123,127,139,140,146,152,172,174,177,179,181,198,199,200,205,211,212,216,217,221,222,245,252,256,260,274,275,280,282,283,284,285,286,297,299,306,],[4,7,11,15,11,19,15,35,35,35,35,35,43,11,15,51,54,57,60,101,60,109,19,142,144,147,150,162,167,173,175,178,180,182,109,195,54,204,109,215,220,225,225,225,35,101,243,248,162,167,258,258,262,262,204,60,173,175,11,287,60,60,215,220,60,296,303,305,60,]),'pnScriptFuncDir':([5,],[6,]),'varp':([8,10,32,274,],[9,17,44,285,]),'var':([8,10,32,274,],[10,10,10,10,]),'funcp':([9,14,44,],[13,22,49,]),'func':([9,14,44,],[14,14,14,]),'pnCheckTablaVar':([12,98,],[18,139,]),'bloque':([13,],[20,]),'returnval':([16,],[23,]),'tipo_simp':([16,18,139,295,],[24,31,197,197,]),'v':([18,],[29,]),'pnSaveTypeVar':([25,26,27,28,30,198,],[34,36,37,38,40,240,]),'vp':([31,],[41,]),'idp':([39,],[46,]),'pnAddFuncinDir':([45,],[50,]),'pnCheckNameTablaVar':([47,140,],[53,199,]),'vpp':([48,],[55,]),'estatutop':([49,59,252,280,282,285,306,],[58,105,281,288,290,293,307,]),'estatuto':([49,59,252,280,282,285,306,],[59,59,59,59,59,59,59,]),'asign':([49,59,114,252,280,282,285,306,],[61,61,158,61,61,61,61,61,]),'llamada':([49,59,87,107,111,112,113,120,143,149,158,161,166,203,214,219,247,252,280,282,285,306,],[62,62,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,62,62,62,62,62,]),'lee':([49,59,252,280,282,285,306,],[63,63,63,63,63,63,63,]),'escribe':([49,59,252,280,282,285,306,],[64,64,64,64,64,64,64,]),'condicion':([49,59,252,280,282,285,306,],[65,65,65,65,65,65,65,]),'ciclow':([49,59,252,280,282,285,306,],[66,66,66,66,66,66,66,]),'ciclof':([49,59,252,280,282,285,306,],[67,67,67,67,67,67,67,]),'funcesp':([49,59,87,107,111,112,113,120,143,149,158,161,166,203,214,219,247,252,280,282,285,306,],[68,68,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,68,68,68,68,68,]),'return':([49,59,252,280,282,285,306,],[69,69,69,69,69,69,69,]),'copy':([49,59,87,107,111,112,113,120,143,149,158,161,166,203,214,219,247,252,280,282,285,306,],[70,70,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,70,70,70,70,70,]),'variable':([49,59,87,107,110,111,112,113,114,120,130,131,132,133,134,135,136,137,138,143,149,158,161,166,203,214,219,247,252,280,282,285,306,],[71,71,124,124,151,124,124,124,71,124,184,185,186,187,188,189,190,191,192,124,124,124,124,124,124,124,124,124,71,71,71,71,71,]),'mean':([49,59,87,107,111,112,113,120,143,149,158,161,166,203,214,219,247,252,280,282,285,306,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'mode':([49,59,87,107,111,112,113,120,143,149,158,161,166,203,214,219,247,252,280,282,285,306,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'median':([49,59,87,107,111,112,113,120,143,149,158,161,166,203,214,219,247,252,280,282,285,306,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'variance':([49,59,87,107,111,112,113,120,143,149,158,161,166,203,214,219,247,252,280,282,285,306,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'max':([49,59,87,107,111,112,113,120,143,149,158,161,166,203,214,219,247,252,280,282,285,306,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'min':([49,59,87,107,111,112,113,120,143,149,158,161,166,203,214,219,247,252,280,282,285,306,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'staddes':([49,59,87,107,111,112,113,120,143,149,158,161,166,203,214,219,247,252,280,282,285,306,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'boxplot':([49,59,87,107,111,112,113,120,143,149,158,161,166,203,214,219,247,252,280,282,285,306,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'linreg':([49,59,87,107,111,112,113,120,143,149,158,161,166,203,214,219,247,252,280,282,285,306,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'idpp':([53,199,],[99,241,]),'pnSaveOperandos':([72,127,152,],[108,108,108,]),'exp':([87,107,111,112,113,120,143,149,158,203,247,],[115,146,154,156,157,176,200,205,210,245,279,]),'exprel':([87,107,111,112,113,120,143,149,158,161,203,247,],[116,116,116,116,116,116,116,116,116,211,116,116,]),'e':([87,107,111,112,113,120,143,149,158,161,166,203,247,],[117,117,117,117,117,117,117,117,117,117,212,117,117,]),'t':([87,107,111,112,113,120,143,149,158,161,166,203,214,247,],[118,118,118,118,118,118,118,118,118,118,118,118,256,118,]),'f':([87,107,111,112,113,120,143,149,158,161,166,203,214,219,247,],[119,119,119,119,119,119,119,119,119,119,119,119,119,260,119,]),'pnEndScript':([104,],[141,]),'pnSaveOperadorAsign':([106,],[143,]),'expp':([107,],[145,]),'indexp':([108,],[148,]),'escribep':([111,],[153,]),'logic':([116,211,],[160,254,]),'logicsig':([116,211,],[161,161,]),'relacionalp':([117,212,],[165,255,]),'relsig':([117,212,],[166,166,]),'pnCuadPlMi':([118,256,],[172,283,]),'pnCuadMuDi':([119,260,],[174,284,]),'pnSaveCteI':([121,],[177,]),'pnSaveCteF':([122,],[179,]),'pnSaveCteC':([123,],[181,]),'param':([139,],[193,]),'paramlist':([139,295,],[194,300,]),'tipoparam':([139,295,],[196,196,]),'exppp':([146,245,],[202,277,]),'tp':([172,283,],[213,291,]),'tsig':([172,283,],[214,214,]),'fp':([174,284,],[218,292,]),'fsig':([174,284,],[219,219,]),'pnSaveOperandoConstante':([177,179,181,],[224,226,227,]),'pnCuadAsign':([200,],[242,]),'indexpp':([205,],[246,]),'pnSaveOperadorPlMi':([216,217,],[257,259,]),'pnSaveOperadorMuDi':([221,222,],[261,263,]),'pnAddParametersTablaVar':([275,],[286,]),'paramlistp':([286,],[294,]),'falsop':([297,],[301,]),'pnCloseCurrentFunction':([299,],[304,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque','programa',8,'p_programa','lexer-parser.py',185),
  ('varp -> var varp','varp',2,'p_programa','lexer-parser.py',186),
  ('varp -> empty','varp',1,'p_programa','lexer-parser.py',187),
  ('funcp -> func funcp','funcp',2,'p_programa','lexer-parser.py',188),
  ('funcp -> empty','funcp',1,'p_programa','lexer-parser.py',189),
  ('bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript','bloque',7,'p_bloque','lexer-parser.py',195),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_bloque','lexer-parser.py',196),
  ('estatutop -> empty','estatutop',1,'p_bloque','lexer-parser.py',197),
  ('tipo_simp -> INT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',203),
  ('tipo_simp -> FLOAT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',204),
  ('tipo_simp -> CHAR pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',205),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','lexer-parser.py',211),
  ('tipo_comp -> file','tipo_comp',1,'p_tipo_comp','lexer-parser.py',212),
  ('copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON','copy',5,'p_copy','lexer-parser.py',218),
  ('file -> ID','file',1,'p_file','lexer-parser.py',224),
  ('variable -> ID pnSaveOperandos indexp','variable',3,'p_variable','lexer-parser.py',230),
  ('indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET','indexp',4,'p_variable','lexer-parser.py',231),
  ('indexp -> empty','indexp',1,'p_variable','lexer-parser.py',232),
  ('indexpp -> COMMA exp','indexpp',2,'p_variable','lexer-parser.py',233),
  ('indexpp -> empty','indexpp',1,'p_variable','lexer-parser.py',234),
  ('llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON','llamada',5,'p_llamada','lexer-parser.py',240),
  ('expp -> exp exppp','expp',2,'p_llamada','lexer-parser.py',241),
  ('expp -> empty','expp',1,'p_llamada','lexer-parser.py',242),
  ('exppp -> COMMA exp exppp','exppp',3,'p_llamada','lexer-parser.py',243),
  ('exppp -> empty','exppp',1,'p_llamada','lexer-parser.py',244),
  ('var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON','var',6,'p_var','lexer-parser.py',250),
  ('v -> DATAFRAME pnSaveTypeVar','v',2,'p_var','lexer-parser.py',251),
  ('v -> tipo_simp vp','v',2,'p_var','lexer-parser.py',252),
  ('vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET','vp',4,'p_var','lexer-parser.py',253),
  ('vp -> empty','vp',1,'p_var','lexer-parser.py',254),
  ('vpp -> COMMA CTEI','vpp',2,'p_var','lexer-parser.py',255),
  ('vpp -> empty','vpp',1,'p_var','lexer-parser.py',256),
  ('idp -> ID pnCheckNameTablaVar idpp','idp',3,'p_var','lexer-parser.py',257),
  ('idpp -> COMMA ID pnCheckNameTablaVar idpp','idpp',4,'p_var','lexer-parser.py',258),
  ('idpp -> empty','idpp',1,'p_var','lexer-parser.py',259),
  ('func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction','func',14,'p_func','lexer-parser.py',265),
  ('returnval -> tipo_simp','returnval',1,'p_func','lexer-parser.py',266),
  ('returnval -> VOID pnSaveTypeVar','returnval',2,'p_func','lexer-parser.py',267),
  ('param -> paramlist','param',1,'p_param','lexer-parser.py',273),
  ('param -> empty','param',1,'p_param','lexer-parser.py',274),
  ('paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp','paramlist',5,'p_param','lexer-parser.py',275),
  ('tipoparam -> tipo_simp','tipoparam',1,'p_param','lexer-parser.py',276),
  ('tipoparam -> DATAFRAME pnSaveTypeVar','tipoparam',2,'p_param','lexer-parser.py',277),
  ('paramlistp -> COMMA paramlist','paramlistp',2,'p_param','lexer-parser.py',278),
  ('paramlistp -> empty','paramlistp',1,'p_param','lexer-parser.py',279),
  ('estatuto -> asign','estatuto',1,'p_estatuto','lexer-parser.py',285),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','lexer-parser.py',286),
  ('estatuto -> lee','estatuto',1,'p_estatuto','lexer-parser.py',287),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','lexer-parser.py',288),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexer-parser.py',289),
  ('estatuto -> ciclow','estatuto',1,'p_estatuto','lexer-parser.py',290),
  ('estatuto -> ciclof','estatuto',1,'p_estatuto','lexer-parser.py',291),
  ('estatuto -> funcesp','estatuto',1,'p_estatuto','lexer-parser.py',292),
  ('estatuto -> return','estatuto',1,'p_estatuto','lexer-parser.py',293),
  ('estatuto -> copy','estatuto',1,'p_estatuto','lexer-parser.py',294),
  ('asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON','asign',6,'p_asign','lexer-parser.py',300),
  ('lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON','lee',5,'p_lee','lexer-parser.py',306),
  ('escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON','escribe',5,'p_escribe','lexer-parser.py',312),
  ('escribep -> exp','escribep',1,'p_escribe','lexer-parser.py',313),
  ('escribep -> LETRERO','escribep',1,'p_escribe','lexer-parser.py',314),
  ('return -> RETURNS exp SEMICOLON','return',3,'p_return','lexer-parser.py',320),
  ('exp -> exprel logic','exp',2,'p_exp','lexer-parser.py',326),
  ('logic -> logicsig exprel logic','logic',3,'p_exp','lexer-parser.py',327),
  ('logic -> empty','logic',1,'p_exp','lexer-parser.py',328),
  ('logicsig -> AND','logicsig',1,'p_exp','lexer-parser.py',329),
  ('logicsig -> OR','logicsig',1,'p_exp','lexer-parser.py',330),
  ('exprel -> e relacionalp','exprel',2,'p_exprel','lexer-parser.py',336),
  ('relacionalp -> relsig e relacionalp','relacionalp',3,'p_exprel','lexer-parser.py',337),
  ('relacionalp -> empty','relacionalp',1,'p_exprel','lexer-parser.py',338),
  ('relsig -> LESS_THAN','relsig',1,'p_exprel','lexer-parser.py',339),
  ('relsig -> GREATER_THAN','relsig',1,'p_exprel','lexer-parser.py',340),
  ('relsig -> EQUALS','relsig',1,'p_exprel','lexer-parser.py',341),
  ('relsig -> NOTEQUALS','relsig',1,'p_exprel','lexer-parser.py',342),
  ('e -> t pnCuadPlMi tp','e',3,'p_e','lexer-parser.py',348),
  ('tp -> tsig t pnCuadPlMi tp','tp',4,'p_e','lexer-parser.py',349),
  ('tp -> empty','tp',1,'p_e','lexer-parser.py',350),
  ('tsig -> PLUS pnSaveOperadorPlMi','tsig',2,'p_e','lexer-parser.py',351),
  ('tsig -> MINUS pnSaveOperadorPlMi','tsig',2,'p_e','lexer-parser.py',352),
  ('t -> f pnCuadMuDi fp','t',3,'p_t','lexer-parser.py',358),
  ('fp -> fsig f pnCuadMuDi fp','fp',4,'p_t','lexer-parser.py',359),
  ('fp -> empty','fp',1,'p_t','lexer-parser.py',360),
  ('fsig -> MULT pnSaveOperadorMuDi','fsig',2,'p_t','lexer-parser.py',361),
  ('fsig -> DIV pnSaveOperadorMuDi','fsig',2,'p_t','lexer-parser.py',362),
  ('f -> LEFT_PARENT exp RIGHT_PARENT','f',3,'p_f','lexer-parser.py',368),
  ('f -> CTEI pnSaveCteI pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',369),
  ('f -> CTEF pnSaveCteF pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',370),
  ('f -> CTEC pnSaveCteC pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',371),
  ('f -> variable','f',1,'p_f','lexer-parser.py',372),
  ('f -> llamada','f',1,'p_f','lexer-parser.py',373),
  ('f -> funcesp','f',1,'p_f','lexer-parser.py',374),
  ('condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop','condicion',9,'p_condicion','lexer-parser.py',380),
  ('falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','falsop',4,'p_condicion','lexer-parser.py',381),
  ('falsop -> empty','falsop',1,'p_condicion','lexer-parser.py',382),
  ('ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','ciclow',7,'p_ciclow','lexer-parser.py',388),
  ('ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','ciclof',8,'p_ciclof','lexer-parser.py',394),
  ('funcesp -> mean','funcesp',1,'p_funcesp','lexer-parser.py',400),
  ('funcesp -> mode','funcesp',1,'p_funcesp','lexer-parser.py',401),
  ('funcesp -> median','funcesp',1,'p_funcesp','lexer-parser.py',402),
  ('funcesp -> variance','funcesp',1,'p_funcesp','lexer-parser.py',403),
  ('funcesp -> max','funcesp',1,'p_funcesp','lexer-parser.py',404),
  ('funcesp -> min','funcesp',1,'p_funcesp','lexer-parser.py',405),
  ('funcesp -> staddes','funcesp',1,'p_funcesp','lexer-parser.py',406),
  ('funcesp -> boxplot','funcesp',1,'p_funcesp','lexer-parser.py',407),
  ('funcesp -> linreg','funcesp',1,'p_funcesp','lexer-parser.py',408),
  ('funcesp -> copy','funcesp',1,'p_funcesp','lexer-parser.py',409),
  ('mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON','mean',5,'p_mean','lexer-parser.py',415),
  ('mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON','mode',5,'p_mode','lexer-parser.py',421),
  ('median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON','median',5,'p_median','lexer-parser.py',427),
  ('variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON','variance',5,'p_variance','lexer-parser.py',433),
  ('max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON','max',5,'p_max','lexer-parser.py',439),
  ('min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON','min',5,'p_min','lexer-parser.py',445),
  ('staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON','staddes',5,'p_staddes','lexer-parser.py',451),
  ('boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON','boxplot',5,'p_boxplot','lexer-parser.py',457),
  ('linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON','linreg',5,'p_linreg','lexer-parser.py',463),
  ('pnCrearDirFunc -> empty','pnCrearDirFunc',1,'p_pnCrearDirFunc','lexer-parser.py',473),
  ('pnScriptFuncDir -> empty','pnScriptFuncDir',1,'p_pnScriptFuncDir','lexer-parser.py',483),
  ('pnCheckTablaVar -> empty','pnCheckTablaVar',1,'p_pnCheckTablaVar','lexer-parser.py',492),
  ('pnSaveTypeVar -> empty','pnSaveTypeVar',1,'p_pnSaveTypeVar','lexer-parser.py',500),
  ('pnCheckNameTablaVar -> empty','pnCheckNameTablaVar',1,'p_pnCheckNameTablaVar','lexer-parser.py',509),
  ('pnAddFuncinDir -> empty','pnAddFuncinDir',1,'p_pnAddFuncinDir','lexer-parser.py',516),
  ('pnAddParametersTablaVar -> empty','pnAddParametersTablaVar',1,'p_pnAddParametersTablaVar','lexer-parser.py',530),
  ('pnCloseCurrentFunction -> empty','pnCloseCurrentFunction',1,'p_pnCloseCurrentFunction','lexer-parser.py',538),
  ('pnEndScript -> empty','pnEndScript',1,'p_pnEndScript','lexer-parser.py',547),
  ('pnSaveCteI -> empty','pnSaveCteI',1,'p_pnSaveCteI','lexer-parser.py',555),
  ('pnSaveCteF -> empty','pnSaveCteF',1,'p_pnSaveCteF','lexer-parser.py',562),
  ('pnSaveCteC -> empty','pnSaveCteC',1,'p_pnSaveCteC','lexer-parser.py',569),
  ('pnSaveOperandos -> empty','pnSaveOperandos',1,'p_pnSaveOperandos','lexer-parser.py',578),
  ('pnSaveOperandoConstante -> empty','pnSaveOperandoConstante',1,'p_pnSaveOperandoConstante','lexer-parser.py',594),
  ('pnSaveOperadorPlMi -> empty','pnSaveOperadorPlMi',1,'p_pnSaveOperadorPlMi','lexer-parser.py',602),
  ('pnSaveOperadorMuDi -> empty','pnSaveOperadorMuDi',1,'p_pnSaveOperadorMuDi','lexer-parser.py',609),
  ('pnCuadPlMi -> empty','pnCuadPlMi',1,'p_pnCuadPlMi','lexer-parser.py',616),
  ('pnCuadMuDi -> empty','pnCuadMuDi',1,'p_pnCuadMuDi','lexer-parser.py',650),
  ('pnSaveOperadorAsign -> empty','pnSaveOperadorAsign',1,'p_pnSaveOperadorAsign','lexer-parser.py',684),
  ('pnCuadAsign -> empty','pnCuadAsign',1,'p_pnCuadAsign','lexer-parser.py',691),
  ('empty -> <empty>','empty',0,'p_empty','lexer-parser.py',718),
]

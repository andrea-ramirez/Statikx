
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVAND ARROW ASIGN BOXPLOT CHAR COMMA COMMENT CTEC CTEF CTEI DATAFRAME DIV DO EQUALS FLOAT FOR FUNC GREATER_THAN ID IF IF_FALSE IF_TRUE INT LEFT_CUR_BRACKET LEFT_PARENT LEFT_SQR_BRACKET LESS_THAN LETRERO LINREG MAX MEAN MEDIAN MIN MINUS MODE MULT NOTEQUALS OR PLUS READ READ_FILE RETURNS RIGHT_CUR_BRACKET RIGHT_PARENT RIGHT_SQR_BRACKET SCRIPT SEMICOLON STADDES VAR VARIANCE VOID WHILE WRITE\n    programa : SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque\n    varp : var varp \n         | empty\n    funcp : func funcp \n          | empty\n    \n    bloque : DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript\n    estatutop : estatuto estatutop \n              | empty\n    \n    tipo_simp : INT pnSaveTypeVar\n              | FLOAT pnSaveTypeVar\n              | CHAR pnSaveTypeVar\n    \n    tipo_comp : DATAFRAME \n              | file\n    \n    copy : READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON\n    \n    file : ID\n    \n    variable : ID pnSaveOperandos indexp\n    indexp : LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET \n           | empty\n    indexpp : COMMA exp \n            | empty\n    \n    llamada : ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON\n    expp : exp exppp\n         | empty\n    exppp : COMMA exp exppp\n          | empty\n    \n    var : VAR pnCheckTablaVar v ARROW idp SEMICOLON\n    v : DATAFRAME pnSaveTypeVar\n      | tipo_simp vp\n    vp : LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET \n       | empty\n    vpp : COMMA CTEI \n        | empty\n    idp : ID pnCheckNameTablaVar idpp\n    idpp : COMMA ID pnCheckNameTablaVar idpp\n         | empty\n    \n    func : FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param pnAddParamResources RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction\n    returnval : tipo_simp \n              | VOID pnSaveTypeVar\n    \n    param : paramlist\n          | empty\n    paramlist : tipoparam ARROW ID pnAddParametersTablaVar paramlistp\n    tipoparam : tipo_simp\n              | DATAFRAME pnSaveTypeVar\n    paramlistp : COMMA paramlist\n               | empty\n    \n    estatuto : asign\n             | llamada\n             | lee\n             | escribe\n             | condicion\n             | ciclow\n             | ciclof\n             | funcesp\n             | return\n             | copy\n    \n    asign : variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON\n    \n    lee : READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON\n    \n    escribe :  WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON\n    escribep : exp pnCuadEscribe\n             | LETRERO pnCuadEscribe\n    \n    return : RETURNS exp SEMICOLON\n    \n    exp : exprel pnCuadOplog logic\n    logic : logicsig exprel pnCuadOplog logic \n          | empty\n    logicsig : AND pnSaveOperadorLog\n             | OR pnSaveOperadorLog\n    \n    exprel : e pnCuadOpRelacional relacionalp\n    relacionalp : relsig e pnCuadOpRelacional relacionalp \n                | empty\n    relsig : LESS_THAN pnSaveOperadorRel\n           | GREATER_THAN pnSaveOperadorRel\n           | EQUALS pnSaveOperadorRel\n           | NOTEQUALS pnSaveOperadorRel\n    \n    e : t pnCuadPlMi tp\n    tp : tsig t pnCuadPlMi tp \n       | empty\n    tsig : PLUS pnSaveOperadorPlMi\n         | MINUS pnSaveOperadorPlMi\n    \n    t : f pnCuadMuDi fp\n    fp : fsig f pnCuadMuDi fp \n       | empty\n    fsig : MULT pnSaveOperadorMuDi\n         | DIV pnSaveOperadorMuDi\n    \n    f : LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso\n      | CTEI pnSaveCteI  pnSaveOperandoConstante\n      | CTEF pnSaveCteF pnSaveOperandoConstante\n      | CTEC pnSaveCteC pnSaveOperandoConstante\n      | variable\n      | llamada\n      | funcesp\n    \n    condicion : IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf\n    falsop : IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET \n           | empty\n    \n    ciclow : WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile\n    \n    ciclof : FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor\n    \n    funcesp : mean\n            | mode\n            | median\n            | variance\n            | max\n            | min\n            | staddes\n            | boxplot\n            | linreg\n            | copy\n    \n    mean : MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    mode : MODE LEFT_PARENT variable  pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    median : MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    variance : VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    max : MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    min : MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    staddes : STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    boxplot : BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    linreg : LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    pnCrearDirFunc : empty\n    \n    pnScriptFuncDir : empty\n    \n    pnCheckTablaVar : empty\n    \n    pnCrearListaParam : empty\n    \n    pnSaveTypeVar : empty\n    \n    pnCheckNameTablaVar : empty\n    \n    pnAddFuncinDir : empty\n    \n    pnAddParametersTablaVar : empty\n    \n    pnAddParamResources : empty\n    \n    pnDirecIniFunc : empty\n    \n    pnCloseCurrentFunction : empty\n    \n    pnEndScript : empty\n    \n    pnSaveCteI : empty\n    \n    pnSaveCteF : empty\n    \n    pnSaveCteC : empty\n    \n    pnSaveFondoFalso : empty\n    \n    pnPopFondoFalso : empty\n    \n    pnSaveOperandos : empty\n    \n    pnSaveOperandoConstante : empty\n    \n    pnSaveOperadorPlMi : empty\n    \n    pnSaveOperadorMuDi : empty\n    \n    pnSaveOperadorRel : empty\n    \n    pnSaveOperadorLog : empty\n    \n    pnCuadPlMi : empty\n    \n    pnCuadMuDi : empty\n    \n    pnCuadOpRelacional : empty\n    \n    pnCuadOplog : empty\n    \n    pnSaveOperadorAsign : empty\n    \n    pnCuadAsign : empty\n    \n    pnCuadEscribe : empty\n    \n    pnCuadLee : empty\n    \n    pnCuadCopy : empty\n    \n    pnCuadFuncEsp : empty\n    \n    pnCheckBoolIf : empty\n    \n    pnElseIf : empty\n    \n    pnEndIf : empty\n    \n    pnSaveWhile : empty\n    \n    pnEndWhile : empty\n    \n    pnSaveForID : empty\n    \n    pnCreateVControl : empty\n    \n    pnCompControlFinal : empty\n    \n    pnEndFor : empty\n    \n    empty :'
    
_lr_action_items = {'SCRIPT':([0,],[2,]),'$end':([1,20,104,142,143,],[0,-1,-157,-6,-126,]),'ID':([2,3,4,10,11,14,15,17,22,32,33,39,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,100,106,107,110,111,112,115,121,131,132,133,134,135,136,137,138,139,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,296,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,337,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,5,-115,-157,-3,-157,-5,-2,-4,-157,45,47,-157,72,-26,72,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,128,141,-157,128,153,128,128,159,-157,153,153,153,153,153,153,153,153,153,128,-142,128,128,-61,128,-130,128,128,-157,-157,128,-157,-157,-157,-157,128,-157,-157,128,-157,-157,-21,128,-58,128,-65,-137,-66,-70,-136,-71,-72,-73,-77,-134,-78,-82,-135,-83,323,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,72,72,-157,128,-157,-157,-157,72,-124,-157,-93,-94,-152,-91,-150,-157,72,72,-36,-125,-92,-157,-95,-156,]),'SEMICOLON':([5,6,7,46,47,53,54,78,79,80,81,82,83,84,85,86,99,101,108,109,116,117,118,119,120,122,123,124,125,126,127,128,129,141,149,151,161,162,163,164,165,166,167,168,171,172,173,174,175,176,189,190,191,198,207,209,212,214,219,221,224,226,230,231,232,233,252,253,254,255,260,265,269,275,279,283,284,285,286,287,288,289,290,291,292,293,300,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,328,329,330,331,],[-157,8,-116,52,-157,-157,-120,-96,-97,-98,-99,-100,-101,-102,-103,-104,-33,-35,-157,-132,160,-157,-157,-157,-157,-157,-157,-157,-88,-89,-90,-157,-105,-157,-16,-18,-157,-141,-157,-140,-157,-138,-157,-139,-157,-127,-157,-128,-157,-129,-157,-157,255,261,-62,-64,-67,-69,-74,-76,-79,-81,-85,-133,-86,-87,-34,298,-143,-21,302,-157,-157,-157,-157,-157,312,313,314,315,316,317,318,319,320,321,-17,-157,-157,-157,-157,-84,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-63,-68,-75,-80,]),'VAR':([8,10,32,52,332,],[12,12,12,-26,12,]),'FUNC':([8,9,10,11,14,17,32,44,52,361,364,365,],[-157,16,-157,-3,16,-2,-157,16,-26,-157,-36,-125,]),'DO':([8,9,10,11,13,14,15,17,22,52,361,364,365,],[-157,-157,-157,-3,21,-157,-5,-2,-4,-26,-157,-36,-125,]),'READ':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,255,261,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,73,-26,73,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,73,73,-157,-157,-157,-157,73,-124,-157,-93,-94,-152,-91,-150,-157,73,73,-36,-125,-92,-157,-95,-156,]),'WRITE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,255,261,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,74,-26,74,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,74,74,-157,-157,-157,-157,74,-124,-157,-93,-94,-152,-91,-150,-157,74,74,-36,-125,-92,-157,-95,-156,]),'IF':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,255,261,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,75,-26,75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,75,75,-157,-157,-157,-157,75,-124,-157,-93,-94,-152,-91,-150,-157,75,75,-36,-125,-92,-157,-95,-156,]),'WHILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,255,261,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,76,-26,76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,76,76,-157,-157,-157,-157,76,-124,-157,-93,-94,-152,-91,-150,-157,76,76,-36,-125,-92,-157,-95,-156,]),'FOR':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,255,261,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,77,-26,77,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,77,77,-157,-157,-157,-157,77,-124,-157,-93,-94,-152,-91,-150,-157,77,77,-36,-125,-92,-157,-95,-156,]),'RETURNS':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,160,255,261,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,87,-26,87,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,87,87,-157,-157,-157,-157,87,-124,-157,-93,-94,-152,-91,-150,-157,87,87,-36,-125,-92,-157,-95,-156,]),'READ_FILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,337,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,88,-26,88,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,88,-157,88,88,88,-157,88,-142,88,88,-61,88,-130,88,88,-157,-157,88,-157,-157,-157,-157,88,-157,-157,88,-157,-157,-21,88,-58,88,-65,-137,-66,-70,-136,-71,-72,-73,-77,-134,-78,-82,-135,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,88,88,-157,88,-157,-157,-157,88,-124,-157,-93,-94,-152,-91,-150,-157,88,88,-36,-125,-92,-157,-95,-156,]),'MEAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,337,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,89,-26,89,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,89,-157,89,89,89,-157,89,-142,89,89,-61,89,-130,89,89,-157,-157,89,-157,-157,-157,-157,89,-157,-157,89,-157,-157,-21,89,-58,89,-65,-137,-66,-70,-136,-71,-72,-73,-77,-134,-78,-82,-135,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,89,89,-157,89,-157,-157,-157,89,-124,-157,-93,-94,-152,-91,-150,-157,89,89,-36,-125,-92,-157,-95,-156,]),'MODE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,337,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,90,-26,90,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,90,-157,90,90,90,-157,90,-142,90,90,-61,90,-130,90,90,-157,-157,90,-157,-157,-157,-157,90,-157,-157,90,-157,-157,-21,90,-58,90,-65,-137,-66,-70,-136,-71,-72,-73,-77,-134,-78,-82,-135,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,90,90,-157,90,-157,-157,-157,90,-124,-157,-93,-94,-152,-91,-150,-157,90,90,-36,-125,-92,-157,-95,-156,]),'MEDIAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,337,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,91,-26,91,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,91,-157,91,91,91,-157,91,-142,91,91,-61,91,-130,91,91,-157,-157,91,-157,-157,-157,-157,91,-157,-157,91,-157,-157,-21,91,-58,91,-65,-137,-66,-70,-136,-71,-72,-73,-77,-134,-78,-82,-135,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,91,91,-157,91,-157,-157,-157,91,-124,-157,-93,-94,-152,-91,-150,-157,91,91,-36,-125,-92,-157,-95,-156,]),'VARIANCE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,337,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,92,-26,92,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,92,-157,92,92,92,-157,92,-142,92,92,-61,92,-130,92,92,-157,-157,92,-157,-157,-157,-157,92,-157,-157,92,-157,-157,-21,92,-58,92,-65,-137,-66,-70,-136,-71,-72,-73,-77,-134,-78,-82,-135,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,92,92,-157,92,-157,-157,-157,92,-124,-157,-93,-94,-152,-91,-150,-157,92,92,-36,-125,-92,-157,-95,-156,]),'MAX':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,337,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,93,-26,93,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,93,-157,93,93,93,-157,93,-142,93,93,-61,93,-130,93,93,-157,-157,93,-157,-157,-157,-157,93,-157,-157,93,-157,-157,-21,93,-58,93,-65,-137,-66,-70,-136,-71,-72,-73,-77,-134,-78,-82,-135,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,93,93,-157,93,-157,-157,-157,93,-124,-157,-93,-94,-152,-91,-150,-157,93,93,-36,-125,-92,-157,-95,-156,]),'MIN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,337,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,94,-26,94,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,94,-157,94,94,94,-157,94,-142,94,94,-61,94,-130,94,94,-157,-157,94,-157,-157,-157,-157,94,-157,-157,94,-157,-157,-21,94,-58,94,-65,-137,-66,-70,-136,-71,-72,-73,-77,-134,-78,-82,-135,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,94,94,-157,94,-157,-157,-157,94,-124,-157,-93,-94,-152,-91,-150,-157,94,94,-36,-125,-92,-157,-95,-156,]),'STADDES':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,337,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,95,-26,95,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,95,-157,95,95,95,-157,95,-142,95,95,-61,95,-130,95,95,-157,-157,95,-157,-157,-157,-157,95,-157,-157,95,-157,-157,-21,95,-58,95,-65,-137,-66,-70,-136,-71,-72,-73,-77,-134,-78,-82,-135,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,95,95,-157,95,-157,-157,-157,95,-124,-157,-93,-94,-152,-91,-150,-157,95,95,-36,-125,-92,-157,-95,-156,]),'BOXPLOT':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,337,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,96,-26,96,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,96,-157,96,96,96,-157,96,-142,96,96,-61,96,-130,96,96,-157,-157,96,-157,-157,-157,-157,96,-157,-157,96,-157,-157,-21,96,-58,96,-65,-137,-66,-70,-136,-71,-72,-73,-77,-134,-78,-82,-135,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,96,96,-157,96,-157,-157,-157,96,-124,-157,-93,-94,-152,-91,-150,-157,96,96,-36,-125,-92,-157,-95,-156,]),'LINREG':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,121,144,145,150,158,160,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,255,258,261,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,337,338,342,343,345,346,348,350,351,352,356,357,361,362,363,364,365,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,97,-26,97,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,97,-157,97,97,97,-157,97,-142,97,97,-61,97,-130,97,97,-157,-157,97,-157,-157,-157,-157,97,-157,-157,97,-157,-157,-21,97,-58,97,-65,-137,-66,-70,-136,-71,-72,-73,-77,-134,-78,-82,-135,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,97,97,-157,97,-157,-157,-157,97,-124,-157,-93,-94,-152,-91,-150,-157,97,97,-36,-125,-92,-157,-95,-156,]),'RIGHT_CUR_BRACKET':([10,11,14,15,17,22,32,44,49,52,58,59,60,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,105,160,255,261,298,302,312,313,314,315,316,317,318,319,320,321,324,325,332,335,336,338,342,343,345,346,348,350,351,352,355,356,357,361,362,363,364,365,366,367,368,369,370,371,],[-157,-3,-157,-5,-2,-4,-157,-157,-157,-26,104,-157,-8,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-7,-61,-21,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-157,-157,-157,342,343,-157,-157,-157,-157,-124,-157,-93,-94,-152,361,-91,-150,-157,-157,-157,-36,-125,368,369,-92,-157,-95,-156,]),'DATAFRAME':([12,18,19,98,140,187,188,340,],[-157,30,-117,-157,-157,251,-118,251,]),'INT':([12,16,18,19,98,140,187,188,340,],[-157,26,26,-117,-157,-157,26,-118,26,]),'FLOAT':([12,16,18,19,98,140,187,188,340,],[-157,27,27,-117,-157,-157,27,-118,27,]),'CHAR':([12,16,18,19,98,140,187,188,340,],[-157,28,28,-117,-157,-157,28,-118,28,]),'VOID':([16,],[25,]),'RIGHT_PARENT':([19,78,79,80,81,82,83,84,85,86,98,107,108,109,117,118,119,120,122,123,124,125,126,127,128,129,140,146,147,148,149,151,152,153,154,155,156,157,161,162,163,164,165,166,167,168,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,192,194,196,197,199,200,201,202,203,204,207,209,212,214,219,221,224,226,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,255,256,263,265,269,275,279,283,294,295,299,300,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,328,329,330,331,333,334,339,341,344,347,353,354,],[-117,-96,-97,-98,-99,-100,-101,-102,-103,-104,-157,-157,-157,-132,-157,-157,-157,-157,-157,-157,-157,-88,-89,-90,-157,-105,-157,191,-157,-23,-16,-18,-157,-157,198,-157,-157,-157,-157,-141,-157,-140,-157,-138,-157,-139,-157,-127,-157,-128,-157,-129,-157,-157,-157,-157,-157,-157,-157,-157,-157,-157,-157,-118,-22,-25,260,-145,-59,-144,-60,262,-148,-157,-62,-64,-67,-69,-74,-76,-79,-81,283,-85,-133,-86,-87,284,-146,285,-147,286,287,288,289,290,291,292,293,-157,-39,-40,-21,-157,304,-157,-157,-157,-157,-157,322,-123,-24,-17,-157,-157,-157,-157,-84,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-157,-63,-68,-75,-80,-157,-122,-41,-45,-157,-44,360,-155,]),'LEFT_CUR_BRACKET':([21,303,304,322,349,358,359,360,],[32,324,325,332,-157,362,-149,363,]),'ARROW':([23,24,25,26,27,28,29,30,31,34,35,36,37,38,40,41,43,102,249,250,251,297,],[33,-37,-157,-157,-157,-157,39,-157,-157,-38,-119,-9,-10,-11,-27,-28,-30,-29,296,-42,-157,-43,]),'LEFT_SQR_BRACKET':([26,27,28,31,35,36,37,38,72,108,109,128,153,],[-157,-157,-157,42,-119,-9,-10,-11,-157,150,-132,-157,-157,]),'CTEI':([42,56,87,106,107,111,112,121,144,145,150,158,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,258,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,337,],[48,103,122,-157,122,122,122,-157,122,-142,122,122,122,-130,122,122,-157,-157,122,-157,-157,-157,-157,122,-157,-157,122,-157,-157,122,122,-65,-137,-66,-70,-136,-71,-72,-73,-77,-134,-78,-82,-135,-83,122,]),'LEFT_PARENT':([45,50,51,72,73,74,75,76,77,87,88,89,90,91,92,93,94,95,96,97,106,107,111,112,113,114,121,128,144,145,150,158,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,258,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,337,],[-157,98,-121,107,110,111,112,-157,115,121,130,131,132,133,134,135,136,137,138,139,-157,121,121,121,158,-151,-157,107,121,-142,121,121,121,-130,121,121,-157,-157,121,-157,-157,-157,-157,121,-157,-157,121,-157,-157,121,121,-65,-137,-66,-70,-136,-71,-72,-73,-77,-134,-78,-82,-135,-83,121,]),'COMMA':([47,48,53,54,78,79,80,81,82,83,84,85,86,108,109,117,118,119,120,122,123,124,125,126,127,128,129,141,147,149,151,161,162,163,164,165,166,167,168,171,172,173,174,175,176,189,195,207,209,212,214,219,221,224,226,230,231,232,233,255,256,265,269,275,279,283,300,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,326,327,328,329,330,331,333,334,],[-157,56,100,-120,-96,-97,-98,-99,-100,-101,-102,-103,-104,-157,-132,-157,-157,-157,-157,-157,-157,-157,-88,-89,-90,-157,-105,-157,193,-16,-18,-157,-141,-157,-140,-157,-138,-157,-139,-157,-127,-157,-128,-157,-129,100,258,-62,-64,-67,-69,-74,-76,-79,-81,-85,-133,-86,-87,-21,193,-157,-157,-157,-157,-157,-17,-157,-157,-157,-157,-157,-84,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-157,337,-154,-63,-68,-75,-80,340,-122,]),'RIGHT_SQR_BRACKET':([48,55,57,78,79,80,81,82,83,84,85,86,103,108,109,117,118,119,120,122,123,124,125,126,127,128,129,149,151,161,162,163,164,165,166,167,168,171,172,173,174,175,176,195,207,209,212,214,219,221,224,226,230,231,232,233,255,257,259,265,269,275,279,283,300,301,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,328,329,330,331,],[-157,102,-32,-96,-97,-98,-99,-100,-101,-102,-103,-104,-31,-157,-132,-157,-157,-157,-157,-157,-157,-157,-88,-89,-90,-157,-105,-16,-18,-157,-141,-157,-140,-157,-138,-157,-139,-157,-127,-157,-128,-157,-129,-157,-62,-64,-67,-69,-74,-76,-79,-81,-85,-133,-86,-87,-21,300,-20,-157,-157,-157,-157,-157,-17,-19,-157,-157,-157,-157,-84,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-63,-68,-75,-80,]),'ASIGN':([71,72,108,109,149,151,159,205,206,300,],[106,-157,-157,-132,-16,-18,-157,264,-153,-17,]),'MULT':([78,79,80,81,82,83,84,85,86,108,109,120,122,123,124,125,126,127,128,129,149,151,167,168,171,172,173,174,175,176,230,231,232,233,255,279,283,300,309,310,311,312,313,314,315,316,317,318,319,320,321,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-157,-132,-157,-157,-157,-157,-88,-89,-90,-157,-105,-16,-18,227,-139,-157,-127,-157,-128,-157,-129,-85,-133,-86,-87,-21,-157,-157,-17,227,-84,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'DIV':([78,79,80,81,82,83,84,85,86,108,109,120,122,123,124,125,126,127,128,129,149,151,167,168,171,172,173,174,175,176,230,231,232,233,255,279,283,300,309,310,311,312,313,314,315,316,317,318,319,320,321,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-157,-132,-157,-157,-157,-157,-88,-89,-90,-157,-105,-16,-18,228,-139,-157,-127,-157,-128,-157,-129,-85,-133,-86,-87,-21,-157,-157,-17,228,-84,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'PLUS':([78,79,80,81,82,83,84,85,86,108,109,119,120,122,123,124,125,126,127,128,129,149,151,165,166,167,168,171,172,173,174,175,176,224,226,230,231,232,233,255,275,279,283,300,308,309,310,311,312,313,314,315,316,317,318,319,320,321,331,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-157,-132,-157,-157,-157,-157,-157,-88,-89,-90,-157,-105,-16,-18,222,-138,-157,-139,-157,-127,-157,-128,-157,-129,-79,-81,-85,-133,-86,-87,-21,-157,-157,-157,-17,222,-157,-84,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-80,]),'MINUS':([78,79,80,81,82,83,84,85,86,108,109,119,120,122,123,124,125,126,127,128,129,149,151,165,166,167,168,171,172,173,174,175,176,224,226,230,231,232,233,255,275,279,283,300,308,309,310,311,312,313,314,315,316,317,318,319,320,321,331,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-157,-132,-157,-157,-157,-157,-157,-88,-89,-90,-157,-105,-16,-18,223,-138,-157,-139,-157,-127,-157,-128,-157,-129,-79,-81,-85,-133,-86,-87,-21,-157,-157,-157,-17,223,-157,-84,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-80,]),'LESS_THAN':([78,79,80,81,82,83,84,85,86,108,109,118,119,120,122,123,124,125,126,127,128,129,149,151,163,164,165,166,167,168,171,172,173,174,175,176,219,221,224,226,230,231,232,233,255,269,275,279,283,300,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,330,331,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-157,-132,-157,-157,-157,-157,-157,-157,-88,-89,-90,-157,-105,-16,-18,215,-140,-157,-138,-157,-139,-157,-127,-157,-128,-157,-129,-74,-76,-79,-81,-85,-133,-86,-87,-21,-157,-157,-157,-157,-17,215,-157,-157,-84,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,]),'GREATER_THAN':([78,79,80,81,82,83,84,85,86,108,109,118,119,120,122,123,124,125,126,127,128,129,149,151,163,164,165,166,167,168,171,172,173,174,175,176,219,221,224,226,230,231,232,233,255,269,275,279,283,300,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,330,331,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-157,-132,-157,-157,-157,-157,-157,-157,-88,-89,-90,-157,-105,-16,-18,216,-140,-157,-138,-157,-139,-157,-127,-157,-128,-157,-129,-74,-76,-79,-81,-85,-133,-86,-87,-21,-157,-157,-157,-157,-17,216,-157,-157,-84,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,]),'EQUALS':([78,79,80,81,82,83,84,85,86,108,109,118,119,120,122,123,124,125,126,127,128,129,149,151,163,164,165,166,167,168,171,172,173,174,175,176,219,221,224,226,230,231,232,233,255,269,275,279,283,300,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,330,331,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-157,-132,-157,-157,-157,-157,-157,-157,-88,-89,-90,-157,-105,-16,-18,217,-140,-157,-138,-157,-139,-157,-127,-157,-128,-157,-129,-74,-76,-79,-81,-85,-133,-86,-87,-21,-157,-157,-157,-157,-17,217,-157,-157,-84,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,]),'NOTEQUALS':([78,79,80,81,82,83,84,85,86,108,109,118,119,120,122,123,124,125,126,127,128,129,149,151,163,164,165,166,167,168,171,172,173,174,175,176,219,221,224,226,230,231,232,233,255,269,275,279,283,300,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,330,331,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-157,-132,-157,-157,-157,-157,-157,-157,-88,-89,-90,-157,-105,-16,-18,218,-140,-157,-138,-157,-139,-157,-127,-157,-128,-157,-129,-74,-76,-79,-81,-85,-133,-86,-87,-21,-157,-157,-157,-157,-17,218,-157,-157,-84,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,]),'AND':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,120,122,123,124,125,126,127,128,129,149,151,161,162,163,164,165,166,167,168,171,172,173,174,175,176,212,214,219,221,224,226,230,231,232,233,255,265,269,275,279,283,300,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,329,330,331,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-157,-132,-157,-157,-157,-157,-157,-157,-157,-88,-89,-90,-157,-105,-16,-18,210,-141,-157,-140,-157,-138,-157,-139,-157,-127,-157,-128,-157,-129,-67,-69,-74,-76,-79,-81,-85,-133,-86,-87,-21,-157,-157,-157,-157,-157,-17,210,-157,-157,-157,-84,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-68,-75,-80,]),'OR':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,120,122,123,124,125,126,127,128,129,149,151,161,162,163,164,165,166,167,168,171,172,173,174,175,176,212,214,219,221,224,226,230,231,232,233,255,265,269,275,279,283,300,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,329,330,331,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-157,-132,-157,-157,-157,-157,-157,-157,-157,-88,-89,-90,-157,-105,-16,-18,211,-141,-157,-140,-157,-138,-157,-139,-157,-127,-157,-128,-157,-129,-67,-69,-74,-76,-79,-81,-85,-133,-86,-87,-21,-157,-157,-157,-157,-157,-17,211,-157,-157,-157,-84,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-68,-75,-80,]),'CTEF':([87,106,107,111,112,121,144,145,150,158,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,258,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,337,],[123,-157,123,123,123,-157,123,-142,123,123,123,-130,123,123,-157,-157,123,-157,-157,-157,-157,123,-157,-157,123,-157,-157,123,123,-65,-137,-66,-70,-136,-71,-72,-73,-77,-134,-78,-82,-135,-83,123,]),'CTEC':([87,106,107,111,112,121,144,145,150,158,169,170,193,208,210,211,213,215,216,217,218,220,222,223,225,227,228,258,264,266,267,268,270,271,272,273,274,276,277,278,280,281,282,337,],[124,-157,124,124,124,-157,124,-142,124,124,124,-130,124,124,-157,-157,124,-157,-157,-157,-157,124,-157,-157,124,-157,-157,124,124,-65,-137,-66,-70,-136,-71,-72,-73,-77,-134,-78,-82,-135,-83,124,]),'LETRERO':([111,130,],[156,177,]),'IF_TRUE':([262,],[303,]),'IF_FALSE':([342,],[349,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pnCrearDirFunc':([2,],[3,]),'empty':([2,5,8,9,10,12,14,25,26,27,28,30,31,32,44,45,47,48,49,53,59,72,76,98,104,106,107,108,117,118,119,120,121,122,123,124,128,140,141,147,152,153,155,156,157,159,161,163,165,167,171,173,175,177,178,179,180,181,182,183,184,185,186,187,189,190,195,204,210,211,215,216,217,218,222,223,227,228,246,251,256,265,269,275,279,283,305,306,307,308,309,323,324,325,332,333,338,342,343,344,345,348,349,361,362,363,369,],[4,7,11,15,11,19,15,35,35,35,35,35,43,11,15,51,54,57,60,101,60,109,114,19,143,145,148,151,162,164,166,168,170,172,174,176,109,188,54,194,197,109,200,200,203,206,209,214,221,226,231,231,231,235,237,237,237,237,237,237,237,237,237,248,101,254,259,203,267,267,271,271,271,271,277,277,281,281,295,35,194,162,164,166,168,311,327,209,214,221,226,334,60,60,11,341,346,350,352,354,60,357,359,365,60,60,371,]),'pnScriptFuncDir':([5,],[6,]),'varp':([8,10,32,332,],[9,17,44,338,]),'var':([8,10,32,332,],[10,10,10,10,]),'funcp':([9,14,44,],[13,22,49,]),'func':([9,14,44,],[14,14,14,]),'pnCheckTablaVar':([12,98,],[18,140,]),'bloque':([13,],[20,]),'returnval':([16,],[23,]),'tipo_simp':([16,18,187,340,],[24,31,250,250,]),'v':([18,],[29,]),'pnSaveTypeVar':([25,26,27,28,30,251,],[34,36,37,38,40,297,]),'vp':([31,],[41,]),'idp':([39,],[46,]),'pnAddFuncinDir':([45,],[50,]),'pnCheckNameTablaVar':([47,141,],[53,189,]),'vpp':([48,],[55,]),'estatutop':([49,59,324,325,345,362,363,],[58,105,335,336,355,366,367,]),'estatuto':([49,59,324,325,345,362,363,],[59,59,59,59,59,59,59,]),'asign':([49,59,324,325,345,362,363,],[61,61,61,61,61,61,61,]),'llamada':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,324,325,337,345,362,363,],[62,62,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,62,62,126,62,62,62,]),'lee':([49,59,324,325,345,362,363,],[63,63,63,63,63,63,63,]),'escribe':([49,59,324,325,345,362,363,],[64,64,64,64,64,64,64,]),'condicion':([49,59,324,325,345,362,363,],[65,65,65,65,65,65,65,]),'ciclow':([49,59,324,325,345,362,363,],[66,66,66,66,66,66,66,]),'ciclof':([49,59,324,325,345,362,363,],[67,67,67,67,67,67,67,]),'funcesp':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,324,325,337,345,362,363,],[68,68,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,68,68,127,68,68,68,]),'return':([49,59,324,325,345,362,363,],[69,69,69,69,69,69,69,]),'copy':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,324,325,337,345,362,363,],[70,70,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,70,70,129,70,70,70,]),'variable':([49,59,87,107,110,111,112,131,132,133,134,135,136,137,138,139,144,150,158,169,193,208,213,220,225,258,264,324,325,337,345,362,363,],[71,71,125,125,152,125,125,178,179,180,181,182,183,184,185,186,125,125,125,125,125,125,125,125,125,125,125,71,71,125,71,71,71,]),'mean':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,324,325,337,345,362,363,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'mode':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,324,325,337,345,362,363,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'median':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,324,325,337,345,362,363,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'variance':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,324,325,337,345,362,363,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'max':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,324,325,337,345,362,363,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'min':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,324,325,337,345,362,363,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'staddes':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,324,325,337,345,362,363,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'boxplot':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,324,325,337,345,362,363,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'linreg':([49,59,87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,324,325,337,345,362,363,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'idpp':([53,189,],[99,252,]),'pnSaveOperandos':([72,128,153,],[108,108,108,]),'pnSaveWhile':([76,],[113,]),'exp':([87,107,111,112,144,150,158,169,193,258,264,337,],[116,147,155,157,190,195,204,229,256,301,305,344,]),'exprel':([87,107,111,112,144,150,158,169,193,208,258,264,337,],[117,117,117,117,117,117,117,117,117,265,117,117,117,]),'e':([87,107,111,112,144,150,158,169,193,208,213,258,264,337,],[118,118,118,118,118,118,118,118,118,118,269,118,118,118,]),'t':([87,107,111,112,144,150,158,169,193,208,213,220,258,264,337,],[119,119,119,119,119,119,119,119,119,119,119,275,119,119,119,]),'f':([87,107,111,112,144,150,158,169,193,208,213,220,225,258,264,337,],[120,120,120,120,120,120,120,120,120,120,120,120,279,120,120,120,]),'pnEndScript':([104,],[142,]),'pnSaveOperadorAsign':([106,],[144,]),'expp':([107,],[146,]),'indexp':([108,],[149,]),'escribep':([111,],[154,]),'pnCuadOplog':([117,265,],[161,306,]),'pnCuadOpRelacional':([118,269,],[163,307,]),'pnCuadPlMi':([119,275,],[165,308,]),'pnCuadMuDi':([120,279,],[167,309,]),'pnSaveFondoFalso':([121,],[169,]),'pnSaveCteI':([122,],[171,]),'pnSaveCteF':([123,],[173,]),'pnSaveCteC':([124,],[175,]),'pnCrearListaParam':([140,],[187,]),'exppp':([147,256,],[192,299,]),'pnCuadLee':([152,],[196,]),'pnCuadEscribe':([155,156,],[199,201,]),'pnCheckBoolIf':([157,204,],[202,263,]),'pnSaveForID':([159,],[205,]),'logic':([161,306,],[207,328,]),'logicsig':([161,306,],[208,208,]),'relacionalp':([163,307,],[212,329,]),'relsig':([163,307,],[213,213,]),'tp':([165,308,],[219,330,]),'tsig':([165,308,],[220,220,]),'fp':([167,309,],[224,331,]),'fsig':([167,309,],[225,225,]),'pnSaveOperandoConstante':([171,173,175,],[230,232,233,]),'pnCuadCopy':([177,],[234,]),'pnCuadFuncEsp':([178,179,180,181,182,183,184,185,186,],[236,238,239,240,241,242,243,244,245,]),'param':([187,],[246,]),'paramlist':([187,340,],[247,347,]),'tipoparam':([187,340,],[249,249,]),'pnCuadAsign':([190,],[253,]),'indexpp':([195,],[257,]),'pnSaveOperadorLog':([210,211,],[266,268,]),'pnSaveOperadorRel':([215,216,217,218,],[270,272,273,274,]),'pnSaveOperadorPlMi':([222,223,],[276,278,]),'pnSaveOperadorMuDi':([227,228,],[280,282,]),'pnAddParamResources':([246,],[294,]),'pnPopFondoFalso':([283,],[310,]),'pnCreateVControl':([305,],[326,]),'pnAddParametersTablaVar':([323,],[333,]),'paramlistp':([333,],[339,]),'pnDirecIniFunc':([338,],[345,]),'falsop':([342,],[348,]),'pnEndWhile':([343,],[351,]),'pnCompControlFinal':([344,],[353,]),'pnEndIf':([348,],[356,]),'pnElseIf':([349,],[358,]),'pnCloseCurrentFunction':([361,],[364,]),'pnEndFor':([369,],[370,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque','programa',8,'p_programa','lexer-parser.py',190),
  ('varp -> var varp','varp',2,'p_programa','lexer-parser.py',191),
  ('varp -> empty','varp',1,'p_programa','lexer-parser.py',192),
  ('funcp -> func funcp','funcp',2,'p_programa','lexer-parser.py',193),
  ('funcp -> empty','funcp',1,'p_programa','lexer-parser.py',194),
  ('bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript','bloque',7,'p_bloque','lexer-parser.py',200),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_bloque','lexer-parser.py',201),
  ('estatutop -> empty','estatutop',1,'p_bloque','lexer-parser.py',202),
  ('tipo_simp -> INT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',208),
  ('tipo_simp -> FLOAT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',209),
  ('tipo_simp -> CHAR pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',210),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','lexer-parser.py',216),
  ('tipo_comp -> file','tipo_comp',1,'p_tipo_comp','lexer-parser.py',217),
  ('copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON','copy',6,'p_copy','lexer-parser.py',223),
  ('file -> ID','file',1,'p_file','lexer-parser.py',229),
  ('variable -> ID pnSaveOperandos indexp','variable',3,'p_variable','lexer-parser.py',235),
  ('indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET','indexp',4,'p_variable','lexer-parser.py',236),
  ('indexp -> empty','indexp',1,'p_variable','lexer-parser.py',237),
  ('indexpp -> COMMA exp','indexpp',2,'p_variable','lexer-parser.py',238),
  ('indexpp -> empty','indexpp',1,'p_variable','lexer-parser.py',239),
  ('llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON','llamada',5,'p_llamada','lexer-parser.py',245),
  ('expp -> exp exppp','expp',2,'p_llamada','lexer-parser.py',246),
  ('expp -> empty','expp',1,'p_llamada','lexer-parser.py',247),
  ('exppp -> COMMA exp exppp','exppp',3,'p_llamada','lexer-parser.py',248),
  ('exppp -> empty','exppp',1,'p_llamada','lexer-parser.py',249),
  ('var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON','var',6,'p_var','lexer-parser.py',255),
  ('v -> DATAFRAME pnSaveTypeVar','v',2,'p_var','lexer-parser.py',256),
  ('v -> tipo_simp vp','v',2,'p_var','lexer-parser.py',257),
  ('vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET','vp',4,'p_var','lexer-parser.py',258),
  ('vp -> empty','vp',1,'p_var','lexer-parser.py',259),
  ('vpp -> COMMA CTEI','vpp',2,'p_var','lexer-parser.py',260),
  ('vpp -> empty','vpp',1,'p_var','lexer-parser.py',261),
  ('idp -> ID pnCheckNameTablaVar idpp','idp',3,'p_var','lexer-parser.py',262),
  ('idpp -> COMMA ID pnCheckNameTablaVar idpp','idpp',4,'p_var','lexer-parser.py',263),
  ('idpp -> empty','idpp',1,'p_var','lexer-parser.py',264),
  ('func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param pnAddParamResources RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction','func',17,'p_func','lexer-parser.py',270),
  ('returnval -> tipo_simp','returnval',1,'p_func','lexer-parser.py',271),
  ('returnval -> VOID pnSaveTypeVar','returnval',2,'p_func','lexer-parser.py',272),
  ('param -> paramlist','param',1,'p_param','lexer-parser.py',278),
  ('param -> empty','param',1,'p_param','lexer-parser.py',279),
  ('paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp','paramlist',5,'p_param','lexer-parser.py',280),
  ('tipoparam -> tipo_simp','tipoparam',1,'p_param','lexer-parser.py',281),
  ('tipoparam -> DATAFRAME pnSaveTypeVar','tipoparam',2,'p_param','lexer-parser.py',282),
  ('paramlistp -> COMMA paramlist','paramlistp',2,'p_param','lexer-parser.py',283),
  ('paramlistp -> empty','paramlistp',1,'p_param','lexer-parser.py',284),
  ('estatuto -> asign','estatuto',1,'p_estatuto','lexer-parser.py',290),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','lexer-parser.py',291),
  ('estatuto -> lee','estatuto',1,'p_estatuto','lexer-parser.py',292),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','lexer-parser.py',293),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexer-parser.py',294),
  ('estatuto -> ciclow','estatuto',1,'p_estatuto','lexer-parser.py',295),
  ('estatuto -> ciclof','estatuto',1,'p_estatuto','lexer-parser.py',296),
  ('estatuto -> funcesp','estatuto',1,'p_estatuto','lexer-parser.py',297),
  ('estatuto -> return','estatuto',1,'p_estatuto','lexer-parser.py',298),
  ('estatuto -> copy','estatuto',1,'p_estatuto','lexer-parser.py',299),
  ('asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON','asign',6,'p_asign','lexer-parser.py',305),
  ('lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON','lee',6,'p_lee','lexer-parser.py',311),
  ('escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON','escribe',5,'p_escribe','lexer-parser.py',317),
  ('escribep -> exp pnCuadEscribe','escribep',2,'p_escribe','lexer-parser.py',318),
  ('escribep -> LETRERO pnCuadEscribe','escribep',2,'p_escribe','lexer-parser.py',319),
  ('return -> RETURNS exp SEMICOLON','return',3,'p_return','lexer-parser.py',325),
  ('exp -> exprel pnCuadOplog logic','exp',3,'p_exp','lexer-parser.py',331),
  ('logic -> logicsig exprel pnCuadOplog logic','logic',4,'p_exp','lexer-parser.py',332),
  ('logic -> empty','logic',1,'p_exp','lexer-parser.py',333),
  ('logicsig -> AND pnSaveOperadorLog','logicsig',2,'p_exp','lexer-parser.py',334),
  ('logicsig -> OR pnSaveOperadorLog','logicsig',2,'p_exp','lexer-parser.py',335),
  ('exprel -> e pnCuadOpRelacional relacionalp','exprel',3,'p_exprel','lexer-parser.py',341),
  ('relacionalp -> relsig e pnCuadOpRelacional relacionalp','relacionalp',4,'p_exprel','lexer-parser.py',342),
  ('relacionalp -> empty','relacionalp',1,'p_exprel','lexer-parser.py',343),
  ('relsig -> LESS_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',344),
  ('relsig -> GREATER_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',345),
  ('relsig -> EQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',346),
  ('relsig -> NOTEQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',347),
  ('e -> t pnCuadPlMi tp','e',3,'p_e','lexer-parser.py',353),
  ('tp -> tsig t pnCuadPlMi tp','tp',4,'p_e','lexer-parser.py',354),
  ('tp -> empty','tp',1,'p_e','lexer-parser.py',355),
  ('tsig -> PLUS pnSaveOperadorPlMi','tsig',2,'p_e','lexer-parser.py',356),
  ('tsig -> MINUS pnSaveOperadorPlMi','tsig',2,'p_e','lexer-parser.py',357),
  ('t -> f pnCuadMuDi fp','t',3,'p_t','lexer-parser.py',363),
  ('fp -> fsig f pnCuadMuDi fp','fp',4,'p_t','lexer-parser.py',364),
  ('fp -> empty','fp',1,'p_t','lexer-parser.py',365),
  ('fsig -> MULT pnSaveOperadorMuDi','fsig',2,'p_t','lexer-parser.py',366),
  ('fsig -> DIV pnSaveOperadorMuDi','fsig',2,'p_t','lexer-parser.py',367),
  ('f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso','f',5,'p_f','lexer-parser.py',373),
  ('f -> CTEI pnSaveCteI pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',374),
  ('f -> CTEF pnSaveCteF pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',375),
  ('f -> CTEC pnSaveCteC pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',376),
  ('f -> variable','f',1,'p_f','lexer-parser.py',377),
  ('f -> llamada','f',1,'p_f','lexer-parser.py',378),
  ('f -> funcesp','f',1,'p_f','lexer-parser.py',379),
  ('condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf','condicion',11,'p_condicion','lexer-parser.py',385),
  ('falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','falsop',5,'p_condicion','lexer-parser.py',386),
  ('falsop -> empty','falsop',1,'p_condicion','lexer-parser.py',387),
  ('ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile','ciclow',10,'p_ciclow','lexer-parser.py',393),
  ('ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor','ciclof',15,'p_ciclof','lexer-parser.py',399),
  ('funcesp -> mean','funcesp',1,'p_funcesp','lexer-parser.py',405),
  ('funcesp -> mode','funcesp',1,'p_funcesp','lexer-parser.py',406),
  ('funcesp -> median','funcesp',1,'p_funcesp','lexer-parser.py',407),
  ('funcesp -> variance','funcesp',1,'p_funcesp','lexer-parser.py',408),
  ('funcesp -> max','funcesp',1,'p_funcesp','lexer-parser.py',409),
  ('funcesp -> min','funcesp',1,'p_funcesp','lexer-parser.py',410),
  ('funcesp -> staddes','funcesp',1,'p_funcesp','lexer-parser.py',411),
  ('funcesp -> boxplot','funcesp',1,'p_funcesp','lexer-parser.py',412),
  ('funcesp -> linreg','funcesp',1,'p_funcesp','lexer-parser.py',413),
  ('funcesp -> copy','funcesp',1,'p_funcesp','lexer-parser.py',414),
  ('mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mean',6,'p_mean','lexer-parser.py',420),
  ('mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mode',6,'p_mode','lexer-parser.py',426),
  ('median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','median',6,'p_median','lexer-parser.py',432),
  ('variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','variance',6,'p_variance','lexer-parser.py',438),
  ('max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','max',6,'p_max','lexer-parser.py',444),
  ('min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','min',6,'p_min','lexer-parser.py',450),
  ('staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','staddes',6,'p_staddes','lexer-parser.py',456),
  ('boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','boxplot',6,'p_boxplot','lexer-parser.py',462),
  ('linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','linreg',6,'p_linreg','lexer-parser.py',468),
  ('pnCrearDirFunc -> empty','pnCrearDirFunc',1,'p_pnCrearDirFunc','lexer-parser.py',478),
  ('pnScriptFuncDir -> empty','pnScriptFuncDir',1,'p_pnScriptFuncDir','lexer-parser.py',488),
  ('pnCheckTablaVar -> empty','pnCheckTablaVar',1,'p_pnCheckTablaVar','lexer-parser.py',497),
  ('pnCrearListaParam -> empty','pnCrearListaParam',1,'p_pnCrearListaParam','lexer-parser.py',505),
  ('pnSaveTypeVar -> empty','pnSaveTypeVar',1,'p_pnSaveTypeVar','lexer-parser.py',512),
  ('pnCheckNameTablaVar -> empty','pnCheckNameTablaVar',1,'p_pnCheckNameTablaVar','lexer-parser.py',521),
  ('pnAddFuncinDir -> empty','pnAddFuncinDir',1,'p_pnAddFuncinDir','lexer-parser.py',528),
  ('pnAddParametersTablaVar -> empty','pnAddParametersTablaVar',1,'p_pnAddParametersTablaVar','lexer-parser.py',542),
  ('pnAddParamResources -> empty','pnAddParamResources',1,'p_pnAddParamResources','lexer-parser.py',551),
  ('pnDirecIniFunc -> empty','pnDirecIniFunc',1,'p_pnDirecIniFunc','lexer-parser.py',572),
  ('pnCloseCurrentFunction -> empty','pnCloseCurrentFunction',1,'p_pnCloseCurrentFunction','lexer-parser.py',579),
  ('pnEndScript -> empty','pnEndScript',1,'p_pnEndScript','lexer-parser.py',592),
  ('pnSaveCteI -> empty','pnSaveCteI',1,'p_pnSaveCteI','lexer-parser.py',600),
  ('pnSaveCteF -> empty','pnSaveCteF',1,'p_pnSaveCteF','lexer-parser.py',611),
  ('pnSaveCteC -> empty','pnSaveCteC',1,'p_pnSaveCteC','lexer-parser.py',621),
  ('pnSaveFondoFalso -> empty','pnSaveFondoFalso',1,'p_pnSaveFondoFalso','lexer-parser.py',631),
  ('pnPopFondoFalso -> empty','pnPopFondoFalso',1,'p_pnPopFondoFalso','lexer-parser.py',638),
  ('pnSaveOperandos -> empty','pnSaveOperandos',1,'p_pnSaveOperandos','lexer-parser.py',648),
  ('pnSaveOperandoConstante -> empty','pnSaveOperandoConstante',1,'p_pnSaveOperandoConstante','lexer-parser.py',664),
  ('pnSaveOperadorPlMi -> empty','pnSaveOperadorPlMi',1,'p_pnSaveOperadorPlMi','lexer-parser.py',672),
  ('pnSaveOperadorMuDi -> empty','pnSaveOperadorMuDi',1,'p_pnSaveOperadorMuDi','lexer-parser.py',679),
  ('pnSaveOperadorRel -> empty','pnSaveOperadorRel',1,'p_pnSaveOperadorRel','lexer-parser.py',686),
  ('pnSaveOperadorLog -> empty','pnSaveOperadorLog',1,'p_pnSaveOperadorLog','lexer-parser.py',693),
  ('pnCuadPlMi -> empty','pnCuadPlMi',1,'p_pnCuadPlMi','lexer-parser.py',700),
  ('pnCuadMuDi -> empty','pnCuadMuDi',1,'p_pnCuadMuDi','lexer-parser.py',734),
  ('pnCuadOpRelacional -> empty','pnCuadOpRelacional',1,'p_pnCuadOpRelacional','lexer-parser.py',768),
  ('pnCuadOplog -> empty','pnCuadOplog',1,'p_pnCuadOplog','lexer-parser.py',803),
  ('pnSaveOperadorAsign -> empty','pnSaveOperadorAsign',1,'p_pnSaveOperadorAsign','lexer-parser.py',836),
  ('pnCuadAsign -> empty','pnCuadAsign',1,'p_pnCuadAsign','lexer-parser.py',843),
  ('pnCuadEscribe -> empty','pnCuadEscribe',1,'p_pnCuadEscribe','lexer-parser.py',869),
  ('pnCuadLee -> empty','pnCuadLee',1,'p_pnCuadLee','lexer-parser.py',907),
  ('pnCuadCopy -> empty','pnCuadCopy',1,'p_pnCuadCopy','lexer-parser.py',924),
  ('pnCuadFuncEsp -> empty','pnCuadFuncEsp',1,'p_pnCuadFuncEsp','lexer-parser.py',943),
  ('pnCheckBoolIf -> empty','pnCheckBoolIf',1,'p_pnCheckBoolIf','lexer-parser.py',989),
  ('pnElseIf -> empty','pnElseIf',1,'p_pnElseIf','lexer-parser.py',1007),
  ('pnEndIf -> empty','pnEndIf',1,'p_pnEndIf','lexer-parser.py',1018),
  ('pnSaveWhile -> empty','pnSaveWhile',1,'p_pnSaveWhile','lexer-parser.py',1027),
  ('pnEndWhile -> empty','pnEndWhile',1,'p_pnEndWhile','lexer-parser.py',1037),
  ('pnSaveForID -> empty','pnSaveForID',1,'p_pnSaveForID','lexer-parser.py',1051),
  ('pnCreateVControl -> empty','pnCreateVControl',1,'p_pnCreateVControl','lexer-parser.py',1075),
  ('pnCompControlFinal -> empty','pnCompControlFinal',1,'p_pnCompControlFinal','lexer-parser.py',1106),
  ('pnEndFor -> empty','pnEndFor',1,'p_pnEndFor','lexer-parser.py',1136),
  ('empty -> <empty>','empty',0,'p_empty','lexer-parser.py',1170),
]

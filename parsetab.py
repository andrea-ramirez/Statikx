
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVAND ARROW ASIGN BOXPLOT CHAR COMMA COMMENT CTEC CTEF CTEI DATAFRAME DIV DO EQUALS FLOAT FOR FUNC GREATER_THAN ID IF IF_FALSE IF_TRUE INT LEFT_CUR_BRACKET LEFT_PARENT LEFT_SQR_BRACKET LESS_THAN LETRERO LINREG MAX MEAN MEDIAN MIN MINUS MODE MULT NOTEQUALS OR PLUS READ READ_FILE RETURNS RIGHT_CUR_BRACKET RIGHT_PARENT RIGHT_SQR_BRACKET SCRIPT SEMICOLON STADDES VAR VARIANCE VOID WHILE WRITE\n    programa : SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque\n    varp : var varp \n         | empty\n    funcp : func funcp \n          | empty\n    \n    bloque : DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript\n    estatutop : estatuto estatutop \n              | empty\n    \n    tipo_simp : INT pnSaveTypeVar\n              | FLOAT pnSaveTypeVar\n              | CHAR pnSaveTypeVar\n    \n    tipo_comp : DATAFRAME \n              | file\n    \n    copy : READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON\n    \n    file : ID\n    \n    variable : ID pnSaveOperandos indexp\n    indexp : LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET \n           | empty\n    indexpp : COMMA exp \n            | empty\n    \n    llamada : ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub\n    expp : exp pnCuadParametro exppp\n         | empty\n    exppp : COMMA pnUpdateK exp pnCuadParametro exppp\n          | empty\n    \n    var : VAR pnCheckTablaVar v ARROW idp SEMICOLON\n    v : DATAFRAME pnSaveTypeVar\n      | tipo_simp vp\n    vp : LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar\n       | empty\n    vpp : COMMA pnArrIncDim CTEI pnArrSaveLim1\n        | empty\n    idp : ID pnCheckNameTablaVar pnArrAddDim idpp\n    idpp : COMMA ID pnCheckNameTablaVar pnArrAddDim idpp\n         | empty\n    \n    func : FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction\n    returnval : tipo_simp \n              | VOID pnSaveTypeVar\n    \n    param : paramlist\n          | empty\n    paramlist : tipoparam ARROW ID pnAddParametersTablaVar paramlistp\n    tipoparam : tipo_simp\n              | DATAFRAME pnSaveTypeVar\n    paramlistp : COMMA paramlist\n               | empty\n    \n    estatuto : asign\n             | llamada\n             | lee\n             | escribe\n             | condicion\n             | ciclow\n             | ciclof\n             | funcesp\n             | return\n             | copy\n    \n    asign : variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON\n    \n    lee : READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON\n    \n    escribe :  WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON\n    escribep : exp pnCuadEscribe\n             | LETRERO pnCuadEscribe\n    \n    return : RETURNS exp SEMICOLON\n    \n    exp : exprel pnCuadOplog logic\n    logic : logicsig exprel pnCuadOplog logic \n          | empty\n    logicsig : AND pnSaveOperadorLog\n             | OR pnSaveOperadorLog\n    \n    exprel : e pnCuadOpRelacional relacionalp\n    relacionalp : relsig e pnCuadOpRelacional relacionalp \n                | empty\n    relsig : LESS_THAN pnSaveOperadorRel\n           | GREATER_THAN pnSaveOperadorRel\n           | EQUALS pnSaveOperadorRel\n           | NOTEQUALS pnSaveOperadorRel\n    \n    e : t pnCuadPlMi tp\n    tp : tsig t pnCuadPlMi tp \n       | empty\n    tsig : PLUS pnSaveOperadorPlMi\n         | MINUS pnSaveOperadorPlMi\n    \n    t : f pnCuadMuDi fp\n    fp : fsig f pnCuadMuDi fp \n       | empty\n    fsig : MULT pnSaveOperadorMuDi\n         | DIV pnSaveOperadorMuDi\n    \n    f : LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso\n      | CTEI pnSaveCteI  pnSaveOperandoConstante\n      | CTEF pnSaveCteF pnSaveOperandoConstante\n      | CTEC pnSaveCteC pnSaveOperandoConstante\n      | variable\n      | llamada\n      | funcesp\n    \n    condicion : IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf\n    falsop : IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET \n           | empty\n    \n    ciclow : WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile\n    \n    ciclof : FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor\n    \n    funcesp : mean\n            | mode\n            | median\n            | variance\n            | max\n            | min\n            | staddes\n            | boxplot\n            | linreg\n            | copy\n    \n    mean : MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    mode : MODE LEFT_PARENT variable  pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    median : MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    variance : VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    max : MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    min : MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    staddes : STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    boxplot : BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    linreg : LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    pnCrearDirFunc : empty\n    \n    pnCuadGotoMain : empty\n    \n    pnDirMain : empty\n    \n    pnScriptFuncDir : empty\n    \n    pnCheckTablaVar : empty\n    \n    pnCrearListaParam : empty\n    \n    pnSaveTypeVar : empty\n    \n    pnCheckNameTablaVar : empty\n    \n    pnAddFuncinDir : empty\n    \n    pnAddParametersTablaVar : empty\n    \n    pnCountVarsINTOResources : empty\n    \n    pnDirecIniFunc : empty\n    \n    pnCloseCurrentFunction : empty\n    \n    pnEndScript : empty\n    \n    pnCheckFunc : empty\n    \n    pnGenerateEra : empty\n    \n    pnCuadParametro : empty\n    \n    pnUpdateK : empty\n    \n    pnCheckNoParam : empty\n    \n    pnCuadGoSub : empty\n    \n    pnSaveCteI : empty\n    \n    pnSaveCteF : empty\n    \n    pnSaveCteC : empty\n    \n    pnSaveFondoFalso : empty\n    \n    pnPopFondoFalso : empty\n    \n    pnSaveOperandos : empty\n    \n    pnSaveOperandoConstante : empty\n    \n    pnSaveOperadorPlMi : empty\n    \n    pnSaveOperadorMuDi : empty\n    \n    pnSaveOperadorRel : empty\n    \n    pnSaveOperadorLog : empty\n    \n    pnCuadPlMi : empty\n    \n    pnCuadMuDi : empty\n    \n    pnCuadOpRelacional : empty\n    \n    pnCuadOplog : empty\n    \n    pnSaveOperadorAsign : empty\n    \n    pnCuadAsign : empty\n    \n    pnCuadEscribe : empty\n    \n    pnCuadLee : empty\n    \n    pnCuadCopy : empty\n    \n    pnCuadFuncEsp : empty\n    \n    pnCheckBoolIf : empty\n    \n    pnElseIf : empty\n    \n    pnEndIf : empty\n    \n    pnSaveWhile : empty\n    \n    pnEndWhile : empty\n    \n    pnSaveForID : empty\n    \n    pnCreateVControl : empty\n    \n    pnCompControlFinal : empty\n    \n    pnEndFor : empty\n    \n    pnArrCreateNode : empty\n    \n    pnArrSaveLim1 : empty\n    \n    pnArrIncDim : empty\n    \n    pnArrCuadriplificar : empty\n    \n    pnArrAddDim : empty\n    \n    empty :'
    
_lr_action_items = {'SCRIPT':([0,],[2,]),'$end':([1,22,113,155,156,],[0,-1,-170,-6,-128,]),'ID':([2,3,4,12,13,16,17,19,24,36,42,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,108,115,119,120,121,124,130,140,141,142,143,144,145,146,147,148,157,158,159,161,169,171,180,181,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,265,275,278,281,283,284,285,287,288,289,290,291,293,294,295,297,298,299,311,314,320,330,331,332,333,334,335,336,337,338,339,340,346,348,349,356,357,361,362,363,366,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,5,-115,-170,-3,-170,-5,-2,-4,48,50,-170,-170,-26,80,80,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,137,151,-170,164,137,137,170,-170,164,164,164,164,164,164,164,164,164,137,-150,-170,137,137,-61,137,-138,137,-130,137,-170,-170,137,-170,-170,-170,-170,137,-170,-170,137,-170,-170,312,137,-58,137,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,-170,80,80,80,-126,-170,137,-132,137,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,80,80,-92,-170,-95,-164,]),'SEMICOLON':([5,6,7,8,9,49,50,57,58,62,63,86,87,88,89,90,91,92,93,94,107,109,117,125,126,127,128,129,131,132,133,134,135,136,137,138,151,160,162,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,205,209,216,225,227,230,232,237,239,242,244,248,249,250,251,267,269,270,277,282,286,292,296,300,301,302,303,304,305,306,307,308,309,310,313,315,318,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,343,344,352,353,354,355,361,369,370,],[-170,-170,-118,10,-116,56,-170,-170,-122,-170,-169,-96,-97,-98,-99,-100,-101,-102,-103,-104,-33,-35,-170,171,-170,-170,-170,-170,-170,-170,-170,-88,-89,-90,-170,-105,-170,-16,-18,-170,-149,-170,-148,-170,-146,-170,-147,-170,-135,-170,-136,-170,-137,-140,-170,-170,278,-62,-64,-67,-69,-74,-76,-79,-81,-85,-141,-86,-87,-170,314,-151,320,-170,-170,-170,-170,-170,330,331,332,333,334,335,336,337,338,339,-34,-170,-17,-170,-170,-170,-170,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,361,-133,-63,-68,-75,-80,-170,-21,-134,]),'VAR':([10,12,47,56,311,],[14,14,14,-26,14,]),'FUNC':([10,11,12,13,16,19,47,53,56,375,384,385,392,393,],[-170,18,-170,-3,18,-2,-170,18,-26,-170,-170,-125,-36,-127,]),'DO':([10,11,12,13,15,16,17,19,24,56,375,384,385,392,393,],[-170,-170,-170,-3,23,-170,-5,-2,-4,-26,-170,-170,-125,-36,-127,]),'READ':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,171,278,311,314,320,330,331,332,333,334,335,336,337,338,339,340,348,349,356,357,361,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,81,81,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,81,81,81,-126,-170,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,81,81,-92,-170,-95,-164,]),'WRITE':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,171,278,311,314,320,330,331,332,333,334,335,336,337,338,339,340,348,349,356,357,361,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,82,82,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,82,82,82,-126,-170,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,82,82,-92,-170,-95,-164,]),'IF':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,171,278,311,314,320,330,331,332,333,334,335,336,337,338,339,340,348,349,356,357,361,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,83,83,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,83,83,83,-126,-170,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,83,83,-92,-170,-95,-164,]),'WHILE':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,171,278,311,314,320,330,331,332,333,334,335,336,337,338,339,340,348,349,356,357,361,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,84,84,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,84,84,84,-126,-170,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,84,84,-92,-170,-95,-164,]),'FOR':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,171,278,311,314,320,330,331,332,333,334,335,336,337,338,339,340,348,349,356,357,361,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,85,85,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,85,85,85,-126,-170,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,85,85,-92,-170,-95,-164,]),'RETURNS':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,171,278,311,314,320,330,331,332,333,334,335,336,337,338,339,340,348,349,356,357,361,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,95,95,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,95,95,95,-126,-170,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,95,95,-92,-170,-95,-164,]),'READ_FILE':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,157,158,159,161,169,171,180,181,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,281,283,284,285,287,288,289,290,291,293,294,295,297,298,299,311,314,320,330,331,332,333,334,335,336,337,338,339,340,346,348,349,356,357,361,362,363,366,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,96,96,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,96,-170,96,96,-170,96,-150,-170,96,96,-61,96,-138,96,-130,96,-170,-170,96,-170,-170,-170,-170,96,-170,-170,96,-170,-170,96,-58,96,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,-170,96,96,96,-126,-170,96,-132,96,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,96,96,-92,-170,-95,-164,]),'MEAN':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,157,158,159,161,169,171,180,181,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,281,283,284,285,287,288,289,290,291,293,294,295,297,298,299,311,314,320,330,331,332,333,334,335,336,337,338,339,340,346,348,349,356,357,361,362,363,366,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,97,97,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,97,-170,97,97,-170,97,-150,-170,97,97,-61,97,-138,97,-130,97,-170,-170,97,-170,-170,-170,-170,97,-170,-170,97,-170,-170,97,-58,97,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,-170,97,97,97,-126,-170,97,-132,97,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,97,97,-92,-170,-95,-164,]),'MODE':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,157,158,159,161,169,171,180,181,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,281,283,284,285,287,288,289,290,291,293,294,295,297,298,299,311,314,320,330,331,332,333,334,335,336,337,338,339,340,346,348,349,356,357,361,362,363,366,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,98,98,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,98,-170,98,98,-170,98,-150,-170,98,98,-61,98,-138,98,-130,98,-170,-170,98,-170,-170,-170,-170,98,-170,-170,98,-170,-170,98,-58,98,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,-170,98,98,98,-126,-170,98,-132,98,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,98,98,-92,-170,-95,-164,]),'MEDIAN':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,157,158,159,161,169,171,180,181,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,281,283,284,285,287,288,289,290,291,293,294,295,297,298,299,311,314,320,330,331,332,333,334,335,336,337,338,339,340,346,348,349,356,357,361,362,363,366,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,99,99,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,99,-170,99,99,-170,99,-150,-170,99,99,-61,99,-138,99,-130,99,-170,-170,99,-170,-170,-170,-170,99,-170,-170,99,-170,-170,99,-58,99,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,-170,99,99,99,-126,-170,99,-132,99,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,99,99,-92,-170,-95,-164,]),'VARIANCE':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,157,158,159,161,169,171,180,181,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,281,283,284,285,287,288,289,290,291,293,294,295,297,298,299,311,314,320,330,331,332,333,334,335,336,337,338,339,340,346,348,349,356,357,361,362,363,366,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,100,100,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,100,-170,100,100,-170,100,-150,-170,100,100,-61,100,-138,100,-130,100,-170,-170,100,-170,-170,-170,-170,100,-170,-170,100,-170,-170,100,-58,100,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,-170,100,100,100,-126,-170,100,-132,100,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,100,100,-92,-170,-95,-164,]),'MAX':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,157,158,159,161,169,171,180,181,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,281,283,284,285,287,288,289,290,291,293,294,295,297,298,299,311,314,320,330,331,332,333,334,335,336,337,338,339,340,346,348,349,356,357,361,362,363,366,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,101,101,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,101,-170,101,101,-170,101,-150,-170,101,101,-61,101,-138,101,-130,101,-170,-170,101,-170,-170,-170,-170,101,-170,-170,101,-170,-170,101,-58,101,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,-170,101,101,101,-126,-170,101,-132,101,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,101,101,-92,-170,-95,-164,]),'MIN':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,157,158,159,161,169,171,180,181,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,281,283,284,285,287,288,289,290,291,293,294,295,297,298,299,311,314,320,330,331,332,333,334,335,336,337,338,339,340,346,348,349,356,357,361,362,363,366,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,102,102,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,102,-170,102,102,-170,102,-150,-170,102,102,-61,102,-138,102,-130,102,-170,-170,102,-170,-170,-170,-170,102,-170,-170,102,-170,-170,102,-58,102,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,-170,102,102,102,-126,-170,102,-132,102,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,102,102,-92,-170,-95,-164,]),'STADDES':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,157,158,159,161,169,171,180,181,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,281,283,284,285,287,288,289,290,291,293,294,295,297,298,299,311,314,320,330,331,332,333,334,335,336,337,338,339,340,346,348,349,356,357,361,362,363,366,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,103,103,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,103,-170,103,103,-170,103,-150,-170,103,103,-61,103,-138,103,-130,103,-170,-170,103,-170,-170,-170,-170,103,-170,-170,103,-170,-170,103,-58,103,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,-170,103,103,103,-126,-170,103,-132,103,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,103,103,-92,-170,-95,-164,]),'BOXPLOT':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,157,158,159,161,169,171,180,181,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,281,283,284,285,287,288,289,290,291,293,294,295,297,298,299,311,314,320,330,331,332,333,334,335,336,337,338,339,340,346,348,349,356,357,361,362,363,366,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,104,104,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,104,-170,104,104,-170,104,-150,-170,104,104,-61,104,-138,104,-130,104,-170,-170,104,-170,-170,-170,-170,104,-170,-170,104,-170,-170,104,-58,104,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,-170,104,104,104,-126,-170,104,-132,104,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,104,104,-92,-170,-95,-164,]),'LINREG':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,157,158,159,161,169,171,180,181,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,281,283,284,285,287,288,289,290,291,293,294,295,297,298,299,311,314,320,330,331,332,333,334,335,336,337,338,339,340,346,348,349,356,357,361,362,363,366,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,105,105,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,105,-170,105,105,-170,105,-150,-170,105,105,-61,105,-138,105,-130,105,-170,-170,105,-170,-170,-170,-170,105,-170,-170,105,-170,-170,105,-58,105,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,-170,105,105,105,-126,-170,105,-132,105,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,105,105,-92,-170,-95,-164,]),'RIGHT_CUR_BRACKET':([12,13,16,17,19,24,47,53,56,60,66,67,68,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,114,171,278,311,314,320,330,331,332,333,334,335,336,337,338,339,340,348,349,356,357,361,364,365,367,369,370,372,373,375,377,379,380,381,384,385,387,388,392,393,394,395,396,397,398,399,400,401,],[-170,-3,-170,-5,-2,-4,-170,-170,-26,-170,113,-170,-8,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-7,-61,-58,-170,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,-170,-170,-170,-126,-170,372,373,375,-21,-134,-170,-170,-170,-170,-93,-94,-160,-170,-125,-91,-158,-36,-127,-170,-170,398,399,-92,-170,-95,-164,]),'DATAFRAME':([14,20,21,61,106,149,150,359,],[-170,32,-119,-170,-170,204,-120,204,]),'INT':([14,18,20,21,61,106,149,150,359,],[-170,28,28,-119,-170,-170,28,-120,28,]),'FLOAT':([14,18,20,21,61,106,149,150,359,],[-170,29,29,-119,-170,-170,29,-120,29,]),'CHAR':([14,18,20,21,61,106,149,150,359,],[-170,30,30,-119,-170,-170,30,-120,30,]),'VOID':([18,],[27,]),'RIGHT_PARENT':([21,61,86,87,88,89,90,91,92,93,94,106,117,126,127,128,129,131,132,133,134,135,136,137,138,149,150,159,160,162,163,164,165,166,167,168,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,210,211,213,214,215,217,218,219,220,221,222,225,227,230,232,237,239,242,244,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,271,272,273,280,282,286,292,296,300,312,316,317,318,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,345,347,352,353,354,355,358,360,361,368,369,370,371,374,376,382,383,386,],[-119,-170,-96,-97,-98,-99,-100,-101,-102,-103,-104,-170,-170,-170,-170,-170,-170,-170,-170,-170,-88,-89,-90,-170,-105,-170,-120,-170,-16,-18,-170,-170,216,-170,-170,-170,-170,-149,-170,-148,-170,-146,-170,-147,-170,-135,-170,-136,-170,-137,-140,-170,-170,-170,-170,-170,-170,-170,-170,-170,-170,264,-39,-40,-170,-130,277,-153,-140,-59,-152,-60,279,-156,-170,-62,-64,-67,-69,-74,-76,-79,-81,300,-85,-141,-86,-87,301,-154,302,-155,303,304,305,306,307,308,309,310,315,-170,-23,322,-170,-170,-170,-170,-170,-170,-170,-131,-17,-170,-170,-170,-170,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,-124,-22,-25,-63,-68,-75,-80,-41,-45,-170,-44,-21,-134,-170,-170,-170,391,-163,-24,]),'LEFT_CUR_BRACKET':([23,34,35,264,321,322,378,389,390,391,],[-170,47,-117,311,348,349,-170,394,-157,395,]),'ARROW':([25,26,27,28,29,30,31,32,33,37,38,39,40,41,43,44,46,152,202,203,204,206,207,266,],[36,-37,-170,-170,-170,-170,42,-170,-170,-38,-121,-9,-10,-11,-27,-28,-30,-170,265,-42,-170,-29,-168,-43,]),'LEFT_SQR_BRACKET':([28,29,30,33,38,39,40,41,80,117,118,137,164,188,215,],[-170,-170,-170,45,-121,-9,-10,-11,-170,161,-140,-170,-170,-140,-140,]),'CTEI':([45,51,52,95,111,115,120,121,130,153,154,157,158,159,161,169,180,181,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,281,283,284,285,287,288,289,290,291,293,294,295,297,298,299,346,362,363,366,],[-170,59,-165,131,-170,-170,131,131,-170,208,-167,131,-150,-170,131,131,131,-138,131,-130,131,-170,-170,131,-170,-170,-170,-170,131,-170,-170,131,-170,-170,131,131,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-170,131,-132,131,]),'LEFT_PARENT':([48,54,55,80,81,82,83,84,85,95,96,97,98,99,100,101,102,103,104,105,115,116,118,120,121,122,123,130,137,157,158,159,161,169,180,181,188,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,281,283,284,285,287,288,289,290,291,293,294,295,297,298,299,346,362,363,366,],[-170,61,-123,-170,119,120,121,-170,124,130,139,140,141,142,143,144,145,146,147,148,-170,159,-129,130,130,169,-159,-170,-170,130,-150,-170,130,130,130,-138,-129,130,-130,130,-170,-170,130,-170,-170,-170,-170,130,-170,-170,130,-170,-170,130,130,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-170,130,-132,130,]),'COMMA':([50,57,58,59,62,63,64,65,86,87,88,89,90,91,92,93,94,117,126,127,128,129,131,132,133,134,135,136,137,138,151,160,162,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,205,212,225,227,230,232,237,239,242,244,248,249,250,251,267,272,282,286,292,296,300,312,316,317,318,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,350,351,352,353,354,355,361,369,370,371,376,],[-170,-170,-122,-170,108,-169,111,-166,-96,-97,-98,-99,-100,-101,-102,-103,-104,-170,-170,-170,-170,-170,-170,-170,-170,-88,-89,-90,-170,-105,-170,-16,-18,-170,-149,-170,-148,-170,-146,-170,-147,-170,-135,-170,-136,-170,-137,-140,-170,275,-62,-64,-67,-69,-74,-76,-79,-81,-85,-141,-86,-87,108,-170,-170,-170,-170,-170,-170,-170,346,-131,-17,-170,-170,-170,-170,-170,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,359,-124,366,-162,-63,-68,-75,-80,-170,-21,-134,-170,346,]),'RIGHT_SQR_BRACKET':([59,64,65,86,87,88,89,90,91,92,93,94,110,112,117,126,127,128,129,131,132,133,134,135,136,137,138,160,162,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,208,212,225,227,230,232,237,239,242,244,248,249,250,251,268,274,276,282,286,292,296,300,318,319,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,352,353,354,355,361,369,370,],[-170,-170,-166,-96,-97,-98,-99,-100,-101,-102,-103,-104,152,-32,-170,-170,-170,-170,-170,-170,-170,-170,-88,-89,-90,-170,-105,-16,-18,-170,-149,-170,-148,-170,-146,-170,-147,-170,-135,-170,-136,-170,-137,-140,-170,-170,-62,-64,-67,-69,-74,-76,-79,-81,-85,-141,-86,-87,-31,318,-20,-170,-170,-170,-170,-170,-17,-19,-170,-170,-170,-170,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-63,-68,-75,-80,-170,-21,-134,]),'ASIGN':([79,80,117,118,160,162,170,223,224,318,],[115,-170,-170,-140,-16,-18,-170,281,-161,-17,]),'MULT':([86,87,88,89,90,91,92,93,94,117,129,131,132,133,134,135,136,137,138,160,162,178,179,182,183,184,185,186,187,188,248,249,250,251,296,300,318,327,328,329,330,331,332,333,334,335,336,337,338,339,361,369,370,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-170,-170,-170,-170,-170,-88,-89,-90,-170,-105,-16,-18,245,-147,-170,-135,-170,-136,-170,-137,-140,-85,-141,-86,-87,-170,-170,-17,245,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,-21,-134,]),'DIV':([86,87,88,89,90,91,92,93,94,117,129,131,132,133,134,135,136,137,138,160,162,178,179,182,183,184,185,186,187,188,248,249,250,251,296,300,318,327,328,329,330,331,332,333,334,335,336,337,338,339,361,369,370,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-170,-170,-170,-170,-170,-88,-89,-90,-170,-105,-16,-18,246,-147,-170,-135,-170,-136,-170,-137,-140,-85,-141,-86,-87,-170,-170,-17,246,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-170,-21,-134,]),'PLUS':([86,87,88,89,90,91,92,93,94,117,128,129,131,132,133,134,135,136,137,138,160,162,176,177,178,179,182,183,184,185,186,187,188,242,244,248,249,250,251,292,296,300,318,326,327,328,329,330,331,332,333,334,335,336,337,338,339,355,361,369,370,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-170,-170,-170,-170,-170,-170,-88,-89,-90,-170,-105,-16,-18,240,-146,-170,-147,-170,-135,-170,-136,-170,-137,-140,-79,-81,-85,-141,-86,-87,-170,-170,-170,-17,240,-170,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-80,-170,-21,-134,]),'MINUS':([86,87,88,89,90,91,92,93,94,117,128,129,131,132,133,134,135,136,137,138,160,162,176,177,178,179,182,183,184,185,186,187,188,242,244,248,249,250,251,292,296,300,318,326,327,328,329,330,331,332,333,334,335,336,337,338,339,355,361,369,370,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-170,-170,-170,-170,-170,-170,-88,-89,-90,-170,-105,-16,-18,241,-146,-170,-147,-170,-135,-170,-136,-170,-137,-140,-79,-81,-85,-141,-86,-87,-170,-170,-170,-17,241,-170,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-80,-170,-21,-134,]),'LESS_THAN':([86,87,88,89,90,91,92,93,94,117,127,128,129,131,132,133,134,135,136,137,138,160,162,174,175,176,177,178,179,182,183,184,185,186,187,188,237,239,242,244,248,249,250,251,286,292,296,300,318,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,354,355,361,369,370,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-170,-170,-170,-170,-170,-170,-170,-88,-89,-90,-170,-105,-16,-18,233,-148,-170,-146,-170,-147,-170,-135,-170,-136,-170,-137,-140,-74,-76,-79,-81,-85,-141,-86,-87,-170,-170,-170,-170,-17,233,-170,-170,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,-170,-21,-134,]),'GREATER_THAN':([86,87,88,89,90,91,92,93,94,117,127,128,129,131,132,133,134,135,136,137,138,160,162,174,175,176,177,178,179,182,183,184,185,186,187,188,237,239,242,244,248,249,250,251,286,292,296,300,318,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,354,355,361,369,370,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-170,-170,-170,-170,-170,-170,-170,-88,-89,-90,-170,-105,-16,-18,234,-148,-170,-146,-170,-147,-170,-135,-170,-136,-170,-137,-140,-74,-76,-79,-81,-85,-141,-86,-87,-170,-170,-170,-170,-17,234,-170,-170,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,-170,-21,-134,]),'EQUALS':([86,87,88,89,90,91,92,93,94,117,127,128,129,131,132,133,134,135,136,137,138,160,162,174,175,176,177,178,179,182,183,184,185,186,187,188,237,239,242,244,248,249,250,251,286,292,296,300,318,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,354,355,361,369,370,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-170,-170,-170,-170,-170,-170,-170,-88,-89,-90,-170,-105,-16,-18,235,-148,-170,-146,-170,-147,-170,-135,-170,-136,-170,-137,-140,-74,-76,-79,-81,-85,-141,-86,-87,-170,-170,-170,-170,-17,235,-170,-170,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,-170,-21,-134,]),'NOTEQUALS':([86,87,88,89,90,91,92,93,94,117,127,128,129,131,132,133,134,135,136,137,138,160,162,174,175,176,177,178,179,182,183,184,185,186,187,188,237,239,242,244,248,249,250,251,286,292,296,300,318,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,354,355,361,369,370,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-170,-170,-170,-170,-170,-170,-170,-88,-89,-90,-170,-105,-16,-18,236,-148,-170,-146,-170,-147,-170,-135,-170,-136,-170,-137,-140,-74,-76,-79,-81,-85,-141,-86,-87,-170,-170,-170,-170,-17,236,-170,-170,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,-170,-21,-134,]),'AND':([86,87,88,89,90,91,92,93,94,117,126,127,128,129,131,132,133,134,135,136,137,138,160,162,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,230,232,237,239,242,244,248,249,250,251,282,286,292,296,300,318,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,353,354,355,361,369,370,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-170,-170,-170,-170,-170,-170,-170,-170,-88,-89,-90,-170,-105,-16,-18,228,-149,-170,-148,-170,-146,-170,-147,-170,-135,-170,-136,-170,-137,-140,-67,-69,-74,-76,-79,-81,-85,-141,-86,-87,-170,-170,-170,-170,-170,-17,228,-170,-170,-170,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-68,-75,-80,-170,-21,-134,]),'OR':([86,87,88,89,90,91,92,93,94,117,126,127,128,129,131,132,133,134,135,136,137,138,160,162,172,173,174,175,176,177,178,179,182,183,184,185,186,187,188,230,232,237,239,242,244,248,249,250,251,282,286,292,296,300,318,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,353,354,355,361,369,370,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-170,-170,-170,-170,-170,-170,-170,-170,-88,-89,-90,-170,-105,-16,-18,229,-149,-170,-148,-170,-146,-170,-147,-170,-135,-170,-136,-170,-137,-140,-67,-69,-74,-76,-79,-81,-85,-141,-86,-87,-170,-170,-170,-170,-170,-17,229,-170,-170,-170,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-68,-75,-80,-170,-21,-134,]),'CTEF':([95,115,120,121,130,157,158,159,161,169,180,181,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,281,283,284,285,287,288,289,290,291,293,294,295,297,298,299,346,362,363,366,],[132,-170,132,132,-170,132,-150,-170,132,132,132,-138,132,-130,132,-170,-170,132,-170,-170,-170,-170,132,-170,-170,132,-170,-170,132,132,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-170,132,-132,132,]),'CTEC':([95,115,120,121,130,157,158,159,161,169,180,181,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,281,283,284,285,287,288,289,290,291,293,294,295,297,298,299,346,362,363,366,],[133,-170,133,133,-170,133,-150,-170,133,133,133,-138,133,-130,133,-170,-170,133,-170,-170,-170,-170,133,-170,-170,133,-170,-170,133,133,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-170,133,-132,133,]),'LETRERO':([120,139,],[167,189,]),'IF_TRUE':([279,],[321,]),'IF_FALSE':([372,],[378,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pnCrearDirFunc':([2,],[3,]),'empty':([2,5,6,10,11,12,14,16,23,27,28,29,30,32,33,45,47,48,50,53,57,59,60,61,62,64,67,80,84,106,111,113,115,117,126,127,128,129,130,131,132,133,137,149,151,152,159,163,164,166,167,168,170,172,174,176,178,182,184,186,189,190,191,192,193,194,195,196,197,198,204,205,208,209,210,212,222,228,229,233,234,235,236,240,241,245,246,267,272,282,286,292,296,300,311,312,315,316,323,324,325,326,327,340,341,346,348,349,356,361,371,372,373,374,375,376,377,378,384,394,395,399,],[4,7,9,13,17,13,21,17,35,38,38,38,38,38,46,52,13,55,58,17,63,65,68,21,109,112,68,118,123,150,154,156,158,162,173,175,177,179,181,183,185,187,188,201,58,207,211,214,215,218,218,221,224,227,232,239,244,249,249,249,253,255,255,255,255,255,255,255,255,255,38,63,65,270,273,276,221,284,284,288,288,288,288,294,294,298,298,109,317,173,175,177,179,329,13,342,344,347,351,227,232,239,244,357,360,363,68,68,68,370,317,379,381,383,385,347,388,390,393,68,68,401,]),'pnScriptFuncDir':([5,],[6,]),'pnCuadGotoMain':([6,],[8,]),'varp':([10,12,47,311,],[11,19,53,340,]),'var':([10,12,47,311,],[12,12,12,12,]),'funcp':([11,16,53,],[15,24,60,]),'func':([11,16,53,],[16,16,16,]),'pnCheckTablaVar':([14,61,],[20,106,]),'bloque':([15,],[22,]),'returnval':([18,],[25,]),'tipo_simp':([18,20,149,359,],[26,33,203,203,]),'v':([20,],[31,]),'pnDirMain':([23,],[34,]),'pnSaveTypeVar':([27,28,29,30,32,204,],[37,39,40,41,43,266,]),'vp':([33,],[44,]),'idp':([42,],[49,]),'pnArrCreateNode':([45,],[51,]),'pnAddFuncinDir':([48,],[54,]),'pnCheckNameTablaVar':([50,151,],[57,205,]),'pnArrAddDim':([57,205,],[62,267,]),'pnArrSaveLim1':([59,208,],[64,268,]),'estatutop':([60,67,348,349,356,394,395,],[66,114,364,365,367,396,397,]),'estatuto':([60,67,348,349,356,394,395,],[67,67,67,67,67,67,67,]),'asign':([60,67,348,349,356,394,395,],[69,69,69,69,69,69,69,]),'llamada':([60,67,95,120,121,157,161,169,180,210,226,231,238,243,275,281,348,349,356,362,366,394,395,],[70,70,135,135,135,135,135,135,135,135,135,135,135,135,135,135,70,70,70,135,135,70,70,]),'lee':([60,67,348,349,356,394,395,],[71,71,71,71,71,71,71,]),'escribe':([60,67,348,349,356,394,395,],[72,72,72,72,72,72,72,]),'condicion':([60,67,348,349,356,394,395,],[73,73,73,73,73,73,73,]),'ciclow':([60,67,348,349,356,394,395,],[74,74,74,74,74,74,74,]),'ciclof':([60,67,348,349,356,394,395,],[75,75,75,75,75,75,75,]),'funcesp':([60,67,95,120,121,157,161,169,180,210,226,231,238,243,275,281,348,349,356,362,366,394,395,],[76,76,136,136,136,136,136,136,136,136,136,136,136,136,136,136,76,76,76,136,136,76,76,]),'return':([60,67,348,349,356,394,395,],[77,77,77,77,77,77,77,]),'copy':([60,67,95,120,121,157,161,169,180,210,226,231,238,243,275,281,348,349,356,362,366,394,395,],[78,78,138,138,138,138,138,138,138,138,138,138,138,138,138,138,78,78,78,138,138,78,78,]),'variable':([60,67,95,119,120,121,140,141,142,143,144,145,146,147,148,157,161,169,180,210,226,231,238,243,275,281,348,349,356,362,366,394,395,],[79,79,134,163,134,134,190,191,192,193,194,195,196,197,198,134,134,134,134,134,134,134,134,134,134,134,79,79,79,134,134,79,79,]),'mean':([60,67,95,120,121,157,161,169,180,210,226,231,238,243,275,281,348,349,356,362,366,394,395,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'mode':([60,67,95,120,121,157,161,169,180,210,226,231,238,243,275,281,348,349,356,362,366,394,395,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'median':([60,67,95,120,121,157,161,169,180,210,226,231,238,243,275,281,348,349,356,362,366,394,395,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'variance':([60,67,95,120,121,157,161,169,180,210,226,231,238,243,275,281,348,349,356,362,366,394,395,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'max':([60,67,95,120,121,157,161,169,180,210,226,231,238,243,275,281,348,349,356,362,366,394,395,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'min':([60,67,95,120,121,157,161,169,180,210,226,231,238,243,275,281,348,349,356,362,366,394,395,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'staddes':([60,67,95,120,121,157,161,169,180,210,226,231,238,243,275,281,348,349,356,362,366,394,395,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'boxplot':([60,67,95,120,121,157,161,169,180,210,226,231,238,243,275,281,348,349,356,362,366,394,395,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'linreg':([60,67,95,120,121,157,161,169,180,210,226,231,238,243,275,281,348,349,356,362,366,394,395,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'idpp':([62,267,],[107,313,]),'vpp':([64,],[110,]),'pnCheckFunc':([80,137,],[116,116,]),'pnSaveOperandos':([80,137,164,],[117,117,117,]),'pnSaveWhile':([84,],[122,]),'exp':([95,120,121,157,161,169,180,210,275,281,362,366,],[125,166,168,209,212,222,247,272,319,323,371,374,]),'exprel':([95,120,121,157,161,169,180,210,226,275,281,362,366,],[126,126,126,126,126,126,126,126,282,126,126,126,126,]),'e':([95,120,121,157,161,169,180,210,226,231,275,281,362,366,],[127,127,127,127,127,127,127,127,127,286,127,127,127,127,]),'t':([95,120,121,157,161,169,180,210,226,231,238,275,281,362,366,],[128,128,128,128,128,128,128,128,128,128,292,128,128,128,128,]),'f':([95,120,121,157,161,169,180,210,226,231,238,243,275,281,362,366,],[129,129,129,129,129,129,129,129,129,129,129,296,129,129,129,129,]),'pnCrearListaParam':([106,],[149,]),'pnArrIncDim':([111,],[153,]),'pnEndScript':([113,],[155,]),'pnSaveOperadorAsign':([115,],[157,]),'indexp':([117,],[160,]),'escribep':([120,],[165,]),'pnCuadOplog':([126,282,],[172,324,]),'pnCuadOpRelacional':([127,286,],[174,325,]),'pnCuadPlMi':([128,292,],[176,326,]),'pnCuadMuDi':([129,296,],[178,327,]),'pnSaveFondoFalso':([130,],[180,]),'pnSaveCteI':([131,],[182,]),'pnSaveCteF':([132,],[184,]),'pnSaveCteC':([133,],[186,]),'param':([149,],[199,]),'paramlist':([149,359,],[200,368,]),'tipoparam':([149,359,],[202,202,]),'pnArrCuadriplificar':([152,],[206,]),'pnGenerateEra':([159,],[210,]),'pnCuadLee':([163,],[213,]),'pnCuadEscribe':([166,167,],[217,219,]),'pnCheckBoolIf':([168,222,],[220,280,]),'pnSaveForID':([170,],[223,]),'logic':([172,324,],[225,352,]),'logicsig':([172,324,],[226,226,]),'relacionalp':([174,325,],[230,353,]),'relsig':([174,325,],[231,231,]),'tp':([176,326,],[237,354,]),'tsig':([176,326,],[238,238,]),'fp':([178,327,],[242,355,]),'fsig':([178,327,],[243,243,]),'pnSaveOperandoConstante':([182,184,186,],[248,250,251,]),'pnCuadCopy':([189,],[252,]),'pnCuadFuncEsp':([190,191,192,193,194,195,196,197,198,],[254,256,257,258,259,260,261,262,263,]),'pnCuadAsign':([209,],[269,]),'expp':([210,],[271,]),'indexpp':([212,],[274,]),'pnSaveOperadorLog':([228,229,],[283,285,]),'pnSaveOperadorRel':([233,234,235,236,],[287,289,290,291,]),'pnSaveOperadorPlMi':([240,241,],[293,295,]),'pnSaveOperadorMuDi':([245,246,],[297,299,]),'pnCuadParametro':([272,371,],[316,376,]),'pnPopFondoFalso':([300,],[328,]),'pnAddParametersTablaVar':([312,],[341,]),'pnCheckNoParam':([315,],[343,]),'exppp':([316,376,],[345,386,]),'pnCreateVControl':([323,],[350,]),'pnDirecIniFunc':([340,],[356,]),'paramlistp':([341,],[358,]),'pnUpdateK':([346,],[362,]),'pnCuadGoSub':([361,],[369,]),'falsop':([372,],[377,]),'pnEndWhile':([373,],[380,]),'pnCompControlFinal':([374,],[382,]),'pnCountVarsINTOResources':([375,],[384,]),'pnEndIf':([377,],[387,]),'pnElseIf':([378,],[389,]),'pnCloseCurrentFunction':([384,],[392,]),'pnEndFor':([399,],[400,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque','programa',9,'p_programa','lexerParser.py',197),
  ('varp -> var varp','varp',2,'p_programa','lexerParser.py',198),
  ('varp -> empty','varp',1,'p_programa','lexerParser.py',199),
  ('funcp -> func funcp','funcp',2,'p_programa','lexerParser.py',200),
  ('funcp -> empty','funcp',1,'p_programa','lexerParser.py',201),
  ('bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript','bloque',8,'p_bloque','lexerParser.py',207),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_bloque','lexerParser.py',208),
  ('estatutop -> empty','estatutop',1,'p_bloque','lexerParser.py',209),
  ('tipo_simp -> INT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexerParser.py',215),
  ('tipo_simp -> FLOAT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexerParser.py',216),
  ('tipo_simp -> CHAR pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexerParser.py',217),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','lexerParser.py',223),
  ('tipo_comp -> file','tipo_comp',1,'p_tipo_comp','lexerParser.py',224),
  ('copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON','copy',6,'p_copy','lexerParser.py',230),
  ('file -> ID','file',1,'p_file','lexerParser.py',236),
  ('variable -> ID pnSaveOperandos indexp','variable',3,'p_variable','lexerParser.py',242),
  ('indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET','indexp',4,'p_variable','lexerParser.py',243),
  ('indexp -> empty','indexp',1,'p_variable','lexerParser.py',244),
  ('indexpp -> COMMA exp','indexpp',2,'p_variable','lexerParser.py',245),
  ('indexpp -> empty','indexpp',1,'p_variable','lexerParser.py',246),
  ('llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub','llamada',9,'p_llamada','lexerParser.py',252),
  ('expp -> exp pnCuadParametro exppp','expp',3,'p_llamada','lexerParser.py',253),
  ('expp -> empty','expp',1,'p_llamada','lexerParser.py',254),
  ('exppp -> COMMA pnUpdateK exp pnCuadParametro exppp','exppp',5,'p_llamada','lexerParser.py',255),
  ('exppp -> empty','exppp',1,'p_llamada','lexerParser.py',256),
  ('var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON','var',6,'p_var','lexerParser.py',262),
  ('v -> DATAFRAME pnSaveTypeVar','v',2,'p_var','lexerParser.py',263),
  ('v -> tipo_simp vp','v',2,'p_var','lexerParser.py',264),
  ('vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar','vp',7,'p_var','lexerParser.py',265),
  ('vp -> empty','vp',1,'p_var','lexerParser.py',266),
  ('vpp -> COMMA pnArrIncDim CTEI pnArrSaveLim1','vpp',4,'p_var','lexerParser.py',267),
  ('vpp -> empty','vpp',1,'p_var','lexerParser.py',268),
  ('idp -> ID pnCheckNameTablaVar pnArrAddDim idpp','idp',4,'p_var','lexerParser.py',269),
  ('idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim idpp','idpp',5,'p_var','lexerParser.py',270),
  ('idpp -> empty','idpp',1,'p_var','lexerParser.py',271),
  ('func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction','func',17,'p_func','lexerParser.py',277),
  ('returnval -> tipo_simp','returnval',1,'p_func','lexerParser.py',278),
  ('returnval -> VOID pnSaveTypeVar','returnval',2,'p_func','lexerParser.py',279),
  ('param -> paramlist','param',1,'p_param','lexerParser.py',285),
  ('param -> empty','param',1,'p_param','lexerParser.py',286),
  ('paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp','paramlist',5,'p_param','lexerParser.py',287),
  ('tipoparam -> tipo_simp','tipoparam',1,'p_param','lexerParser.py',288),
  ('tipoparam -> DATAFRAME pnSaveTypeVar','tipoparam',2,'p_param','lexerParser.py',289),
  ('paramlistp -> COMMA paramlist','paramlistp',2,'p_param','lexerParser.py',290),
  ('paramlistp -> empty','paramlistp',1,'p_param','lexerParser.py',291),
  ('estatuto -> asign','estatuto',1,'p_estatuto','lexerParser.py',297),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','lexerParser.py',298),
  ('estatuto -> lee','estatuto',1,'p_estatuto','lexerParser.py',299),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','lexerParser.py',300),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexerParser.py',301),
  ('estatuto -> ciclow','estatuto',1,'p_estatuto','lexerParser.py',302),
  ('estatuto -> ciclof','estatuto',1,'p_estatuto','lexerParser.py',303),
  ('estatuto -> funcesp','estatuto',1,'p_estatuto','lexerParser.py',304),
  ('estatuto -> return','estatuto',1,'p_estatuto','lexerParser.py',305),
  ('estatuto -> copy','estatuto',1,'p_estatuto','lexerParser.py',306),
  ('asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON','asign',6,'p_asign','lexerParser.py',312),
  ('lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON','lee',6,'p_lee','lexerParser.py',318),
  ('escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON','escribe',5,'p_escribe','lexerParser.py',324),
  ('escribep -> exp pnCuadEscribe','escribep',2,'p_escribe','lexerParser.py',325),
  ('escribep -> LETRERO pnCuadEscribe','escribep',2,'p_escribe','lexerParser.py',326),
  ('return -> RETURNS exp SEMICOLON','return',3,'p_return','lexerParser.py',332),
  ('exp -> exprel pnCuadOplog logic','exp',3,'p_exp','lexerParser.py',338),
  ('logic -> logicsig exprel pnCuadOplog logic','logic',4,'p_exp','lexerParser.py',339),
  ('logic -> empty','logic',1,'p_exp','lexerParser.py',340),
  ('logicsig -> AND pnSaveOperadorLog','logicsig',2,'p_exp','lexerParser.py',341),
  ('logicsig -> OR pnSaveOperadorLog','logicsig',2,'p_exp','lexerParser.py',342),
  ('exprel -> e pnCuadOpRelacional relacionalp','exprel',3,'p_exprel','lexerParser.py',348),
  ('relacionalp -> relsig e pnCuadOpRelacional relacionalp','relacionalp',4,'p_exprel','lexerParser.py',349),
  ('relacionalp -> empty','relacionalp',1,'p_exprel','lexerParser.py',350),
  ('relsig -> LESS_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',351),
  ('relsig -> GREATER_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',352),
  ('relsig -> EQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',353),
  ('relsig -> NOTEQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',354),
  ('e -> t pnCuadPlMi tp','e',3,'p_e','lexerParser.py',360),
  ('tp -> tsig t pnCuadPlMi tp','tp',4,'p_e','lexerParser.py',361),
  ('tp -> empty','tp',1,'p_e','lexerParser.py',362),
  ('tsig -> PLUS pnSaveOperadorPlMi','tsig',2,'p_e','lexerParser.py',363),
  ('tsig -> MINUS pnSaveOperadorPlMi','tsig',2,'p_e','lexerParser.py',364),
  ('t -> f pnCuadMuDi fp','t',3,'p_t','lexerParser.py',370),
  ('fp -> fsig f pnCuadMuDi fp','fp',4,'p_t','lexerParser.py',371),
  ('fp -> empty','fp',1,'p_t','lexerParser.py',372),
  ('fsig -> MULT pnSaveOperadorMuDi','fsig',2,'p_t','lexerParser.py',373),
  ('fsig -> DIV pnSaveOperadorMuDi','fsig',2,'p_t','lexerParser.py',374),
  ('f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso','f',5,'p_f','lexerParser.py',380),
  ('f -> CTEI pnSaveCteI pnSaveOperandoConstante','f',3,'p_f','lexerParser.py',381),
  ('f -> CTEF pnSaveCteF pnSaveOperandoConstante','f',3,'p_f','lexerParser.py',382),
  ('f -> CTEC pnSaveCteC pnSaveOperandoConstante','f',3,'p_f','lexerParser.py',383),
  ('f -> variable','f',1,'p_f','lexerParser.py',384),
  ('f -> llamada','f',1,'p_f','lexerParser.py',385),
  ('f -> funcesp','f',1,'p_f','lexerParser.py',386),
  ('condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf','condicion',11,'p_condicion','lexerParser.py',392),
  ('falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','falsop',5,'p_condicion','lexerParser.py',393),
  ('falsop -> empty','falsop',1,'p_condicion','lexerParser.py',394),
  ('ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile','ciclow',10,'p_ciclow','lexerParser.py',400),
  ('ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor','ciclof',15,'p_ciclof','lexerParser.py',406),
  ('funcesp -> mean','funcesp',1,'p_funcesp','lexerParser.py',412),
  ('funcesp -> mode','funcesp',1,'p_funcesp','lexerParser.py',413),
  ('funcesp -> median','funcesp',1,'p_funcesp','lexerParser.py',414),
  ('funcesp -> variance','funcesp',1,'p_funcesp','lexerParser.py',415),
  ('funcesp -> max','funcesp',1,'p_funcesp','lexerParser.py',416),
  ('funcesp -> min','funcesp',1,'p_funcesp','lexerParser.py',417),
  ('funcesp -> staddes','funcesp',1,'p_funcesp','lexerParser.py',418),
  ('funcesp -> boxplot','funcesp',1,'p_funcesp','lexerParser.py',419),
  ('funcesp -> linreg','funcesp',1,'p_funcesp','lexerParser.py',420),
  ('funcesp -> copy','funcesp',1,'p_funcesp','lexerParser.py',421),
  ('mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mean',6,'p_mean','lexerParser.py',427),
  ('mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mode',6,'p_mode','lexerParser.py',433),
  ('median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','median',6,'p_median','lexerParser.py',439),
  ('variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','variance',6,'p_variance','lexerParser.py',445),
  ('max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','max',6,'p_max','lexerParser.py',451),
  ('min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','min',6,'p_min','lexerParser.py',457),
  ('staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','staddes',6,'p_staddes','lexerParser.py',463),
  ('boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','boxplot',6,'p_boxplot','lexerParser.py',469),
  ('linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','linreg',6,'p_linreg','lexerParser.py',475),
  ('pnCrearDirFunc -> empty','pnCrearDirFunc',1,'p_pnCrearDirFunc','lexerParser.py',485),
  ('pnCuadGotoMain -> empty','pnCuadGotoMain',1,'p_pnCuadGotoMain','lexerParser.py',495),
  ('pnDirMain -> empty','pnDirMain',1,'p_pnDirMain','lexerParser.py',504),
  ('pnScriptFuncDir -> empty','pnScriptFuncDir',1,'p_pnScriptFuncDir','lexerParser.py',512),
  ('pnCheckTablaVar -> empty','pnCheckTablaVar',1,'p_pnCheckTablaVar','lexerParser.py',521),
  ('pnCrearListaParam -> empty','pnCrearListaParam',1,'p_pnCrearListaParam','lexerParser.py',529),
  ('pnSaveTypeVar -> empty','pnSaveTypeVar',1,'p_pnSaveTypeVar','lexerParser.py',536),
  ('pnCheckNameTablaVar -> empty','pnCheckNameTablaVar',1,'p_pnCheckNameTablaVar','lexerParser.py',545),
  ('pnAddFuncinDir -> empty','pnAddFuncinDir',1,'p_pnAddFuncinDir','lexerParser.py',593),
  ('pnAddParametersTablaVar -> empty','pnAddParametersTablaVar',1,'p_pnAddParametersTablaVar','lexerParser.py',607),
  ('pnCountVarsINTOResources -> empty','pnCountVarsINTOResources',1,'p_pnCountVarsINTOResources','lexerParser.py',637),
  ('pnDirecIniFunc -> empty','pnDirecIniFunc',1,'p_pnDirecIniFunc','lexerParser.py',666),
  ('pnCloseCurrentFunction -> empty','pnCloseCurrentFunction',1,'p_pnCloseCurrentFunction','lexerParser.py',673),
  ('pnEndScript -> empty','pnEndScript',1,'p_pnEndScript','lexerParser.py',689),
  ('pnCheckFunc -> empty','pnCheckFunc',1,'p_pnCheckFunc','lexerParser.py',698),
  ('pnGenerateEra -> empty','pnGenerateEra',1,'p_pnGenerateEra','lexerParser.py',712),
  ('pnCuadParametro -> empty','pnCuadParametro',1,'p_pnCuadParametro','lexerParser.py',726),
  ('pnUpdateK -> empty','pnUpdateK',1,'p_pnUpdateK','lexerParser.py',752),
  ('pnCheckNoParam -> empty','pnCheckNoParam',1,'p_pnCheckNoParam','lexerParser.py',760),
  ('pnCuadGoSub -> empty','pnCuadGoSub',1,'p_pnCuadGoSub','lexerParser.py',773),
  ('pnSaveCteI -> empty','pnSaveCteI',1,'p_pnSaveCteI','lexerParser.py',787),
  ('pnSaveCteF -> empty','pnSaveCteF',1,'p_pnSaveCteF','lexerParser.py',798),
  ('pnSaveCteC -> empty','pnSaveCteC',1,'p_pnSaveCteC','lexerParser.py',808),
  ('pnSaveFondoFalso -> empty','pnSaveFondoFalso',1,'p_pnSaveFondoFalso','lexerParser.py',818),
  ('pnPopFondoFalso -> empty','pnPopFondoFalso',1,'p_pnPopFondoFalso','lexerParser.py',825),
  ('pnSaveOperandos -> empty','pnSaveOperandos',1,'p_pnSaveOperandos','lexerParser.py',835),
  ('pnSaveOperandoConstante -> empty','pnSaveOperandoConstante',1,'p_pnSaveOperandoConstante','lexerParser.py',860),
  ('pnSaveOperadorPlMi -> empty','pnSaveOperadorPlMi',1,'p_pnSaveOperadorPlMi','lexerParser.py',868),
  ('pnSaveOperadorMuDi -> empty','pnSaveOperadorMuDi',1,'p_pnSaveOperadorMuDi','lexerParser.py',875),
  ('pnSaveOperadorRel -> empty','pnSaveOperadorRel',1,'p_pnSaveOperadorRel','lexerParser.py',882),
  ('pnSaveOperadorLog -> empty','pnSaveOperadorLog',1,'p_pnSaveOperadorLog','lexerParser.py',889),
  ('pnCuadPlMi -> empty','pnCuadPlMi',1,'p_pnCuadPlMi','lexerParser.py',896),
  ('pnCuadMuDi -> empty','pnCuadMuDi',1,'p_pnCuadMuDi','lexerParser.py',928),
  ('pnCuadOpRelacional -> empty','pnCuadOpRelacional',1,'p_pnCuadOpRelacional','lexerParser.py',960),
  ('pnCuadOplog -> empty','pnCuadOplog',1,'p_pnCuadOplog','lexerParser.py',993),
  ('pnSaveOperadorAsign -> empty','pnSaveOperadorAsign',1,'p_pnSaveOperadorAsign','lexerParser.py',1024),
  ('pnCuadAsign -> empty','pnCuadAsign',1,'p_pnCuadAsign','lexerParser.py',1031),
  ('pnCuadEscribe -> empty','pnCuadEscribe',1,'p_pnCuadEscribe','lexerParser.py',1057),
  ('pnCuadLee -> empty','pnCuadLee',1,'p_pnCuadLee','lexerParser.py',1095),
  ('pnCuadCopy -> empty','pnCuadCopy',1,'p_pnCuadCopy','lexerParser.py',1112),
  ('pnCuadFuncEsp -> empty','pnCuadFuncEsp',1,'p_pnCuadFuncEsp','lexerParser.py',1131),
  ('pnCheckBoolIf -> empty','pnCheckBoolIf',1,'p_pnCheckBoolIf','lexerParser.py',1174),
  ('pnElseIf -> empty','pnElseIf',1,'p_pnElseIf','lexerParser.py',1192),
  ('pnEndIf -> empty','pnEndIf',1,'p_pnEndIf','lexerParser.py',1203),
  ('pnSaveWhile -> empty','pnSaveWhile',1,'p_pnSaveWhile','lexerParser.py',1212),
  ('pnEndWhile -> empty','pnEndWhile',1,'p_pnEndWhile','lexerParser.py',1222),
  ('pnSaveForID -> empty','pnSaveForID',1,'p_pnSaveForID','lexerParser.py',1236),
  ('pnCreateVControl -> empty','pnCreateVControl',1,'p_pnCreateVControl','lexerParser.py',1260),
  ('pnCompControlFinal -> empty','pnCompControlFinal',1,'p_pnCompControlFinal','lexerParser.py',1291),
  ('pnEndFor -> empty','pnEndFor',1,'p_pnEndFor','lexerParser.py',1319),
  ('pnArrCreateNode -> empty','pnArrCreateNode',1,'p_pnArrCreateNode','lexerParser.py',1355),
  ('pnArrSaveLim1 -> empty','pnArrSaveLim1',1,'p_pnArrSaveLim1','lexerParser.py',1372),
  ('pnArrIncDim -> empty','pnArrIncDim',1,'p_pnArrIncDim','lexerParser.py',1390),
  ('pnArrCuadriplificar -> empty','pnArrCuadriplificar',1,'p_pnArrCuadriplificar','lexerParser.py',1401),
  ('pnArrAddDim -> empty','pnArrAddDim',1,'p_pnArrAddDim','lexerParser.py',1432),
  ('empty -> <empty>','empty',0,'p_empty','lexerParser.py',1459),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ARROW ASIGN BOXPLOT CHAR COMMA COMMENT CTEC CTEF CTEI DATAFRAME DIV DO EQUALS FLOAT FOR FUNC GREATER_THAN ID IF IF_FALSE IF_TRUE INT LEFT_CUR_BRACKET LEFT_PARENT LEFT_SQR_BRACKET LESS_THAN LETRERO LINREG MAX MEAN MEDIAN MIN MINUS MULT NOTEQUALS OR PLUS READ READ_FILE RETURNS RIGHT_CUR_BRACKET RIGHT_PARENT RIGHT_SQR_BRACKET SCRIPT SEMICOLON STADDES VAR VARIANCE VOID WHILE WRITE\n    programa : SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND\n    varp : var varp \n         | empty\n    funcp : func funcp \n          | empty\n    \n    bloque : DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript\n    estatutop : estatuto estatutop \n              | empty\n    \n    tipo_simp : INT pnSaveTypeVar\n              | FLOAT pnSaveTypeVar\n              | CHAR pnSaveTypeVar\n    \n    copy : READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON\n    \n    variable : ID pnSaveOperandos indexp\n    indexp : LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop\n           | empty\n    indexpp : COMMA pnArrAccIncDim exp pnMatCalc\n            | empty pnArrCalc\n    \n    llamada : ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue\n    expp : exp pnCuadParametro exppp\n         | empty\n    exppp : COMMA pnUpdateK exp pnCuadParametro exppp\n          | empty\n    \n    var : VAR pnCheckTablaVar v ARROW idp SEMICOLON\n    v : DATAFRAME pnSaveTypeVar\n      | tipo_simp vp\n    vp : LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim vpp RIGHT_SQR_BRACKET pnArrCuadriplificar\n       | empty\n    vpp : COMMA CTEI pnArrSaveLim\n        | empty\n    idp : ID pnCheckNameTablaVar pnArrAddDim idpp\n    idpp : COMMA ID pnCheckNameTablaVar pnArrAddDim idpp\n         | empty\n    \n    func : FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction\n    returnval : tipo_simp\n              | VOID pnSaveTypeVar\n    \n    param : paramlist\n          | empty\n    paramlist : tipoparam ARROW ID pnAddParametersTablaVar paramlistp\n    tipoparam : tipo_simp\n              | DATAFRAME pnSaveTypeVar\n    paramlistp : COMMA paramlist\n               | empty\n    \n    estatuto : asign\n             | llamada\n             | lee\n             | escribe\n             | condicion\n             | ciclow\n             | ciclof\n             | funcesp\n             | return\n             | copy\n    \n    asign : variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON\n    \n    lee : READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON\n    \n    escribe :  WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON\n    escribep : exp pnCuadEscribe\n             | LETRERO pnCuadEscribe\n    \n    return : RETURNS exp pnCuadRet SEMICOLON\n    \n    exp : exprel pnCuadOplog logic\n    logic : logicsig exprel pnCuadOplog logic \n          | empty\n    logicsig : AND pnSaveOperadorLog\n             | OR pnSaveOperadorLog\n    \n    exprel : e pnCuadOpRelacional relacionalp\n    relacionalp : relsig e pnCuadOpRelacional relacionalp \n                | empty\n    relsig : LESS_THAN pnSaveOperadorRel\n           | GREATER_THAN pnSaveOperadorRel\n           | EQUALS pnSaveOperadorRel\n           | NOTEQUALS pnSaveOperadorRel\n    \n    e : t pnCuadPlMi tp\n    tp : tsig t pnCuadPlMi tp \n       | empty\n    tsig : PLUS pnSaveOperadorPlMi\n         | MINUS pnSaveOperadorPlMi\n    \n    t : f pnCuadMuDi fp\n    fp : fsig f pnCuadMuDi fp \n       | empty\n    fsig : MULT pnSaveOperadorMuDi\n         | DIV pnSaveOperadorMuDi\n    \n    f : LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso\n      | CTEI pnSaveCteI  pnSaveOperandoConstante\n      | CTEF pnSaveCteF pnSaveOperandoConstante\n      | CTEC pnSaveCteC pnSaveOperandoConstante\n      | variable\n      | llamada\n      | funcesp\n    \n    condicion : IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf\n    falsop : IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET \n           | empty\n    \n    ciclow : WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile\n    \n    ciclof : FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor\n    \n    funcesp : mean\n            | median\n            | variance\n            | max\n            | min\n            | staddes\n            | boxplot\n            | linreg\n            | copy\n    \n    mean : MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    median : MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    variance : VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    max : MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    min : MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    staddes : STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    boxplot : BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON\n    \n    linreg : LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON\n    \n    pnCrearDirFunc : empty\n    \n    pnCuadGotoMain : empty\n    \n    pnDirMain : empty\n    \n    pnScriptFuncDir : empty\n    \n    pnCheckTablaVar : empty\n    \n    pnCrearListaParam : empty\n    \n    pnSaveTypeVar : empty\n    \n    pnCheckNameTablaVar : empty\n    \n    pnAddFuncinDir : empty\n    \n    pnAddParametersTablaVar : empty\n    \n    pnCountVarsINTOResources : empty\n    \n    pnDirecIniFunc : empty\n    \n    pnCloseCurrentFunction : empty\n    \n    pnEndScript : empty\n    \n    pnCheckFunc : empty\n    \n    pnGenerateEra : empty\n    \n    pnCuadParametro : empty\n    \n    pnUpdateK : empty\n    \n    pnCheckNoParam : empty\n    \n    pnCuadGoSub : empty\n    \n    pnHandleReturnValue : empty\n    \n    pnCuadRet : empty\n    \n    pnSaveCteI : empty\n    \n    pnSaveCteF : empty\n    \n    pnSaveCteC : empty\n    \n    pnSaveFondoFalso : empty\n    \n    pnPopFondoFalso : empty\n    \n    pnSaveOperandos : empty\n    \n    pnSaveOperandoConstante : empty\n    \n    pnSaveOperadorPlMi : empty\n    \n    pnSaveOperadorMuDi : empty\n    \n    pnSaveOperadorRel : empty\n    \n    pnSaveOperadorLog : empty\n    \n    pnCuadPlMi : empty\n    \n    pnCuadMuDi : empty\n    \n    pnCuadOpRelacional : empty\n    \n    pnCuadOplog : empty\n    \n    pnSaveOperadorAsign : empty\n    \n    pnCuadAsign : empty\n    \n    pnCuadEscribe : empty\n    \n    pnCuadLee : empty\n    \n    pnCuadCopy : empty\n    \n    pnCuadFuncEsp : empty\n    \n    pnCuadBoxplot : empty\n    \n    pnCuadLinReg : empty\n    \n    pnCheckBoolIf : empty\n    \n    pnElseIf : empty\n    \n    pnEndIf : empty\n    \n    pnSaveWhile : empty\n    \n    pnEndWhile : empty\n    \n    pnSaveForID : empty\n    \n    pnCreateVControl : empty\n    \n    pnCompControlFinal : empty\n    \n    pnEndFor : empty\n    \n    pnArrCreateNode : empty\n    \n    pnArrSaveLim : empty\n    \n    pnArrCuadriplificar : empty\n    \n    pnArrAddDim : empty\n    \n    pnArrIni : empty\n    \n    pnArrVerify : empty\n    \n    pnArrAccIncDim : empty\n    \n    pnArrCalc : empty\n    \n    pnMatCalc : empty\n    \n    pnArrFFPop : empty\n    \n    pnCuadEND : empty\n    \n    empty :'
    
_lr_action_items = {'SCRIPT':([0,],[2,]),'$end':([1,22,34,35,113,153,154,],[0,-175,-1,-174,-175,-6,-123,]),'ID':([2,3,4,12,13,16,17,19,24,38,44,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,108,115,119,120,121,124,130,139,140,141,142,143,144,145,146,147,155,156,157,159,167,179,180,208,209,210,211,224,226,228,229,231,233,234,235,236,238,240,241,243,245,246,253,254,255,256,257,258,260,262,272,275,277,278,279,281,282,283,284,285,287,288,289,291,292,293,304,307,313,334,335,341,344,346,347,363,364,368,369,370,372,373,378,379,380,381,382,383,384,385,386,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,429,430,431,432,],[-175,5,-110,-175,-3,-175,-5,-2,-4,50,52,-175,-175,-23,82,82,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,137,150,-175,162,137,137,162,-175,162,162,162,162,162,162,162,162,162,137,-147,-175,-175,137,137,-135,137,-125,137,-168,-58,137,-175,-175,137,-175,-175,-175,-175,137,-175,-175,137,-175,-175,137,137,137,137,137,137,137,305,-55,137,-62,-142,-63,-67,-141,-68,-69,-70,-74,-139,-75,-79,-140,-80,-175,-53,-54,137,-175,-175,-175,82,82,82,-121,-175,137,-127,137,-170,137,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,82,82,-89,-175,-92,-163,]),'SEMICOLON':([5,6,7,8,9,51,52,59,60,64,65,88,89,90,91,92,93,94,95,107,109,117,125,126,127,128,129,131,132,133,134,135,136,137,138,150,158,160,169,170,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,203,207,215,225,227,230,232,237,239,242,244,248,249,250,251,264,265,266,271,276,280,286,290,294,306,308,317,318,319,320,321,322,338,339,350,351,352,353,354,355,356,357,358,359,360,361,368,371,379,380,381,382,383,384,385,386,391,392,394,395,400,402,403,414,],[-175,-175,-113,10,-111,58,-175,-175,-117,-175,-167,-93,-94,-95,-96,-97,-98,-99,-100,-30,-32,-175,-175,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-101,-175,-13,-15,224,-131,-175,-146,-175,-145,-175,-143,-175,-144,-175,-132,-175,-133,-175,-134,-137,-175,-175,272,-59,-61,-64,-66,-71,-73,-76,-78,-82,-138,-83,-84,-175,307,-148,313,-175,-175,-175,-175,-175,-31,-175,-175,-175,-175,-175,-81,-136,368,-128,-60,-65,-72,-77,379,380,381,382,383,384,385,386,-175,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-14,-173,414,-18,-130,-109,]),'VAR':([10,12,49,58,304,],[14,14,14,-23,14,]),'FUNC':([10,11,12,13,16,19,49,55,58,401,415,416,423,424,],[-175,18,-175,-3,18,-2,-175,18,-23,-175,-175,-120,-33,-122,]),'DO':([10,11,12,13,15,16,17,19,24,58,401,415,416,423,424,],[-175,-175,-175,-3,23,-175,-5,-2,-4,-23,-175,-175,-120,-33,-122,]),'READ':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,224,272,304,307,313,335,346,347,363,364,368,379,380,381,382,383,384,385,386,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,429,430,431,432,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,83,83,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-58,-55,-175,-53,-54,-175,83,83,83,-121,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,83,83,-89,-175,-92,-163,]),'WRITE':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,224,272,304,307,313,335,346,347,363,364,368,379,380,381,382,383,384,385,386,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,429,430,431,432,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,84,84,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-58,-55,-175,-53,-54,-175,84,84,84,-121,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,84,84,-89,-175,-92,-163,]),'IF':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,224,272,304,307,313,335,346,347,363,364,368,379,380,381,382,383,384,385,386,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,429,430,431,432,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,85,85,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-58,-55,-175,-53,-54,-175,85,85,85,-121,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,85,85,-89,-175,-92,-163,]),'WHILE':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,224,272,304,307,313,335,346,347,363,364,368,379,380,381,382,383,384,385,386,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,429,430,431,432,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,86,86,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-58,-55,-175,-53,-54,-175,86,86,86,-121,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,86,86,-89,-175,-92,-163,]),'FOR':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,224,272,304,307,313,335,346,347,363,364,368,379,380,381,382,383,384,385,386,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,429,430,431,432,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,87,87,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-58,-55,-175,-53,-54,-175,87,87,87,-121,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,87,87,-89,-175,-92,-163,]),'RETURNS':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,224,272,304,307,313,335,346,347,363,364,368,379,380,381,382,383,384,385,386,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,429,430,431,432,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,96,96,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-58,-55,-175,-53,-54,-175,96,96,96,-121,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,96,96,-89,-175,-92,-163,]),'READ_FILE':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,115,120,121,130,155,156,157,159,167,179,180,208,209,210,211,224,226,228,229,231,233,234,235,236,238,240,241,243,245,246,253,254,255,256,257,258,260,272,275,277,278,279,281,282,283,284,285,287,288,289,291,292,293,304,307,313,334,335,341,344,346,347,363,364,368,369,370,372,373,378,379,380,381,382,383,384,385,386,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,429,430,431,432,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,97,97,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,97,-175,97,97,-175,97,-147,-175,-175,97,97,-135,97,-125,97,-168,-58,97,-175,-175,97,-175,-175,-175,-175,97,-175,-175,97,-175,-175,97,97,97,97,97,97,97,-55,97,-62,-142,-63,-67,-141,-68,-69,-70,-74,-139,-75,-79,-140,-80,-175,-53,-54,97,-175,-175,-175,97,97,97,-121,-175,97,-127,97,-170,97,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,97,97,-89,-175,-92,-163,]),'MEAN':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,115,120,121,130,155,156,157,159,167,179,180,208,209,210,211,224,226,228,229,231,233,234,235,236,238,240,241,243,245,246,253,254,255,256,257,258,260,272,275,277,278,279,281,282,283,284,285,287,288,289,291,292,293,304,307,313,334,335,341,344,346,347,363,364,368,369,370,372,373,378,379,380,381,382,383,384,385,386,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,429,430,431,432,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,98,98,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,98,-175,98,98,-175,98,-147,-175,-175,98,98,-135,98,-125,98,-168,-58,98,-175,-175,98,-175,-175,-175,-175,98,-175,-175,98,-175,-175,98,98,98,98,98,98,98,-55,98,-62,-142,-63,-67,-141,-68,-69,-70,-74,-139,-75,-79,-140,-80,-175,-53,-54,98,-175,-175,-175,98,98,98,-121,-175,98,-127,98,-170,98,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,98,98,-89,-175,-92,-163,]),'MEDIAN':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,115,120,121,130,155,156,157,159,167,179,180,208,209,210,211,224,226,228,229,231,233,234,235,236,238,240,241,243,245,246,253,254,255,256,257,258,260,272,275,277,278,279,281,282,283,284,285,287,288,289,291,292,293,304,307,313,334,335,341,344,346,347,363,364,368,369,370,372,373,378,379,380,381,382,383,384,385,386,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,429,430,431,432,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,99,99,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,99,-175,99,99,-175,99,-147,-175,-175,99,99,-135,99,-125,99,-168,-58,99,-175,-175,99,-175,-175,-175,-175,99,-175,-175,99,-175,-175,99,99,99,99,99,99,99,-55,99,-62,-142,-63,-67,-141,-68,-69,-70,-74,-139,-75,-79,-140,-80,-175,-53,-54,99,-175,-175,-175,99,99,99,-121,-175,99,-127,99,-170,99,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,99,99,-89,-175,-92,-163,]),'VARIANCE':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,115,120,121,130,155,156,157,159,167,179,180,208,209,210,211,224,226,228,229,231,233,234,235,236,238,240,241,243,245,246,253,254,255,256,257,258,260,272,275,277,278,279,281,282,283,284,285,287,288,289,291,292,293,304,307,313,334,335,341,344,346,347,363,364,368,369,370,372,373,378,379,380,381,382,383,384,385,386,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,429,430,431,432,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,100,100,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,100,-175,100,100,-175,100,-147,-175,-175,100,100,-135,100,-125,100,-168,-58,100,-175,-175,100,-175,-175,-175,-175,100,-175,-175,100,-175,-175,100,100,100,100,100,100,100,-55,100,-62,-142,-63,-67,-141,-68,-69,-70,-74,-139,-75,-79,-140,-80,-175,-53,-54,100,-175,-175,-175,100,100,100,-121,-175,100,-127,100,-170,100,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,100,100,-89,-175,-92,-163,]),'MAX':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,115,120,121,130,155,156,157,159,167,179,180,208,209,210,211,224,226,228,229,231,233,234,235,236,238,240,241,243,245,246,253,254,255,256,257,258,260,272,275,277,278,279,281,282,283,284,285,287,288,289,291,292,293,304,307,313,334,335,341,344,346,347,363,364,368,369,370,372,373,378,379,380,381,382,383,384,385,386,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,429,430,431,432,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,101,101,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,101,-175,101,101,-175,101,-147,-175,-175,101,101,-135,101,-125,101,-168,-58,101,-175,-175,101,-175,-175,-175,-175,101,-175,-175,101,-175,-175,101,101,101,101,101,101,101,-55,101,-62,-142,-63,-67,-141,-68,-69,-70,-74,-139,-75,-79,-140,-80,-175,-53,-54,101,-175,-175,-175,101,101,101,-121,-175,101,-127,101,-170,101,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,101,101,-89,-175,-92,-163,]),'MIN':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,115,120,121,130,155,156,157,159,167,179,180,208,209,210,211,224,226,228,229,231,233,234,235,236,238,240,241,243,245,246,253,254,255,256,257,258,260,272,275,277,278,279,281,282,283,284,285,287,288,289,291,292,293,304,307,313,334,335,341,344,346,347,363,364,368,369,370,372,373,378,379,380,381,382,383,384,385,386,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,429,430,431,432,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,102,102,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,102,-175,102,102,-175,102,-147,-175,-175,102,102,-135,102,-125,102,-168,-58,102,-175,-175,102,-175,-175,-175,-175,102,-175,-175,102,-175,-175,102,102,102,102,102,102,102,-55,102,-62,-142,-63,-67,-141,-68,-69,-70,-74,-139,-75,-79,-140,-80,-175,-53,-54,102,-175,-175,-175,102,102,102,-121,-175,102,-127,102,-170,102,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,102,102,-89,-175,-92,-163,]),'STADDES':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,115,120,121,130,155,156,157,159,167,179,180,208,209,210,211,224,226,228,229,231,233,234,235,236,238,240,241,243,245,246,253,254,255,256,257,258,260,272,275,277,278,279,281,282,283,284,285,287,288,289,291,292,293,304,307,313,334,335,341,344,346,347,363,364,368,369,370,372,373,378,379,380,381,382,383,384,385,386,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,429,430,431,432,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,103,103,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,103,-175,103,103,-175,103,-147,-175,-175,103,103,-135,103,-125,103,-168,-58,103,-175,-175,103,-175,-175,-175,-175,103,-175,-175,103,-175,-175,103,103,103,103,103,103,103,-55,103,-62,-142,-63,-67,-141,-68,-69,-70,-74,-139,-75,-79,-140,-80,-175,-53,-54,103,-175,-175,-175,103,103,103,-121,-175,103,-127,103,-170,103,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,103,103,-89,-175,-92,-163,]),'BOXPLOT':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,115,120,121,130,155,156,157,159,167,179,180,208,209,210,211,224,226,228,229,231,233,234,235,236,238,240,241,243,245,246,253,254,255,256,257,258,260,272,275,277,278,279,281,282,283,284,285,287,288,289,291,292,293,304,307,313,334,335,341,344,346,347,363,364,368,369,370,372,373,378,379,380,381,382,383,384,385,386,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,429,430,431,432,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,104,104,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,104,-175,104,104,-175,104,-147,-175,-175,104,104,-135,104,-125,104,-168,-58,104,-175,-175,104,-175,-175,-175,-175,104,-175,-175,104,-175,-175,104,104,104,104,104,104,104,-55,104,-62,-142,-63,-67,-141,-68,-69,-70,-74,-139,-75,-79,-140,-80,-175,-53,-54,104,-175,-175,-175,104,104,104,-121,-175,104,-127,104,-170,104,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,104,104,-89,-175,-92,-163,]),'LINREG':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,115,120,121,130,155,156,157,159,167,179,180,208,209,210,211,224,226,228,229,231,233,234,235,236,238,240,241,243,245,246,253,254,255,256,257,258,260,272,275,277,278,279,281,282,283,284,285,287,288,289,291,292,293,304,307,313,334,335,341,344,346,347,363,364,368,369,370,372,373,378,379,380,381,382,383,384,385,386,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,429,430,431,432,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,105,105,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,105,-175,105,105,-175,105,-147,-175,-175,105,105,-135,105,-125,105,-168,-58,105,-175,-175,105,-175,-175,-175,-175,105,-175,-175,105,-175,-175,105,105,105,105,105,105,105,-55,105,-62,-142,-63,-67,-141,-68,-69,-70,-74,-139,-75,-79,-140,-80,-175,-53,-54,105,-175,-175,-175,105,105,105,-121,-175,105,-127,105,-170,105,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,105,105,-89,-175,-92,-163,]),'RIGHT_CUR_BRACKET':([12,13,16,17,19,24,49,55,58,62,68,69,70,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,114,224,272,304,307,313,335,346,347,363,364,368,376,377,379,380,381,382,383,384,385,386,389,391,392,397,398,401,402,403,407,409,410,411,414,415,416,418,419,423,424,425,426,427,428,429,430,431,432,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,-175,113,-175,-8,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-7,-58,-55,-175,-53,-54,-175,-175,-175,-175,-121,-175,397,398,-12,-102,-103,-104,-105,-106,-107,-108,401,-175,-129,-175,-175,-175,-18,-130,-175,-90,-91,-159,-109,-175,-120,-88,-157,-33,-122,-175,-175,429,430,-89,-175,-92,-163,]),'DATAFRAME':([14,20,21,63,106,148,149,366,],[-175,32,-114,-175,-175,202,-115,202,]),'INT':([14,18,20,21,63,106,148,149,366,],[-175,28,28,-114,-175,-175,28,-115,28,]),'FLOAT':([14,18,20,21,63,106,148,149,366,],[-175,29,29,-114,-175,-175,29,-115,29,]),'CHAR':([14,18,20,21,63,106,148,149,366,],[-175,30,30,-114,-175,-175,30,-115,30,]),'VOID':([18,],[27,]),'RIGHT_PARENT':([21,63,88,89,90,91,92,93,94,95,106,117,126,127,128,129,131,132,133,134,135,136,137,138,148,149,157,158,160,161,162,163,164,165,166,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,197,198,199,208,209,212,213,214,216,217,218,219,220,221,225,227,230,232,237,239,242,244,247,248,249,250,251,267,268,269,274,276,280,286,290,294,295,296,297,298,299,300,301,302,305,309,310,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,336,337,340,342,350,351,352,353,362,365,367,368,371,379,380,381,382,383,384,385,386,387,388,390,391,392,393,394,395,399,402,403,404,412,413,414,417,],[-114,-175,-93,-94,-95,-96,-97,-98,-99,-100,-175,-175,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-101,-175,-115,-175,-13,-15,-175,-175,215,-175,-175,-175,-175,-146,-175,-145,-175,-143,-175,-144,-175,-132,-175,-133,-175,-134,-137,261,-36,-37,-175,-125,271,-150,-137,-56,-149,-57,273,-155,-175,-59,-61,-64,-66,-71,-73,-76,-78,294,-82,-138,-83,-84,308,-175,-20,315,-175,-175,-175,-175,-175,-175,-175,-175,-175,-175,-175,-175,-175,-175,-175,-126,-175,-175,-175,-175,-81,-136,354,-151,355,-152,356,357,358,359,360,361,-153,-175,-119,-19,-22,-60,-65,-72,-77,-175,-38,-42,-175,-175,-12,-102,-103,-104,-105,-106,-107,-108,400,-154,-41,-175,-129,-175,-14,-173,-175,-18,-130,-175,422,-162,-109,-21,]),'LEFT_CUR_BRACKET':([23,36,37,261,314,315,408,420,421,422,],[-175,49,-112,304,346,347,-175,425,-156,426,]),'ARROW':([25,26,27,28,29,30,31,32,33,39,40,41,42,43,45,46,48,151,200,201,202,204,205,263,],[38,-34,-175,-175,-175,-175,44,-175,-175,-35,-116,-9,-10,-11,-24,-25,-27,-175,262,-39,-175,-26,-166,-40,]),'LEFT_SQR_BRACKET':([28,29,30,33,40,41,42,43,82,117,118,137,162,187,214,],[-175,-175,-175,47,-116,-9,-10,-11,-175,159,-137,-175,-175,-137,-137,]),'CTEI':([47,53,54,96,111,115,120,121,130,155,156,157,159,167,179,180,208,209,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,253,254,255,256,257,258,260,275,277,278,279,281,282,283,284,285,287,288,289,291,292,293,334,341,344,369,370,372,373,378,],[-175,61,-164,131,152,-175,131,131,-175,131,-147,-175,-175,131,131,-135,131,-125,131,-168,131,-175,-175,131,-175,-175,-175,-175,131,-175,-175,131,-175,-175,131,131,131,131,131,131,131,131,-62,-142,-63,-67,-141,-68,-69,-70,-74,-139,-75,-79,-140,-80,131,-175,-175,131,-127,131,-170,131,]),'LEFT_PARENT':([50,56,57,82,83,84,85,86,87,96,97,98,99,100,101,102,103,104,105,115,116,118,120,121,122,123,130,137,155,156,157,159,167,179,180,187,208,209,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,253,254,255,256,257,258,260,275,277,278,279,281,282,283,284,285,287,288,289,291,292,293,334,341,344,369,370,372,373,378,],[-175,63,-118,-175,119,120,121,-175,124,130,139,140,141,142,143,144,145,146,147,-175,157,-124,130,130,167,-158,-175,-175,130,-147,-175,-175,130,130,-135,-124,130,-125,130,-168,130,-175,-175,130,-175,-175,-175,-175,130,-175,-175,130,-175,-175,130,130,130,130,130,130,130,130,-62,-142,-63,-67,-141,-68,-69,-70,-74,-139,-75,-79,-140,-80,130,-175,-175,130,-127,130,-170,130,]),'COMMA':([52,59,60,61,64,65,66,67,88,89,90,91,92,93,94,95,117,126,127,128,129,131,132,133,134,135,136,137,138,150,158,160,162,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,203,214,225,227,230,232,237,239,242,244,248,249,250,251,264,268,270,276,280,286,290,294,303,305,309,310,311,312,316,317,318,319,320,321,322,336,337,348,349,350,351,352,353,368,371,379,380,381,382,383,384,385,386,391,392,393,394,395,402,403,404,414,],[-175,-175,-117,-175,108,-167,111,-165,-93,-94,-95,-96,-97,-98,-99,-100,-175,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-101,-175,-13,-15,-175,-175,-146,-175,-145,-175,-143,-175,-144,-175,-132,-175,-133,-175,-134,-137,252,253,254,255,256,257,258,259,260,-175,-137,-59,-61,-64,-66,-71,-73,-76,-78,-82,-138,-83,-84,108,-175,-175,-175,-175,-175,-175,-175,334,-175,341,-126,344,-169,-175,-175,-175,-175,-175,-81,-136,366,-119,378,-161,-60,-65,-72,-77,-175,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-175,-14,-173,-18,-130,341,-109,]),'RIGHT_SQR_BRACKET':([61,66,67,88,89,90,91,92,93,94,95,110,112,117,126,127,128,129,131,132,133,134,135,136,137,138,152,158,160,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,206,225,227,230,232,237,239,242,244,248,249,250,251,270,276,280,286,290,294,311,312,317,318,319,320,321,322,343,345,350,351,352,353,368,371,374,375,379,380,381,382,383,384,385,386,391,392,394,395,396,402,403,405,406,414,],[-175,-175,-165,-93,-94,-95,-96,-97,-98,-99,-100,151,-29,-175,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-101,-175,-13,-15,-175,-146,-175,-145,-175,-143,-175,-144,-175,-132,-175,-133,-175,-134,-137,-28,-59,-61,-64,-66,-71,-73,-76,-78,-82,-138,-83,-84,-175,-175,-175,-175,-175,-175,-175,-169,-175,-175,-175,-175,-81,-136,371,-175,-60,-65,-72,-77,-175,-175,-171,-17,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-14,-173,-175,-18,-130,-16,-172,-109,]),'ASIGN':([81,82,117,118,158,160,162,168,214,222,223,371,394,395,],[115,-175,-175,-137,-13,-15,-175,-175,-137,275,-160,-175,-14,-173,]),'MULT':([88,89,90,91,92,93,94,95,117,129,131,132,133,134,135,136,137,138,158,160,177,178,181,182,183,184,185,186,187,248,249,250,251,290,294,320,321,322,368,371,379,380,381,382,383,384,385,386,391,392,394,395,402,403,414,],[-93,-94,-95,-96,-97,-98,-99,-100,-175,-175,-175,-175,-175,-85,-86,-87,-175,-101,-13,-15,245,-144,-175,-132,-175,-133,-175,-134,-137,-82,-138,-83,-84,-175,-175,245,-81,-136,-175,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-14,-173,-18,-130,-109,]),'DIV':([88,89,90,91,92,93,94,95,117,129,131,132,133,134,135,136,137,138,158,160,177,178,181,182,183,184,185,186,187,248,249,250,251,290,294,320,321,322,368,371,379,380,381,382,383,384,385,386,391,392,394,395,402,403,414,],[-93,-94,-95,-96,-97,-98,-99,-100,-175,-175,-175,-175,-175,-85,-86,-87,-175,-101,-13,-15,246,-144,-175,-132,-175,-133,-175,-134,-137,-82,-138,-83,-84,-175,-175,246,-81,-136,-175,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-14,-173,-18,-130,-109,]),'PLUS':([88,89,90,91,92,93,94,95,117,128,129,131,132,133,134,135,136,137,138,158,160,175,176,177,178,181,182,183,184,185,186,187,242,244,248,249,250,251,286,290,294,319,320,321,322,353,368,371,379,380,381,382,383,384,385,386,391,392,394,395,402,403,414,],[-93,-94,-95,-96,-97,-98,-99,-100,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-101,-13,-15,240,-143,-175,-144,-175,-132,-175,-133,-175,-134,-137,-76,-78,-82,-138,-83,-84,-175,-175,-175,240,-175,-81,-136,-77,-175,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-14,-173,-18,-130,-109,]),'MINUS':([88,89,90,91,92,93,94,95,117,128,129,131,132,133,134,135,136,137,138,158,160,175,176,177,178,181,182,183,184,185,186,187,242,244,248,249,250,251,286,290,294,319,320,321,322,353,368,371,379,380,381,382,383,384,385,386,391,392,394,395,402,403,414,],[-93,-94,-95,-96,-97,-98,-99,-100,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-101,-13,-15,241,-143,-175,-144,-175,-132,-175,-133,-175,-134,-137,-76,-78,-82,-138,-83,-84,-175,-175,-175,241,-175,-81,-136,-77,-175,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-14,-173,-18,-130,-109,]),'LESS_THAN':([88,89,90,91,92,93,94,95,117,127,128,129,131,132,133,134,135,136,137,138,158,160,173,174,175,176,177,178,181,182,183,184,185,186,187,237,239,242,244,248,249,250,251,280,286,290,294,318,319,320,321,322,352,353,368,371,379,380,381,382,383,384,385,386,391,392,394,395,402,403,414,],[-93,-94,-95,-96,-97,-98,-99,-100,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-101,-13,-15,233,-145,-175,-143,-175,-144,-175,-132,-175,-133,-175,-134,-137,-71,-73,-76,-78,-82,-138,-83,-84,-175,-175,-175,-175,233,-175,-175,-81,-136,-72,-77,-175,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-14,-173,-18,-130,-109,]),'GREATER_THAN':([88,89,90,91,92,93,94,95,117,127,128,129,131,132,133,134,135,136,137,138,158,160,173,174,175,176,177,178,181,182,183,184,185,186,187,237,239,242,244,248,249,250,251,280,286,290,294,318,319,320,321,322,352,353,368,371,379,380,381,382,383,384,385,386,391,392,394,395,402,403,414,],[-93,-94,-95,-96,-97,-98,-99,-100,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-101,-13,-15,234,-145,-175,-143,-175,-144,-175,-132,-175,-133,-175,-134,-137,-71,-73,-76,-78,-82,-138,-83,-84,-175,-175,-175,-175,234,-175,-175,-81,-136,-72,-77,-175,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-14,-173,-18,-130,-109,]),'EQUALS':([88,89,90,91,92,93,94,95,117,127,128,129,131,132,133,134,135,136,137,138,158,160,173,174,175,176,177,178,181,182,183,184,185,186,187,237,239,242,244,248,249,250,251,280,286,290,294,318,319,320,321,322,352,353,368,371,379,380,381,382,383,384,385,386,391,392,394,395,402,403,414,],[-93,-94,-95,-96,-97,-98,-99,-100,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-101,-13,-15,235,-145,-175,-143,-175,-144,-175,-132,-175,-133,-175,-134,-137,-71,-73,-76,-78,-82,-138,-83,-84,-175,-175,-175,-175,235,-175,-175,-81,-136,-72,-77,-175,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-14,-173,-18,-130,-109,]),'NOTEQUALS':([88,89,90,91,92,93,94,95,117,127,128,129,131,132,133,134,135,136,137,138,158,160,173,174,175,176,177,178,181,182,183,184,185,186,187,237,239,242,244,248,249,250,251,280,286,290,294,318,319,320,321,322,352,353,368,371,379,380,381,382,383,384,385,386,391,392,394,395,402,403,414,],[-93,-94,-95,-96,-97,-98,-99,-100,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-101,-13,-15,236,-145,-175,-143,-175,-144,-175,-132,-175,-133,-175,-134,-137,-71,-73,-76,-78,-82,-138,-83,-84,-175,-175,-175,-175,236,-175,-175,-81,-136,-72,-77,-175,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-14,-173,-18,-130,-109,]),'AND':([88,89,90,91,92,93,94,95,117,126,127,128,129,131,132,133,134,135,136,137,138,158,160,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,230,232,237,239,242,244,248,249,250,251,276,280,286,290,294,317,318,319,320,321,322,351,352,353,368,371,379,380,381,382,383,384,385,386,391,392,394,395,402,403,414,],[-93,-94,-95,-96,-97,-98,-99,-100,-175,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-101,-13,-15,228,-146,-175,-145,-175,-143,-175,-144,-175,-132,-175,-133,-175,-134,-137,-64,-66,-71,-73,-76,-78,-82,-138,-83,-84,-175,-175,-175,-175,-175,228,-175,-175,-175,-81,-136,-65,-72,-77,-175,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-14,-173,-18,-130,-109,]),'OR':([88,89,90,91,92,93,94,95,117,126,127,128,129,131,132,133,134,135,136,137,138,158,160,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,230,232,237,239,242,244,248,249,250,251,276,280,286,290,294,317,318,319,320,321,322,351,352,353,368,371,379,380,381,382,383,384,385,386,391,392,394,395,402,403,414,],[-93,-94,-95,-96,-97,-98,-99,-100,-175,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-101,-13,-15,229,-146,-175,-145,-175,-143,-175,-144,-175,-132,-175,-133,-175,-134,-137,-64,-66,-71,-73,-76,-78,-82,-138,-83,-84,-175,-175,-175,-175,-175,229,-175,-175,-175,-81,-136,-65,-72,-77,-175,-175,-12,-102,-103,-104,-105,-106,-107,-108,-175,-129,-14,-173,-18,-130,-109,]),'CTEF':([96,115,120,121,130,155,156,157,159,167,179,180,208,209,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,253,254,255,256,257,258,260,275,277,278,279,281,282,283,284,285,287,288,289,291,292,293,334,341,344,369,370,372,373,378,],[132,-175,132,132,-175,132,-147,-175,-175,132,132,-135,132,-125,132,-168,132,-175,-175,132,-175,-175,-175,-175,132,-175,-175,132,-175,-175,132,132,132,132,132,132,132,132,-62,-142,-63,-67,-141,-68,-69,-70,-74,-139,-75,-79,-140,-80,132,-175,-175,132,-127,132,-170,132,]),'CTEC':([96,115,120,121,130,155,156,157,159,167,179,180,208,209,210,211,226,228,229,231,233,234,235,236,238,240,241,243,245,246,253,254,255,256,257,258,260,275,277,278,279,281,282,283,284,285,287,288,289,291,292,293,334,341,344,369,370,372,373,378,],[133,-175,133,133,-175,133,-147,-175,-175,133,133,-135,133,-125,133,-168,133,-175,-175,133,-175,-175,-175,-175,133,-175,-175,133,-175,-175,133,133,133,133,133,133,133,133,-62,-142,-63,-67,-141,-68,-69,-70,-74,-139,-75,-79,-140,-80,133,-175,-175,133,-127,133,-170,133,]),'LETRERO':([120,252,259,],[165,295,302,]),'IF_TRUE':([273,],[314,]),'IF_FALSE':([397,],[408,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pnCrearDirFunc':([2,],[3,]),'empty':([2,5,6,10,11,12,14,16,22,23,27,28,29,30,32,33,47,49,50,52,55,59,61,62,63,64,66,69,82,86,106,113,115,117,125,126,127,128,129,130,131,132,133,137,148,150,151,152,157,159,161,162,164,165,166,168,171,173,175,177,181,183,185,202,203,207,208,221,228,229,233,234,235,236,240,241,245,246,264,268,270,276,280,286,290,294,295,296,297,298,299,300,301,302,304,305,308,309,311,316,317,318,319,320,335,336,341,344,345,346,347,362,363,368,371,391,393,396,397,398,399,401,404,407,408,415,425,426,430,],[4,7,9,13,17,13,21,17,35,37,40,40,40,40,40,48,54,13,57,60,17,65,67,70,21,109,112,70,118,123,149,154,156,160,170,172,174,176,178,180,182,184,186,187,199,60,205,67,209,211,213,214,217,217,220,223,227,232,239,244,249,249,249,40,65,266,269,220,278,278,282,282,282,282,288,288,292,292,109,310,312,172,174,176,178,322,324,326,326,326,326,326,326,333,13,337,339,342,345,349,227,232,239,244,364,367,370,373,374,70,70,388,70,392,395,403,310,406,409,411,413,416,342,419,421,424,70,70,432,]),'pnScriptFuncDir':([5,],[6,]),'pnCuadGotoMain':([6,],[8,]),'varp':([10,12,49,304,],[11,19,55,335,]),'var':([10,12,49,304,],[12,12,12,12,]),'funcp':([11,16,55,],[15,24,62,]),'func':([11,16,55,],[16,16,16,]),'pnCheckTablaVar':([14,63,],[20,106,]),'bloque':([15,],[22,]),'returnval':([18,],[25,]),'tipo_simp':([18,20,148,366,],[26,33,201,201,]),'v':([20,],[31,]),'pnCuadEND':([22,],[34,]),'pnDirMain':([23,],[36,]),'pnSaveTypeVar':([27,28,29,30,32,202,],[39,41,42,43,45,263,]),'vp':([33,],[46,]),'idp':([44,],[51,]),'pnArrCreateNode':([47,],[53,]),'pnAddFuncinDir':([50,],[56,]),'pnCheckNameTablaVar':([52,150,],[59,203,]),'pnArrAddDim':([59,203,],[64,264,]),'pnArrSaveLim':([61,152,],[66,206,]),'estatutop':([62,69,346,347,363,425,426,],[68,114,376,377,389,427,428,]),'estatuto':([62,69,346,347,363,425,426,],[69,69,69,69,69,69,69,]),'asign':([62,69,346,347,363,425,426,],[71,71,71,71,71,71,71,]),'llamada':([62,69,96,120,121,155,167,179,208,210,226,231,238,243,253,254,255,256,257,258,260,275,334,346,347,363,369,372,378,425,426,],[72,72,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,135,72,72,72,135,135,135,72,72,]),'lee':([62,69,346,347,363,425,426,],[73,73,73,73,73,73,73,]),'escribe':([62,69,346,347,363,425,426,],[74,74,74,74,74,74,74,]),'condicion':([62,69,346,347,363,425,426,],[75,75,75,75,75,75,75,]),'ciclow':([62,69,346,347,363,425,426,],[76,76,76,76,76,76,76,]),'ciclof':([62,69,346,347,363,425,426,],[77,77,77,77,77,77,77,]),'funcesp':([62,69,96,120,121,155,167,179,208,210,226,231,238,243,253,254,255,256,257,258,260,275,334,346,347,363,369,372,378,425,426,],[78,78,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,136,78,78,78,136,136,136,78,78,]),'return':([62,69,346,347,363,425,426,],[79,79,79,79,79,79,79,]),'copy':([62,69,96,120,121,155,167,179,208,210,226,231,238,243,253,254,255,256,257,258,260,275,334,346,347,363,369,372,378,425,426,],[80,80,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,138,80,80,80,138,138,138,80,80,]),'variable':([62,69,96,119,120,121,124,139,140,141,142,143,144,145,146,147,155,167,179,208,210,226,231,238,243,253,254,255,256,257,258,260,275,334,346,347,363,369,372,378,425,426,],[81,81,134,161,134,134,168,188,189,190,191,192,193,194,195,196,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,134,81,81,81,134,134,134,81,81,]),'mean':([62,69,96,120,121,155,167,179,208,210,226,231,238,243,253,254,255,256,257,258,260,275,334,346,347,363,369,372,378,425,426,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'median':([62,69,96,120,121,155,167,179,208,210,226,231,238,243,253,254,255,256,257,258,260,275,334,346,347,363,369,372,378,425,426,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'variance':([62,69,96,120,121,155,167,179,208,210,226,231,238,243,253,254,255,256,257,258,260,275,334,346,347,363,369,372,378,425,426,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'max':([62,69,96,120,121,155,167,179,208,210,226,231,238,243,253,254,255,256,257,258,260,275,334,346,347,363,369,372,378,425,426,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'min':([62,69,96,120,121,155,167,179,208,210,226,231,238,243,253,254,255,256,257,258,260,275,334,346,347,363,369,372,378,425,426,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'staddes':([62,69,96,120,121,155,167,179,208,210,226,231,238,243,253,254,255,256,257,258,260,275,334,346,347,363,369,372,378,425,426,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'boxplot':([62,69,96,120,121,155,167,179,208,210,226,231,238,243,253,254,255,256,257,258,260,275,334,346,347,363,369,372,378,425,426,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'linreg':([62,69,96,120,121,155,167,179,208,210,226,231,238,243,253,254,255,256,257,258,260,275,334,346,347,363,369,372,378,425,426,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'idpp':([64,264,],[107,306,]),'vpp':([66,],[110,]),'pnCheckFunc':([82,137,],[116,116,]),'pnSaveOperandos':([82,137,162,],[117,117,117,]),'pnSaveWhile':([86,],[122,]),'exp':([96,120,121,155,167,179,208,210,253,254,255,256,257,258,260,275,334,369,372,378,],[125,164,166,207,221,247,268,270,296,297,298,299,300,301,303,316,362,393,396,399,]),'exprel':([96,120,121,155,167,179,208,210,226,253,254,255,256,257,258,260,275,334,369,372,378,],[126,126,126,126,126,126,126,126,276,126,126,126,126,126,126,126,126,126,126,126,126,]),'e':([96,120,121,155,167,179,208,210,226,231,253,254,255,256,257,258,260,275,334,369,372,378,],[127,127,127,127,127,127,127,127,127,280,127,127,127,127,127,127,127,127,127,127,127,127,]),'t':([96,120,121,155,167,179,208,210,226,231,238,253,254,255,256,257,258,260,275,334,369,372,378,],[128,128,128,128,128,128,128,128,128,128,286,128,128,128,128,128,128,128,128,128,128,128,128,]),'f':([96,120,121,155,167,179,208,210,226,231,238,243,253,254,255,256,257,258,260,275,334,369,372,378,],[129,129,129,129,129,129,129,129,129,129,129,290,129,129,129,129,129,129,129,129,129,129,129,129,]),'pnCrearListaParam':([106,],[148,]),'pnEndScript':([113,],[153,]),'pnSaveOperadorAsign':([115,],[155,]),'indexp':([117,],[158,]),'escribep':([120,],[163,]),'pnCuadRet':([125,],[169,]),'pnCuadOplog':([126,276,],[171,317,]),'pnCuadOpRelacional':([127,280,],[173,318,]),'pnCuadPlMi':([128,286,],[175,319,]),'pnCuadMuDi':([129,290,],[177,320,]),'pnSaveFondoFalso':([130,],[179,]),'pnSaveCteI':([131,],[181,]),'pnSaveCteF':([132,],[183,]),'pnSaveCteC':([133,],[185,]),'param':([148,],[197,]),'paramlist':([148,366,],[198,390,]),'tipoparam':([148,366,],[200,200,]),'pnArrCuadriplificar':([151,],[204,]),'pnGenerateEra':([157,],[208,]),'pnArrIni':([159,],[210,]),'pnCuadLee':([161,],[212,]),'pnCuadEscribe':([164,165,],[216,218,]),'pnCheckBoolIf':([166,221,],[219,274,]),'pnSaveForID':([168,],[222,]),'logic':([171,317,],[225,350,]),'logicsig':([171,317,],[226,226,]),'relacionalp':([173,318,],[230,351,]),'relsig':([173,318,],[231,231,]),'tp':([175,319,],[237,352,]),'tsig':([175,319,],[238,238,]),'fp':([177,320,],[242,353,]),'fsig':([177,320,],[243,243,]),'pnSaveOperandoConstante':([181,183,185,],[248,250,251,]),'pnCuadAsign':([207,],[265,]),'expp':([208,],[267,]),'pnSaveOperadorLog':([228,229,],[277,279,]),'pnSaveOperadorRel':([233,234,235,236,],[281,283,284,285,]),'pnSaveOperadorPlMi':([240,241,],[287,289,]),'pnSaveOperadorMuDi':([245,246,],[291,293,]),'pnCuadParametro':([268,393,],[309,404,]),'pnArrVerify':([270,],[311,]),'pnPopFondoFalso':([294,],[321,]),'pnCuadCopy':([295,],[323,]),'pnCuadFuncEsp':([296,297,298,299,300,301,],[325,327,328,329,330,331,]),'pnCuadBoxplot':([302,],[332,]),'pnAddParametersTablaVar':([305,],[336,]),'pnCheckNoParam':([308,],[338,]),'exppp':([309,404,],[340,417,]),'indexpp':([311,],[343,]),'pnCreateVControl':([316,],[348,]),'pnDirecIniFunc':([335,],[363,]),'paramlistp':([336,],[365,]),'pnUpdateK':([341,],[369,]),'pnArrAccIncDim':([344,],[372,]),'pnArrCalc':([345,],[375,]),'pnCuadLinReg':([362,],[387,]),'pnCuadGoSub':([368,],[391,]),'pnArrFFPop':([371,],[394,]),'pnHandleReturnValue':([391,],[402,]),'pnMatCalc':([396,],[405,]),'falsop':([397,],[407,]),'pnEndWhile':([398,],[410,]),'pnCompControlFinal':([399,],[412,]),'pnCountVarsINTOResources':([401,],[415,]),'pnEndIf':([407,],[418,]),'pnElseIf':([408,],[420,]),'pnCloseCurrentFunction':([415,],[423,]),'pnEndFor':([430,],[431,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND','programa',10,'p_programa','lexerParser.py',195),
  ('varp -> var varp','varp',2,'p_programa','lexerParser.py',196),
  ('varp -> empty','varp',1,'p_programa','lexerParser.py',197),
  ('funcp -> func funcp','funcp',2,'p_programa','lexerParser.py',198),
  ('funcp -> empty','funcp',1,'p_programa','lexerParser.py',199),
  ('bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript','bloque',8,'p_bloque','lexerParser.py',205),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_bloque','lexerParser.py',206),
  ('estatutop -> empty','estatutop',1,'p_bloque','lexerParser.py',207),
  ('tipo_simp -> INT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexerParser.py',213),
  ('tipo_simp -> FLOAT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexerParser.py',214),
  ('tipo_simp -> CHAR pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexerParser.py',215),
  ('copy -> READ_FILE LEFT_PARENT variable COMMA LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON','copy',8,'p_copy','lexerParser.py',221),
  ('variable -> ID pnSaveOperandos indexp','variable',3,'p_variable','lexerParser.py',227),
  ('indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop','indexp',7,'p_variable','lexerParser.py',228),
  ('indexp -> empty','indexp',1,'p_variable','lexerParser.py',229),
  ('indexpp -> COMMA pnArrAccIncDim exp pnMatCalc','indexpp',4,'p_variable','lexerParser.py',230),
  ('indexpp -> empty pnArrCalc','indexpp',2,'p_variable','lexerParser.py',231),
  ('llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue','llamada',10,'p_llamada','lexerParser.py',237),
  ('expp -> exp pnCuadParametro exppp','expp',3,'p_llamada','lexerParser.py',238),
  ('expp -> empty','expp',1,'p_llamada','lexerParser.py',239),
  ('exppp -> COMMA pnUpdateK exp pnCuadParametro exppp','exppp',5,'p_llamada','lexerParser.py',240),
  ('exppp -> empty','exppp',1,'p_llamada','lexerParser.py',241),
  ('var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON','var',6,'p_var','lexerParser.py',247),
  ('v -> DATAFRAME pnSaveTypeVar','v',2,'p_var','lexerParser.py',248),
  ('v -> tipo_simp vp','v',2,'p_var','lexerParser.py',249),
  ('vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim vpp RIGHT_SQR_BRACKET pnArrCuadriplificar','vp',7,'p_var','lexerParser.py',250),
  ('vp -> empty','vp',1,'p_var','lexerParser.py',251),
  ('vpp -> COMMA CTEI pnArrSaveLim','vpp',3,'p_var','lexerParser.py',252),
  ('vpp -> empty','vpp',1,'p_var','lexerParser.py',253),
  ('idp -> ID pnCheckNameTablaVar pnArrAddDim idpp','idp',4,'p_var','lexerParser.py',254),
  ('idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim idpp','idpp',5,'p_var','lexerParser.py',255),
  ('idpp -> empty','idpp',1,'p_var','lexerParser.py',256),
  ('func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction','func',17,'p_func','lexerParser.py',262),
  ('returnval -> tipo_simp','returnval',1,'p_func','lexerParser.py',263),
  ('returnval -> VOID pnSaveTypeVar','returnval',2,'p_func','lexerParser.py',264),
  ('param -> paramlist','param',1,'p_param','lexerParser.py',270),
  ('param -> empty','param',1,'p_param','lexerParser.py',271),
  ('paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp','paramlist',5,'p_param','lexerParser.py',272),
  ('tipoparam -> tipo_simp','tipoparam',1,'p_param','lexerParser.py',273),
  ('tipoparam -> DATAFRAME pnSaveTypeVar','tipoparam',2,'p_param','lexerParser.py',274),
  ('paramlistp -> COMMA paramlist','paramlistp',2,'p_param','lexerParser.py',275),
  ('paramlistp -> empty','paramlistp',1,'p_param','lexerParser.py',276),
  ('estatuto -> asign','estatuto',1,'p_estatuto','lexerParser.py',282),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','lexerParser.py',283),
  ('estatuto -> lee','estatuto',1,'p_estatuto','lexerParser.py',284),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','lexerParser.py',285),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexerParser.py',286),
  ('estatuto -> ciclow','estatuto',1,'p_estatuto','lexerParser.py',287),
  ('estatuto -> ciclof','estatuto',1,'p_estatuto','lexerParser.py',288),
  ('estatuto -> funcesp','estatuto',1,'p_estatuto','lexerParser.py',289),
  ('estatuto -> return','estatuto',1,'p_estatuto','lexerParser.py',290),
  ('estatuto -> copy','estatuto',1,'p_estatuto','lexerParser.py',291),
  ('asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON','asign',6,'p_asign','lexerParser.py',297),
  ('lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON','lee',6,'p_lee','lexerParser.py',303),
  ('escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON','escribe',5,'p_escribe','lexerParser.py',309),
  ('escribep -> exp pnCuadEscribe','escribep',2,'p_escribe','lexerParser.py',310),
  ('escribep -> LETRERO pnCuadEscribe','escribep',2,'p_escribe','lexerParser.py',311),
  ('return -> RETURNS exp pnCuadRet SEMICOLON','return',4,'p_return','lexerParser.py',317),
  ('exp -> exprel pnCuadOplog logic','exp',3,'p_exp','lexerParser.py',323),
  ('logic -> logicsig exprel pnCuadOplog logic','logic',4,'p_exp','lexerParser.py',324),
  ('logic -> empty','logic',1,'p_exp','lexerParser.py',325),
  ('logicsig -> AND pnSaveOperadorLog','logicsig',2,'p_exp','lexerParser.py',326),
  ('logicsig -> OR pnSaveOperadorLog','logicsig',2,'p_exp','lexerParser.py',327),
  ('exprel -> e pnCuadOpRelacional relacionalp','exprel',3,'p_exprel','lexerParser.py',333),
  ('relacionalp -> relsig e pnCuadOpRelacional relacionalp','relacionalp',4,'p_exprel','lexerParser.py',334),
  ('relacionalp -> empty','relacionalp',1,'p_exprel','lexerParser.py',335),
  ('relsig -> LESS_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',336),
  ('relsig -> GREATER_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',337),
  ('relsig -> EQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',338),
  ('relsig -> NOTEQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',339),
  ('e -> t pnCuadPlMi tp','e',3,'p_e','lexerParser.py',345),
  ('tp -> tsig t pnCuadPlMi tp','tp',4,'p_e','lexerParser.py',346),
  ('tp -> empty','tp',1,'p_e','lexerParser.py',347),
  ('tsig -> PLUS pnSaveOperadorPlMi','tsig',2,'p_e','lexerParser.py',348),
  ('tsig -> MINUS pnSaveOperadorPlMi','tsig',2,'p_e','lexerParser.py',349),
  ('t -> f pnCuadMuDi fp','t',3,'p_t','lexerParser.py',355),
  ('fp -> fsig f pnCuadMuDi fp','fp',4,'p_t','lexerParser.py',356),
  ('fp -> empty','fp',1,'p_t','lexerParser.py',357),
  ('fsig -> MULT pnSaveOperadorMuDi','fsig',2,'p_t','lexerParser.py',358),
  ('fsig -> DIV pnSaveOperadorMuDi','fsig',2,'p_t','lexerParser.py',359),
  ('f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso','f',5,'p_f','lexerParser.py',365),
  ('f -> CTEI pnSaveCteI pnSaveOperandoConstante','f',3,'p_f','lexerParser.py',366),
  ('f -> CTEF pnSaveCteF pnSaveOperandoConstante','f',3,'p_f','lexerParser.py',367),
  ('f -> CTEC pnSaveCteC pnSaveOperandoConstante','f',3,'p_f','lexerParser.py',368),
  ('f -> variable','f',1,'p_f','lexerParser.py',369),
  ('f -> llamada','f',1,'p_f','lexerParser.py',370),
  ('f -> funcesp','f',1,'p_f','lexerParser.py',371),
  ('condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf','condicion',11,'p_condicion','lexerParser.py',377),
  ('falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','falsop',5,'p_condicion','lexerParser.py',378),
  ('falsop -> empty','falsop',1,'p_condicion','lexerParser.py',379),
  ('ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile','ciclow',10,'p_ciclow','lexerParser.py',385),
  ('ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor','ciclof',15,'p_ciclof','lexerParser.py',391),
  ('funcesp -> mean','funcesp',1,'p_funcesp','lexerParser.py',397),
  ('funcesp -> median','funcesp',1,'p_funcesp','lexerParser.py',398),
  ('funcesp -> variance','funcesp',1,'p_funcesp','lexerParser.py',399),
  ('funcesp -> max','funcesp',1,'p_funcesp','lexerParser.py',400),
  ('funcesp -> min','funcesp',1,'p_funcesp','lexerParser.py',401),
  ('funcesp -> staddes','funcesp',1,'p_funcesp','lexerParser.py',402),
  ('funcesp -> boxplot','funcesp',1,'p_funcesp','lexerParser.py',403),
  ('funcesp -> linreg','funcesp',1,'p_funcesp','lexerParser.py',404),
  ('funcesp -> copy','funcesp',1,'p_funcesp','lexerParser.py',405),
  ('mean -> MEAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mean',8,'p_mean','lexerParser.py',411),
  ('median -> MEDIAN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON','median',8,'p_median','lexerParser.py',417),
  ('variance -> VARIANCE LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON','variance',8,'p_variance','lexerParser.py',423),
  ('max -> MAX LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON','max',8,'p_max','lexerParser.py',429),
  ('min -> MIN LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON','min',8,'p_min','lexerParser.py',435),
  ('staddes -> STADDES LEFT_PARENT variable COMMA exp pnCuadFuncEsp RIGHT_PARENT SEMICOLON','staddes',8,'p_staddes','lexerParser.py',441),
  ('boxplot -> BOXPLOT LEFT_PARENT variable COMMA LETRERO pnCuadBoxplot RIGHT_PARENT SEMICOLON','boxplot',8,'p_boxplot','lexerParser.py',447),
  ('linreg -> LINREG LEFT_PARENT variable COMMA exp COMMA exp pnCuadLinReg RIGHT_PARENT SEMICOLON','linreg',10,'p_linreg','lexerParser.py',453),
  ('pnCrearDirFunc -> empty','pnCrearDirFunc',1,'p_pnCrearDirFunc','lexerParser.py',463),
  ('pnCuadGotoMain -> empty','pnCuadGotoMain',1,'p_pnCuadGotoMain','lexerParser.py',473),
  ('pnDirMain -> empty','pnDirMain',1,'p_pnDirMain','lexerParser.py',482),
  ('pnScriptFuncDir -> empty','pnScriptFuncDir',1,'p_pnScriptFuncDir','lexerParser.py',490),
  ('pnCheckTablaVar -> empty','pnCheckTablaVar',1,'p_pnCheckTablaVar','lexerParser.py',499),
  ('pnCrearListaParam -> empty','pnCrearListaParam',1,'p_pnCrearListaParam','lexerParser.py',507),
  ('pnSaveTypeVar -> empty','pnSaveTypeVar',1,'p_pnSaveTypeVar','lexerParser.py',514),
  ('pnCheckNameTablaVar -> empty','pnCheckNameTablaVar',1,'p_pnCheckNameTablaVar','lexerParser.py',524),
  ('pnAddFuncinDir -> empty','pnAddFuncinDir',1,'p_pnAddFuncinDir','lexerParser.py',573),
  ('pnAddParametersTablaVar -> empty','pnAddParametersTablaVar',1,'p_pnAddParametersTablaVar','lexerParser.py',605),
  ('pnCountVarsINTOResources -> empty','pnCountVarsINTOResources',1,'p_pnCountVarsINTOResources','lexerParser.py',635),
  ('pnDirecIniFunc -> empty','pnDirecIniFunc',1,'p_pnDirecIniFunc','lexerParser.py',664),
  ('pnCloseCurrentFunction -> empty','pnCloseCurrentFunction',1,'p_pnCloseCurrentFunction','lexerParser.py',671),
  ('pnEndScript -> empty','pnEndScript',1,'p_pnEndScript','lexerParser.py',694),
  ('pnCheckFunc -> empty','pnCheckFunc',1,'p_pnCheckFunc','lexerParser.py',715),
  ('pnGenerateEra -> empty','pnGenerateEra',1,'p_pnGenerateEra','lexerParser.py',729),
  ('pnCuadParametro -> empty','pnCuadParametro',1,'p_pnCuadParametro','lexerParser.py',761),
  ('pnUpdateK -> empty','pnUpdateK',1,'p_pnUpdateK','lexerParser.py',790),
  ('pnCheckNoParam -> empty','pnCheckNoParam',1,'p_pnCheckNoParam','lexerParser.py',799),
  ('pnCuadGoSub -> empty','pnCuadGoSub',1,'p_pnCuadGoSub','lexerParser.py',816),
  ('pnHandleReturnValue -> empty','pnHandleReturnValue',1,'p_pnHandleReturnValue','lexerParser.py',828),
  ('pnCuadRet -> empty','pnCuadRet',1,'p_pnCuadRet','lexerParser.py',857),
  ('pnSaveCteI -> empty','pnSaveCteI',1,'p_pnSaveCteI','lexerParser.py',890),
  ('pnSaveCteF -> empty','pnSaveCteF',1,'p_pnSaveCteF','lexerParser.py',902),
  ('pnSaveCteC -> empty','pnSaveCteC',1,'p_pnSaveCteC','lexerParser.py',913),
  ('pnSaveFondoFalso -> empty','pnSaveFondoFalso',1,'p_pnSaveFondoFalso','lexerParser.py',924),
  ('pnPopFondoFalso -> empty','pnPopFondoFalso',1,'p_pnPopFondoFalso','lexerParser.py',932),
  ('pnSaveOperandos -> empty','pnSaveOperandos',1,'p_pnSaveOperandos','lexerParser.py',942),
  ('pnSaveOperandoConstante -> empty','pnSaveOperandoConstante',1,'p_pnSaveOperandoConstante','lexerParser.py',968),
  ('pnSaveOperadorPlMi -> empty','pnSaveOperadorPlMi',1,'p_pnSaveOperadorPlMi','lexerParser.py',976),
  ('pnSaveOperadorMuDi -> empty','pnSaveOperadorMuDi',1,'p_pnSaveOperadorMuDi','lexerParser.py',983),
  ('pnSaveOperadorRel -> empty','pnSaveOperadorRel',1,'p_pnSaveOperadorRel','lexerParser.py',990),
  ('pnSaveOperadorLog -> empty','pnSaveOperadorLog',1,'p_pnSaveOperadorLog','lexerParser.py',997),
  ('pnCuadPlMi -> empty','pnCuadPlMi',1,'p_pnCuadPlMi','lexerParser.py',1004),
  ('pnCuadMuDi -> empty','pnCuadMuDi',1,'p_pnCuadMuDi','lexerParser.py',1042),
  ('pnCuadOpRelacional -> empty','pnCuadOpRelacional',1,'p_pnCuadOpRelacional','lexerParser.py',1081),
  ('pnCuadOplog -> empty','pnCuadOplog',1,'p_pnCuadOplog','lexerParser.py',1121),
  ('pnSaveOperadorAsign -> empty','pnSaveOperadorAsign',1,'p_pnSaveOperadorAsign','lexerParser.py',1159),
  ('pnCuadAsign -> empty','pnCuadAsign',1,'p_pnCuadAsign','lexerParser.py',1167),
  ('pnCuadEscribe -> empty','pnCuadEscribe',1,'p_pnCuadEscribe','lexerParser.py',1197),
  ('pnCuadLee -> empty','pnCuadLee',1,'p_pnCuadLee','lexerParser.py',1238),
  ('pnCuadCopy -> empty','pnCuadCopy',1,'p_pnCuadCopy','lexerParser.py',1256),
  ('pnCuadFuncEsp -> empty','pnCuadFuncEsp',1,'p_pnCuadFuncEsp','lexerParser.py',1286),
  ('pnCuadBoxplot -> empty','pnCuadBoxplot',1,'p_pnCuadBoxplot','lexerParser.py',1329),
  ('pnCuadLinReg -> empty','pnCuadLinReg',1,'p_pnCuadLinReg','lexerParser.py',1355),
  ('pnCheckBoolIf -> empty','pnCheckBoolIf',1,'p_pnCheckBoolIf','lexerParser.py',1394),
  ('pnElseIf -> empty','pnElseIf',1,'p_pnElseIf','lexerParser.py',1415),
  ('pnEndIf -> empty','pnEndIf',1,'p_pnEndIf','lexerParser.py',1427),
  ('pnSaveWhile -> empty','pnSaveWhile',1,'p_pnSaveWhile','lexerParser.py',1438),
  ('pnEndWhile -> empty','pnEndWhile',1,'p_pnEndWhile','lexerParser.py',1446),
  ('pnSaveForID -> empty','pnSaveForID',1,'p_pnSaveForID','lexerParser.py',1461),
  ('pnCreateVControl -> empty','pnCreateVControl',1,'p_pnCreateVControl','lexerParser.py',1489),
  ('pnCompControlFinal -> empty','pnCompControlFinal',1,'p_pnCompControlFinal','lexerParser.py',1524),
  ('pnEndFor -> empty','pnEndFor',1,'p_pnEndFor','lexerParser.py',1567),
  ('pnArrCreateNode -> empty','pnArrCreateNode',1,'p_pnArrCreateNode','lexerParser.py',1618),
  ('pnArrSaveLim -> empty','pnArrSaveLim',1,'p_pnArrSaveLim','lexerParser.py',1632),
  ('pnArrCuadriplificar -> empty','pnArrCuadriplificar',1,'p_pnArrCuadriplificar','lexerParser.py',1650),
  ('pnArrAddDim -> empty','pnArrAddDim',1,'p_pnArrAddDim','lexerParser.py',1669),
  ('pnArrIni -> empty','pnArrIni',1,'p_pnArrIni','lexerParser.py',1695),
  ('pnArrVerify -> empty','pnArrVerify',1,'p_pnArrVerify','lexerParser.py',1717),
  ('pnArrAccIncDim -> empty','pnArrAccIncDim',1,'p_pnArrAccIncDim','lexerParser.py',1738),
  ('pnArrCalc -> empty','pnArrCalc',1,'p_pnArrCalc','lexerParser.py',1777),
  ('pnMatCalc -> empty','pnMatCalc',1,'p_pnMatCalc','lexerParser.py',1816),
  ('pnArrFFPop -> empty','pnArrFFPop',1,'p_pnArrFFPop','lexerParser.py',1888),
  ('pnCuadEND -> empty','pnCuadEND',1,'p_pnCuadEND','lexerParser.py',1896),
  ('empty -> <empty>','empty',0,'p_empty','lexerParser.py',1906),
]

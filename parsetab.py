
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVAND ARROW ASIGN BOXPLOT CHAR COMMA COMMENT CTEC CTEF CTEI DATAFRAME DIV DO EQUALS FLOAT FOR FUNC GREATER_THAN ID IF IF_FALSE IF_TRUE INT LEFT_CUR_BRACKET LEFT_PARENT LEFT_SQR_BRACKET LESS_THAN LETRERO LINREG MAX MEAN MEDIAN MIN MINUS MODE MULT NOTEQUALS OR PLUS READ READ_FILE RETURNS RIGHT_CUR_BRACKET RIGHT_PARENT RIGHT_SQR_BRACKET SCRIPT SEMICOLON STADDES VAR VARIANCE VOID WHILE WRITE\n    programa : SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND\n    varp : var varp \n         | empty\n    funcp : func funcp \n          | empty\n    \n    bloque : DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript\n    estatutop : estatuto estatutop \n              | empty\n    \n    tipo_simp : INT pnSaveTypeVar\n              | FLOAT pnSaveTypeVar\n              | CHAR pnSaveTypeVar\n    \n    copy : READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON\n    \n    variable : ID pnSaveOperandos indexp\n    indexp : LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop\n           | empty\n    indexpp : COMMA pnArrAccIncDim exp pnMatCalc\n            | empty pnArrCalc\n    \n    llamada : ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue\n    expp : exp pnCuadParametro exppp\n         | empty\n    exppp : COMMA pnUpdateK exp pnCuadParametro exppp\n          | empty\n    \n    var : VAR pnCheckTablaVar v ARROW idp SEMICOLON\n    v : DATAFRAME pnSaveTypeVar\n      | tipo_simp vp\n    vp : LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim vpp RIGHT_SQR_BRACKET pnArrCuadriplificar\n       | empty\n    vpp : COMMA CTEI pnArrSaveLim\n        | empty\n    idp : ID pnCheckNameTablaVar pnArrAddDim idpp\n    idpp : COMMA ID pnCheckNameTablaVar pnArrAddDim idpp\n         | empty\n    \n    func : FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction\n    returnval : tipo_simp\n              | VOID pnSaveTypeVar\n    \n    param : paramlist\n          | empty\n    paramlist : tipoparam ARROW ID pnAddParametersTablaVar paramlistp\n    tipoparam : tipo_simp\n              | DATAFRAME pnSaveTypeVar\n    paramlistp : COMMA paramlist\n               | empty\n    \n    estatuto : asign\n             | llamada\n             | lee\n             | escribe\n             | condicion\n             | ciclow\n             | ciclof\n             | funcesp\n             | return\n             | copy\n    \n    asign : variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON\n    \n    lee : READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON\n    \n    escribe :  WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON\n    escribep : exp pnCuadEscribe\n             | LETRERO pnCuadEscribe\n    \n    return : RETURNS exp pnCuadRet SEMICOLON\n    \n    exp : exprel pnCuadOplog logic\n    logic : logicsig exprel pnCuadOplog logic \n          | empty\n    logicsig : AND pnSaveOperadorLog\n             | OR pnSaveOperadorLog\n    \n    exprel : e pnCuadOpRelacional relacionalp\n    relacionalp : relsig e pnCuadOpRelacional relacionalp \n                | empty\n    relsig : LESS_THAN pnSaveOperadorRel\n           | GREATER_THAN pnSaveOperadorRel\n           | EQUALS pnSaveOperadorRel\n           | NOTEQUALS pnSaveOperadorRel\n    \n    e : t pnCuadPlMi tp\n    tp : tsig t pnCuadPlMi tp \n       | empty\n    tsig : PLUS pnSaveOperadorPlMi\n         | MINUS pnSaveOperadorPlMi\n    \n    t : f pnCuadMuDi fp\n    fp : fsig f pnCuadMuDi fp \n       | empty\n    fsig : MULT pnSaveOperadorMuDi\n         | DIV pnSaveOperadorMuDi\n    \n    f : LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso\n      | CTEI pnSaveCteI  pnSaveOperandoConstante\n      | CTEF pnSaveCteF pnSaveOperandoConstante\n      | CTEC pnSaveCteC pnSaveOperandoConstante\n      | variable\n      | llamada\n      | funcesp\n    \n    condicion : IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf\n    falsop : IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET \n           | empty\n    \n    ciclow : WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile\n    \n    ciclof : FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor\n    \n    funcesp : mean\n            | mode\n            | median\n            | variance\n            | max\n            | min\n            | staddes\n            | boxplot\n            | linreg\n            | copy\n    \n    mean : MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    mode : MODE LEFT_PARENT variable  pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    median : MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    variance : VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    max : MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    min : MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    staddes : STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    boxplot : BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    linreg : LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    pnCrearDirFunc : empty\n    \n    pnCuadGotoMain : empty\n    \n    pnDirMain : empty\n    \n    pnScriptFuncDir : empty\n    \n    pnCheckTablaVar : empty\n    \n    pnCrearListaParam : empty\n    \n    pnSaveTypeVar : empty\n    \n    pnCheckNameTablaVar : empty\n    \n    pnAddFuncinDir : empty\n    \n    pnAddParametersTablaVar : empty\n    \n    pnCountVarsINTOResources : empty\n    \n    pnDirecIniFunc : empty\n    \n    pnCloseCurrentFunction : empty\n    \n    pnEndScript : empty\n    \n    pnCheckFunc : empty\n    \n    pnGenerateEra : empty\n    \n    pnCuadParametro : empty\n    \n    pnUpdateK : empty\n    \n    pnCheckNoParam : empty\n    \n    pnCuadGoSub : empty\n    \n    pnHandleReturnValue : empty\n    \n    pnCuadRet : empty\n    \n    pnSaveCteI : empty\n    \n    pnSaveCteF : empty\n    \n    pnSaveCteC : empty\n    \n    pnSaveFondoFalso : empty\n    \n    pnPopFondoFalso : empty\n    \n    pnSaveOperandos : empty\n    \n    pnSaveOperandoConstante : empty\n    \n    pnSaveOperadorPlMi : empty\n    \n    pnSaveOperadorMuDi : empty\n    \n    pnSaveOperadorRel : empty\n    \n    pnSaveOperadorLog : empty\n    \n    pnCuadPlMi : empty\n    \n    pnCuadMuDi : empty\n    \n    pnCuadOpRelacional : empty\n    \n    pnCuadOplog : empty\n    \n    pnSaveOperadorAsign : empty\n    \n    pnCuadAsign : empty\n    \n    pnCuadEscribe : empty\n    \n    pnCuadLee : empty\n    \n    pnCuadCopy : empty\n    \n    pnCuadFuncEsp : empty\n    \n    pnCheckBoolIf : empty\n    \n    pnElseIf : empty\n    \n    pnEndIf : empty\n    \n    pnSaveWhile : empty\n    \n    pnEndWhile : empty\n    \n    pnSaveForID : empty\n    \n    pnCreateVControl : empty\n    \n    pnCompControlFinal : empty\n    \n    pnEndFor : empty\n    \n    pnArrCreateNode : empty\n    \n    pnArrSaveLim : empty\n    \n    pnArrCuadriplificar : empty\n    \n    pnArrAddDim : empty\n    \n    pnArrIni : empty\n    \n    pnArrVerify : empty\n    \n    pnArrAccIncDim : empty\n    \n    pnArrCalc : empty\n    \n    pnMatCalc : empty\n    \n    pnArrFFPop : empty\n    \n    pnCuadEND : empty\n    \n    empty :'
    
_lr_action_items = {'SCRIPT':([0,],[2,]),'$end':([1,22,34,35,115,156,157,],[0,-175,-1,-174,-175,-6,-125,]),'ID':([2,3,4,12,13,16,17,19,24,38,44,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,110,117,121,122,123,126,132,142,143,144,145,146,147,148,149,150,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,269,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,5,-112,-175,-3,-175,-5,-2,-4,50,52,-175,-175,-23,82,82,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,139,153,-175,165,139,139,165,-175,165,165,165,165,165,165,165,165,165,139,-149,-175,-175,139,139,-137,139,-127,139,-168,-58,139,-175,-175,139,-175,-175,-175,-175,139,-175,-175,139,-175,-175,313,-55,139,-62,-144,-63,-67,-143,-68,-69,-70,-74,-141,-75,-79,-142,-80,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,-175,-175,82,82,82,-123,-175,139,-129,139,-170,139,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,82,82,-89,-175,-92,-163,]),'SEMICOLON':([5,6,7,8,9,51,52,59,60,64,65,88,89,90,91,92,93,94,95,96,109,111,119,127,128,129,130,131,133,134,135,136,137,138,139,140,153,161,163,172,173,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,207,211,219,229,231,234,236,241,243,246,248,252,253,254,255,271,272,273,278,283,287,293,297,301,302,303,304,305,306,307,308,309,310,311,314,316,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,344,345,356,357,358,359,365,368,378,379,381,382,388,389,],[-175,-175,-115,10,-113,58,-175,-175,-119,-175,-167,-93,-94,-95,-96,-97,-98,-99,-100,-101,-30,-32,-175,-175,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-102,-175,-13,-15,228,-133,-175,-148,-175,-147,-175,-145,-175,-146,-175,-134,-175,-135,-175,-136,-139,-175,-175,279,-59,-61,-64,-66,-71,-73,-76,-78,-82,-140,-83,-84,-175,315,-150,321,-175,-175,-175,-175,-175,331,332,333,334,335,336,337,338,339,340,-31,-175,-175,-175,-175,-175,-81,-138,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,365,-130,-60,-65,-72,-77,-175,-175,-175,-131,-14,-173,-18,-132,]),'VAR':([10,12,49,58,312,],[14,14,14,-23,14,]),'FUNC':([10,11,12,13,16,19,49,55,58,387,400,401,408,409,],[-175,18,-175,-3,18,-2,-175,18,-23,-175,-175,-122,-33,-124,]),'DO':([10,11,12,13,15,16,17,19,24,58,387,400,401,408,409,],[-175,-175,-175,-3,23,-175,-5,-2,-4,-23,-175,-175,-122,-33,-124,]),'READ':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,228,279,312,315,321,331,332,333,334,335,336,337,338,339,340,341,352,353,360,361,365,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,83,83,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,-58,-55,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,83,83,83,-123,-175,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,83,83,-89,-175,-92,-163,]),'WRITE':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,228,279,312,315,321,331,332,333,334,335,336,337,338,339,340,341,352,353,360,361,365,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,84,84,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,-58,-55,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,84,84,84,-123,-175,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,84,84,-89,-175,-92,-163,]),'IF':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,228,279,312,315,321,331,332,333,334,335,336,337,338,339,340,341,352,353,360,361,365,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,85,85,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,-58,-55,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,85,85,85,-123,-175,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,85,85,-89,-175,-92,-163,]),'WHILE':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,228,279,312,315,321,331,332,333,334,335,336,337,338,339,340,341,352,353,360,361,365,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,86,86,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,-58,-55,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,86,86,86,-123,-175,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,86,86,-89,-175,-92,-163,]),'FOR':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,228,279,312,315,321,331,332,333,334,335,336,337,338,339,340,341,352,353,360,361,365,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,87,87,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,-58,-55,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,87,87,87,-123,-175,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,87,87,-89,-175,-92,-163,]),'RETURNS':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,228,279,312,315,321,331,332,333,334,335,336,337,338,339,340,341,352,353,360,361,365,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,97,97,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,-58,-55,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,97,97,97,-123,-175,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,97,97,-89,-175,-92,-163,]),'READ_FILE':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,98,98,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,98,-175,98,98,-175,98,-149,-175,-175,98,98,-137,98,-127,98,-168,-58,98,-175,-175,98,-175,-175,-175,-175,98,-175,-175,98,-175,-175,-55,98,-62,-144,-63,-67,-143,-68,-69,-70,-74,-141,-75,-79,-142,-80,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,-175,-175,98,98,98,-123,-175,98,-129,98,-170,98,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,98,98,-89,-175,-92,-163,]),'MEAN':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,99,99,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,99,-175,99,99,-175,99,-149,-175,-175,99,99,-137,99,-127,99,-168,-58,99,-175,-175,99,-175,-175,-175,-175,99,-175,-175,99,-175,-175,-55,99,-62,-144,-63,-67,-143,-68,-69,-70,-74,-141,-75,-79,-142,-80,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,-175,-175,99,99,99,-123,-175,99,-129,99,-170,99,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,99,99,-89,-175,-92,-163,]),'MODE':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,100,100,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,100,-175,100,100,-175,100,-149,-175,-175,100,100,-137,100,-127,100,-168,-58,100,-175,-175,100,-175,-175,-175,-175,100,-175,-175,100,-175,-175,-55,100,-62,-144,-63,-67,-143,-68,-69,-70,-74,-141,-75,-79,-142,-80,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,-175,-175,100,100,100,-123,-175,100,-129,100,-170,100,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,100,100,-89,-175,-92,-163,]),'MEDIAN':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,101,101,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,101,-175,101,101,-175,101,-149,-175,-175,101,101,-137,101,-127,101,-168,-58,101,-175,-175,101,-175,-175,-175,-175,101,-175,-175,101,-175,-175,-55,101,-62,-144,-63,-67,-143,-68,-69,-70,-74,-141,-75,-79,-142,-80,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,-175,-175,101,101,101,-123,-175,101,-129,101,-170,101,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,101,101,-89,-175,-92,-163,]),'VARIANCE':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,102,102,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,102,-175,102,102,-175,102,-149,-175,-175,102,102,-137,102,-127,102,-168,-58,102,-175,-175,102,-175,-175,-175,-175,102,-175,-175,102,-175,-175,-55,102,-62,-144,-63,-67,-143,-68,-69,-70,-74,-141,-75,-79,-142,-80,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,-175,-175,102,102,102,-123,-175,102,-129,102,-170,102,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,102,102,-89,-175,-92,-163,]),'MAX':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,103,103,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,103,-175,103,103,-175,103,-149,-175,-175,103,103,-137,103,-127,103,-168,-58,103,-175,-175,103,-175,-175,-175,-175,103,-175,-175,103,-175,-175,-55,103,-62,-144,-63,-67,-143,-68,-69,-70,-74,-141,-75,-79,-142,-80,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,-175,-175,103,103,103,-123,-175,103,-129,103,-170,103,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,103,103,-89,-175,-92,-163,]),'MIN':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,104,104,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,104,-175,104,104,-175,104,-149,-175,-175,104,104,-137,104,-127,104,-168,-58,104,-175,-175,104,-175,-175,-175,-175,104,-175,-175,104,-175,-175,-55,104,-62,-144,-63,-67,-143,-68,-69,-70,-74,-141,-75,-79,-142,-80,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,-175,-175,104,104,104,-123,-175,104,-129,104,-170,104,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,104,104,-89,-175,-92,-163,]),'STADDES':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,105,105,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,105,-175,105,105,-175,105,-149,-175,-175,105,105,-137,105,-127,105,-168,-58,105,-175,-175,105,-175,-175,-175,-175,105,-175,-175,105,-175,-175,-55,105,-62,-144,-63,-67,-143,-68,-69,-70,-74,-141,-75,-79,-142,-80,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,-175,-175,105,105,105,-123,-175,105,-129,105,-170,105,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,105,105,-89,-175,-92,-163,]),'BOXPLOT':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,106,106,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,106,-175,106,106,-175,106,-149,-175,-175,106,106,-137,106,-127,106,-168,-58,106,-175,-175,106,-175,-175,-175,-175,106,-175,-175,106,-175,-175,-55,106,-62,-144,-63,-67,-143,-68,-69,-70,-74,-141,-75,-79,-142,-80,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,-175,-175,106,106,106,-123,-175,106,-129,106,-170,106,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,106,106,-89,-175,-92,-163,]),'LINREG':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,107,107,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,107,-175,107,107,-175,107,-149,-175,-175,107,107,-137,107,-127,107,-168,-58,107,-175,-175,107,-175,-175,-175,-175,107,-175,-175,107,-175,-175,-55,107,-62,-144,-63,-67,-143,-68,-69,-70,-74,-141,-75,-79,-142,-80,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,-175,-175,107,107,107,-123,-175,107,-129,107,-170,107,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,107,107,-89,-175,-92,-163,]),'RIGHT_CUR_BRACKET':([12,13,16,17,19,24,49,55,58,62,68,69,70,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,116,228,279,312,315,321,331,332,333,334,335,336,337,338,339,340,341,352,353,360,361,365,373,374,376,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,412,413,414,415,416,417,],[-175,-3,-175,-5,-2,-4,-175,-175,-23,-175,115,-175,-8,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,-7,-58,-55,-175,-53,-54,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,-175,-175,-175,-123,-175,384,385,387,-175,-131,-175,-175,-175,-18,-132,-175,-90,-91,-159,-175,-122,-88,-157,-33,-124,-175,-175,414,415,-89,-175,-92,-163,]),'DATAFRAME':([14,20,21,63,108,151,152,363,],[-175,32,-116,-175,-175,206,-117,206,]),'INT':([14,18,20,21,63,108,151,152,363,],[-175,28,28,-116,-175,-175,28,-117,28,]),'FLOAT':([14,18,20,21,63,108,151,152,363,],[-175,29,29,-116,-175,-175,29,-117,29,]),'CHAR':([14,18,20,21,63,108,151,152,363,],[-175,30,30,-116,-175,-175,30,-117,30,]),'VOID':([18,],[27,]),'RIGHT_PARENT':([21,63,88,89,90,91,92,93,94,95,96,108,119,128,129,130,131,133,134,135,136,137,138,139,140,151,152,160,161,163,164,165,166,167,168,169,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,212,213,216,217,218,220,221,222,223,224,225,229,231,234,236,241,243,246,248,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,274,275,276,281,283,287,293,297,301,313,317,318,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,342,343,346,348,356,357,358,359,362,364,365,368,377,378,379,380,381,382,386,388,389,390,398,399,402,],[-116,-175,-93,-94,-95,-96,-97,-98,-99,-100,-101,-175,-175,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-102,-175,-117,-175,-13,-15,-175,-175,219,-175,-175,-175,-175,-148,-175,-147,-175,-145,-175,-146,-175,-134,-175,-135,-175,-136,-139,-175,-175,-175,-175,-175,-175,-175,-175,-175,-175,268,-36,-37,-175,-127,278,-152,-139,-56,-151,-57,280,-155,-175,-59,-61,-64,-66,-71,-73,-76,-78,301,-82,-140,-83,-84,302,-153,303,-154,304,305,306,307,308,309,310,311,316,-175,-20,323,-175,-175,-175,-175,-175,-175,-175,-128,-175,-175,-175,-175,-81,-138,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,-121,-19,-22,-60,-65,-72,-77,-38,-42,-175,-175,-41,-175,-131,-175,-14,-173,-175,-18,-132,-175,407,-162,-21,]),'LEFT_CUR_BRACKET':([23,36,37,268,322,323,394,405,406,407,],[-175,49,-114,312,352,353,-175,410,-156,411,]),'ARROW':([25,26,27,28,29,30,31,32,33,39,40,41,42,43,45,46,48,154,204,205,206,208,209,270,],[38,-34,-175,-175,-175,-175,44,-175,-175,-35,-118,-9,-10,-11,-24,-25,-27,-175,269,-39,-175,-26,-166,-40,]),'LEFT_SQR_BRACKET':([28,29,30,33,40,41,42,43,82,119,120,139,165,190,218,],[-175,-175,-175,47,-118,-9,-10,-11,-175,162,-139,-175,-175,-139,-139,]),'CTEI':([47,53,54,97,113,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,230,232,233,235,237,238,239,240,242,244,245,247,249,250,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,347,350,366,367,369,370,375,],[-175,61,-164,133,155,-175,133,133,-175,133,-149,-175,-175,133,133,-137,133,-127,133,-168,133,-175,-175,133,-175,-175,-175,-175,133,-175,-175,133,-175,-175,133,-62,-144,-63,-67,-143,-68,-69,-70,-74,-141,-75,-79,-142,-80,-175,-175,133,-129,133,-170,133,]),'LEFT_PARENT':([50,56,57,82,83,84,85,86,87,97,98,99,100,101,102,103,104,105,106,107,117,118,120,122,123,124,125,132,139,158,159,160,162,170,182,183,190,212,213,214,215,230,232,233,235,237,238,239,240,242,244,245,247,249,250,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,347,350,366,367,369,370,375,],[-175,63,-120,-175,121,122,123,-175,126,132,141,142,143,144,145,146,147,148,149,150,-175,160,-126,132,132,170,-158,-175,-175,132,-149,-175,-175,132,132,-137,-126,132,-127,132,-168,132,-175,-175,132,-175,-175,-175,-175,132,-175,-175,132,-175,-175,132,-62,-144,-63,-67,-143,-68,-69,-70,-74,-141,-75,-79,-142,-80,-175,-175,132,-129,132,-170,132,]),'COMMA':([52,59,60,61,64,65,66,67,88,89,90,91,92,93,94,95,96,119,128,129,130,131,133,134,135,136,137,138,139,140,153,161,163,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,207,229,231,234,236,241,243,246,248,252,253,254,255,271,275,277,283,287,293,297,301,313,317,318,319,320,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,342,343,354,355,356,357,358,359,365,368,378,379,380,381,382,388,389,390,],[-175,-175,-119,-175,110,-167,113,-165,-93,-94,-95,-96,-97,-98,-99,-100,-101,-175,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-102,-175,-13,-15,-175,-148,-175,-147,-175,-145,-175,-146,-175,-134,-175,-135,-175,-136,-139,-175,-59,-61,-64,-66,-71,-73,-76,-78,-82,-140,-83,-84,110,-175,-175,-175,-175,-175,-175,-175,-175,347,-128,350,-169,-175,-175,-175,-175,-175,-81,-138,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,363,-121,375,-161,-60,-65,-72,-77,-175,-175,-175,-131,-175,-14,-173,-18,-132,347,]),'RIGHT_SQR_BRACKET':([61,66,67,88,89,90,91,92,93,94,95,96,112,114,119,128,129,130,131,133,134,135,136,137,138,139,140,155,161,163,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,210,229,231,234,236,241,243,246,248,252,253,254,255,277,283,287,293,297,301,319,320,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,349,351,356,357,358,359,365,368,371,372,378,379,381,382,383,388,389,391,392,],[-175,-175,-165,-93,-94,-95,-96,-97,-98,-99,-100,-101,154,-29,-175,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-102,-175,-13,-15,-175,-148,-175,-147,-175,-145,-175,-146,-175,-134,-175,-135,-175,-136,-139,-28,-59,-61,-64,-66,-71,-73,-76,-78,-82,-140,-83,-84,-175,-175,-175,-175,-175,-175,-175,-169,-175,-175,-175,-175,-81,-138,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,368,-175,-60,-65,-72,-77,-175,-175,-171,-17,-175,-131,-14,-173,-175,-18,-132,-16,-172,]),'ASIGN':([81,82,119,120,161,163,165,171,218,226,227,368,381,382,],[117,-175,-175,-139,-13,-15,-175,-175,-139,282,-160,-175,-14,-173,]),'MULT':([88,89,90,91,92,93,94,95,96,119,131,133,134,135,136,137,138,139,140,161,163,180,181,184,185,186,187,188,189,190,252,253,254,255,297,301,328,329,330,331,332,333,334,335,336,337,338,339,340,365,368,378,379,381,382,388,389,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-175,-175,-175,-175,-175,-85,-86,-87,-175,-102,-13,-15,249,-146,-175,-134,-175,-135,-175,-136,-139,-82,-140,-83,-84,-175,-175,249,-81,-138,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,-175,-175,-131,-14,-173,-18,-132,]),'DIV':([88,89,90,91,92,93,94,95,96,119,131,133,134,135,136,137,138,139,140,161,163,180,181,184,185,186,187,188,189,190,252,253,254,255,297,301,328,329,330,331,332,333,334,335,336,337,338,339,340,365,368,378,379,381,382,388,389,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-175,-175,-175,-175,-175,-85,-86,-87,-175,-102,-13,-15,250,-146,-175,-134,-175,-135,-175,-136,-139,-82,-140,-83,-84,-175,-175,250,-81,-138,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-175,-175,-175,-131,-14,-173,-18,-132,]),'PLUS':([88,89,90,91,92,93,94,95,96,119,130,131,133,134,135,136,137,138,139,140,161,163,178,179,180,181,184,185,186,187,188,189,190,246,248,252,253,254,255,293,297,301,327,328,329,330,331,332,333,334,335,336,337,338,339,340,359,365,368,378,379,381,382,388,389,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-102,-13,-15,244,-145,-175,-146,-175,-134,-175,-135,-175,-136,-139,-76,-78,-82,-140,-83,-84,-175,-175,-175,244,-175,-81,-138,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-77,-175,-175,-175,-131,-14,-173,-18,-132,]),'MINUS':([88,89,90,91,92,93,94,95,96,119,130,131,133,134,135,136,137,138,139,140,161,163,178,179,180,181,184,185,186,187,188,189,190,246,248,252,253,254,255,293,297,301,327,328,329,330,331,332,333,334,335,336,337,338,339,340,359,365,368,378,379,381,382,388,389,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-102,-13,-15,245,-145,-175,-146,-175,-134,-175,-135,-175,-136,-139,-76,-78,-82,-140,-83,-84,-175,-175,-175,245,-175,-81,-138,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-77,-175,-175,-175,-131,-14,-173,-18,-132,]),'LESS_THAN':([88,89,90,91,92,93,94,95,96,119,129,130,131,133,134,135,136,137,138,139,140,161,163,176,177,178,179,180,181,184,185,186,187,188,189,190,241,243,246,248,252,253,254,255,287,293,297,301,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,358,359,365,368,378,379,381,382,388,389,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-102,-13,-15,237,-147,-175,-145,-175,-146,-175,-134,-175,-135,-175,-136,-139,-71,-73,-76,-78,-82,-140,-83,-84,-175,-175,-175,-175,237,-175,-175,-81,-138,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-72,-77,-175,-175,-175,-131,-14,-173,-18,-132,]),'GREATER_THAN':([88,89,90,91,92,93,94,95,96,119,129,130,131,133,134,135,136,137,138,139,140,161,163,176,177,178,179,180,181,184,185,186,187,188,189,190,241,243,246,248,252,253,254,255,287,293,297,301,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,358,359,365,368,378,379,381,382,388,389,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-102,-13,-15,238,-147,-175,-145,-175,-146,-175,-134,-175,-135,-175,-136,-139,-71,-73,-76,-78,-82,-140,-83,-84,-175,-175,-175,-175,238,-175,-175,-81,-138,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-72,-77,-175,-175,-175,-131,-14,-173,-18,-132,]),'EQUALS':([88,89,90,91,92,93,94,95,96,119,129,130,131,133,134,135,136,137,138,139,140,161,163,176,177,178,179,180,181,184,185,186,187,188,189,190,241,243,246,248,252,253,254,255,287,293,297,301,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,358,359,365,368,378,379,381,382,388,389,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-102,-13,-15,239,-147,-175,-145,-175,-146,-175,-134,-175,-135,-175,-136,-139,-71,-73,-76,-78,-82,-140,-83,-84,-175,-175,-175,-175,239,-175,-175,-81,-138,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-72,-77,-175,-175,-175,-131,-14,-173,-18,-132,]),'NOTEQUALS':([88,89,90,91,92,93,94,95,96,119,129,130,131,133,134,135,136,137,138,139,140,161,163,176,177,178,179,180,181,184,185,186,187,188,189,190,241,243,246,248,252,253,254,255,287,293,297,301,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,358,359,365,368,378,379,381,382,388,389,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-102,-13,-15,240,-147,-175,-145,-175,-146,-175,-134,-175,-135,-175,-136,-139,-71,-73,-76,-78,-82,-140,-83,-84,-175,-175,-175,-175,240,-175,-175,-81,-138,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-72,-77,-175,-175,-175,-131,-14,-173,-18,-132,]),'AND':([88,89,90,91,92,93,94,95,96,119,128,129,130,131,133,134,135,136,137,138,139,140,161,163,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,234,236,241,243,246,248,252,253,254,255,283,287,293,297,301,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,357,358,359,365,368,378,379,381,382,388,389,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-175,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-102,-13,-15,232,-148,-175,-147,-175,-145,-175,-146,-175,-134,-175,-135,-175,-136,-139,-64,-66,-71,-73,-76,-78,-82,-140,-83,-84,-175,-175,-175,-175,-175,232,-175,-175,-175,-81,-138,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-65,-72,-77,-175,-175,-175,-131,-14,-173,-18,-132,]),'OR':([88,89,90,91,92,93,94,95,96,119,128,129,130,131,133,134,135,136,137,138,139,140,161,163,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,234,236,241,243,246,248,252,253,254,255,283,287,293,297,301,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,357,358,359,365,368,378,379,381,382,388,389,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-175,-175,-175,-175,-175,-175,-175,-175,-85,-86,-87,-175,-102,-13,-15,233,-148,-175,-147,-175,-145,-175,-146,-175,-134,-175,-135,-175,-136,-139,-64,-66,-71,-73,-76,-78,-82,-140,-83,-84,-175,-175,-175,-175,-175,233,-175,-175,-175,-81,-138,-12,-103,-104,-105,-106,-107,-108,-109,-110,-111,-65,-72,-77,-175,-175,-175,-131,-14,-173,-18,-132,]),'CTEF':([97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,230,232,233,235,237,238,239,240,242,244,245,247,249,250,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,347,350,366,367,369,370,375,],[134,-175,134,134,-175,134,-149,-175,-175,134,134,-137,134,-127,134,-168,134,-175,-175,134,-175,-175,-175,-175,134,-175,-175,134,-175,-175,134,-62,-144,-63,-67,-143,-68,-69,-70,-74,-141,-75,-79,-142,-80,-175,-175,134,-129,134,-170,134,]),'CTEC':([97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,230,232,233,235,237,238,239,240,242,244,245,247,249,250,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,347,350,366,367,369,370,375,],[135,-175,135,135,-175,135,-149,-175,-175,135,135,-137,135,-127,135,-168,135,-175,-175,135,-175,-175,-175,-175,135,-175,-175,135,-175,-175,135,-62,-144,-63,-67,-143,-68,-69,-70,-74,-141,-75,-79,-142,-80,-175,-175,135,-129,135,-170,135,]),'LETRERO':([122,141,],[168,191,]),'IF_TRUE':([280,],[322,]),'IF_FALSE':([384,],[394,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pnCrearDirFunc':([2,],[3,]),'empty':([2,5,6,10,11,12,14,16,22,23,27,28,29,30,32,33,47,49,50,52,55,59,61,62,63,64,66,69,82,86,108,115,117,119,127,128,129,130,131,132,133,134,135,139,151,153,154,155,160,162,164,165,167,168,169,171,174,176,178,180,184,186,188,191,192,193,194,195,196,197,198,199,200,206,207,211,212,225,232,233,237,238,239,240,244,245,249,250,271,275,277,283,287,293,297,301,312,313,316,317,319,324,325,326,327,328,341,342,347,350,351,352,353,360,365,368,378,380,383,384,385,386,387,390,393,394,400,410,411,415,],[4,7,9,13,17,13,21,17,35,37,40,40,40,40,40,48,54,13,57,60,17,65,67,70,21,111,114,70,120,125,152,157,159,163,173,175,177,179,181,183,185,187,189,190,203,60,209,67,213,215,217,218,221,221,224,227,231,236,243,248,253,253,253,257,259,259,259,259,259,259,259,259,259,40,65,273,276,224,285,285,289,289,289,289,295,295,299,299,111,318,320,175,177,179,181,330,13,343,345,348,351,355,231,236,243,248,361,364,367,370,371,70,70,70,379,382,389,318,392,395,397,399,401,348,404,406,409,70,70,417,]),'pnScriptFuncDir':([5,],[6,]),'pnCuadGotoMain':([6,],[8,]),'varp':([10,12,49,312,],[11,19,55,341,]),'var':([10,12,49,312,],[12,12,12,12,]),'funcp':([11,16,55,],[15,24,62,]),'func':([11,16,55,],[16,16,16,]),'pnCheckTablaVar':([14,63,],[20,108,]),'bloque':([15,],[22,]),'returnval':([18,],[25,]),'tipo_simp':([18,20,151,363,],[26,33,205,205,]),'v':([20,],[31,]),'pnCuadEND':([22,],[34,]),'pnDirMain':([23,],[36,]),'pnSaveTypeVar':([27,28,29,30,32,206,],[39,41,42,43,45,270,]),'vp':([33,],[46,]),'idp':([44,],[51,]),'pnArrCreateNode':([47,],[53,]),'pnAddFuncinDir':([50,],[56,]),'pnCheckNameTablaVar':([52,153,],[59,207,]),'pnArrAddDim':([59,207,],[64,271,]),'pnArrSaveLim':([61,155,],[66,210,]),'estatutop':([62,69,352,353,360,410,411,],[68,116,373,374,376,412,413,]),'estatuto':([62,69,352,353,360,410,411,],[69,69,69,69,69,69,69,]),'asign':([62,69,352,353,360,410,411,],[71,71,71,71,71,71,71,]),'llamada':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[72,72,137,137,137,137,137,137,137,137,137,137,137,137,137,72,72,72,137,137,137,72,72,]),'lee':([62,69,352,353,360,410,411,],[73,73,73,73,73,73,73,]),'escribe':([62,69,352,353,360,410,411,],[74,74,74,74,74,74,74,]),'condicion':([62,69,352,353,360,410,411,],[75,75,75,75,75,75,75,]),'ciclow':([62,69,352,353,360,410,411,],[76,76,76,76,76,76,76,]),'ciclof':([62,69,352,353,360,410,411,],[77,77,77,77,77,77,77,]),'funcesp':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[78,78,138,138,138,138,138,138,138,138,138,138,138,138,138,78,78,78,138,138,138,78,78,]),'return':([62,69,352,353,360,410,411,],[79,79,79,79,79,79,79,]),'copy':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[80,80,140,140,140,140,140,140,140,140,140,140,140,140,140,80,80,80,140,140,140,80,80,]),'variable':([62,69,97,121,122,123,126,142,143,144,145,146,147,148,149,150,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[81,81,136,164,136,136,171,192,193,194,195,196,197,198,199,200,136,136,136,136,136,136,136,136,136,136,81,81,81,136,136,136,81,81,]),'mean':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'mode':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'median':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'variance':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'max':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'min':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'staddes':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'boxplot':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'linreg':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'idpp':([64,271,],[109,314,]),'vpp':([66,],[112,]),'pnCheckFunc':([82,139,],[118,118,]),'pnSaveOperandos':([82,139,165,],[119,119,119,]),'pnSaveWhile':([86,],[124,]),'exp':([97,122,123,158,170,182,212,214,282,366,369,375,],[127,167,169,211,225,251,275,277,324,380,383,386,]),'exprel':([97,122,123,158,170,182,212,214,230,282,366,369,375,],[128,128,128,128,128,128,128,128,283,128,128,128,128,]),'e':([97,122,123,158,170,182,212,214,230,235,282,366,369,375,],[129,129,129,129,129,129,129,129,129,287,129,129,129,129,]),'t':([97,122,123,158,170,182,212,214,230,235,242,282,366,369,375,],[130,130,130,130,130,130,130,130,130,130,293,130,130,130,130,]),'f':([97,122,123,158,170,182,212,214,230,235,242,247,282,366,369,375,],[131,131,131,131,131,131,131,131,131,131,131,297,131,131,131,131,]),'pnCrearListaParam':([108,],[151,]),'pnEndScript':([115,],[156,]),'pnSaveOperadorAsign':([117,],[158,]),'indexp':([119,],[161,]),'escribep':([122,],[166,]),'pnCuadRet':([127,],[172,]),'pnCuadOplog':([128,283,],[174,325,]),'pnCuadOpRelacional':([129,287,],[176,326,]),'pnCuadPlMi':([130,293,],[178,327,]),'pnCuadMuDi':([131,297,],[180,328,]),'pnSaveFondoFalso':([132,],[182,]),'pnSaveCteI':([133,],[184,]),'pnSaveCteF':([134,],[186,]),'pnSaveCteC':([135,],[188,]),'param':([151,],[201,]),'paramlist':([151,363,],[202,377,]),'tipoparam':([151,363,],[204,204,]),'pnArrCuadriplificar':([154,],[208,]),'pnGenerateEra':([160,],[212,]),'pnArrIni':([162,],[214,]),'pnCuadLee':([164,],[216,]),'pnCuadEscribe':([167,168,],[220,222,]),'pnCheckBoolIf':([169,225,],[223,281,]),'pnSaveForID':([171,],[226,]),'logic':([174,325,],[229,356,]),'logicsig':([174,325,],[230,230,]),'relacionalp':([176,326,],[234,357,]),'relsig':([176,326,],[235,235,]),'tp':([178,327,],[241,358,]),'tsig':([178,327,],[242,242,]),'fp':([180,328,],[246,359,]),'fsig':([180,328,],[247,247,]),'pnSaveOperandoConstante':([184,186,188,],[252,254,255,]),'pnCuadCopy':([191,],[256,]),'pnCuadFuncEsp':([192,193,194,195,196,197,198,199,200,],[258,260,261,262,263,264,265,266,267,]),'pnCuadAsign':([211,],[272,]),'expp':([212,],[274,]),'pnSaveOperadorLog':([232,233,],[284,286,]),'pnSaveOperadorRel':([237,238,239,240,],[288,290,291,292,]),'pnSaveOperadorPlMi':([244,245,],[294,296,]),'pnSaveOperadorMuDi':([249,250,],[298,300,]),'pnCuadParametro':([275,380,],[317,390,]),'pnArrVerify':([277,],[319,]),'pnPopFondoFalso':([301,],[329,]),'pnAddParametersTablaVar':([313,],[342,]),'pnCheckNoParam':([316,],[344,]),'exppp':([317,390,],[346,402,]),'indexpp':([319,],[349,]),'pnCreateVControl':([324,],[354,]),'pnDirecIniFunc':([341,],[360,]),'paramlistp':([342,],[362,]),'pnUpdateK':([347,],[366,]),'pnArrAccIncDim':([350,],[369,]),'pnArrCalc':([351,],[372,]),'pnCuadGoSub':([365,],[378,]),'pnArrFFPop':([368,],[381,]),'pnHandleReturnValue':([378,],[388,]),'pnMatCalc':([383,],[391,]),'falsop':([384,],[393,]),'pnEndWhile':([385,],[396,]),'pnCompControlFinal':([386,],[398,]),'pnCountVarsINTOResources':([387,],[400,]),'pnEndIf':([393,],[403,]),'pnElseIf':([394,],[405,]),'pnCloseCurrentFunction':([400,],[408,]),'pnEndFor':([415,],[416,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND','programa',10,'p_programa','lexerParser.py',196),
  ('varp -> var varp','varp',2,'p_programa','lexerParser.py',197),
  ('varp -> empty','varp',1,'p_programa','lexerParser.py',198),
  ('funcp -> func funcp','funcp',2,'p_programa','lexerParser.py',199),
  ('funcp -> empty','funcp',1,'p_programa','lexerParser.py',200),
  ('bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript','bloque',8,'p_bloque','lexerParser.py',206),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_bloque','lexerParser.py',207),
  ('estatutop -> empty','estatutop',1,'p_bloque','lexerParser.py',208),
  ('tipo_simp -> INT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexerParser.py',214),
  ('tipo_simp -> FLOAT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexerParser.py',215),
  ('tipo_simp -> CHAR pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexerParser.py',216),
  ('copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON','copy',6,'p_copy','lexerParser.py',229),
  ('variable -> ID pnSaveOperandos indexp','variable',3,'p_variable','lexerParser.py',241),
  ('indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop','indexp',7,'p_variable','lexerParser.py',242),
  ('indexp -> empty','indexp',1,'p_variable','lexerParser.py',243),
  ('indexpp -> COMMA pnArrAccIncDim exp pnMatCalc','indexpp',4,'p_variable','lexerParser.py',244),
  ('indexpp -> empty pnArrCalc','indexpp',2,'p_variable','lexerParser.py',245),
  ('llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue','llamada',10,'p_llamada','lexerParser.py',251),
  ('expp -> exp pnCuadParametro exppp','expp',3,'p_llamada','lexerParser.py',252),
  ('expp -> empty','expp',1,'p_llamada','lexerParser.py',253),
  ('exppp -> COMMA pnUpdateK exp pnCuadParametro exppp','exppp',5,'p_llamada','lexerParser.py',254),
  ('exppp -> empty','exppp',1,'p_llamada','lexerParser.py',255),
  ('var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON','var',6,'p_var','lexerParser.py',261),
  ('v -> DATAFRAME pnSaveTypeVar','v',2,'p_var','lexerParser.py',262),
  ('v -> tipo_simp vp','v',2,'p_var','lexerParser.py',263),
  ('vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim vpp RIGHT_SQR_BRACKET pnArrCuadriplificar','vp',7,'p_var','lexerParser.py',264),
  ('vp -> empty','vp',1,'p_var','lexerParser.py',265),
  ('vpp -> COMMA CTEI pnArrSaveLim','vpp',3,'p_var','lexerParser.py',266),
  ('vpp -> empty','vpp',1,'p_var','lexerParser.py',267),
  ('idp -> ID pnCheckNameTablaVar pnArrAddDim idpp','idp',4,'p_var','lexerParser.py',268),
  ('idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim idpp','idpp',5,'p_var','lexerParser.py',269),
  ('idpp -> empty','idpp',1,'p_var','lexerParser.py',270),
  ('func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction','func',17,'p_func','lexerParser.py',276),
  ('returnval -> tipo_simp','returnval',1,'p_func','lexerParser.py',277),
  ('returnval -> VOID pnSaveTypeVar','returnval',2,'p_func','lexerParser.py',278),
  ('param -> paramlist','param',1,'p_param','lexerParser.py',284),
  ('param -> empty','param',1,'p_param','lexerParser.py',285),
  ('paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp','paramlist',5,'p_param','lexerParser.py',286),
  ('tipoparam -> tipo_simp','tipoparam',1,'p_param','lexerParser.py',287),
  ('tipoparam -> DATAFRAME pnSaveTypeVar','tipoparam',2,'p_param','lexerParser.py',288),
  ('paramlistp -> COMMA paramlist','paramlistp',2,'p_param','lexerParser.py',289),
  ('paramlistp -> empty','paramlistp',1,'p_param','lexerParser.py',290),
  ('estatuto -> asign','estatuto',1,'p_estatuto','lexerParser.py',296),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','lexerParser.py',297),
  ('estatuto -> lee','estatuto',1,'p_estatuto','lexerParser.py',298),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','lexerParser.py',299),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexerParser.py',300),
  ('estatuto -> ciclow','estatuto',1,'p_estatuto','lexerParser.py',301),
  ('estatuto -> ciclof','estatuto',1,'p_estatuto','lexerParser.py',302),
  ('estatuto -> funcesp','estatuto',1,'p_estatuto','lexerParser.py',303),
  ('estatuto -> return','estatuto',1,'p_estatuto','lexerParser.py',304),
  ('estatuto -> copy','estatuto',1,'p_estatuto','lexerParser.py',305),
  ('asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON','asign',6,'p_asign','lexerParser.py',311),
  ('lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON','lee',6,'p_lee','lexerParser.py',317),
  ('escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON','escribe',5,'p_escribe','lexerParser.py',323),
  ('escribep -> exp pnCuadEscribe','escribep',2,'p_escribe','lexerParser.py',324),
  ('escribep -> LETRERO pnCuadEscribe','escribep',2,'p_escribe','lexerParser.py',325),
  ('return -> RETURNS exp pnCuadRet SEMICOLON','return',4,'p_return','lexerParser.py',331),
  ('exp -> exprel pnCuadOplog logic','exp',3,'p_exp','lexerParser.py',337),
  ('logic -> logicsig exprel pnCuadOplog logic','logic',4,'p_exp','lexerParser.py',338),
  ('logic -> empty','logic',1,'p_exp','lexerParser.py',339),
  ('logicsig -> AND pnSaveOperadorLog','logicsig',2,'p_exp','lexerParser.py',340),
  ('logicsig -> OR pnSaveOperadorLog','logicsig',2,'p_exp','lexerParser.py',341),
  ('exprel -> e pnCuadOpRelacional relacionalp','exprel',3,'p_exprel','lexerParser.py',347),
  ('relacionalp -> relsig e pnCuadOpRelacional relacionalp','relacionalp',4,'p_exprel','lexerParser.py',348),
  ('relacionalp -> empty','relacionalp',1,'p_exprel','lexerParser.py',349),
  ('relsig -> LESS_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',350),
  ('relsig -> GREATER_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',351),
  ('relsig -> EQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',352),
  ('relsig -> NOTEQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',353),
  ('e -> t pnCuadPlMi tp','e',3,'p_e','lexerParser.py',359),
  ('tp -> tsig t pnCuadPlMi tp','tp',4,'p_e','lexerParser.py',360),
  ('tp -> empty','tp',1,'p_e','lexerParser.py',361),
  ('tsig -> PLUS pnSaveOperadorPlMi','tsig',2,'p_e','lexerParser.py',362),
  ('tsig -> MINUS pnSaveOperadorPlMi','tsig',2,'p_e','lexerParser.py',363),
  ('t -> f pnCuadMuDi fp','t',3,'p_t','lexerParser.py',369),
  ('fp -> fsig f pnCuadMuDi fp','fp',4,'p_t','lexerParser.py',370),
  ('fp -> empty','fp',1,'p_t','lexerParser.py',371),
  ('fsig -> MULT pnSaveOperadorMuDi','fsig',2,'p_t','lexerParser.py',372),
  ('fsig -> DIV pnSaveOperadorMuDi','fsig',2,'p_t','lexerParser.py',373),
  ('f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso','f',5,'p_f','lexerParser.py',379),
  ('f -> CTEI pnSaveCteI pnSaveOperandoConstante','f',3,'p_f','lexerParser.py',380),
  ('f -> CTEF pnSaveCteF pnSaveOperandoConstante','f',3,'p_f','lexerParser.py',381),
  ('f -> CTEC pnSaveCteC pnSaveOperandoConstante','f',3,'p_f','lexerParser.py',382),
  ('f -> variable','f',1,'p_f','lexerParser.py',383),
  ('f -> llamada','f',1,'p_f','lexerParser.py',384),
  ('f -> funcesp','f',1,'p_f','lexerParser.py',385),
  ('condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf','condicion',11,'p_condicion','lexerParser.py',391),
  ('falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','falsop',5,'p_condicion','lexerParser.py',392),
  ('falsop -> empty','falsop',1,'p_condicion','lexerParser.py',393),
  ('ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile','ciclow',10,'p_ciclow','lexerParser.py',399),
  ('ciclof -> FOR LEFT_PARENT variable pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor','ciclof',15,'p_ciclof','lexerParser.py',405),
  ('funcesp -> mean','funcesp',1,'p_funcesp','lexerParser.py',411),
  ('funcesp -> mode','funcesp',1,'p_funcesp','lexerParser.py',412),
  ('funcesp -> median','funcesp',1,'p_funcesp','lexerParser.py',413),
  ('funcesp -> variance','funcesp',1,'p_funcesp','lexerParser.py',414),
  ('funcesp -> max','funcesp',1,'p_funcesp','lexerParser.py',415),
  ('funcesp -> min','funcesp',1,'p_funcesp','lexerParser.py',416),
  ('funcesp -> staddes','funcesp',1,'p_funcesp','lexerParser.py',417),
  ('funcesp -> boxplot','funcesp',1,'p_funcesp','lexerParser.py',418),
  ('funcesp -> linreg','funcesp',1,'p_funcesp','lexerParser.py',419),
  ('funcesp -> copy','funcesp',1,'p_funcesp','lexerParser.py',420),
  ('mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mean',6,'p_mean','lexerParser.py',426),
  ('mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mode',6,'p_mode','lexerParser.py',432),
  ('median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','median',6,'p_median','lexerParser.py',438),
  ('variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','variance',6,'p_variance','lexerParser.py',444),
  ('max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','max',6,'p_max','lexerParser.py',450),
  ('min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','min',6,'p_min','lexerParser.py',456),
  ('staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','staddes',6,'p_staddes','lexerParser.py',462),
  ('boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','boxplot',6,'p_boxplot','lexerParser.py',468),
  ('linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','linreg',6,'p_linreg','lexerParser.py',474),
  ('pnCrearDirFunc -> empty','pnCrearDirFunc',1,'p_pnCrearDirFunc','lexerParser.py',484),
  ('pnCuadGotoMain -> empty','pnCuadGotoMain',1,'p_pnCuadGotoMain','lexerParser.py',494),
  ('pnDirMain -> empty','pnDirMain',1,'p_pnDirMain','lexerParser.py',503),
  ('pnScriptFuncDir -> empty','pnScriptFuncDir',1,'p_pnScriptFuncDir','lexerParser.py',511),
  ('pnCheckTablaVar -> empty','pnCheckTablaVar',1,'p_pnCheckTablaVar','lexerParser.py',520),
  ('pnCrearListaParam -> empty','pnCrearListaParam',1,'p_pnCrearListaParam','lexerParser.py',528),
  ('pnSaveTypeVar -> empty','pnSaveTypeVar',1,'p_pnSaveTypeVar','lexerParser.py',535),
  ('pnCheckNameTablaVar -> empty','pnCheckNameTablaVar',1,'p_pnCheckNameTablaVar','lexerParser.py',544),
  ('pnAddFuncinDir -> empty','pnAddFuncinDir',1,'p_pnAddFuncinDir','lexerParser.py',592),
  ('pnAddParametersTablaVar -> empty','pnAddParametersTablaVar',1,'p_pnAddParametersTablaVar','lexerParser.py',626),
  ('pnCountVarsINTOResources -> empty','pnCountVarsINTOResources',1,'p_pnCountVarsINTOResources','lexerParser.py',656),
  ('pnDirecIniFunc -> empty','pnDirecIniFunc',1,'p_pnDirecIniFunc','lexerParser.py',685),
  ('pnCloseCurrentFunction -> empty','pnCloseCurrentFunction',1,'p_pnCloseCurrentFunction','lexerParser.py',692),
  ('pnEndScript -> empty','pnEndScript',1,'p_pnEndScript','lexerParser.py',715),
  ('pnCheckFunc -> empty','pnCheckFunc',1,'p_pnCheckFunc','lexerParser.py',736),
  ('pnGenerateEra -> empty','pnGenerateEra',1,'p_pnGenerateEra','lexerParser.py',750),
  ('pnCuadParametro -> empty','pnCuadParametro',1,'p_pnCuadParametro','lexerParser.py',782),
  ('pnUpdateK -> empty','pnUpdateK',1,'p_pnUpdateK','lexerParser.py',816),
  ('pnCheckNoParam -> empty','pnCheckNoParam',1,'p_pnCheckNoParam','lexerParser.py',824),
  ('pnCuadGoSub -> empty','pnCuadGoSub',1,'p_pnCuadGoSub','lexerParser.py',841),
  ('pnHandleReturnValue -> empty','pnHandleReturnValue',1,'p_pnHandleReturnValue','lexerParser.py',853),
  ('pnCuadRet -> empty','pnCuadRet',1,'p_pnCuadRet','lexerParser.py',881),
  ('pnSaveCteI -> empty','pnSaveCteI',1,'p_pnSaveCteI','lexerParser.py',913),
  ('pnSaveCteF -> empty','pnSaveCteF',1,'p_pnSaveCteF','lexerParser.py',924),
  ('pnSaveCteC -> empty','pnSaveCteC',1,'p_pnSaveCteC','lexerParser.py',934),
  ('pnSaveFondoFalso -> empty','pnSaveFondoFalso',1,'p_pnSaveFondoFalso','lexerParser.py',944),
  ('pnPopFondoFalso -> empty','pnPopFondoFalso',1,'p_pnPopFondoFalso','lexerParser.py',951),
  ('pnSaveOperandos -> empty','pnSaveOperandos',1,'p_pnSaveOperandos','lexerParser.py',961),
  ('pnSaveOperandoConstante -> empty','pnSaveOperandoConstante',1,'p_pnSaveOperandoConstante','lexerParser.py',986),
  ('pnSaveOperadorPlMi -> empty','pnSaveOperadorPlMi',1,'p_pnSaveOperadorPlMi','lexerParser.py',994),
  ('pnSaveOperadorMuDi -> empty','pnSaveOperadorMuDi',1,'p_pnSaveOperadorMuDi','lexerParser.py',1001),
  ('pnSaveOperadorRel -> empty','pnSaveOperadorRel',1,'p_pnSaveOperadorRel','lexerParser.py',1008),
  ('pnSaveOperadorLog -> empty','pnSaveOperadorLog',1,'p_pnSaveOperadorLog','lexerParser.py',1015),
  ('pnCuadPlMi -> empty','pnCuadPlMi',1,'p_pnCuadPlMi','lexerParser.py',1022),
  ('pnCuadMuDi -> empty','pnCuadMuDi',1,'p_pnCuadMuDi','lexerParser.py',1060),
  ('pnCuadOpRelacional -> empty','pnCuadOpRelacional',1,'p_pnCuadOpRelacional','lexerParser.py',1098),
  ('pnCuadOplog -> empty','pnCuadOplog',1,'p_pnCuadOplog','lexerParser.py',1137),
  ('pnSaveOperadorAsign -> empty','pnSaveOperadorAsign',1,'p_pnSaveOperadorAsign','lexerParser.py',1174),
  ('pnCuadAsign -> empty','pnCuadAsign',1,'p_pnCuadAsign','lexerParser.py',1181),
  ('pnCuadEscribe -> empty','pnCuadEscribe',1,'p_pnCuadEscribe','lexerParser.py',1210),
  ('pnCuadLee -> empty','pnCuadLee',1,'p_pnCuadLee','lexerParser.py',1250),
  ('pnCuadCopy -> empty','pnCuadCopy',1,'p_pnCuadCopy','lexerParser.py',1268),
  ('pnCuadFuncEsp -> empty','pnCuadFuncEsp',1,'p_pnCuadFuncEsp','lexerParser.py',1287),
  ('pnCheckBoolIf -> empty','pnCheckBoolIf',1,'p_pnCheckBoolIf','lexerParser.py',1337),
  ('pnElseIf -> empty','pnElseIf',1,'p_pnElseIf','lexerParser.py',1357),
  ('pnEndIf -> empty','pnEndIf',1,'p_pnEndIf','lexerParser.py',1368),
  ('pnSaveWhile -> empty','pnSaveWhile',1,'p_pnSaveWhile','lexerParser.py',1377),
  ('pnEndWhile -> empty','pnEndWhile',1,'p_pnEndWhile','lexerParser.py',1386),
  ('pnSaveForID -> empty','pnSaveForID',1,'p_pnSaveForID','lexerParser.py',1400),
  ('pnCreateVControl -> empty','pnCreateVControl',1,'p_pnCreateVControl','lexerParser.py',1427),
  ('pnCompControlFinal -> empty','pnCompControlFinal',1,'p_pnCompControlFinal','lexerParser.py',1462),
  ('pnEndFor -> empty','pnEndFor',1,'p_pnEndFor','lexerParser.py',1504),
  ('pnArrCreateNode -> empty','pnArrCreateNode',1,'p_pnArrCreateNode','lexerParser.py',1555),
  ('pnArrSaveLim -> empty','pnArrSaveLim',1,'p_pnArrSaveLim','lexerParser.py',1569),
  ('pnArrCuadriplificar -> empty','pnArrCuadriplificar',1,'p_pnArrCuadriplificar','lexerParser.py',1587),
  ('pnArrAddDim -> empty','pnArrAddDim',1,'p_pnArrAddDim','lexerParser.py',1606),
  ('pnArrIni -> empty','pnArrIni',1,'p_pnArrIni','lexerParser.py',1632),
  ('pnArrVerify -> empty','pnArrVerify',1,'p_pnArrVerify','lexerParser.py',1663),
  ('pnArrAccIncDim -> empty','pnArrAccIncDim',1,'p_pnArrAccIncDim','lexerParser.py',1684),
  ('pnArrCalc -> empty','pnArrCalc',1,'p_pnArrCalc','lexerParser.py',1707),
  ('pnMatCalc -> empty','pnMatCalc',1,'p_pnMatCalc','lexerParser.py',1746),
  ('pnArrFFPop -> empty','pnArrFFPop',1,'p_pnArrFFPop','lexerParser.py',1822),
  ('pnCuadEND -> empty','pnCuadEND',1,'p_pnCuadEND','lexerParser.py',1831),
  ('empty -> <empty>','empty',0,'p_empty','lexerParser.py',1841),
]

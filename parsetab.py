
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVAND ARROW ASIGN BOXPLOT CHAR COMMA COMMENT CTEC CTEF CTEI DATAFRAME DIV DO EQUALS FLOAT FOR FUNC GREATER_THAN ID IF IF_FALSE IF_TRUE INT LEFT_CUR_BRACKET LEFT_PARENT LEFT_SQR_BRACKET LESS_THAN LETRERO LINREG MAX MEAN MEDIAN MIN MINUS MODE MULT NOTEQUALS OR PLUS READ READ_FILE RETURNS RIGHT_CUR_BRACKET RIGHT_PARENT RIGHT_SQR_BRACKET SCRIPT SEMICOLON STADDES VAR VARIANCE VOID WHILE WRITE\n    programa : SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque\n    varp : var varp \n         | empty\n    funcp : func funcp \n          | empty\n    \n    bloque : DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript\n    estatutop : estatuto estatutop \n              | empty\n    \n    tipo_simp : INT pnSaveTypeVar\n              | FLOAT pnSaveTypeVar\n              | CHAR pnSaveTypeVar\n    \n    tipo_comp : DATAFRAME \n              | file\n    \n    copy : READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON\n    \n    file : ID\n    \n    variable : ID pnSaveOperandos indexp\n    indexp : LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET \n           | empty\n    indexpp : COMMA exp \n            | empty\n    \n    llamada : ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub\n    expp : exp pnCuadParametro exppp\n         | empty\n    exppp : COMMA pnUpdateK exp pnCuadParametro exppp\n          | empty\n    \n    var : VAR pnCheckTablaVar v ARROW idp SEMICOLON\n    v : DATAFRAME pnSaveTypeVar\n      | tipo_simp vp\n    vp : LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET \n       | empty\n    vpp : COMMA CTEI \n        | empty\n    idp : ID pnCheckNameTablaVar idpp\n    idpp : COMMA ID pnCheckNameTablaVar idpp\n         | empty\n    \n    func : FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction\n    returnval : tipo_simp \n              | VOID pnSaveTypeVar\n    \n    param : paramlist\n          | empty\n    paramlist : tipoparam ARROW ID pnAddParametersTablaVar paramlistp\n    tipoparam : tipo_simp\n              | DATAFRAME pnSaveTypeVar\n    paramlistp : COMMA paramlist\n               | empty\n    \n    estatuto : asign\n             | llamada\n             | lee\n             | escribe\n             | condicion\n             | ciclow\n             | ciclof\n             | funcesp\n             | return\n             | copy\n    \n    asign : variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON\n    \n    lee : READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON\n    \n    escribe :  WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON\n    escribep : exp pnCuadEscribe\n             | LETRERO pnCuadEscribe\n    \n    return : RETURNS exp SEMICOLON\n    \n    exp : exprel pnCuadOplog logic\n    logic : logicsig exprel pnCuadOplog logic \n          | empty\n    logicsig : AND pnSaveOperadorLog\n             | OR pnSaveOperadorLog\n    \n    exprel : e pnCuadOpRelacional relacionalp\n    relacionalp : relsig e pnCuadOpRelacional relacionalp \n                | empty\n    relsig : LESS_THAN pnSaveOperadorRel\n           | GREATER_THAN pnSaveOperadorRel\n           | EQUALS pnSaveOperadorRel\n           | NOTEQUALS pnSaveOperadorRel\n    \n    e : t pnCuadPlMi tp\n    tp : tsig t pnCuadPlMi tp \n       | empty\n    tsig : PLUS pnSaveOperadorPlMi\n         | MINUS pnSaveOperadorPlMi\n    \n    t : f pnCuadMuDi fp\n    fp : fsig f pnCuadMuDi fp \n       | empty\n    fsig : MULT pnSaveOperadorMuDi\n         | DIV pnSaveOperadorMuDi\n    \n    f : LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso\n      | CTEI pnSaveCteI  pnSaveOperandoConstante\n      | CTEF pnSaveCteF pnSaveOperandoConstante\n      | CTEC pnSaveCteC pnSaveOperandoConstante\n      | variable\n      | llamada\n      | funcesp\n    \n    condicion : IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf\n    falsop : IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET \n           | empty\n    \n    ciclow : WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile\n    \n    ciclof : FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor\n    \n    funcesp : mean\n            | mode\n            | median\n            | variance\n            | max\n            | min\n            | staddes\n            | boxplot\n            | linreg\n            | copy\n    \n    mean : MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    mode : MODE LEFT_PARENT variable  pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    median : MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    variance : VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    max : MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    min : MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    staddes : STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    boxplot : BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    linreg : LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    pnCrearDirFunc : empty\n    \n    pnScriptFuncDir : empty\n    \n    pnCheckTablaVar : empty\n    \n    pnCrearListaParam : empty\n    \n    pnSaveTypeVar : empty\n    \n    pnCheckNameTablaVar : empty\n    \n    pnAddFuncinDir : empty\n    \n    pnAddParametersTablaVar : empty\n    \n    pnCountVarsINTOResources : empty\n    \n    pnDirecIniFunc : empty\n    \n    pnCloseCurrentFunction : empty\n    \n    pnEndScript : empty\n    \n    pnCheckFunc : empty\n    \n    pnGenerateEra : empty\n    \n    pnCuadParametro : empty\n    \n    pnUpdateK : empty\n    \n    pnCheckNoParam : empty\n    \n    pnCuadGoSub : empty\n    \n    pnSaveCteI : empty\n    \n    pnSaveCteF : empty\n    \n    pnSaveCteC : empty\n    \n    pnSaveFondoFalso : empty\n    \n    pnPopFondoFalso : empty\n    \n    pnSaveOperandos : empty\n    \n    pnSaveOperandoConstante : empty\n    \n    pnSaveOperadorPlMi : empty\n    \n    pnSaveOperadorMuDi : empty\n    \n    pnSaveOperadorRel : empty\n    \n    pnSaveOperadorLog : empty\n    \n    pnCuadPlMi : empty\n    \n    pnCuadMuDi : empty\n    \n    pnCuadOpRelacional : empty\n    \n    pnCuadOplog : empty\n    \n    pnSaveOperadorAsign : empty\n    \n    pnCuadAsign : empty\n    \n    pnCuadEscribe : empty\n    \n    pnCuadLee : empty\n    \n    pnCuadCopy : empty\n    \n    pnCuadFuncEsp : empty\n    \n    pnCheckBoolIf : empty\n    \n    pnElseIf : empty\n    \n    pnEndIf : empty\n    \n    pnSaveWhile : empty\n    \n    pnEndWhile : empty\n    \n    pnSaveForID : empty\n    \n    pnCreateVControl : empty\n    \n    pnCompControlFinal : empty\n    \n    pnEndFor : empty\n    \n    empty :'
    
_lr_action_items = {'SCRIPT':([0,],[2,]),'$end':([1,20,104,142,143,],[0,-1,-163,-6,-126,]),'ID':([2,3,4,10,11,14,15,17,22,32,33,39,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,100,106,110,111,112,115,121,131,132,133,134,135,136,137,138,139,144,145,146,148,156,158,167,168,190,191,206,208,209,211,213,214,215,216,218,220,221,223,225,226,257,260,263,265,266,267,269,270,271,272,273,275,276,277,279,280,281,294,296,302,312,313,314,315,316,317,318,319,320,321,322,327,329,330,337,340,341,342,345,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,5,-115,-163,-3,-163,-5,-2,-4,-163,45,47,-163,72,-26,72,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,128,141,-163,151,128,128,157,-163,151,151,151,151,151,151,151,151,151,128,-148,-163,128,128,-61,128,-136,128,-128,128,-163,-163,128,-163,-163,-163,-163,128,-163,-163,128,-163,-163,128,-58,128,-65,-143,-66,-70,-142,-71,-72,-73,-77,-140,-78,-82,-141,-83,323,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,-163,72,72,-163,-163,128,-130,128,72,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,72,72,-36,-125,-92,-163,-95,-162,]),'SEMICOLON':([5,6,7,46,47,53,54,78,79,80,81,82,83,84,85,86,99,101,108,116,117,118,119,120,122,123,124,125,126,127,128,129,141,147,149,159,160,161,162,163,164,165,166,169,170,171,172,173,174,175,188,189,196,205,207,210,212,217,219,222,224,228,229,230,231,250,251,252,259,264,268,274,278,282,283,284,285,286,287,288,289,290,291,292,297,300,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,324,325,333,334,335,336,340,351,352,],[-163,8,-116,52,-163,-163,-120,-96,-97,-98,-99,-100,-101,-102,-103,-104,-33,-35,-163,158,-163,-163,-163,-163,-163,-163,-163,-88,-89,-90,-163,-105,-163,-16,-18,-163,-147,-163,-146,-163,-144,-163,-145,-163,-133,-163,-134,-163,-135,-138,-163,-163,260,-62,-64,-67,-69,-74,-76,-79,-81,-85,-139,-86,-87,-34,296,-149,302,-163,-163,-163,-163,-163,312,313,314,315,316,317,318,319,320,321,-163,-17,-163,-163,-163,-163,-84,-137,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,340,-131,-63,-68,-75,-80,-163,-21,-132,]),'VAR':([8,10,32,52,322,],[12,12,12,-26,12,]),'FUNC':([8,9,10,11,14,17,32,44,52,367,374,375,378,379,],[-163,16,-163,-3,16,-2,-163,16,-26,-163,-163,-123,-36,-125,]),'DO':([8,9,10,11,13,14,15,17,22,52,367,374,375,378,379,],[-163,-163,-163,-3,21,-163,-5,-2,-4,-26,-163,-163,-123,-36,-125,]),'READ':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,158,260,296,302,312,313,314,315,316,317,318,319,320,321,322,329,330,337,340,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,73,-26,73,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,73,73,-163,-163,73,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,73,73,-36,-125,-92,-163,-95,-162,]),'WRITE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,158,260,296,302,312,313,314,315,316,317,318,319,320,321,322,329,330,337,340,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,74,-26,74,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,74,74,-163,-163,74,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,74,74,-36,-125,-92,-163,-95,-162,]),'IF':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,158,260,296,302,312,313,314,315,316,317,318,319,320,321,322,329,330,337,340,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,75,-26,75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,75,75,-163,-163,75,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,75,75,-36,-125,-92,-163,-95,-162,]),'WHILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,158,260,296,302,312,313,314,315,316,317,318,319,320,321,322,329,330,337,340,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,76,-26,76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,76,76,-163,-163,76,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,76,76,-36,-125,-92,-163,-95,-162,]),'FOR':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,158,260,296,302,312,313,314,315,316,317,318,319,320,321,322,329,330,337,340,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,77,-26,77,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,77,77,-163,-163,77,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,77,77,-36,-125,-92,-163,-95,-162,]),'RETURNS':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,158,260,296,302,312,313,314,315,316,317,318,319,320,321,322,329,330,337,340,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,87,-26,87,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,87,87,-163,-163,87,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,87,87,-36,-125,-92,-163,-95,-162,]),'READ_FILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,111,112,121,144,145,146,148,156,158,167,168,190,191,206,208,209,211,213,214,215,216,218,220,221,223,225,226,257,260,263,265,266,267,269,270,271,272,273,275,276,277,279,280,281,296,302,312,313,314,315,316,317,318,319,320,321,322,327,329,330,337,340,341,342,345,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,88,-26,88,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,88,-163,88,88,-163,88,-148,-163,88,88,-61,88,-136,88,-128,88,-163,-163,88,-163,-163,-163,-163,88,-163,-163,88,-163,-163,88,-58,88,-65,-143,-66,-70,-142,-71,-72,-73,-77,-140,-78,-82,-141,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,-163,88,88,-163,-163,88,-130,88,88,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,88,88,-36,-125,-92,-163,-95,-162,]),'MEAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,111,112,121,144,145,146,148,156,158,167,168,190,191,206,208,209,211,213,214,215,216,218,220,221,223,225,226,257,260,263,265,266,267,269,270,271,272,273,275,276,277,279,280,281,296,302,312,313,314,315,316,317,318,319,320,321,322,327,329,330,337,340,341,342,345,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,89,-26,89,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,89,-163,89,89,-163,89,-148,-163,89,89,-61,89,-136,89,-128,89,-163,-163,89,-163,-163,-163,-163,89,-163,-163,89,-163,-163,89,-58,89,-65,-143,-66,-70,-142,-71,-72,-73,-77,-140,-78,-82,-141,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,-163,89,89,-163,-163,89,-130,89,89,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,89,89,-36,-125,-92,-163,-95,-162,]),'MODE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,111,112,121,144,145,146,148,156,158,167,168,190,191,206,208,209,211,213,214,215,216,218,220,221,223,225,226,257,260,263,265,266,267,269,270,271,272,273,275,276,277,279,280,281,296,302,312,313,314,315,316,317,318,319,320,321,322,327,329,330,337,340,341,342,345,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,90,-26,90,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,90,-163,90,90,-163,90,-148,-163,90,90,-61,90,-136,90,-128,90,-163,-163,90,-163,-163,-163,-163,90,-163,-163,90,-163,-163,90,-58,90,-65,-143,-66,-70,-142,-71,-72,-73,-77,-140,-78,-82,-141,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,-163,90,90,-163,-163,90,-130,90,90,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,90,90,-36,-125,-92,-163,-95,-162,]),'MEDIAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,111,112,121,144,145,146,148,156,158,167,168,190,191,206,208,209,211,213,214,215,216,218,220,221,223,225,226,257,260,263,265,266,267,269,270,271,272,273,275,276,277,279,280,281,296,302,312,313,314,315,316,317,318,319,320,321,322,327,329,330,337,340,341,342,345,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,91,-26,91,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,91,-163,91,91,-163,91,-148,-163,91,91,-61,91,-136,91,-128,91,-163,-163,91,-163,-163,-163,-163,91,-163,-163,91,-163,-163,91,-58,91,-65,-143,-66,-70,-142,-71,-72,-73,-77,-140,-78,-82,-141,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,-163,91,91,-163,-163,91,-130,91,91,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,91,91,-36,-125,-92,-163,-95,-162,]),'VARIANCE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,111,112,121,144,145,146,148,156,158,167,168,190,191,206,208,209,211,213,214,215,216,218,220,221,223,225,226,257,260,263,265,266,267,269,270,271,272,273,275,276,277,279,280,281,296,302,312,313,314,315,316,317,318,319,320,321,322,327,329,330,337,340,341,342,345,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,92,-26,92,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,92,-163,92,92,-163,92,-148,-163,92,92,-61,92,-136,92,-128,92,-163,-163,92,-163,-163,-163,-163,92,-163,-163,92,-163,-163,92,-58,92,-65,-143,-66,-70,-142,-71,-72,-73,-77,-140,-78,-82,-141,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,-163,92,92,-163,-163,92,-130,92,92,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,92,92,-36,-125,-92,-163,-95,-162,]),'MAX':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,111,112,121,144,145,146,148,156,158,167,168,190,191,206,208,209,211,213,214,215,216,218,220,221,223,225,226,257,260,263,265,266,267,269,270,271,272,273,275,276,277,279,280,281,296,302,312,313,314,315,316,317,318,319,320,321,322,327,329,330,337,340,341,342,345,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,93,-26,93,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,93,-163,93,93,-163,93,-148,-163,93,93,-61,93,-136,93,-128,93,-163,-163,93,-163,-163,-163,-163,93,-163,-163,93,-163,-163,93,-58,93,-65,-143,-66,-70,-142,-71,-72,-73,-77,-140,-78,-82,-141,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,-163,93,93,-163,-163,93,-130,93,93,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,93,93,-36,-125,-92,-163,-95,-162,]),'MIN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,111,112,121,144,145,146,148,156,158,167,168,190,191,206,208,209,211,213,214,215,216,218,220,221,223,225,226,257,260,263,265,266,267,269,270,271,272,273,275,276,277,279,280,281,296,302,312,313,314,315,316,317,318,319,320,321,322,327,329,330,337,340,341,342,345,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,94,-26,94,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,94,-163,94,94,-163,94,-148,-163,94,94,-61,94,-136,94,-128,94,-163,-163,94,-163,-163,-163,-163,94,-163,-163,94,-163,-163,94,-58,94,-65,-143,-66,-70,-142,-71,-72,-73,-77,-140,-78,-82,-141,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,-163,94,94,-163,-163,94,-130,94,94,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,94,94,-36,-125,-92,-163,-95,-162,]),'STADDES':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,111,112,121,144,145,146,148,156,158,167,168,190,191,206,208,209,211,213,214,215,216,218,220,221,223,225,226,257,260,263,265,266,267,269,270,271,272,273,275,276,277,279,280,281,296,302,312,313,314,315,316,317,318,319,320,321,322,327,329,330,337,340,341,342,345,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,95,-26,95,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,95,-163,95,95,-163,95,-148,-163,95,95,-61,95,-136,95,-128,95,-163,-163,95,-163,-163,-163,-163,95,-163,-163,95,-163,-163,95,-58,95,-65,-143,-66,-70,-142,-71,-72,-73,-77,-140,-78,-82,-141,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,-163,95,95,-163,-163,95,-130,95,95,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,95,95,-36,-125,-92,-163,-95,-162,]),'BOXPLOT':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,111,112,121,144,145,146,148,156,158,167,168,190,191,206,208,209,211,213,214,215,216,218,220,221,223,225,226,257,260,263,265,266,267,269,270,271,272,273,275,276,277,279,280,281,296,302,312,313,314,315,316,317,318,319,320,321,322,327,329,330,337,340,341,342,345,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,96,-26,96,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,96,-163,96,96,-163,96,-148,-163,96,96,-61,96,-136,96,-128,96,-163,-163,96,-163,-163,-163,-163,96,-163,-163,96,-163,-163,96,-58,96,-65,-143,-66,-70,-142,-71,-72,-73,-77,-140,-78,-82,-141,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,-163,96,96,-163,-163,96,-130,96,96,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,96,96,-36,-125,-92,-163,-95,-162,]),'LINREG':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,111,112,121,144,145,146,148,156,158,167,168,190,191,206,208,209,211,213,214,215,216,218,220,221,223,225,226,257,260,263,265,266,267,269,270,271,272,273,275,276,277,279,280,281,296,302,312,313,314,315,316,317,318,319,320,321,322,327,329,330,337,340,341,342,345,346,347,351,352,354,355,360,362,363,364,367,369,370,374,375,376,377,378,379,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,97,-26,97,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,97,-163,97,97,-163,97,-148,-163,97,97,-61,97,-136,97,-128,97,-163,-163,97,-163,-163,-163,-163,97,-163,-163,97,-163,-163,97,-58,97,-65,-143,-66,-70,-142,-71,-72,-73,-77,-140,-78,-82,-141,-83,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,-163,97,97,-163,-163,97,-130,97,97,-124,-21,-132,-163,-163,-163,-93,-94,-158,-163,-91,-156,-163,-123,97,97,-36,-125,-92,-163,-95,-162,]),'RIGHT_CUR_BRACKET':([10,11,14,15,17,22,32,44,49,52,58,59,60,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,105,158,260,296,302,312,313,314,315,316,317,318,319,320,321,322,329,330,337,340,343,344,346,347,351,352,354,355,357,360,362,363,364,367,369,370,374,375,376,377,378,379,380,381,382,383,384,385,],[-163,-3,-163,-5,-2,-4,-163,-163,-163,-26,104,-163,-8,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-7,-61,-58,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,-163,-163,-163,-163,354,355,-163,-124,-21,-132,-163,-163,367,-163,-93,-94,-158,-163,-91,-156,-163,-123,-163,-163,-36,-125,382,383,-92,-163,-95,-162,]),'DATAFRAME':([12,18,19,98,140,186,187,349,],[-163,30,-117,-163,-163,249,-118,249,]),'INT':([12,16,18,19,98,140,186,187,349,],[-163,26,26,-117,-163,-163,26,-118,26,]),'FLOAT':([12,16,18,19,98,140,186,187,349,],[-163,27,27,-117,-163,-163,27,-118,27,]),'CHAR':([12,16,18,19,98,140,186,187,349,],[-163,28,28,-117,-163,-163,28,-118,28,]),'VOID':([16,],[25,]),'RIGHT_PARENT':([19,78,79,80,81,82,83,84,85,86,98,108,117,118,119,120,122,123,124,125,126,127,128,129,140,146,147,149,150,151,152,153,154,155,159,160,161,162,163,164,165,166,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,190,191,193,194,195,197,198,199,200,201,202,205,207,210,212,217,219,222,224,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,253,254,255,262,264,268,274,278,282,298,299,300,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,326,328,333,334,335,336,338,339,340,348,350,351,352,353,356,358,359,365,366,368,],[-117,-96,-97,-98,-99,-100,-101,-102,-103,-104,-163,-163,-163,-163,-163,-163,-163,-163,-163,-88,-89,-90,-163,-105,-163,-163,-16,-18,-163,-163,196,-163,-163,-163,-163,-147,-163,-146,-163,-144,-163,-145,-163,-133,-163,-134,-163,-135,-138,-163,-163,-163,-163,-163,-163,-163,-163,-163,-163,-163,-118,-163,-128,259,-151,-138,-59,-150,-60,261,-154,-163,-62,-64,-67,-69,-74,-76,-79,-81,282,-85,-139,-86,-87,283,-152,284,-153,285,286,287,288,289,290,291,292,293,-39,-40,297,-163,-23,304,-163,-163,-163,-163,-163,-163,-129,-17,-163,-163,-163,-163,-84,-137,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,-22,-25,-63,-68,-75,-80,-163,-122,-163,-41,-45,-21,-132,-163,-163,-44,-163,373,-161,-24,]),'LEFT_CUR_BRACKET':([21,293,303,304,361,371,372,373,],[32,322,329,330,-163,376,-155,377,]),'ARROW':([23,24,25,26,27,28,29,30,31,34,35,36,37,38,40,41,43,102,247,248,249,295,],[33,-37,-163,-163,-163,-163,39,-163,-163,-38,-119,-9,-10,-11,-27,-28,-30,-29,294,-42,-163,-43,]),'LEFT_SQR_BRACKET':([26,27,28,31,35,36,37,38,72,108,109,128,151,175,195,],[-163,-163,-163,42,-119,-9,-10,-11,-163,148,-138,-163,-163,-138,-138,]),'CTEI':([42,56,87,106,111,112,121,144,145,146,148,156,167,168,190,191,206,208,209,211,213,214,215,216,218,220,221,223,225,226,257,263,265,266,267,269,270,271,272,273,275,276,277,279,280,281,327,341,342,345,],[48,103,122,-163,122,122,-163,122,-148,-163,122,122,122,-136,122,-128,122,-163,-163,122,-163,-163,-163,-163,122,-163,-163,122,-163,-163,122,122,-65,-143,-66,-70,-142,-71,-72,-73,-77,-140,-78,-82,-141,-83,-163,122,-130,122,]),'LEFT_PARENT':([45,50,51,72,73,74,75,76,77,87,88,89,90,91,92,93,94,95,96,97,106,107,109,111,112,113,114,121,128,144,145,146,148,156,167,168,175,190,191,206,208,209,211,213,214,215,216,218,220,221,223,225,226,257,263,265,266,267,269,270,271,272,273,275,276,277,279,280,281,327,341,342,345,],[-163,98,-121,-163,110,111,112,-163,115,121,130,131,132,133,134,135,136,137,138,139,-163,146,-127,121,121,156,-157,-163,-163,121,-148,-163,121,121,121,-136,-127,121,-128,121,-163,-163,121,-163,-163,-163,-163,121,-163,-163,121,-163,-163,121,121,-65,-143,-66,-70,-142,-71,-72,-73,-77,-140,-78,-82,-141,-83,-163,121,-130,121,]),'COMMA':([47,48,53,54,78,79,80,81,82,83,84,85,86,108,117,118,119,120,122,123,124,125,126,127,128,129,141,147,149,159,160,161,162,163,164,165,166,169,170,171,172,173,174,175,188,192,205,207,210,212,217,219,222,224,228,229,230,231,254,264,268,274,278,282,298,299,300,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,323,331,332,333,334,335,336,338,339,340,351,352,353,359,],[-163,56,100,-120,-96,-97,-98,-99,-100,-101,-102,-103,-104,-163,-163,-163,-163,-163,-163,-163,-163,-88,-89,-90,-163,-105,-163,-16,-18,-163,-147,-163,-146,-163,-144,-163,-145,-163,-133,-163,-134,-163,-135,-138,100,257,-62,-64,-67,-69,-74,-76,-79,-81,-85,-139,-86,-87,-163,-163,-163,-163,-163,-163,327,-129,-17,-163,-163,-163,-163,-163,-84,-137,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,345,-160,-63,-68,-75,-80,349,-122,-163,-21,-132,-163,327,]),'RIGHT_SQR_BRACKET':([48,55,57,78,79,80,81,82,83,84,85,86,103,108,117,118,119,120,122,123,124,125,126,127,128,129,147,149,159,160,161,162,163,164,165,166,169,170,171,172,173,174,175,192,205,207,210,212,217,219,222,224,228,229,230,231,256,258,264,268,274,278,282,300,301,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,333,334,335,336,340,351,352,],[-163,102,-32,-96,-97,-98,-99,-100,-101,-102,-103,-104,-31,-163,-163,-163,-163,-163,-163,-163,-163,-88,-89,-90,-163,-105,-16,-18,-163,-147,-163,-146,-163,-144,-163,-145,-163,-133,-163,-134,-163,-135,-138,-163,-62,-64,-67,-69,-74,-76,-79,-81,-85,-139,-86,-87,300,-20,-163,-163,-163,-163,-163,-17,-19,-163,-163,-163,-163,-84,-137,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-63,-68,-75,-80,-163,-21,-132,]),'ASIGN':([71,72,108,109,147,149,157,203,204,300,],[106,-163,-163,-138,-16,-18,-163,263,-159,-17,]),'MULT':([78,79,80,81,82,83,84,85,86,108,120,122,123,124,125,126,127,128,129,147,149,165,166,169,170,171,172,173,174,175,228,229,230,231,278,282,300,309,310,311,312,313,314,315,316,317,318,319,320,321,340,351,352,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-163,-163,-163,-163,-163,-88,-89,-90,-163,-105,-16,-18,225,-145,-163,-133,-163,-134,-163,-135,-138,-85,-139,-86,-87,-163,-163,-17,225,-84,-137,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,-21,-132,]),'DIV':([78,79,80,81,82,83,84,85,86,108,120,122,123,124,125,126,127,128,129,147,149,165,166,169,170,171,172,173,174,175,228,229,230,231,278,282,300,309,310,311,312,313,314,315,316,317,318,319,320,321,340,351,352,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-163,-163,-163,-163,-163,-88,-89,-90,-163,-105,-16,-18,226,-145,-163,-133,-163,-134,-163,-135,-138,-85,-139,-86,-87,-163,-163,-17,226,-84,-137,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-163,-21,-132,]),'PLUS':([78,79,80,81,82,83,84,85,86,108,119,120,122,123,124,125,126,127,128,129,147,149,163,164,165,166,169,170,171,172,173,174,175,222,224,228,229,230,231,274,278,282,300,308,309,310,311,312,313,314,315,316,317,318,319,320,321,336,340,351,352,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-163,-163,-163,-163,-163,-163,-88,-89,-90,-163,-105,-16,-18,220,-144,-163,-145,-163,-133,-163,-134,-163,-135,-138,-79,-81,-85,-139,-86,-87,-163,-163,-163,-17,220,-163,-84,-137,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-80,-163,-21,-132,]),'MINUS':([78,79,80,81,82,83,84,85,86,108,119,120,122,123,124,125,126,127,128,129,147,149,163,164,165,166,169,170,171,172,173,174,175,222,224,228,229,230,231,274,278,282,300,308,309,310,311,312,313,314,315,316,317,318,319,320,321,336,340,351,352,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-163,-163,-163,-163,-163,-163,-88,-89,-90,-163,-105,-16,-18,221,-144,-163,-145,-163,-133,-163,-134,-163,-135,-138,-79,-81,-85,-139,-86,-87,-163,-163,-163,-17,221,-163,-84,-137,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-80,-163,-21,-132,]),'LESS_THAN':([78,79,80,81,82,83,84,85,86,108,118,119,120,122,123,124,125,126,127,128,129,147,149,161,162,163,164,165,166,169,170,171,172,173,174,175,217,219,222,224,228,229,230,231,268,274,278,282,300,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,335,336,340,351,352,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-163,-163,-163,-163,-163,-163,-163,-88,-89,-90,-163,-105,-16,-18,213,-146,-163,-144,-163,-145,-163,-133,-163,-134,-163,-135,-138,-74,-76,-79,-81,-85,-139,-86,-87,-163,-163,-163,-163,-17,213,-163,-163,-84,-137,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,-163,-21,-132,]),'GREATER_THAN':([78,79,80,81,82,83,84,85,86,108,118,119,120,122,123,124,125,126,127,128,129,147,149,161,162,163,164,165,166,169,170,171,172,173,174,175,217,219,222,224,228,229,230,231,268,274,278,282,300,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,335,336,340,351,352,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-163,-163,-163,-163,-163,-163,-163,-88,-89,-90,-163,-105,-16,-18,214,-146,-163,-144,-163,-145,-163,-133,-163,-134,-163,-135,-138,-74,-76,-79,-81,-85,-139,-86,-87,-163,-163,-163,-163,-17,214,-163,-163,-84,-137,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,-163,-21,-132,]),'EQUALS':([78,79,80,81,82,83,84,85,86,108,118,119,120,122,123,124,125,126,127,128,129,147,149,161,162,163,164,165,166,169,170,171,172,173,174,175,217,219,222,224,228,229,230,231,268,274,278,282,300,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,335,336,340,351,352,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-163,-163,-163,-163,-163,-163,-163,-88,-89,-90,-163,-105,-16,-18,215,-146,-163,-144,-163,-145,-163,-133,-163,-134,-163,-135,-138,-74,-76,-79,-81,-85,-139,-86,-87,-163,-163,-163,-163,-17,215,-163,-163,-84,-137,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,-163,-21,-132,]),'NOTEQUALS':([78,79,80,81,82,83,84,85,86,108,118,119,120,122,123,124,125,126,127,128,129,147,149,161,162,163,164,165,166,169,170,171,172,173,174,175,217,219,222,224,228,229,230,231,268,274,278,282,300,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,335,336,340,351,352,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-163,-163,-163,-163,-163,-163,-163,-88,-89,-90,-163,-105,-16,-18,216,-146,-163,-144,-163,-145,-163,-133,-163,-134,-163,-135,-138,-74,-76,-79,-81,-85,-139,-86,-87,-163,-163,-163,-163,-17,216,-163,-163,-84,-137,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,-163,-21,-132,]),'AND':([78,79,80,81,82,83,84,85,86,108,117,118,119,120,122,123,124,125,126,127,128,129,147,149,159,160,161,162,163,164,165,166,169,170,171,172,173,174,175,210,212,217,219,222,224,228,229,230,231,264,268,274,278,282,300,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,334,335,336,340,351,352,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-163,-163,-163,-163,-163,-163,-163,-163,-88,-89,-90,-163,-105,-16,-18,208,-147,-163,-146,-163,-144,-163,-145,-163,-133,-163,-134,-163,-135,-138,-67,-69,-74,-76,-79,-81,-85,-139,-86,-87,-163,-163,-163,-163,-163,-17,208,-163,-163,-163,-84,-137,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-68,-75,-80,-163,-21,-132,]),'OR':([78,79,80,81,82,83,84,85,86,108,117,118,119,120,122,123,124,125,126,127,128,129,147,149,159,160,161,162,163,164,165,166,169,170,171,172,173,174,175,210,212,217,219,222,224,228,229,230,231,264,268,274,278,282,300,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,334,335,336,340,351,352,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-163,-163,-163,-163,-163,-163,-163,-163,-88,-89,-90,-163,-105,-16,-18,209,-147,-163,-146,-163,-144,-163,-145,-163,-133,-163,-134,-163,-135,-138,-67,-69,-74,-76,-79,-81,-85,-139,-86,-87,-163,-163,-163,-163,-163,-17,209,-163,-163,-163,-84,-137,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-68,-75,-80,-163,-21,-132,]),'CTEF':([87,106,111,112,121,144,145,146,148,156,167,168,190,191,206,208,209,211,213,214,215,216,218,220,221,223,225,226,257,263,265,266,267,269,270,271,272,273,275,276,277,279,280,281,327,341,342,345,],[123,-163,123,123,-163,123,-148,-163,123,123,123,-136,123,-128,123,-163,-163,123,-163,-163,-163,-163,123,-163,-163,123,-163,-163,123,123,-65,-143,-66,-70,-142,-71,-72,-73,-77,-140,-78,-82,-141,-83,-163,123,-130,123,]),'CTEC':([87,106,111,112,121,144,145,146,148,156,167,168,190,191,206,208,209,211,213,214,215,216,218,220,221,223,225,226,257,263,265,266,267,269,270,271,272,273,275,276,277,279,280,281,327,341,342,345,],[124,-163,124,124,-163,124,-148,-163,124,124,124,-136,124,-128,124,-163,-163,124,-163,-163,-163,-163,124,-163,-163,124,-163,-163,124,124,-65,-143,-66,-70,-142,-71,-72,-73,-77,-140,-78,-82,-141,-83,-163,124,-130,124,]),'LETRERO':([111,130,],[154,176,]),'IF_TRUE':([261,],[303,]),'IF_FALSE':([354,],[361,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pnCrearDirFunc':([2,],[3,]),'empty':([2,5,8,9,10,12,14,25,26,27,28,30,31,32,44,45,47,48,49,53,59,72,76,98,104,106,108,117,118,119,120,121,122,123,124,128,140,141,146,150,151,153,154,155,157,159,161,163,165,169,171,173,176,177,178,179,180,181,182,183,184,185,186,188,189,190,192,202,208,209,213,214,215,216,220,221,225,226,249,254,264,268,274,278,282,297,298,305,306,307,308,309,322,323,327,329,330,337,338,340,346,353,354,355,356,359,360,361,367,374,376,377,383,],[4,7,11,15,11,19,15,35,35,35,35,35,43,11,15,51,54,57,60,101,60,109,114,19,143,145,149,160,162,164,166,168,170,172,174,175,187,54,191,194,195,198,198,201,204,207,212,219,224,229,229,229,233,235,235,235,235,235,235,235,235,235,246,101,252,255,258,201,266,266,270,270,270,270,276,276,280,280,35,299,160,162,164,166,311,325,328,332,207,212,219,224,11,339,342,60,60,347,350,352,60,299,362,364,366,328,370,372,375,379,60,60,385,]),'pnScriptFuncDir':([5,],[6,]),'varp':([8,10,32,322,],[9,17,44,337,]),'var':([8,10,32,322,],[10,10,10,10,]),'funcp':([9,14,44,],[13,22,49,]),'func':([9,14,44,],[14,14,14,]),'pnCheckTablaVar':([12,98,],[18,140,]),'bloque':([13,],[20,]),'returnval':([16,],[23,]),'tipo_simp':([16,18,186,349,],[24,31,248,248,]),'v':([18,],[29,]),'pnSaveTypeVar':([25,26,27,28,30,249,],[34,36,37,38,40,295,]),'vp':([31,],[41,]),'idp':([39,],[46,]),'pnAddFuncinDir':([45,],[50,]),'pnCheckNameTablaVar':([47,141,],[53,188,]),'vpp':([48,],[55,]),'estatutop':([49,59,329,330,346,376,377,],[58,105,343,344,357,380,381,]),'estatuto':([49,59,329,330,346,376,377,],[59,59,59,59,59,59,59,]),'asign':([49,59,329,330,346,376,377,],[61,61,61,61,61,61,61,]),'llamada':([49,59,87,111,112,144,148,156,167,190,206,211,218,223,257,263,329,330,341,345,346,376,377,],[62,62,126,126,126,126,126,126,126,126,126,126,126,126,126,126,62,62,126,126,62,62,62,]),'lee':([49,59,329,330,346,376,377,],[63,63,63,63,63,63,63,]),'escribe':([49,59,329,330,346,376,377,],[64,64,64,64,64,64,64,]),'condicion':([49,59,329,330,346,376,377,],[65,65,65,65,65,65,65,]),'ciclow':([49,59,329,330,346,376,377,],[66,66,66,66,66,66,66,]),'ciclof':([49,59,329,330,346,376,377,],[67,67,67,67,67,67,67,]),'funcesp':([49,59,87,111,112,144,148,156,167,190,206,211,218,223,257,263,329,330,341,345,346,376,377,],[68,68,127,127,127,127,127,127,127,127,127,127,127,127,127,127,68,68,127,127,68,68,68,]),'return':([49,59,329,330,346,376,377,],[69,69,69,69,69,69,69,]),'copy':([49,59,87,111,112,144,148,156,167,190,206,211,218,223,257,263,329,330,341,345,346,376,377,],[70,70,129,129,129,129,129,129,129,129,129,129,129,129,129,129,70,70,129,129,70,70,70,]),'variable':([49,59,87,110,111,112,131,132,133,134,135,136,137,138,139,144,148,156,167,190,206,211,218,223,257,263,329,330,341,345,346,376,377,],[71,71,125,150,125,125,177,178,179,180,181,182,183,184,185,125,125,125,125,125,125,125,125,125,125,125,71,71,125,125,71,71,71,]),'mean':([49,59,87,111,112,144,148,156,167,190,206,211,218,223,257,263,329,330,341,345,346,376,377,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'mode':([49,59,87,111,112,144,148,156,167,190,206,211,218,223,257,263,329,330,341,345,346,376,377,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'median':([49,59,87,111,112,144,148,156,167,190,206,211,218,223,257,263,329,330,341,345,346,376,377,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'variance':([49,59,87,111,112,144,148,156,167,190,206,211,218,223,257,263,329,330,341,345,346,376,377,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'max':([49,59,87,111,112,144,148,156,167,190,206,211,218,223,257,263,329,330,341,345,346,376,377,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'min':([49,59,87,111,112,144,148,156,167,190,206,211,218,223,257,263,329,330,341,345,346,376,377,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'staddes':([49,59,87,111,112,144,148,156,167,190,206,211,218,223,257,263,329,330,341,345,346,376,377,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'boxplot':([49,59,87,111,112,144,148,156,167,190,206,211,218,223,257,263,329,330,341,345,346,376,377,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'linreg':([49,59,87,111,112,144,148,156,167,190,206,211,218,223,257,263,329,330,341,345,346,376,377,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'idpp':([53,188,],[99,250,]),'pnCheckFunc':([72,128,],[107,107,]),'pnSaveOperandos':([72,128,151,],[108,108,108,]),'pnSaveWhile':([76,],[113,]),'exp':([87,111,112,144,148,156,167,190,257,263,341,345,],[116,153,155,189,192,202,227,254,301,305,353,356,]),'exprel':([87,111,112,144,148,156,167,190,206,257,263,341,345,],[117,117,117,117,117,117,117,117,264,117,117,117,117,]),'e':([87,111,112,144,148,156,167,190,206,211,257,263,341,345,],[118,118,118,118,118,118,118,118,118,268,118,118,118,118,]),'t':([87,111,112,144,148,156,167,190,206,211,218,257,263,341,345,],[119,119,119,119,119,119,119,119,119,119,274,119,119,119,119,]),'f':([87,111,112,144,148,156,167,190,206,211,218,223,257,263,341,345,],[120,120,120,120,120,120,120,120,120,120,120,278,120,120,120,120,]),'pnEndScript':([104,],[142,]),'pnSaveOperadorAsign':([106,],[144,]),'indexp':([108,],[147,]),'escribep':([111,],[152,]),'pnCuadOplog':([117,264,],[159,306,]),'pnCuadOpRelacional':([118,268,],[161,307,]),'pnCuadPlMi':([119,274,],[163,308,]),'pnCuadMuDi':([120,278,],[165,309,]),'pnSaveFondoFalso':([121,],[167,]),'pnSaveCteI':([122,],[169,]),'pnSaveCteF':([123,],[171,]),'pnSaveCteC':([124,],[173,]),'pnCrearListaParam':([140,],[186,]),'pnGenerateEra':([146,],[190,]),'pnCuadLee':([150,],[193,]),'pnCuadEscribe':([153,154,],[197,199,]),'pnCheckBoolIf':([155,202,],[200,262,]),'pnSaveForID':([157,],[203,]),'logic':([159,306,],[205,333,]),'logicsig':([159,306,],[206,206,]),'relacionalp':([161,307,],[210,334,]),'relsig':([161,307,],[211,211,]),'tp':([163,308,],[217,335,]),'tsig':([163,308,],[218,218,]),'fp':([165,309,],[222,336,]),'fsig':([165,309,],[223,223,]),'pnSaveOperandoConstante':([169,171,173,],[228,230,231,]),'pnCuadCopy':([176,],[232,]),'pnCuadFuncEsp':([177,178,179,180,181,182,183,184,185,],[234,236,237,238,239,240,241,242,243,]),'param':([186,],[244,]),'paramlist':([186,349,],[245,358,]),'tipoparam':([186,349,],[247,247,]),'pnCuadAsign':([189,],[251,]),'expp':([190,],[253,]),'indexpp':([192,],[256,]),'pnSaveOperadorLog':([208,209,],[265,267,]),'pnSaveOperadorRel':([213,214,215,216,],[269,271,272,273,]),'pnSaveOperadorPlMi':([220,221,],[275,277,]),'pnSaveOperadorMuDi':([225,226,],[279,281,]),'pnCuadParametro':([254,353,],[298,359,]),'pnPopFondoFalso':([282,],[310,]),'pnCheckNoParam':([297,],[324,]),'exppp':([298,359,],[326,368,]),'pnCreateVControl':([305,],[331,]),'pnAddParametersTablaVar':([323,],[338,]),'pnUpdateK':([327,],[341,]),'pnDirecIniFunc':([337,],[346,]),'paramlistp':([338,],[348,]),'pnCuadGoSub':([340,],[351,]),'falsop':([354,],[360,]),'pnEndWhile':([355,],[363,]),'pnCompControlFinal':([356,],[365,]),'pnEndIf':([360,],[369,]),'pnElseIf':([361,],[371,]),'pnCountVarsINTOResources':([367,],[374,]),'pnCloseCurrentFunction':([374,],[378,]),'pnEndFor':([383,],[384,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque','programa',8,'p_programa','lexer-parser.py',190),
  ('varp -> var varp','varp',2,'p_programa','lexer-parser.py',191),
  ('varp -> empty','varp',1,'p_programa','lexer-parser.py',192),
  ('funcp -> func funcp','funcp',2,'p_programa','lexer-parser.py',193),
  ('funcp -> empty','funcp',1,'p_programa','lexer-parser.py',194),
  ('bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript','bloque',7,'p_bloque','lexer-parser.py',200),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_bloque','lexer-parser.py',201),
  ('estatutop -> empty','estatutop',1,'p_bloque','lexer-parser.py',202),
  ('tipo_simp -> INT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',208),
  ('tipo_simp -> FLOAT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',209),
  ('tipo_simp -> CHAR pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',210),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','lexer-parser.py',216),
  ('tipo_comp -> file','tipo_comp',1,'p_tipo_comp','lexer-parser.py',217),
  ('copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON','copy',6,'p_copy','lexer-parser.py',223),
  ('file -> ID','file',1,'p_file','lexer-parser.py',229),
  ('variable -> ID pnSaveOperandos indexp','variable',3,'p_variable','lexer-parser.py',235),
  ('indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET','indexp',4,'p_variable','lexer-parser.py',236),
  ('indexp -> empty','indexp',1,'p_variable','lexer-parser.py',237),
  ('indexpp -> COMMA exp','indexpp',2,'p_variable','lexer-parser.py',238),
  ('indexpp -> empty','indexpp',1,'p_variable','lexer-parser.py',239),
  ('llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub','llamada',9,'p_llamada','lexer-parser.py',245),
  ('expp -> exp pnCuadParametro exppp','expp',3,'p_llamada','lexer-parser.py',246),
  ('expp -> empty','expp',1,'p_llamada','lexer-parser.py',247),
  ('exppp -> COMMA pnUpdateK exp pnCuadParametro exppp','exppp',5,'p_llamada','lexer-parser.py',248),
  ('exppp -> empty','exppp',1,'p_llamada','lexer-parser.py',249),
  ('var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON','var',6,'p_var','lexer-parser.py',255),
  ('v -> DATAFRAME pnSaveTypeVar','v',2,'p_var','lexer-parser.py',256),
  ('v -> tipo_simp vp','v',2,'p_var','lexer-parser.py',257),
  ('vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET','vp',4,'p_var','lexer-parser.py',258),
  ('vp -> empty','vp',1,'p_var','lexer-parser.py',259),
  ('vpp -> COMMA CTEI','vpp',2,'p_var','lexer-parser.py',260),
  ('vpp -> empty','vpp',1,'p_var','lexer-parser.py',261),
  ('idp -> ID pnCheckNameTablaVar idpp','idp',3,'p_var','lexer-parser.py',262),
  ('idpp -> COMMA ID pnCheckNameTablaVar idpp','idpp',4,'p_var','lexer-parser.py',263),
  ('idpp -> empty','idpp',1,'p_var','lexer-parser.py',264),
  ('func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction','func',17,'p_func','lexer-parser.py',270),
  ('returnval -> tipo_simp','returnval',1,'p_func','lexer-parser.py',271),
  ('returnval -> VOID pnSaveTypeVar','returnval',2,'p_func','lexer-parser.py',272),
  ('param -> paramlist','param',1,'p_param','lexer-parser.py',278),
  ('param -> empty','param',1,'p_param','lexer-parser.py',279),
  ('paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp','paramlist',5,'p_param','lexer-parser.py',280),
  ('tipoparam -> tipo_simp','tipoparam',1,'p_param','lexer-parser.py',281),
  ('tipoparam -> DATAFRAME pnSaveTypeVar','tipoparam',2,'p_param','lexer-parser.py',282),
  ('paramlistp -> COMMA paramlist','paramlistp',2,'p_param','lexer-parser.py',283),
  ('paramlistp -> empty','paramlistp',1,'p_param','lexer-parser.py',284),
  ('estatuto -> asign','estatuto',1,'p_estatuto','lexer-parser.py',290),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','lexer-parser.py',291),
  ('estatuto -> lee','estatuto',1,'p_estatuto','lexer-parser.py',292),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','lexer-parser.py',293),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexer-parser.py',294),
  ('estatuto -> ciclow','estatuto',1,'p_estatuto','lexer-parser.py',295),
  ('estatuto -> ciclof','estatuto',1,'p_estatuto','lexer-parser.py',296),
  ('estatuto -> funcesp','estatuto',1,'p_estatuto','lexer-parser.py',297),
  ('estatuto -> return','estatuto',1,'p_estatuto','lexer-parser.py',298),
  ('estatuto -> copy','estatuto',1,'p_estatuto','lexer-parser.py',299),
  ('asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON','asign',6,'p_asign','lexer-parser.py',305),
  ('lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON','lee',6,'p_lee','lexer-parser.py',311),
  ('escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON','escribe',5,'p_escribe','lexer-parser.py',317),
  ('escribep -> exp pnCuadEscribe','escribep',2,'p_escribe','lexer-parser.py',318),
  ('escribep -> LETRERO pnCuadEscribe','escribep',2,'p_escribe','lexer-parser.py',319),
  ('return -> RETURNS exp SEMICOLON','return',3,'p_return','lexer-parser.py',325),
  ('exp -> exprel pnCuadOplog logic','exp',3,'p_exp','lexer-parser.py',331),
  ('logic -> logicsig exprel pnCuadOplog logic','logic',4,'p_exp','lexer-parser.py',332),
  ('logic -> empty','logic',1,'p_exp','lexer-parser.py',333),
  ('logicsig -> AND pnSaveOperadorLog','logicsig',2,'p_exp','lexer-parser.py',334),
  ('logicsig -> OR pnSaveOperadorLog','logicsig',2,'p_exp','lexer-parser.py',335),
  ('exprel -> e pnCuadOpRelacional relacionalp','exprel',3,'p_exprel','lexer-parser.py',341),
  ('relacionalp -> relsig e pnCuadOpRelacional relacionalp','relacionalp',4,'p_exprel','lexer-parser.py',342),
  ('relacionalp -> empty','relacionalp',1,'p_exprel','lexer-parser.py',343),
  ('relsig -> LESS_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',344),
  ('relsig -> GREATER_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',345),
  ('relsig -> EQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',346),
  ('relsig -> NOTEQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',347),
  ('e -> t pnCuadPlMi tp','e',3,'p_e','lexer-parser.py',353),
  ('tp -> tsig t pnCuadPlMi tp','tp',4,'p_e','lexer-parser.py',354),
  ('tp -> empty','tp',1,'p_e','lexer-parser.py',355),
  ('tsig -> PLUS pnSaveOperadorPlMi','tsig',2,'p_e','lexer-parser.py',356),
  ('tsig -> MINUS pnSaveOperadorPlMi','tsig',2,'p_e','lexer-parser.py',357),
  ('t -> f pnCuadMuDi fp','t',3,'p_t','lexer-parser.py',363),
  ('fp -> fsig f pnCuadMuDi fp','fp',4,'p_t','lexer-parser.py',364),
  ('fp -> empty','fp',1,'p_t','lexer-parser.py',365),
  ('fsig -> MULT pnSaveOperadorMuDi','fsig',2,'p_t','lexer-parser.py',366),
  ('fsig -> DIV pnSaveOperadorMuDi','fsig',2,'p_t','lexer-parser.py',367),
  ('f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso','f',5,'p_f','lexer-parser.py',373),
  ('f -> CTEI pnSaveCteI pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',374),
  ('f -> CTEF pnSaveCteF pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',375),
  ('f -> CTEC pnSaveCteC pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',376),
  ('f -> variable','f',1,'p_f','lexer-parser.py',377),
  ('f -> llamada','f',1,'p_f','lexer-parser.py',378),
  ('f -> funcesp','f',1,'p_f','lexer-parser.py',379),
  ('condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf','condicion',11,'p_condicion','lexer-parser.py',385),
  ('falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','falsop',5,'p_condicion','lexer-parser.py',386),
  ('falsop -> empty','falsop',1,'p_condicion','lexer-parser.py',387),
  ('ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile','ciclow',10,'p_ciclow','lexer-parser.py',393),
  ('ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor','ciclof',15,'p_ciclof','lexer-parser.py',399),
  ('funcesp -> mean','funcesp',1,'p_funcesp','lexer-parser.py',405),
  ('funcesp -> mode','funcesp',1,'p_funcesp','lexer-parser.py',406),
  ('funcesp -> median','funcesp',1,'p_funcesp','lexer-parser.py',407),
  ('funcesp -> variance','funcesp',1,'p_funcesp','lexer-parser.py',408),
  ('funcesp -> max','funcesp',1,'p_funcesp','lexer-parser.py',409),
  ('funcesp -> min','funcesp',1,'p_funcesp','lexer-parser.py',410),
  ('funcesp -> staddes','funcesp',1,'p_funcesp','lexer-parser.py',411),
  ('funcesp -> boxplot','funcesp',1,'p_funcesp','lexer-parser.py',412),
  ('funcesp -> linreg','funcesp',1,'p_funcesp','lexer-parser.py',413),
  ('funcesp -> copy','funcesp',1,'p_funcesp','lexer-parser.py',414),
  ('mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mean',6,'p_mean','lexer-parser.py',420),
  ('mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mode',6,'p_mode','lexer-parser.py',426),
  ('median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','median',6,'p_median','lexer-parser.py',432),
  ('variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','variance',6,'p_variance','lexer-parser.py',438),
  ('max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','max',6,'p_max','lexer-parser.py',444),
  ('min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','min',6,'p_min','lexer-parser.py',450),
  ('staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','staddes',6,'p_staddes','lexer-parser.py',456),
  ('boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','boxplot',6,'p_boxplot','lexer-parser.py',462),
  ('linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','linreg',6,'p_linreg','lexer-parser.py',468),
  ('pnCrearDirFunc -> empty','pnCrearDirFunc',1,'p_pnCrearDirFunc','lexer-parser.py',478),
  ('pnScriptFuncDir -> empty','pnScriptFuncDir',1,'p_pnScriptFuncDir','lexer-parser.py',488),
  ('pnCheckTablaVar -> empty','pnCheckTablaVar',1,'p_pnCheckTablaVar','lexer-parser.py',497),
  ('pnCrearListaParam -> empty','pnCrearListaParam',1,'p_pnCrearListaParam','lexer-parser.py',505),
  ('pnSaveTypeVar -> empty','pnSaveTypeVar',1,'p_pnSaveTypeVar','lexer-parser.py',512),
  ('pnCheckNameTablaVar -> empty','pnCheckNameTablaVar',1,'p_pnCheckNameTablaVar','lexer-parser.py',521),
  ('pnAddFuncinDir -> empty','pnAddFuncinDir',1,'p_pnAddFuncinDir','lexer-parser.py',566),
  ('pnAddParametersTablaVar -> empty','pnAddParametersTablaVar',1,'p_pnAddParametersTablaVar','lexer-parser.py',580),
  ('pnCountVarsINTOResources -> empty','pnCountVarsINTOResources',1,'p_pnCountVarsINTOResources','lexer-parser.py',610),
  ('pnDirecIniFunc -> empty','pnDirecIniFunc',1,'p_pnDirecIniFunc','lexer-parser.py',639),
  ('pnCloseCurrentFunction -> empty','pnCloseCurrentFunction',1,'p_pnCloseCurrentFunction','lexer-parser.py',646),
  ('pnEndScript -> empty','pnEndScript',1,'p_pnEndScript','lexer-parser.py',662),
  ('pnCheckFunc -> empty','pnCheckFunc',1,'p_pnCheckFunc','lexer-parser.py',671),
  ('pnGenerateEra -> empty','pnGenerateEra',1,'p_pnGenerateEra','lexer-parser.py',685),
  ('pnCuadParametro -> empty','pnCuadParametro',1,'p_pnCuadParametro','lexer-parser.py',699),
  ('pnUpdateK -> empty','pnUpdateK',1,'p_pnUpdateK','lexer-parser.py',725),
  ('pnCheckNoParam -> empty','pnCheckNoParam',1,'p_pnCheckNoParam','lexer-parser.py',733),
  ('pnCuadGoSub -> empty','pnCuadGoSub',1,'p_pnCuadGoSub','lexer-parser.py',746),
  ('pnSaveCteI -> empty','pnSaveCteI',1,'p_pnSaveCteI','lexer-parser.py',760),
  ('pnSaveCteF -> empty','pnSaveCteF',1,'p_pnSaveCteF','lexer-parser.py',771),
  ('pnSaveCteC -> empty','pnSaveCteC',1,'p_pnSaveCteC','lexer-parser.py',781),
  ('pnSaveFondoFalso -> empty','pnSaveFondoFalso',1,'p_pnSaveFondoFalso','lexer-parser.py',791),
  ('pnPopFondoFalso -> empty','pnPopFondoFalso',1,'p_pnPopFondoFalso','lexer-parser.py',798),
  ('pnSaveOperandos -> empty','pnSaveOperandos',1,'p_pnSaveOperandos','lexer-parser.py',808),
  ('pnSaveOperandoConstante -> empty','pnSaveOperandoConstante',1,'p_pnSaveOperandoConstante','lexer-parser.py',824),
  ('pnSaveOperadorPlMi -> empty','pnSaveOperadorPlMi',1,'p_pnSaveOperadorPlMi','lexer-parser.py',832),
  ('pnSaveOperadorMuDi -> empty','pnSaveOperadorMuDi',1,'p_pnSaveOperadorMuDi','lexer-parser.py',839),
  ('pnSaveOperadorRel -> empty','pnSaveOperadorRel',1,'p_pnSaveOperadorRel','lexer-parser.py',846),
  ('pnSaveOperadorLog -> empty','pnSaveOperadorLog',1,'p_pnSaveOperadorLog','lexer-parser.py',853),
  ('pnCuadPlMi -> empty','pnCuadPlMi',1,'p_pnCuadPlMi','lexer-parser.py',860),
  ('pnCuadMuDi -> empty','pnCuadMuDi',1,'p_pnCuadMuDi','lexer-parser.py',892),
  ('pnCuadOpRelacional -> empty','pnCuadOpRelacional',1,'p_pnCuadOpRelacional','lexer-parser.py',924),
  ('pnCuadOplog -> empty','pnCuadOplog',1,'p_pnCuadOplog','lexer-parser.py',957),
  ('pnSaveOperadorAsign -> empty','pnSaveOperadorAsign',1,'p_pnSaveOperadorAsign','lexer-parser.py',988),
  ('pnCuadAsign -> empty','pnCuadAsign',1,'p_pnCuadAsign','lexer-parser.py',995),
  ('pnCuadEscribe -> empty','pnCuadEscribe',1,'p_pnCuadEscribe','lexer-parser.py',1021),
  ('pnCuadLee -> empty','pnCuadLee',1,'p_pnCuadLee','lexer-parser.py',1059),
  ('pnCuadCopy -> empty','pnCuadCopy',1,'p_pnCuadCopy','lexer-parser.py',1076),
  ('pnCuadFuncEsp -> empty','pnCuadFuncEsp',1,'p_pnCuadFuncEsp','lexer-parser.py',1095),
  ('pnCheckBoolIf -> empty','pnCheckBoolIf',1,'p_pnCheckBoolIf','lexer-parser.py',1138),
  ('pnElseIf -> empty','pnElseIf',1,'p_pnElseIf','lexer-parser.py',1156),
  ('pnEndIf -> empty','pnEndIf',1,'p_pnEndIf','lexer-parser.py',1167),
  ('pnSaveWhile -> empty','pnSaveWhile',1,'p_pnSaveWhile','lexer-parser.py',1176),
  ('pnEndWhile -> empty','pnEndWhile',1,'p_pnEndWhile','lexer-parser.py',1186),
  ('pnSaveForID -> empty','pnSaveForID',1,'p_pnSaveForID','lexer-parser.py',1200),
  ('pnCreateVControl -> empty','pnCreateVControl',1,'p_pnCreateVControl','lexer-parser.py',1224),
  ('pnCompControlFinal -> empty','pnCompControlFinal',1,'p_pnCompControlFinal','lexer-parser.py',1255),
  ('pnEndFor -> empty','pnEndFor',1,'p_pnEndFor','lexer-parser.py',1283),
  ('empty -> <empty>','empty',0,'p_empty','lexer-parser.py',1316),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVAND ARROW ASIGN BOXPLOT CHAR COMMA COMMENT CTEC CTEF CTEI DATAFRAME DIV DO EQUALS FLOAT FOR FUNC GREATER_THAN ID IF IF_FALSE IF_TRUE INT LEFT_CUR_BRACKET LEFT_PARENT LEFT_SQR_BRACKET LESS_THAN LETRERO LINREG MAX MEAN MEDIAN MIN MINUS MODE MULT NOTEQUALS OR PLUS READ READ_FILE RETURNS RIGHT_CUR_BRACKET RIGHT_PARENT RIGHT_SQR_BRACKET SCRIPT SEMICOLON STADDES VAR VARIANCE VOID WHILE WRITE\n    programa : SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque\n    varp : var varp \n         | empty\n    funcp : func funcp \n          | empty\n    \n    bloque : DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript\n    estatutop : estatuto estatutop \n              | empty\n    \n    tipo_simp : INT pnSaveTypeVar\n              | FLOAT pnSaveTypeVar\n              | CHAR pnSaveTypeVar\n    \n    tipo_comp : DATAFRAME \n              | file\n    \n    copy : READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON\n    \n    file : ID\n    \n    variable : ID pnSaveOperandos indexp\n    indexp : LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET \n           | empty\n    indexpp : COMMA exp \n            | empty\n    \n    llamada : ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON\n    expp : exp exppp\n         | empty\n    exppp : COMMA exp exppp\n          | empty\n    \n    var : VAR pnCheckTablaVar v ARROW idp SEMICOLON\n    v : DATAFRAME pnSaveTypeVar\n      | tipo_simp vp\n    vp : LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET \n       | empty\n    vpp : COMMA CTEI \n        | empty\n    idp : ID pnCheckNameTablaVar idpp\n    idpp : COMMA ID pnCheckNameTablaVar idpp\n         | empty\n    \n    func : FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction\n    returnval : tipo_simp \n              | VOID pnSaveTypeVar\n    \n    param : paramlist\n          | empty\n    paramlist : tipoparam ARROW ID pnAddParametersTablaVar paramlistp\n    tipoparam : tipo_simp\n              | DATAFRAME pnSaveTypeVar\n    paramlistp : COMMA paramlist\n               | empty\n    \n    estatuto : asign\n             | llamada\n             | lee\n             | escribe\n             | condicion\n             | ciclow\n             | ciclof\n             | funcesp\n             | return\n             | copy\n    \n    asign : variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON\n    \n    lee : READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    escribe :  WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON\n    escribep : exp pnCuadEscribe\n             | LETRERO pnCuadEscribe\n    \n    return : RETURNS exp SEMICOLON\n    \n    exp : exprel logic\n    logic : logicsig exprel logic \n          | empty\n    logicsig : AND \n             | OR\n    \n    exprel : e relacionalp\n    relacionalp : relsig e relacionalp \n                | empty\n    relsig : LESS_THAN \n           | GREATER_THAN \n           | EQUALS \n           | NOTEQUALS\n    \n    e : t pnCuadPlMi tp\n    tp : tsig t pnCuadPlMi tp \n       | empty\n    tsig : PLUS pnSaveOperadorPlMi\n         | MINUS pnSaveOperadorPlMi\n    \n    t : f pnCuadMuDi fp\n    fp : fsig f pnCuadMuDi fp \n       | empty\n    fsig : MULT pnSaveOperadorMuDi\n         | DIV pnSaveOperadorMuDi\n    \n    f : LEFT_PARENT exp RIGHT_PARENT\n      | CTEI pnSaveCteI  pnSaveOperandoConstante\n      | CTEF pnSaveCteF pnSaveOperandoConstante\n      | CTEC pnSaveCteC pnSaveOperandoConstante\n      | variable\n      | llamada\n      | funcesp\n    \n    condicion : IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop\n    falsop : IF_FALSE  LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET \n           | empty\n    \n    ciclow : WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET\n    \n    ciclof : FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET\n    \n    funcesp : mean\n            | mode\n            | median\n            | variance\n            | max\n            | min\n            | staddes\n            | boxplot\n            | linreg\n            | copy\n    \n    mean : MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    mode : MODE pnSaveFuncEsp LEFT_PARENT variable  pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    median : MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    variance : VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    max : MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    min : MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    staddes : STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    boxplot : BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    linreg : LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    pnCrearDirFunc : empty\n    \n    pnScriptFuncDir : empty\n    \n    pnCheckTablaVar : empty\n    \n    pnSaveTypeVar : empty\n    \n    pnCheckNameTablaVar : empty\n    \n    pnAddFuncinDir : empty\n    \n    pnAddParametersTablaVar : empty\n    \n    pnCloseCurrentFunction : empty\n    \n    pnEndScript : empty\n    \n    pnSaveCteI : empty\n    \n    pnSaveCteF : empty\n    \n    pnSaveCteC : empty\n    \n    pnSaveOperandos : empty\n    \n    pnSaveOperandoConstante : empty\n    \n    pnSaveOperadorPlMi : empty\n    \n    pnSaveOperadorMuDi : empty\n    \n    pnCuadPlMi : empty\n    \n    pnCuadMuDi : empty\n    \n    pnSaveOperadorAsign : empty\n    \n    pnCuadAsign : empty\n    \n    pnSaveEscribe : empty\n    \n    pnCuadEscribe : empty\n    \n    pnSaveFuncEsp : empty\n    \n    pnCuadFuncEsp : empty\n    \n    empty :'
    
_lr_action_items = {'SCRIPT':([0,],[2,]),'$end':([1,20,104,143,144,],[0,-1,-139,-6,-123,]),'ID':([2,3,4,10,11,14,15,17,22,32,33,39,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,100,106,107,110,113,114,115,121,145,146,151,155,158,159,161,163,164,166,168,169,170,171,184,185,186,187,188,189,190,191,192,203,216,218,219,221,223,224,241,246,249,251,257,262,263,264,266,267,268,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,5,-115,-139,-3,-139,-5,-2,-4,-139,45,47,-139,72,-26,72,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,128,142,-139,128,154,128,128,154,128,128,-133,128,128,128,-61,128,-65,-66,128,-70,-71,-72,-73,154,154,154,154,154,154,154,154,154,128,128,-139,-139,128,-139,-139,281,-21,128,-57,72,-77,-129,-78,-82,-130,-83,-14,-139,-56,-58,72,72,72,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,72,-92,]),'SEMICOLON':([5,6,7,46,47,53,54,78,79,80,81,82,83,84,85,86,99,101,108,109,116,117,118,119,120,122,123,124,125,126,127,128,129,142,150,152,160,162,165,167,172,173,174,175,177,178,179,180,181,182,199,200,201,206,213,214,215,217,220,222,225,226,227,228,229,230,243,244,245,246,252,259,260,261,265,269,284,290,291,292,293,294,295,296,297,298,299,300,307,308,309,310,311,312,313,314,315,316,317,],[-139,8,-116,52,-139,-139,-119,-96,-97,-98,-99,-100,-101,-102,-103,-104,-33,-35,-139,-127,159,-139,-139,-139,-139,-139,-139,-139,-88,-89,-90,-139,-105,-139,-16,-18,-62,-64,-67,-69,-139,-131,-139,-132,-139,-124,-139,-125,-139,-126,-139,-139,246,251,-139,-139,-74,-76,-79,-81,-84,-85,-128,-86,-87,269,-34,282,-134,-21,286,-63,-68,-139,-139,-14,-17,-139,-139,309,310,311,312,313,314,315,316,317,-75,-80,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'VAR':([8,10,32,52,280,],[12,12,12,-26,12,]),'FUNC':([8,9,10,11,14,17,32,44,52,324,329,330,],[-139,16,-139,-3,16,-2,-139,16,-26,-139,-36,-122,]),'DO':([8,9,10,11,13,14,15,17,22,52,324,329,330,],[-139,-139,-139,-3,21,-139,-5,-2,-4,-26,-139,-36,-122,]),'READ':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,246,251,257,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,-3,-139,-5,-2,-4,-139,-139,73,-26,73,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,73,-14,-139,-56,-58,73,73,73,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,73,-92,]),'WRITE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,246,251,257,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,-3,-139,-5,-2,-4,-139,-139,74,-26,74,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,74,-14,-139,-56,-58,74,74,74,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,74,-92,]),'IF':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,246,251,257,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,-3,-139,-5,-2,-4,-139,-139,75,-26,75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,75,-14,-139,-56,-58,75,75,75,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,75,-92,]),'WHILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,246,251,257,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,-3,-139,-5,-2,-4,-139,-139,76,-26,76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,76,-14,-139,-56,-58,76,76,76,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,76,-92,]),'FOR':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,246,251,257,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,-3,-139,-5,-2,-4,-139,-139,77,-26,77,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,77,-14,-139,-56,-58,77,77,77,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,77,-92,]),'RETURNS':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,246,251,257,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,-3,-139,-5,-2,-4,-139,-139,87,-26,87,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,87,-14,-139,-56,-58,87,87,87,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,87,-92,]),'READ_FILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,113,114,121,145,146,151,155,158,159,161,163,164,166,168,169,170,171,203,216,218,219,221,223,224,246,249,251,257,262,263,264,266,267,268,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,-3,-139,-5,-2,-4,-139,-139,88,-26,88,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,88,-139,88,88,88,88,88,-133,88,88,88,-61,88,-65,-66,88,-70,-71,-72,-73,88,88,-139,-139,88,-139,-139,-21,88,-57,88,-77,-129,-78,-82,-130,-83,-14,-139,-56,-58,88,88,88,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,88,-92,]),'MEAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,113,114,121,145,146,151,155,158,159,161,163,164,166,168,169,170,171,203,216,218,219,221,223,224,246,249,251,257,262,263,264,266,267,268,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,-3,-139,-5,-2,-4,-139,-139,89,-26,89,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,89,-139,89,89,89,89,89,-133,89,89,89,-61,89,-65,-66,89,-70,-71,-72,-73,89,89,-139,-139,89,-139,-139,-21,89,-57,89,-77,-129,-78,-82,-130,-83,-14,-139,-56,-58,89,89,89,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,89,-92,]),'MODE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,113,114,121,145,146,151,155,158,159,161,163,164,166,168,169,170,171,203,216,218,219,221,223,224,246,249,251,257,262,263,264,266,267,268,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,-3,-139,-5,-2,-4,-139,-139,90,-26,90,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,90,-139,90,90,90,90,90,-133,90,90,90,-61,90,-65,-66,90,-70,-71,-72,-73,90,90,-139,-139,90,-139,-139,-21,90,-57,90,-77,-129,-78,-82,-130,-83,-14,-139,-56,-58,90,90,90,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,90,-92,]),'MEDIAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,113,114,121,145,146,151,155,158,159,161,163,164,166,168,169,170,171,203,216,218,219,221,223,224,246,249,251,257,262,263,264,266,267,268,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,-3,-139,-5,-2,-4,-139,-139,91,-26,91,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,91,-139,91,91,91,91,91,-133,91,91,91,-61,91,-65,-66,91,-70,-71,-72,-73,91,91,-139,-139,91,-139,-139,-21,91,-57,91,-77,-129,-78,-82,-130,-83,-14,-139,-56,-58,91,91,91,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,91,-92,]),'VARIANCE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,113,114,121,145,146,151,155,158,159,161,163,164,166,168,169,170,171,203,216,218,219,221,223,224,246,249,251,257,262,263,264,266,267,268,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,-3,-139,-5,-2,-4,-139,-139,92,-26,92,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,92,-139,92,92,92,92,92,-133,92,92,92,-61,92,-65,-66,92,-70,-71,-72,-73,92,92,-139,-139,92,-139,-139,-21,92,-57,92,-77,-129,-78,-82,-130,-83,-14,-139,-56,-58,92,92,92,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,92,-92,]),'MAX':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,113,114,121,145,146,151,155,158,159,161,163,164,166,168,169,170,171,203,216,218,219,221,223,224,246,249,251,257,262,263,264,266,267,268,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,-3,-139,-5,-2,-4,-139,-139,93,-26,93,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,93,-139,93,93,93,93,93,-133,93,93,93,-61,93,-65,-66,93,-70,-71,-72,-73,93,93,-139,-139,93,-139,-139,-21,93,-57,93,-77,-129,-78,-82,-130,-83,-14,-139,-56,-58,93,93,93,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,93,-92,]),'MIN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,113,114,121,145,146,151,155,158,159,161,163,164,166,168,169,170,171,203,216,218,219,221,223,224,246,249,251,257,262,263,264,266,267,268,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,-3,-139,-5,-2,-4,-139,-139,94,-26,94,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,94,-139,94,94,94,94,94,-133,94,94,94,-61,94,-65,-66,94,-70,-71,-72,-73,94,94,-139,-139,94,-139,-139,-21,94,-57,94,-77,-129,-78,-82,-130,-83,-14,-139,-56,-58,94,94,94,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,94,-92,]),'STADDES':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,113,114,121,145,146,151,155,158,159,161,163,164,166,168,169,170,171,203,216,218,219,221,223,224,246,249,251,257,262,263,264,266,267,268,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,-3,-139,-5,-2,-4,-139,-139,95,-26,95,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,95,-139,95,95,95,95,95,-133,95,95,95,-61,95,-65,-66,95,-70,-71,-72,-73,95,95,-139,-139,95,-139,-139,-21,95,-57,95,-77,-129,-78,-82,-130,-83,-14,-139,-56,-58,95,95,95,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,95,-92,]),'BOXPLOT':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,113,114,121,145,146,151,155,158,159,161,163,164,166,168,169,170,171,203,216,218,219,221,223,224,246,249,251,257,262,263,264,266,267,268,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,-3,-139,-5,-2,-4,-139,-139,96,-26,96,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,96,-139,96,96,96,96,96,-133,96,96,96,-61,96,-65,-66,96,-70,-71,-72,-73,96,96,-139,-139,96,-139,-139,-21,96,-57,96,-77,-129,-78,-82,-130,-83,-14,-139,-56,-58,96,96,96,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,96,-92,]),'LINREG':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,113,114,121,145,146,151,155,158,159,161,163,164,166,168,169,170,171,203,216,218,219,221,223,224,246,249,251,257,262,263,264,266,267,268,269,280,282,286,287,289,301,305,309,310,311,312,313,314,315,316,317,322,323,324,326,328,329,330,331,333,],[-139,-3,-139,-5,-2,-4,-139,-139,97,-26,97,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,97,-139,97,97,97,97,97,-133,97,97,97,-61,97,-65,-66,97,-70,-71,-72,-73,97,97,-139,-139,97,-139,-139,-21,97,-57,97,-77,-129,-78,-82,-130,-83,-14,-139,-56,-58,97,97,97,-94,-106,-107,-108,-109,-110,-111,-112,-113,-114,-139,-95,-139,-91,-93,-36,-122,97,-92,]),'RIGHT_CUR_BRACKET':([10,11,14,15,17,22,32,44,49,52,58,59,60,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,105,159,246,251,257,269,280,282,286,287,288,289,301,304,305,306,309,310,311,312,313,314,315,316,317,318,322,323,324,326,328,329,330,331,332,333,],[-139,-3,-139,-5,-2,-4,-139,-139,-139,-26,104,-139,-8,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-7,-61,-21,-57,-139,-14,-139,-56,-58,-139,305,-139,-139,322,-94,323,-106,-107,-108,-109,-110,-111,-112,-113,-114,324,-139,-95,-139,-91,-93,-36,-122,-139,333,-92,]),'DATAFRAME':([12,18,19,98,141,320,],[-139,30,-117,-139,198,198,]),'INT':([12,16,18,19,98,141,320,],[-139,26,26,-117,-139,26,26,]),'FLOAT':([12,16,18,19,98,141,320,],[-139,27,27,-117,-139,27,27,]),'CHAR':([12,16,18,19,98,141,320,],[-139,28,28,-117,-139,28,28,]),'VOID':([16,],[25,]),'RIGHT_PARENT':([19,78,79,80,81,82,83,84,85,86,98,107,108,109,117,118,119,120,122,123,124,125,126,127,128,129,141,147,148,149,150,152,153,154,156,157,160,162,165,167,172,173,174,175,176,177,178,179,180,181,182,183,193,194,195,202,204,207,208,209,212,213,214,215,217,220,222,225,226,227,228,229,231,232,233,234,235,236,237,238,239,246,247,253,254,255,259,260,261,265,269,270,271,272,273,274,275,276,277,278,279,281,283,284,290,291,302,303,307,308,309,310,311,312,313,314,315,316,317,319,321,325,],[-117,-96,-97,-98,-99,-100,-101,-102,-103,-104,-139,-139,-139,-127,-139,-139,-139,-139,-139,-139,-139,-88,-89,-90,-139,-105,-139,201,-139,-23,-16,-18,206,-139,210,211,-62,-64,-67,-69,-139,-131,-139,-132,225,-139,-124,-139,-125,-139,-126,230,240,-39,-40,-22,-25,252,-139,-139,258,-139,-139,-74,-76,-79,-81,-84,-85,-128,-86,-87,-139,-139,-139,-139,-139,-139,-139,-139,-139,-21,-139,-59,-136,-60,-63,-68,-139,-139,-14,292,-138,293,294,295,296,297,298,299,300,-139,-24,-17,-139,-139,-139,-121,-75,-80,-106,-107,-108,-109,-110,-111,-112,-113,-114,-41,-45,-44,]),'LEFT_CUR_BRACKET':([21,211,240,256,258,327,],[32,257,280,287,289,331,]),'ARROW':([23,24,25,26,27,28,29,30,31,34,35,36,37,38,40,41,43,102,196,197,198,242,],[33,-37,-139,-139,-139,-139,39,-139,-139,-38,-118,-9,-10,-11,-27,-28,-30,-29,241,-42,-139,-43,]),'LEFT_SQR_BRACKET':([26,27,28,31,35,36,37,38,72,108,109,128,154,],[-139,-139,-139,42,-118,-9,-10,-11,-139,151,-127,-139,-139,]),'CTEI':([42,56,87,106,107,113,114,121,145,146,151,155,158,161,163,164,166,168,169,170,171,203,216,218,219,221,223,224,249,262,263,264,266,267,268,282,],[48,103,122,-139,122,122,122,122,122,-133,122,122,122,122,-65,-66,122,-70,-71,-72,-73,122,122,-139,-139,122,-139,-139,122,-77,-129,-78,-82,-130,-83,-56,]),'LEFT_PARENT':([45,50,51,72,73,74,75,76,77,87,88,89,90,91,92,93,94,95,96,97,106,107,111,112,113,114,121,128,131,132,133,134,135,136,137,138,139,140,145,146,151,155,158,161,163,164,166,168,169,170,171,203,216,218,219,221,223,224,249,262,263,264,266,267,268,282,],[-139,98,-120,107,110,-139,113,114,115,121,130,-139,-139,-139,-139,-139,-139,-139,-139,-139,-139,121,155,-135,121,121,121,107,184,-137,185,186,187,188,189,190,191,192,121,-133,121,121,121,121,-65,-66,121,-70,-71,-72,-73,121,121,-139,-139,121,-139,-139,121,-77,-129,-78,-82,-130,-83,-56,]),'COMMA':([47,48,53,54,78,79,80,81,82,83,84,85,86,108,109,117,118,119,120,122,123,124,125,126,127,128,129,142,148,150,152,160,162,165,167,172,173,174,175,177,178,179,180,181,182,199,205,213,214,215,217,220,222,225,226,227,228,229,246,247,259,260,261,265,269,281,284,290,291,302,303,307,308,309,310,311,312,313,314,315,316,317,],[-139,56,100,-119,-96,-97,-98,-99,-100,-101,-102,-103,-104,-139,-127,-139,-139,-139,-139,-139,-139,-139,-88,-89,-90,-139,-105,-139,203,-16,-18,-62,-64,-67,-69,-139,-131,-139,-132,-139,-124,-139,-125,-139,-126,100,249,-139,-139,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,203,-63,-68,-139,-139,-14,-139,-17,-139,-139,320,-121,-75,-80,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'RIGHT_SQR_BRACKET':([48,55,57,78,79,80,81,82,83,84,85,86,103,108,109,117,118,119,120,122,123,124,125,126,127,128,129,150,152,160,162,165,167,172,173,174,175,177,178,179,180,181,182,205,213,214,215,217,220,222,225,226,227,228,229,246,248,250,259,260,261,265,269,284,285,290,291,307,308,309,310,311,312,313,314,315,316,317,],[-139,102,-32,-96,-97,-98,-99,-100,-101,-102,-103,-104,-31,-139,-127,-139,-139,-139,-139,-139,-139,-139,-88,-89,-90,-139,-105,-16,-18,-62,-64,-67,-69,-139,-131,-139,-132,-139,-124,-139,-125,-139,-126,-139,-139,-139,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,284,-20,-63,-68,-139,-139,-14,-17,-19,-139,-139,-75,-80,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'ASIGN':([71,72,108,109,150,152,154,284,],[106,-139,-139,-127,-16,-18,-139,-17,]),'MULT':([78,79,80,81,82,83,84,85,86,108,109,120,122,123,124,125,126,127,128,129,150,152,174,175,177,178,179,180,181,182,225,226,227,228,229,246,265,269,284,291,309,310,311,312,313,314,315,316,317,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-139,-127,-139,-139,-139,-139,-88,-89,-90,-139,-105,-16,-18,223,-132,-139,-124,-139,-125,-139,-126,-84,-85,-128,-86,-87,-21,-139,-14,-17,223,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'DIV':([78,79,80,81,82,83,84,85,86,108,109,120,122,123,124,125,126,127,128,129,150,152,174,175,177,178,179,180,181,182,225,226,227,228,229,246,265,269,284,291,309,310,311,312,313,314,315,316,317,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-139,-127,-139,-139,-139,-139,-88,-89,-90,-139,-105,-16,-18,224,-132,-139,-124,-139,-125,-139,-126,-84,-85,-128,-86,-87,-21,-139,-14,-17,224,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'PLUS':([78,79,80,81,82,83,84,85,86,108,109,119,120,122,123,124,125,126,127,128,129,150,152,172,173,174,175,177,178,179,180,181,182,220,222,225,226,227,228,229,246,261,265,269,284,290,291,308,309,310,311,312,313,314,315,316,317,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-139,-127,-139,-139,-139,-139,-139,-88,-89,-90,-139,-105,-16,-18,218,-131,-139,-132,-139,-124,-139,-125,-139,-126,-79,-81,-84,-85,-128,-86,-87,-21,-139,-139,-14,-17,218,-139,-80,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'MINUS':([78,79,80,81,82,83,84,85,86,108,109,119,120,122,123,124,125,126,127,128,129,150,152,172,173,174,175,177,178,179,180,181,182,220,222,225,226,227,228,229,246,261,265,269,284,290,291,308,309,310,311,312,313,314,315,316,317,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-139,-127,-139,-139,-139,-139,-139,-88,-89,-90,-139,-105,-16,-18,219,-131,-139,-132,-139,-124,-139,-125,-139,-126,-79,-81,-84,-85,-128,-86,-87,-21,-139,-139,-14,-17,219,-139,-80,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'LESS_THAN':([78,79,80,81,82,83,84,85,86,108,109,118,119,120,122,123,124,125,126,127,128,129,150,152,172,173,174,175,177,178,179,180,181,182,214,215,217,220,222,225,226,227,228,229,246,261,265,269,284,290,291,307,308,309,310,311,312,313,314,315,316,317,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-139,-127,168,-139,-139,-139,-139,-139,-88,-89,-90,-139,-105,-16,-18,-139,-131,-139,-132,-139,-124,-139,-125,-139,-126,168,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,-139,-139,-14,-17,-139,-139,-75,-80,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'GREATER_THAN':([78,79,80,81,82,83,84,85,86,108,109,118,119,120,122,123,124,125,126,127,128,129,150,152,172,173,174,175,177,178,179,180,181,182,214,215,217,220,222,225,226,227,228,229,246,261,265,269,284,290,291,307,308,309,310,311,312,313,314,315,316,317,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-139,-127,169,-139,-139,-139,-139,-139,-88,-89,-90,-139,-105,-16,-18,-139,-131,-139,-132,-139,-124,-139,-125,-139,-126,169,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,-139,-139,-14,-17,-139,-139,-75,-80,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'EQUALS':([78,79,80,81,82,83,84,85,86,108,109,118,119,120,122,123,124,125,126,127,128,129,150,152,172,173,174,175,177,178,179,180,181,182,214,215,217,220,222,225,226,227,228,229,246,261,265,269,284,290,291,307,308,309,310,311,312,313,314,315,316,317,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-139,-127,170,-139,-139,-139,-139,-139,-88,-89,-90,-139,-105,-16,-18,-139,-131,-139,-132,-139,-124,-139,-125,-139,-126,170,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,-139,-139,-14,-17,-139,-139,-75,-80,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'NOTEQUALS':([78,79,80,81,82,83,84,85,86,108,109,118,119,120,122,123,124,125,126,127,128,129,150,152,172,173,174,175,177,178,179,180,181,182,214,215,217,220,222,225,226,227,228,229,246,261,265,269,284,290,291,307,308,309,310,311,312,313,314,315,316,317,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-139,-127,171,-139,-139,-139,-139,-139,-88,-89,-90,-139,-105,-16,-18,-139,-131,-139,-132,-139,-124,-139,-125,-139,-126,171,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,-139,-139,-14,-17,-139,-139,-75,-80,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'AND':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,120,122,123,124,125,126,127,128,129,150,152,165,167,172,173,174,175,177,178,179,180,181,182,213,214,215,217,220,222,225,226,227,228,229,246,260,261,265,269,284,290,291,307,308,309,310,311,312,313,314,315,316,317,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-139,-127,163,-139,-139,-139,-139,-139,-139,-88,-89,-90,-139,-105,-16,-18,-67,-69,-139,-131,-139,-132,-139,-124,-139,-125,-139,-126,163,-139,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,-68,-139,-139,-14,-17,-139,-139,-75,-80,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'OR':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,120,122,123,124,125,126,127,128,129,150,152,165,167,172,173,174,175,177,178,179,180,181,182,213,214,215,217,220,222,225,226,227,228,229,246,260,261,265,269,284,290,291,307,308,309,310,311,312,313,314,315,316,317,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-139,-127,164,-139,-139,-139,-139,-139,-139,-88,-89,-90,-139,-105,-16,-18,-67,-69,-139,-131,-139,-132,-139,-124,-139,-125,-139,-126,164,-139,-74,-76,-79,-81,-84,-85,-128,-86,-87,-21,-68,-139,-139,-14,-17,-139,-139,-75,-80,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'CTEF':([87,106,107,113,114,121,145,146,151,155,158,161,163,164,166,168,169,170,171,203,216,218,219,221,223,224,249,262,263,264,266,267,268,282,],[123,-139,123,123,123,123,123,-133,123,123,123,123,-65,-66,123,-70,-71,-72,-73,123,123,-139,-139,123,-139,-139,123,-77,-129,-78,-82,-130,-83,-56,]),'CTEC':([87,106,107,113,114,121,145,146,151,155,158,161,163,164,166,168,169,170,171,203,216,218,219,221,223,224,249,262,263,264,266,267,268,282,],[124,-139,124,124,124,124,124,-133,124,124,124,124,-65,-66,124,-70,-71,-72,-73,124,124,-139,-139,124,-139,-139,124,-77,-129,-78,-82,-130,-83,-56,]),'LETRERO':([130,155,],[183,209,]),'IF_TRUE':([210,],[256,]),'IF_FALSE':([322,],[327,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pnCrearDirFunc':([2,],[3,]),'empty':([2,5,8,9,10,12,14,25,26,27,28,30,31,32,44,45,47,48,49,53,59,72,74,89,90,91,92,93,94,95,96,97,98,104,106,107,108,117,118,119,120,122,123,124,128,141,142,148,154,172,174,177,179,181,198,199,200,205,208,209,213,214,218,219,223,224,231,232,233,234,235,236,237,238,239,247,257,261,265,280,281,287,289,290,291,301,302,322,324,331,],[4,7,11,15,11,19,15,35,35,35,35,35,43,11,15,51,54,57,60,101,60,109,112,132,132,132,132,132,132,132,132,132,19,144,146,149,152,162,167,173,175,178,180,182,109,195,54,204,109,217,222,227,227,227,35,101,245,250,254,254,162,167,263,263,267,267,271,271,271,271,271,271,271,271,271,204,60,173,175,11,303,60,60,217,222,60,321,328,330,60,]),'pnScriptFuncDir':([5,],[6,]),'varp':([8,10,32,280,],[9,17,44,301,]),'var':([8,10,32,280,],[10,10,10,10,]),'funcp':([9,14,44,],[13,22,49,]),'func':([9,14,44,],[14,14,14,]),'pnCheckTablaVar':([12,98,],[18,141,]),'bloque':([13,],[20,]),'returnval':([16,],[23,]),'tipo_simp':([16,18,141,320,],[24,31,197,197,]),'v':([18,],[29,]),'pnSaveTypeVar':([25,26,27,28,30,198,],[34,36,37,38,40,242,]),'vp':([31,],[41,]),'idp':([39,],[46,]),'pnAddFuncinDir':([45,],[50,]),'pnCheckNameTablaVar':([47,142,],[53,199,]),'vpp':([48,],[55,]),'estatutop':([49,59,257,287,289,301,331,],[58,105,288,304,306,318,332,]),'estatuto':([49,59,257,287,289,301,331,],[59,59,59,59,59,59,59,]),'asign':([49,59,115,257,287,289,301,331,],[61,61,158,61,61,61,61,61,]),'llamada':([49,59,87,107,113,114,121,145,151,155,158,161,166,203,216,221,249,257,287,289,301,331,],[62,62,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,62,62,62,62,62,]),'lee':([49,59,257,287,289,301,331,],[63,63,63,63,63,63,63,]),'escribe':([49,59,257,287,289,301,331,],[64,64,64,64,64,64,64,]),'condicion':([49,59,257,287,289,301,331,],[65,65,65,65,65,65,65,]),'ciclow':([49,59,257,287,289,301,331,],[66,66,66,66,66,66,66,]),'ciclof':([49,59,257,287,289,301,331,],[67,67,67,67,67,67,67,]),'funcesp':([49,59,87,107,113,114,121,145,151,155,158,161,166,203,216,221,249,257,287,289,301,331,],[68,68,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,68,68,68,68,68,]),'return':([49,59,257,287,289,301,331,],[69,69,69,69,69,69,69,]),'copy':([49,59,87,107,113,114,121,145,151,155,158,161,166,203,216,221,249,257,287,289,301,331,],[70,70,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,70,70,70,70,70,]),'variable':([49,59,87,107,110,113,114,115,121,145,151,155,158,161,166,184,185,186,187,188,189,190,191,192,203,216,221,249,257,287,289,301,331,],[71,71,125,125,153,125,125,71,125,125,125,125,125,125,125,231,232,233,234,235,236,237,238,239,125,125,125,125,71,71,71,71,71,]),'mean':([49,59,87,107,113,114,121,145,151,155,158,161,166,203,216,221,249,257,287,289,301,331,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'mode':([49,59,87,107,113,114,121,145,151,155,158,161,166,203,216,221,249,257,287,289,301,331,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'median':([49,59,87,107,113,114,121,145,151,155,158,161,166,203,216,221,249,257,287,289,301,331,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'variance':([49,59,87,107,113,114,121,145,151,155,158,161,166,203,216,221,249,257,287,289,301,331,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'max':([49,59,87,107,113,114,121,145,151,155,158,161,166,203,216,221,249,257,287,289,301,331,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'min':([49,59,87,107,113,114,121,145,151,155,158,161,166,203,216,221,249,257,287,289,301,331,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'staddes':([49,59,87,107,113,114,121,145,151,155,158,161,166,203,216,221,249,257,287,289,301,331,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'boxplot':([49,59,87,107,113,114,121,145,151,155,158,161,166,203,216,221,249,257,287,289,301,331,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'linreg':([49,59,87,107,113,114,121,145,151,155,158,161,166,203,216,221,249,257,287,289,301,331,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'idpp':([53,199,],[99,243,]),'pnSaveOperandos':([72,128,154,],[108,108,108,]),'pnSaveEscribe':([74,],[111,]),'exp':([87,107,113,114,121,145,151,155,158,203,249,],[116,148,156,157,176,200,205,208,212,247,285,]),'exprel':([87,107,113,114,121,145,151,155,158,161,203,249,],[117,117,117,117,117,117,117,117,117,213,117,117,]),'e':([87,107,113,114,121,145,151,155,158,161,166,203,249,],[118,118,118,118,118,118,118,118,118,118,214,118,118,]),'t':([87,107,113,114,121,145,151,155,158,161,166,203,216,249,],[119,119,119,119,119,119,119,119,119,119,119,119,261,119,]),'f':([87,107,113,114,121,145,151,155,158,161,166,203,216,221,249,],[120,120,120,120,120,120,120,120,120,120,120,120,120,265,120,]),'pnSaveFuncEsp':([89,90,91,92,93,94,95,96,97,],[131,133,134,135,136,137,138,139,140,]),'pnEndScript':([104,],[143,]),'pnSaveOperadorAsign':([106,],[145,]),'expp':([107,],[147,]),'indexp':([108,],[150,]),'logic':([117,213,],[160,259,]),'logicsig':([117,213,],[161,161,]),'relacionalp':([118,214,],[165,260,]),'relsig':([118,214,],[166,166,]),'pnCuadPlMi':([119,261,],[172,290,]),'pnCuadMuDi':([120,265,],[174,291,]),'pnSaveCteI':([122,],[177,]),'pnSaveCteF':([123,],[179,]),'pnSaveCteC':([124,],[181,]),'param':([141,],[193,]),'paramlist':([141,320,],[194,325,]),'tipoparam':([141,320,],[196,196,]),'exppp':([148,247,],[202,283,]),'escribep':([155,],[207,]),'tp':([172,290,],[215,307,]),'tsig':([172,290,],[216,216,]),'fp':([174,291,],[220,308,]),'fsig':([174,291,],[221,221,]),'pnSaveOperandoConstante':([177,179,181,],[226,228,229,]),'pnCuadAsign':([200,],[244,]),'indexpp':([205,],[248,]),'pnCuadEscribe':([208,209,],[253,255,]),'pnSaveOperadorPlMi':([218,219,],[262,264,]),'pnSaveOperadorMuDi':([223,224,],[266,268,]),'pnCuadFuncEsp':([231,232,233,234,235,236,237,238,239,],[270,272,273,274,275,276,277,278,279,]),'pnAddParametersTablaVar':([281,],[302,]),'paramlistp':([302,],[319,]),'falsop':([322,],[326,]),'pnCloseCurrentFunction':([324,],[329,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque','programa',8,'p_programa','lexer-parser.py',187),
  ('varp -> var varp','varp',2,'p_programa','lexer-parser.py',188),
  ('varp -> empty','varp',1,'p_programa','lexer-parser.py',189),
  ('funcp -> func funcp','funcp',2,'p_programa','lexer-parser.py',190),
  ('funcp -> empty','funcp',1,'p_programa','lexer-parser.py',191),
  ('bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript','bloque',7,'p_bloque','lexer-parser.py',197),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_bloque','lexer-parser.py',198),
  ('estatutop -> empty','estatutop',1,'p_bloque','lexer-parser.py',199),
  ('tipo_simp -> INT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',205),
  ('tipo_simp -> FLOAT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',206),
  ('tipo_simp -> CHAR pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',207),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','lexer-parser.py',213),
  ('tipo_comp -> file','tipo_comp',1,'p_tipo_comp','lexer-parser.py',214),
  ('copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON','copy',5,'p_copy','lexer-parser.py',220),
  ('file -> ID','file',1,'p_file','lexer-parser.py',226),
  ('variable -> ID pnSaveOperandos indexp','variable',3,'p_variable','lexer-parser.py',232),
  ('indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET','indexp',4,'p_variable','lexer-parser.py',233),
  ('indexp -> empty','indexp',1,'p_variable','lexer-parser.py',234),
  ('indexpp -> COMMA exp','indexpp',2,'p_variable','lexer-parser.py',235),
  ('indexpp -> empty','indexpp',1,'p_variable','lexer-parser.py',236),
  ('llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON','llamada',5,'p_llamada','lexer-parser.py',242),
  ('expp -> exp exppp','expp',2,'p_llamada','lexer-parser.py',243),
  ('expp -> empty','expp',1,'p_llamada','lexer-parser.py',244),
  ('exppp -> COMMA exp exppp','exppp',3,'p_llamada','lexer-parser.py',245),
  ('exppp -> empty','exppp',1,'p_llamada','lexer-parser.py',246),
  ('var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON','var',6,'p_var','lexer-parser.py',252),
  ('v -> DATAFRAME pnSaveTypeVar','v',2,'p_var','lexer-parser.py',253),
  ('v -> tipo_simp vp','v',2,'p_var','lexer-parser.py',254),
  ('vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET','vp',4,'p_var','lexer-parser.py',255),
  ('vp -> empty','vp',1,'p_var','lexer-parser.py',256),
  ('vpp -> COMMA CTEI','vpp',2,'p_var','lexer-parser.py',257),
  ('vpp -> empty','vpp',1,'p_var','lexer-parser.py',258),
  ('idp -> ID pnCheckNameTablaVar idpp','idp',3,'p_var','lexer-parser.py',259),
  ('idpp -> COMMA ID pnCheckNameTablaVar idpp','idpp',4,'p_var','lexer-parser.py',260),
  ('idpp -> empty','idpp',1,'p_var','lexer-parser.py',261),
  ('func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction','func',14,'p_func','lexer-parser.py',267),
  ('returnval -> tipo_simp','returnval',1,'p_func','lexer-parser.py',268),
  ('returnval -> VOID pnSaveTypeVar','returnval',2,'p_func','lexer-parser.py',269),
  ('param -> paramlist','param',1,'p_param','lexer-parser.py',275),
  ('param -> empty','param',1,'p_param','lexer-parser.py',276),
  ('paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp','paramlist',5,'p_param','lexer-parser.py',277),
  ('tipoparam -> tipo_simp','tipoparam',1,'p_param','lexer-parser.py',278),
  ('tipoparam -> DATAFRAME pnSaveTypeVar','tipoparam',2,'p_param','lexer-parser.py',279),
  ('paramlistp -> COMMA paramlist','paramlistp',2,'p_param','lexer-parser.py',280),
  ('paramlistp -> empty','paramlistp',1,'p_param','lexer-parser.py',281),
  ('estatuto -> asign','estatuto',1,'p_estatuto','lexer-parser.py',287),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','lexer-parser.py',288),
  ('estatuto -> lee','estatuto',1,'p_estatuto','lexer-parser.py',289),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','lexer-parser.py',290),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexer-parser.py',291),
  ('estatuto -> ciclow','estatuto',1,'p_estatuto','lexer-parser.py',292),
  ('estatuto -> ciclof','estatuto',1,'p_estatuto','lexer-parser.py',293),
  ('estatuto -> funcesp','estatuto',1,'p_estatuto','lexer-parser.py',294),
  ('estatuto -> return','estatuto',1,'p_estatuto','lexer-parser.py',295),
  ('estatuto -> copy','estatuto',1,'p_estatuto','lexer-parser.py',296),
  ('asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON','asign',6,'p_asign','lexer-parser.py',302),
  ('lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON','lee',5,'p_lee','lexer-parser.py',308),
  ('escribe -> WRITE pnSaveEscribe LEFT_PARENT escribep RIGHT_PARENT SEMICOLON','escribe',6,'p_escribe','lexer-parser.py',314),
  ('escribep -> exp pnCuadEscribe','escribep',2,'p_escribe','lexer-parser.py',315),
  ('escribep -> LETRERO pnCuadEscribe','escribep',2,'p_escribe','lexer-parser.py',316),
  ('return -> RETURNS exp SEMICOLON','return',3,'p_return','lexer-parser.py',322),
  ('exp -> exprel logic','exp',2,'p_exp','lexer-parser.py',328),
  ('logic -> logicsig exprel logic','logic',3,'p_exp','lexer-parser.py',329),
  ('logic -> empty','logic',1,'p_exp','lexer-parser.py',330),
  ('logicsig -> AND','logicsig',1,'p_exp','lexer-parser.py',331),
  ('logicsig -> OR','logicsig',1,'p_exp','lexer-parser.py',332),
  ('exprel -> e relacionalp','exprel',2,'p_exprel','lexer-parser.py',338),
  ('relacionalp -> relsig e relacionalp','relacionalp',3,'p_exprel','lexer-parser.py',339),
  ('relacionalp -> empty','relacionalp',1,'p_exprel','lexer-parser.py',340),
  ('relsig -> LESS_THAN','relsig',1,'p_exprel','lexer-parser.py',341),
  ('relsig -> GREATER_THAN','relsig',1,'p_exprel','lexer-parser.py',342),
  ('relsig -> EQUALS','relsig',1,'p_exprel','lexer-parser.py',343),
  ('relsig -> NOTEQUALS','relsig',1,'p_exprel','lexer-parser.py',344),
  ('e -> t pnCuadPlMi tp','e',3,'p_e','lexer-parser.py',350),
  ('tp -> tsig t pnCuadPlMi tp','tp',4,'p_e','lexer-parser.py',351),
  ('tp -> empty','tp',1,'p_e','lexer-parser.py',352),
  ('tsig -> PLUS pnSaveOperadorPlMi','tsig',2,'p_e','lexer-parser.py',353),
  ('tsig -> MINUS pnSaveOperadorPlMi','tsig',2,'p_e','lexer-parser.py',354),
  ('t -> f pnCuadMuDi fp','t',3,'p_t','lexer-parser.py',360),
  ('fp -> fsig f pnCuadMuDi fp','fp',4,'p_t','lexer-parser.py',361),
  ('fp -> empty','fp',1,'p_t','lexer-parser.py',362),
  ('fsig -> MULT pnSaveOperadorMuDi','fsig',2,'p_t','lexer-parser.py',363),
  ('fsig -> DIV pnSaveOperadorMuDi','fsig',2,'p_t','lexer-parser.py',364),
  ('f -> LEFT_PARENT exp RIGHT_PARENT','f',3,'p_f','lexer-parser.py',370),
  ('f -> CTEI pnSaveCteI pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',371),
  ('f -> CTEF pnSaveCteF pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',372),
  ('f -> CTEC pnSaveCteC pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',373),
  ('f -> variable','f',1,'p_f','lexer-parser.py',374),
  ('f -> llamada','f',1,'p_f','lexer-parser.py',375),
  ('f -> funcesp','f',1,'p_f','lexer-parser.py',376),
  ('condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop','condicion',9,'p_condicion','lexer-parser.py',382),
  ('falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','falsop',4,'p_condicion','lexer-parser.py',383),
  ('falsop -> empty','falsop',1,'p_condicion','lexer-parser.py',384),
  ('ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','ciclow',7,'p_ciclow','lexer-parser.py',390),
  ('ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','ciclof',8,'p_ciclof','lexer-parser.py',396),
  ('funcesp -> mean','funcesp',1,'p_funcesp','lexer-parser.py',402),
  ('funcesp -> mode','funcesp',1,'p_funcesp','lexer-parser.py',403),
  ('funcesp -> median','funcesp',1,'p_funcesp','lexer-parser.py',404),
  ('funcesp -> variance','funcesp',1,'p_funcesp','lexer-parser.py',405),
  ('funcesp -> max','funcesp',1,'p_funcesp','lexer-parser.py',406),
  ('funcesp -> min','funcesp',1,'p_funcesp','lexer-parser.py',407),
  ('funcesp -> staddes','funcesp',1,'p_funcesp','lexer-parser.py',408),
  ('funcesp -> boxplot','funcesp',1,'p_funcesp','lexer-parser.py',409),
  ('funcesp -> linreg','funcesp',1,'p_funcesp','lexer-parser.py',410),
  ('funcesp -> copy','funcesp',1,'p_funcesp','lexer-parser.py',411),
  ('mean -> MEAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mean',7,'p_mean','lexer-parser.py',417),
  ('mode -> MODE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mode',7,'p_mode','lexer-parser.py',423),
  ('median -> MEDIAN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','median',7,'p_median','lexer-parser.py',429),
  ('variance -> VARIANCE pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','variance',7,'p_variance','lexer-parser.py',435),
  ('max -> MAX pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','max',7,'p_max','lexer-parser.py',441),
  ('min -> MIN pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','min',7,'p_min','lexer-parser.py',447),
  ('staddes -> STADDES pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','staddes',7,'p_staddes','lexer-parser.py',453),
  ('boxplot -> BOXPLOT pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','boxplot',7,'p_boxplot','lexer-parser.py',459),
  ('linreg -> LINREG pnSaveFuncEsp LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','linreg',7,'p_linreg','lexer-parser.py',465),
  ('pnCrearDirFunc -> empty','pnCrearDirFunc',1,'p_pnCrearDirFunc','lexer-parser.py',475),
  ('pnScriptFuncDir -> empty','pnScriptFuncDir',1,'p_pnScriptFuncDir','lexer-parser.py',485),
  ('pnCheckTablaVar -> empty','pnCheckTablaVar',1,'p_pnCheckTablaVar','lexer-parser.py',494),
  ('pnSaveTypeVar -> empty','pnSaveTypeVar',1,'p_pnSaveTypeVar','lexer-parser.py',502),
  ('pnCheckNameTablaVar -> empty','pnCheckNameTablaVar',1,'p_pnCheckNameTablaVar','lexer-parser.py',511),
  ('pnAddFuncinDir -> empty','pnAddFuncinDir',1,'p_pnAddFuncinDir','lexer-parser.py',518),
  ('pnAddParametersTablaVar -> empty','pnAddParametersTablaVar',1,'p_pnAddParametersTablaVar','lexer-parser.py',532),
  ('pnCloseCurrentFunction -> empty','pnCloseCurrentFunction',1,'p_pnCloseCurrentFunction','lexer-parser.py',540),
  ('pnEndScript -> empty','pnEndScript',1,'p_pnEndScript','lexer-parser.py',549),
  ('pnSaveCteI -> empty','pnSaveCteI',1,'p_pnSaveCteI','lexer-parser.py',557),
  ('pnSaveCteF -> empty','pnSaveCteF',1,'p_pnSaveCteF','lexer-parser.py',564),
  ('pnSaveCteC -> empty','pnSaveCteC',1,'p_pnSaveCteC','lexer-parser.py',571),
  ('pnSaveOperandos -> empty','pnSaveOperandos',1,'p_pnSaveOperandos','lexer-parser.py',580),
  ('pnSaveOperandoConstante -> empty','pnSaveOperandoConstante',1,'p_pnSaveOperandoConstante','lexer-parser.py',596),
  ('pnSaveOperadorPlMi -> empty','pnSaveOperadorPlMi',1,'p_pnSaveOperadorPlMi','lexer-parser.py',604),
  ('pnSaveOperadorMuDi -> empty','pnSaveOperadorMuDi',1,'p_pnSaveOperadorMuDi','lexer-parser.py',611),
  ('pnCuadPlMi -> empty','pnCuadPlMi',1,'p_pnCuadPlMi','lexer-parser.py',618),
  ('pnCuadMuDi -> empty','pnCuadMuDi',1,'p_pnCuadMuDi','lexer-parser.py',652),
  ('pnSaveOperadorAsign -> empty','pnSaveOperadorAsign',1,'p_pnSaveOperadorAsign','lexer-parser.py',686),
  ('pnCuadAsign -> empty','pnCuadAsign',1,'p_pnCuadAsign','lexer-parser.py',693),
  ('pnSaveEscribe -> empty','pnSaveEscribe',1,'p_pnSaveEscribe','lexer-parser.py',719),
  ('pnCuadEscribe -> empty','pnCuadEscribe',1,'p_pnCuadEscribe','lexer-parser.py',726),
  ('pnSaveFuncEsp -> empty','pnSaveFuncEsp',1,'p_pnSaveFuncEsp','lexer-parser.py',763),
  ('pnCuadFuncEsp -> empty','pnCuadFuncEsp',1,'p_pnCuadFuncEsp','lexer-parser.py',770),
  ('empty -> <empty>','empty',0,'p_empty','lexer-parser.py',795),
]

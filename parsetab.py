
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVAND ARROW ASIGN BOXPLOT CHAR COMMA COMMENT CTEC CTEF CTEI DATAFRAME DIV DO EQUALS FLOAT FOR FUNC GREATER_THAN ID IF IF_FALSE IF_TRUE INT LEFT_CUR_BRACKET LEFT_PARENT LEFT_SQR_BRACKET LESS_THAN LETRERO LINREG MAX MEAN MEDIAN MIN MINUS MODE MULT NOTEQUALS OR PLUS READ READ_FILE RETURNS RIGHT_CUR_BRACKET RIGHT_PARENT RIGHT_SQR_BRACKET SCRIPT SEMICOLON STADDES VAR VARIANCE VOID WHILE WRITE\n    programa : SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque\n    varp : var varp \n         | empty\n    funcp : func funcp \n          | empty\n    \n    bloque : DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript\n    estatutop : estatuto estatutop \n              | empty\n    \n    tipo_simp : INT pnSaveTypeVar\n              | FLOAT pnSaveTypeVar\n              | CHAR pnSaveTypeVar\n    \n    tipo_comp : DATAFRAME \n              | file\n    \n    copy : READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON\n    \n    file : ID\n    \n    variable : ID pnSaveOperandos indexp\n    indexp : LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET \n           | empty\n    indexpp : COMMA exp \n            | empty\n    \n    llamada : ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON\n    expp : exp exppp\n         | empty\n    exppp : COMMA exp exppp\n          | empty\n    \n    var : VAR pnCheckTablaVar v ARROW idp SEMICOLON\n    v : DATAFRAME pnSaveTypeVar\n      | tipo_simp vp\n    vp : LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET \n       | empty\n    vpp : COMMA CTEI \n        | empty\n    idp : ID pnCheckNameTablaVar idpp\n    idpp : COMMA ID pnCheckNameTablaVar idpp\n         | empty\n    \n    func : FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction\n    returnval : tipo_simp \n              | VOID pnSaveTypeVar\n    \n    param : paramlist\n          | empty\n    paramlist : tipoparam ARROW ID pnAddParametersTablaVar paramlistp\n    tipoparam : tipo_simp\n              | DATAFRAME pnSaveTypeVar\n    paramlistp : COMMA paramlist\n               | empty\n    \n    estatuto : asign\n             | llamada\n             | lee\n             | escribe\n             | condicion\n             | ciclow\n             | ciclof\n             | funcesp\n             | return\n             | copy\n    \n    asign : variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON\n    \n    lee : READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    escribe :  WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON\n    escribep : exp \n             | LETRERO\n    \n    return : RETURNS exp SEMICOLON\n    \n    exp : exprel logic\n    logic : logicsig exprel logic \n          | empty\n    logicsig : AND \n             | OR\n    \n    exprel : e relacionalp\n    relacionalp : relsig e relacionalp \n                | empty\n    relsig : LESS_THAN \n           | GREATER_THAN \n           | EQUALS \n           | NOTEQUALS\n    \n    e : t pnCuadPlMi tp\n    tp : tsig t pnCuadPlMi tp \n       | empty\n    tsig : PLUS pnSaveOperadorPlMi\n         | MINUS pnSaveOperadorPlMi\n    \n    t : f pnCuadMuDi fp\n    fp : fsig f pnCuadMuDi fp \n       | empty\n    fsig : MULT pnSaveOperadorMuDi\n         | DIV pnSaveOperadorMuDi\n    \n    f : LEFT_PARENT exp RIGHT_PARENT\n      | CTEI\n      | CTEF\n      | CTEC\n      | variable\n      | llamada\n      | funcesp\n    \n    condicion : IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop\n    falsop : IF_FALSE  LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET \n           | empty\n    \n    ciclow : WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET\n    \n    ciclof : FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET\n    \n    funcesp : mean\n            | mode\n            | median\n            | variance\n            | max\n            | min\n            | staddes\n            | boxplot\n            | linreg\n            | copy\n    \n    mean : MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    mode : MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    median : MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    variance : VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    max : MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    min : MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    staddes : STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    boxplot : BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    linreg : LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    pnCrearDirFunc : empty\n    \n    pnScriptFuncDir : empty\n    \n    pnCheckTablaVar : empty\n    \n    pnSaveTypeVar : empty\n    \n    pnCheckNameTablaVar : empty\n    \n    pnAddFuncinDir : empty\n    \n    pnAddParametersTablaVar : empty\n    \n    pnCloseCurrentFunction : empty\n    \n    pnEndScript : empty\n    \n    pnSaveOperandos : empty\n    \n    pnSaveOperadorPlMi : empty\n    \n    pnSaveOperadorMuDi : empty\n    \n    pnCuadPlMi : empty\n    \n    pnCuadMuDi : empty\n    \n    pnSaveOperadorAsign : empty\n    \n    pnCuadAsign : empty\n    \n    empty :'
    
_lr_action_items = {'SCRIPT':([0,],[2,]),'$end':([1,20,104,141,142,],[0,-1,-131,-6,-123,]),'ID':([2,3,4,10,11,14,15,17,22,32,33,39,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,100,106,107,110,111,112,113,114,120,130,131,132,133,134,135,136,137,138,143,144,149,158,159,161,163,164,166,168,169,170,171,197,208,210,211,213,215,216,229,234,237,239,240,242,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,5,-115,-131,-3,-131,-5,-2,-4,-131,45,47,-131,72,-26,72,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,127,140,-131,127,152,127,127,127,152,127,152,152,152,152,152,152,152,152,152,127,-129,127,127,-61,127,-65,-66,127,-70,-71,-72,-73,127,127,-131,-131,127,-131,-131,265,-21,127,-57,-58,72,-77,-125,-78,-82,-126,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,72,72,72,-94,-131,-95,-131,-91,-93,-36,-122,72,-92,]),'SEMICOLON':([5,6,7,46,47,53,54,78,79,80,81,82,83,84,85,86,99,101,108,109,115,116,117,118,119,121,122,123,124,125,126,127,128,140,148,150,160,162,165,167,172,173,174,175,193,194,195,200,201,205,206,207,209,212,214,217,218,219,220,221,222,223,224,225,226,227,231,232,233,234,244,245,246,250,254,255,256,257,258,259,260,261,262,263,268,273,274,281,282,],[-131,8,-116,52,-131,-131,-119,-96,-97,-98,-99,-100,-101,-102,-103,-104,-33,-35,-131,-124,159,-131,-131,-131,-131,-85,-86,-87,-88,-89,-90,-131,-105,-131,-16,-18,-62,-64,-67,-69,-131,-127,-131,-128,-131,-131,234,239,240,-131,-131,-74,-76,-79,-81,-84,254,255,256,257,258,259,260,261,262,263,-34,266,-130,-21,-63,-68,-131,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,-131,-131,-75,-80,]),'VAR':([8,10,32,52,264,],[12,12,12,-26,12,]),'FUNC':([8,9,10,11,14,17,32,44,52,289,294,295,],[-131,16,-131,-3,16,-2,-131,16,-26,-131,-36,-122,]),'DO':([8,9,10,11,13,14,15,17,22,52,289,294,295,],[-131,-131,-131,-3,21,-131,-5,-2,-4,-26,-131,-36,-122,]),'READ':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,234,239,240,242,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,-3,-131,-5,-2,-4,-131,-131,73,-26,73,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,-58,73,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,73,73,73,-94,-131,-95,-131,-91,-93,-36,-122,73,-92,]),'WRITE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,234,239,240,242,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,-3,-131,-5,-2,-4,-131,-131,74,-26,74,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,-58,74,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,74,74,74,-94,-131,-95,-131,-91,-93,-36,-122,74,-92,]),'IF':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,234,239,240,242,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,-3,-131,-5,-2,-4,-131,-131,75,-26,75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,-58,75,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,75,75,75,-94,-131,-95,-131,-91,-93,-36,-122,75,-92,]),'WHILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,234,239,240,242,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,-3,-131,-5,-2,-4,-131,-131,76,-26,76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,-58,76,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,76,76,76,-94,-131,-95,-131,-91,-93,-36,-122,76,-92,]),'FOR':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,234,239,240,242,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,-3,-131,-5,-2,-4,-131,-131,77,-26,77,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,-58,77,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,77,77,77,-94,-131,-95,-131,-91,-93,-36,-122,77,-92,]),'RETURNS':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,234,239,240,242,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,-3,-131,-5,-2,-4,-131,-131,87,-26,87,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-57,-58,87,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,87,87,87,-94,-131,-95,-131,-91,-93,-36,-122,87,-92,]),'READ_FILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,197,208,210,211,213,215,216,234,237,239,240,242,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,-3,-131,-5,-2,-4,-131,-131,88,-26,88,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,88,-131,88,88,88,88,88,88,-129,88,88,-61,88,-65,-66,88,-70,-71,-72,-73,88,88,-131,-131,88,-131,-131,-21,88,-57,-58,88,-77,-125,-78,-82,-126,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,88,88,88,-94,-131,-95,-131,-91,-93,-36,-122,88,-92,]),'MEAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,197,208,210,211,213,215,216,234,237,239,240,242,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,-3,-131,-5,-2,-4,-131,-131,89,-26,89,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,89,-131,89,89,89,89,89,89,-129,89,89,-61,89,-65,-66,89,-70,-71,-72,-73,89,89,-131,-131,89,-131,-131,-21,89,-57,-58,89,-77,-125,-78,-82,-126,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,89,89,89,-94,-131,-95,-131,-91,-93,-36,-122,89,-92,]),'MODE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,197,208,210,211,213,215,216,234,237,239,240,242,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,-3,-131,-5,-2,-4,-131,-131,90,-26,90,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,90,-131,90,90,90,90,90,90,-129,90,90,-61,90,-65,-66,90,-70,-71,-72,-73,90,90,-131,-131,90,-131,-131,-21,90,-57,-58,90,-77,-125,-78,-82,-126,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,90,90,90,-94,-131,-95,-131,-91,-93,-36,-122,90,-92,]),'MEDIAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,197,208,210,211,213,215,216,234,237,239,240,242,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,-3,-131,-5,-2,-4,-131,-131,91,-26,91,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,91,-131,91,91,91,91,91,91,-129,91,91,-61,91,-65,-66,91,-70,-71,-72,-73,91,91,-131,-131,91,-131,-131,-21,91,-57,-58,91,-77,-125,-78,-82,-126,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,91,91,91,-94,-131,-95,-131,-91,-93,-36,-122,91,-92,]),'VARIANCE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,197,208,210,211,213,215,216,234,237,239,240,242,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,-3,-131,-5,-2,-4,-131,-131,92,-26,92,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,92,-131,92,92,92,92,92,92,-129,92,92,-61,92,-65,-66,92,-70,-71,-72,-73,92,92,-131,-131,92,-131,-131,-21,92,-57,-58,92,-77,-125,-78,-82,-126,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,92,92,92,-94,-131,-95,-131,-91,-93,-36,-122,92,-92,]),'MAX':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,197,208,210,211,213,215,216,234,237,239,240,242,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,-3,-131,-5,-2,-4,-131,-131,93,-26,93,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,93,-131,93,93,93,93,93,93,-129,93,93,-61,93,-65,-66,93,-70,-71,-72,-73,93,93,-131,-131,93,-131,-131,-21,93,-57,-58,93,-77,-125,-78,-82,-126,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,93,93,93,-94,-131,-95,-131,-91,-93,-36,-122,93,-92,]),'MIN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,197,208,210,211,213,215,216,234,237,239,240,242,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,-3,-131,-5,-2,-4,-131,-131,94,-26,94,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,94,-131,94,94,94,94,94,94,-129,94,94,-61,94,-65,-66,94,-70,-71,-72,-73,94,94,-131,-131,94,-131,-131,-21,94,-57,-58,94,-77,-125,-78,-82,-126,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,94,94,94,-94,-131,-95,-131,-91,-93,-36,-122,94,-92,]),'STADDES':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,197,208,210,211,213,215,216,234,237,239,240,242,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,-3,-131,-5,-2,-4,-131,-131,95,-26,95,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,95,-131,95,95,95,95,95,95,-129,95,95,-61,95,-65,-66,95,-70,-71,-72,-73,95,95,-131,-131,95,-131,-131,-21,95,-57,-58,95,-77,-125,-78,-82,-126,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,95,95,95,-94,-131,-95,-131,-91,-93,-36,-122,95,-92,]),'BOXPLOT':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,197,208,210,211,213,215,216,234,237,239,240,242,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,-3,-131,-5,-2,-4,-131,-131,96,-26,96,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,96,-131,96,96,96,96,96,96,-129,96,96,-61,96,-65,-66,96,-70,-71,-72,-73,96,96,-131,-131,96,-131,-131,-21,96,-57,-58,96,-77,-125,-78,-82,-126,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,96,96,96,-94,-131,-95,-131,-91,-93,-36,-122,96,-92,]),'LINREG':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,161,163,164,166,168,169,170,171,197,208,210,211,213,215,216,234,237,239,240,242,247,248,249,251,252,253,254,255,256,257,258,259,260,261,262,263,264,266,270,272,275,279,287,288,289,291,293,294,295,296,298,],[-131,-3,-131,-5,-2,-4,-131,-131,97,-26,97,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,97,-131,97,97,97,97,97,97,-129,97,97,-61,97,-65,-66,97,-70,-71,-72,-73,97,97,-131,-131,97,-131,-131,-21,97,-57,-58,97,-77,-125,-78,-82,-126,-83,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,97,97,97,-94,-131,-95,-131,-91,-93,-36,-122,97,-92,]),'RIGHT_CUR_BRACKET':([10,11,14,15,17,22,32,44,49,52,58,59,60,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,105,159,234,239,240,242,254,255,256,257,258,259,260,261,262,263,264,266,270,271,272,275,278,279,280,283,287,288,289,291,293,294,295,296,297,298,],[-131,-3,-131,-5,-2,-4,-131,-131,-131,-26,104,-131,-8,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-7,-61,-21,-57,-58,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-56,-131,279,-131,-131,287,-94,288,289,-131,-95,-131,-91,-93,-36,-122,-131,298,-92,]),'DATAFRAME':([12,18,19,98,139,285,],[-131,30,-117,-131,192,192,]),'INT':([12,16,18,19,98,139,285,],[-131,26,26,-117,-131,26,26,]),'FLOAT':([12,16,18,19,98,139,285,],[-131,27,27,-117,-131,27,27,]),'CHAR':([12,16,18,19,98,139,285,],[-131,28,28,-117,-131,28,28,]),'VOID':([16,],[25,]),'RIGHT_PARENT':([19,78,79,80,81,82,83,84,85,86,98,107,108,109,116,117,118,119,121,122,123,124,125,126,127,128,139,145,146,147,148,150,151,152,153,154,155,156,157,160,162,165,167,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,196,198,204,205,206,207,209,212,214,217,234,235,244,245,246,250,254,255,256,257,258,259,260,261,262,263,265,267,268,273,274,276,277,281,282,284,286,290,],[-117,-96,-97,-98,-99,-100,-101,-102,-103,-104,-131,-131,-131,-124,-131,-131,-131,-131,-85,-86,-87,-88,-89,-90,-131,-105,-131,195,-131,-23,-16,-18,200,-131,201,-59,-60,202,203,-62,-64,-67,-69,-131,-127,-131,-128,217,218,219,220,221,222,223,224,225,226,227,228,-39,-40,-22,-25,243,-131,-131,-74,-76,-79,-81,-84,-21,-131,-63,-68,-131,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-24,-17,-131,-131,-131,-121,-75,-80,-41,-45,-44,]),'LEFT_CUR_BRACKET':([21,203,228,241,243,292,],[32,242,264,270,272,296,]),'ARROW':([23,24,25,26,27,28,29,30,31,34,35,36,37,38,40,41,43,102,190,191,192,230,],[33,-37,-131,-131,-131,-131,39,-131,-131,-38,-118,-9,-10,-11,-27,-28,-30,-29,229,-42,-131,-43,]),'LEFT_SQR_BRACKET':([26,27,28,31,35,36,37,38,72,108,109,127,152,],[-131,-131,-131,42,-118,-9,-10,-11,-131,149,-124,-131,-131,]),'CTEI':([42,56,87,106,107,111,112,113,120,143,144,149,158,161,163,164,166,168,169,170,171,197,208,210,211,213,215,216,237,247,248,249,251,252,253,266,],[48,103,121,-131,121,121,121,121,121,121,-129,121,121,121,-65,-66,121,-70,-71,-72,-73,121,121,-131,-131,121,-131,-131,121,-77,-125,-78,-82,-126,-83,-56,]),'LEFT_PARENT':([45,50,51,72,73,74,75,76,77,87,88,89,90,91,92,93,94,95,96,97,106,107,111,112,113,120,127,143,144,149,158,161,163,164,166,168,169,170,171,197,208,210,211,213,215,216,237,247,248,249,251,252,253,266,],[-131,98,-120,107,110,111,112,113,114,120,129,130,131,132,133,134,135,136,137,138,-131,120,120,120,120,120,107,120,-129,120,120,120,-65,-66,120,-70,-71,-72,-73,120,120,-131,-131,120,-131,-131,120,-77,-125,-78,-82,-126,-83,-56,]),'COMMA':([47,48,53,54,78,79,80,81,82,83,84,85,86,108,109,116,117,118,119,121,122,123,124,125,126,127,128,140,146,148,150,160,162,165,167,172,173,174,175,193,199,205,206,207,209,212,214,217,234,235,244,245,246,250,254,255,256,257,258,259,260,261,262,263,265,268,273,274,276,277,281,282,],[-131,56,100,-119,-96,-97,-98,-99,-100,-101,-102,-103,-104,-131,-124,-131,-131,-131,-131,-85,-86,-87,-88,-89,-90,-131,-105,-131,197,-16,-18,-62,-64,-67,-69,-131,-127,-131,-128,100,237,-131,-131,-74,-76,-79,-81,-84,-21,197,-63,-68,-131,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-131,-17,-131,-131,285,-121,-75,-80,]),'RIGHT_SQR_BRACKET':([48,55,57,78,79,80,81,82,83,84,85,86,103,108,109,116,117,118,119,121,122,123,124,125,126,127,128,148,150,160,162,165,167,172,173,174,175,199,205,206,207,209,212,214,217,234,236,238,244,245,246,250,254,255,256,257,258,259,260,261,262,263,268,269,273,274,281,282,],[-131,102,-32,-96,-97,-98,-99,-100,-101,-102,-103,-104,-31,-131,-124,-131,-131,-131,-131,-85,-86,-87,-88,-89,-90,-131,-105,-16,-18,-62,-64,-67,-69,-131,-127,-131,-128,-131,-131,-131,-74,-76,-79,-81,-84,-21,268,-20,-63,-68,-131,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,-19,-131,-131,-75,-80,]),'ASIGN':([71,72,108,109,148,150,152,268,],[106,-131,-131,-124,-16,-18,-131,-17,]),'MULT':([78,79,80,81,82,83,84,85,86,108,109,119,121,122,123,124,125,126,127,128,148,150,174,175,217,234,250,254,255,256,257,258,259,260,261,262,263,268,274,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-131,-124,-131,-85,-86,-87,-88,-89,-90,-131,-105,-16,-18,215,-128,-84,-21,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,215,]),'DIV':([78,79,80,81,82,83,84,85,86,108,109,119,121,122,123,124,125,126,127,128,148,150,174,175,217,234,250,254,255,256,257,258,259,260,261,262,263,268,274,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-131,-124,-131,-85,-86,-87,-88,-89,-90,-131,-105,-16,-18,216,-128,-84,-21,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,216,]),'PLUS':([78,79,80,81,82,83,84,85,86,108,109,118,119,121,122,123,124,125,126,127,128,148,150,172,173,174,175,212,214,217,234,246,250,254,255,256,257,258,259,260,261,262,263,268,273,274,282,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-131,-124,-131,-131,-85,-86,-87,-88,-89,-90,-131,-105,-16,-18,210,-127,-131,-128,-79,-81,-84,-21,-131,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,210,-131,-80,]),'MINUS':([78,79,80,81,82,83,84,85,86,108,109,118,119,121,122,123,124,125,126,127,128,148,150,172,173,174,175,212,214,217,234,246,250,254,255,256,257,258,259,260,261,262,263,268,273,274,282,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-131,-124,-131,-131,-85,-86,-87,-88,-89,-90,-131,-105,-16,-18,211,-127,-131,-128,-79,-81,-84,-21,-131,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,211,-131,-80,]),'LESS_THAN':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,121,122,123,124,125,126,127,128,148,150,172,173,174,175,206,207,209,212,214,217,234,246,250,254,255,256,257,258,259,260,261,262,263,268,273,274,281,282,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-131,-124,168,-131,-131,-85,-86,-87,-88,-89,-90,-131,-105,-16,-18,-131,-127,-131,-128,168,-74,-76,-79,-81,-84,-21,-131,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,-131,-131,-75,-80,]),'GREATER_THAN':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,121,122,123,124,125,126,127,128,148,150,172,173,174,175,206,207,209,212,214,217,234,246,250,254,255,256,257,258,259,260,261,262,263,268,273,274,281,282,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-131,-124,169,-131,-131,-85,-86,-87,-88,-89,-90,-131,-105,-16,-18,-131,-127,-131,-128,169,-74,-76,-79,-81,-84,-21,-131,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,-131,-131,-75,-80,]),'EQUALS':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,121,122,123,124,125,126,127,128,148,150,172,173,174,175,206,207,209,212,214,217,234,246,250,254,255,256,257,258,259,260,261,262,263,268,273,274,281,282,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-131,-124,170,-131,-131,-85,-86,-87,-88,-89,-90,-131,-105,-16,-18,-131,-127,-131,-128,170,-74,-76,-79,-81,-84,-21,-131,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,-131,-131,-75,-80,]),'NOTEQUALS':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,121,122,123,124,125,126,127,128,148,150,172,173,174,175,206,207,209,212,214,217,234,246,250,254,255,256,257,258,259,260,261,262,263,268,273,274,281,282,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-131,-124,171,-131,-131,-85,-86,-87,-88,-89,-90,-131,-105,-16,-18,-131,-127,-131,-128,171,-74,-76,-79,-81,-84,-21,-131,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,-131,-131,-75,-80,]),'AND':([78,79,80,81,82,83,84,85,86,108,109,116,117,118,119,121,122,123,124,125,126,127,128,148,150,165,167,172,173,174,175,205,206,207,209,212,214,217,234,245,246,250,254,255,256,257,258,259,260,261,262,263,268,273,274,281,282,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-131,-124,163,-131,-131,-131,-85,-86,-87,-88,-89,-90,-131,-105,-16,-18,-67,-69,-131,-127,-131,-128,163,-131,-74,-76,-79,-81,-84,-21,-68,-131,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,-131,-131,-75,-80,]),'OR':([78,79,80,81,82,83,84,85,86,108,109,116,117,118,119,121,122,123,124,125,126,127,128,148,150,165,167,172,173,174,175,205,206,207,209,212,214,217,234,245,246,250,254,255,256,257,258,259,260,261,262,263,268,273,274,281,282,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-131,-124,164,-131,-131,-131,-85,-86,-87,-88,-89,-90,-131,-105,-16,-18,-67,-69,-131,-127,-131,-128,164,-131,-74,-76,-79,-81,-84,-21,-68,-131,-131,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-17,-131,-131,-75,-80,]),'CTEF':([87,106,107,111,112,113,120,143,144,149,158,161,163,164,166,168,169,170,171,197,208,210,211,213,215,216,237,247,248,249,251,252,253,266,],[122,-131,122,122,122,122,122,122,-129,122,122,122,-65,-66,122,-70,-71,-72,-73,122,122,-131,-131,122,-131,-131,122,-77,-125,-78,-82,-126,-83,-56,]),'CTEC':([87,106,107,111,112,113,120,143,144,149,158,161,163,164,166,168,169,170,171,197,208,210,211,213,215,216,237,247,248,249,251,252,253,266,],[123,-131,123,123,123,123,123,123,-129,123,123,123,-65,-66,123,-70,-71,-72,-73,123,123,-131,-131,123,-131,-131,123,-77,-125,-78,-82,-126,-83,-56,]),'LETRERO':([111,129,],[155,177,]),'IF_TRUE':([202,],[241,]),'IF_FALSE':([287,],[292,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pnCrearDirFunc':([2,],[3,]),'empty':([2,5,8,9,10,12,14,25,26,27,28,30,31,32,44,45,47,48,49,53,59,72,98,104,106,107,108,116,117,118,119,127,139,140,146,152,172,174,192,193,194,199,205,206,210,211,215,216,235,242,246,250,264,265,270,272,273,274,275,276,287,289,296,],[4,7,11,15,11,19,15,35,35,35,35,35,43,11,15,51,54,57,60,101,60,109,19,142,144,147,150,162,167,173,175,109,189,54,198,109,209,214,35,101,233,238,162,167,248,248,252,252,198,60,173,175,11,277,60,60,209,214,60,286,293,295,60,]),'pnScriptFuncDir':([5,],[6,]),'varp':([8,10,32,264,],[9,17,44,275,]),'var':([8,10,32,264,],[10,10,10,10,]),'funcp':([9,14,44,],[13,22,49,]),'func':([9,14,44,],[14,14,14,]),'pnCheckTablaVar':([12,98,],[18,139,]),'bloque':([13,],[20,]),'returnval':([16,],[23,]),'tipo_simp':([16,18,139,285,],[24,31,191,191,]),'v':([18,],[29,]),'pnSaveTypeVar':([25,26,27,28,30,192,],[34,36,37,38,40,230,]),'vp':([31,],[41,]),'idp':([39,],[46,]),'pnAddFuncinDir':([45,],[50,]),'pnCheckNameTablaVar':([47,140,],[53,193,]),'vpp':([48,],[55,]),'estatutop':([49,59,242,270,272,275,296,],[58,105,271,278,280,283,297,]),'estatuto':([49,59,242,270,272,275,296,],[59,59,59,59,59,59,59,]),'asign':([49,59,114,242,270,272,275,296,],[61,61,158,61,61,61,61,61,]),'llamada':([49,59,87,107,111,112,113,120,143,149,158,161,166,197,208,213,237,242,270,272,275,296,],[62,62,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,62,62,62,62,62,]),'lee':([49,59,242,270,272,275,296,],[63,63,63,63,63,63,63,]),'escribe':([49,59,242,270,272,275,296,],[64,64,64,64,64,64,64,]),'condicion':([49,59,242,270,272,275,296,],[65,65,65,65,65,65,65,]),'ciclow':([49,59,242,270,272,275,296,],[66,66,66,66,66,66,66,]),'ciclof':([49,59,242,270,272,275,296,],[67,67,67,67,67,67,67,]),'funcesp':([49,59,87,107,111,112,113,120,143,149,158,161,166,197,208,213,237,242,270,272,275,296,],[68,68,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,68,68,68,68,68,]),'return':([49,59,242,270,272,275,296,],[69,69,69,69,69,69,69,]),'copy':([49,59,87,107,111,112,113,120,143,149,158,161,166,197,208,213,237,242,270,272,275,296,],[70,70,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,70,70,70,70,70,]),'variable':([49,59,87,107,110,111,112,113,114,120,130,131,132,133,134,135,136,137,138,143,149,158,161,166,197,208,213,237,242,270,272,275,296,],[71,71,124,124,151,124,124,124,71,124,178,179,180,181,182,183,184,185,186,124,124,124,124,124,124,124,124,124,71,71,71,71,71,]),'mean':([49,59,87,107,111,112,113,120,143,149,158,161,166,197,208,213,237,242,270,272,275,296,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'mode':([49,59,87,107,111,112,113,120,143,149,158,161,166,197,208,213,237,242,270,272,275,296,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'median':([49,59,87,107,111,112,113,120,143,149,158,161,166,197,208,213,237,242,270,272,275,296,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'variance':([49,59,87,107,111,112,113,120,143,149,158,161,166,197,208,213,237,242,270,272,275,296,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'max':([49,59,87,107,111,112,113,120,143,149,158,161,166,197,208,213,237,242,270,272,275,296,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'min':([49,59,87,107,111,112,113,120,143,149,158,161,166,197,208,213,237,242,270,272,275,296,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'staddes':([49,59,87,107,111,112,113,120,143,149,158,161,166,197,208,213,237,242,270,272,275,296,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'boxplot':([49,59,87,107,111,112,113,120,143,149,158,161,166,197,208,213,237,242,270,272,275,296,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'linreg':([49,59,87,107,111,112,113,120,143,149,158,161,166,197,208,213,237,242,270,272,275,296,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'idpp':([53,193,],[99,231,]),'pnSaveOperandos':([72,127,152,],[108,108,108,]),'exp':([87,107,111,112,113,120,143,149,158,197,237,],[115,146,154,156,157,176,194,199,204,235,269,]),'exprel':([87,107,111,112,113,120,143,149,158,161,197,237,],[116,116,116,116,116,116,116,116,116,205,116,116,]),'e':([87,107,111,112,113,120,143,149,158,161,166,197,237,],[117,117,117,117,117,117,117,117,117,117,206,117,117,]),'t':([87,107,111,112,113,120,143,149,158,161,166,197,208,237,],[118,118,118,118,118,118,118,118,118,118,118,118,246,118,]),'f':([87,107,111,112,113,120,143,149,158,161,166,197,208,213,237,],[119,119,119,119,119,119,119,119,119,119,119,119,119,250,119,]),'pnEndScript':([104,],[141,]),'pnSaveOperadorAsign':([106,],[143,]),'expp':([107,],[145,]),'indexp':([108,],[148,]),'escribep':([111,],[153,]),'logic':([116,205,],[160,244,]),'logicsig':([116,205,],[161,161,]),'relacionalp':([117,206,],[165,245,]),'relsig':([117,206,],[166,166,]),'pnCuadPlMi':([118,246,],[172,273,]),'pnCuadMuDi':([119,250,],[174,274,]),'param':([139,],[187,]),'paramlist':([139,285,],[188,290,]),'tipoparam':([139,285,],[190,190,]),'exppp':([146,235,],[196,267,]),'tp':([172,273,],[207,281,]),'tsig':([172,273,],[208,208,]),'fp':([174,274,],[212,282,]),'fsig':([174,274,],[213,213,]),'pnCuadAsign':([194,],[232,]),'indexpp':([199,],[236,]),'pnSaveOperadorPlMi':([210,211,],[247,249,]),'pnSaveOperadorMuDi':([215,216,],[251,253,]),'pnAddParametersTablaVar':([265,],[276,]),'paramlistp':([276,],[284,]),'falsop':([287,],[291,]),'pnCloseCurrentFunction':([289,],[294,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque','programa',8,'p_programa','lexer-parser.py',186),
  ('varp -> var varp','varp',2,'p_programa','lexer-parser.py',187),
  ('varp -> empty','varp',1,'p_programa','lexer-parser.py',188),
  ('funcp -> func funcp','funcp',2,'p_programa','lexer-parser.py',189),
  ('funcp -> empty','funcp',1,'p_programa','lexer-parser.py',190),
  ('bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript','bloque',7,'p_bloque','lexer-parser.py',196),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_bloque','lexer-parser.py',197),
  ('estatutop -> empty','estatutop',1,'p_bloque','lexer-parser.py',198),
  ('tipo_simp -> INT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',204),
  ('tipo_simp -> FLOAT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',205),
  ('tipo_simp -> CHAR pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',206),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','lexer-parser.py',212),
  ('tipo_comp -> file','tipo_comp',1,'p_tipo_comp','lexer-parser.py',213),
  ('copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON','copy',5,'p_copy','lexer-parser.py',219),
  ('file -> ID','file',1,'p_file','lexer-parser.py',225),
  ('variable -> ID pnSaveOperandos indexp','variable',3,'p_variable','lexer-parser.py',231),
  ('indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET','indexp',4,'p_variable','lexer-parser.py',232),
  ('indexp -> empty','indexp',1,'p_variable','lexer-parser.py',233),
  ('indexpp -> COMMA exp','indexpp',2,'p_variable','lexer-parser.py',234),
  ('indexpp -> empty','indexpp',1,'p_variable','lexer-parser.py',235),
  ('llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON','llamada',5,'p_llamada','lexer-parser.py',241),
  ('expp -> exp exppp','expp',2,'p_llamada','lexer-parser.py',242),
  ('expp -> empty','expp',1,'p_llamada','lexer-parser.py',243),
  ('exppp -> COMMA exp exppp','exppp',3,'p_llamada','lexer-parser.py',244),
  ('exppp -> empty','exppp',1,'p_llamada','lexer-parser.py',245),
  ('var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON','var',6,'p_var','lexer-parser.py',251),
  ('v -> DATAFRAME pnSaveTypeVar','v',2,'p_var','lexer-parser.py',252),
  ('v -> tipo_simp vp','v',2,'p_var','lexer-parser.py',253),
  ('vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET','vp',4,'p_var','lexer-parser.py',254),
  ('vp -> empty','vp',1,'p_var','lexer-parser.py',255),
  ('vpp -> COMMA CTEI','vpp',2,'p_var','lexer-parser.py',256),
  ('vpp -> empty','vpp',1,'p_var','lexer-parser.py',257),
  ('idp -> ID pnCheckNameTablaVar idpp','idp',3,'p_var','lexer-parser.py',258),
  ('idpp -> COMMA ID pnCheckNameTablaVar idpp','idpp',4,'p_var','lexer-parser.py',259),
  ('idpp -> empty','idpp',1,'p_var','lexer-parser.py',260),
  ('func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction','func',14,'p_func','lexer-parser.py',266),
  ('returnval -> tipo_simp','returnval',1,'p_func','lexer-parser.py',267),
  ('returnval -> VOID pnSaveTypeVar','returnval',2,'p_func','lexer-parser.py',268),
  ('param -> paramlist','param',1,'p_param','lexer-parser.py',274),
  ('param -> empty','param',1,'p_param','lexer-parser.py',275),
  ('paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp','paramlist',5,'p_param','lexer-parser.py',276),
  ('tipoparam -> tipo_simp','tipoparam',1,'p_param','lexer-parser.py',277),
  ('tipoparam -> DATAFRAME pnSaveTypeVar','tipoparam',2,'p_param','lexer-parser.py',278),
  ('paramlistp -> COMMA paramlist','paramlistp',2,'p_param','lexer-parser.py',279),
  ('paramlistp -> empty','paramlistp',1,'p_param','lexer-parser.py',280),
  ('estatuto -> asign','estatuto',1,'p_estatuto','lexer-parser.py',286),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','lexer-parser.py',287),
  ('estatuto -> lee','estatuto',1,'p_estatuto','lexer-parser.py',288),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','lexer-parser.py',289),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexer-parser.py',290),
  ('estatuto -> ciclow','estatuto',1,'p_estatuto','lexer-parser.py',291),
  ('estatuto -> ciclof','estatuto',1,'p_estatuto','lexer-parser.py',292),
  ('estatuto -> funcesp','estatuto',1,'p_estatuto','lexer-parser.py',293),
  ('estatuto -> return','estatuto',1,'p_estatuto','lexer-parser.py',294),
  ('estatuto -> copy','estatuto',1,'p_estatuto','lexer-parser.py',295),
  ('asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON','asign',6,'p_asign','lexer-parser.py',301),
  ('lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON','lee',5,'p_lee','lexer-parser.py',307),
  ('escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON','escribe',5,'p_escribe','lexer-parser.py',313),
  ('escribep -> exp','escribep',1,'p_escribe','lexer-parser.py',314),
  ('escribep -> LETRERO','escribep',1,'p_escribe','lexer-parser.py',315),
  ('return -> RETURNS exp SEMICOLON','return',3,'p_return','lexer-parser.py',321),
  ('exp -> exprel logic','exp',2,'p_exp','lexer-parser.py',327),
  ('logic -> logicsig exprel logic','logic',3,'p_exp','lexer-parser.py',328),
  ('logic -> empty','logic',1,'p_exp','lexer-parser.py',329),
  ('logicsig -> AND','logicsig',1,'p_exp','lexer-parser.py',330),
  ('logicsig -> OR','logicsig',1,'p_exp','lexer-parser.py',331),
  ('exprel -> e relacionalp','exprel',2,'p_exprel','lexer-parser.py',337),
  ('relacionalp -> relsig e relacionalp','relacionalp',3,'p_exprel','lexer-parser.py',338),
  ('relacionalp -> empty','relacionalp',1,'p_exprel','lexer-parser.py',339),
  ('relsig -> LESS_THAN','relsig',1,'p_exprel','lexer-parser.py',340),
  ('relsig -> GREATER_THAN','relsig',1,'p_exprel','lexer-parser.py',341),
  ('relsig -> EQUALS','relsig',1,'p_exprel','lexer-parser.py',342),
  ('relsig -> NOTEQUALS','relsig',1,'p_exprel','lexer-parser.py',343),
  ('e -> t pnCuadPlMi tp','e',3,'p_e','lexer-parser.py',349),
  ('tp -> tsig t pnCuadPlMi tp','tp',4,'p_e','lexer-parser.py',350),
  ('tp -> empty','tp',1,'p_e','lexer-parser.py',351),
  ('tsig -> PLUS pnSaveOperadorPlMi','tsig',2,'p_e','lexer-parser.py',352),
  ('tsig -> MINUS pnSaveOperadorPlMi','tsig',2,'p_e','lexer-parser.py',353),
  ('t -> f pnCuadMuDi fp','t',3,'p_t','lexer-parser.py',359),
  ('fp -> fsig f pnCuadMuDi fp','fp',4,'p_t','lexer-parser.py',360),
  ('fp -> empty','fp',1,'p_t','lexer-parser.py',361),
  ('fsig -> MULT pnSaveOperadorMuDi','fsig',2,'p_t','lexer-parser.py',362),
  ('fsig -> DIV pnSaveOperadorMuDi','fsig',2,'p_t','lexer-parser.py',363),
  ('f -> LEFT_PARENT exp RIGHT_PARENT','f',3,'p_f','lexer-parser.py',369),
  ('f -> CTEI','f',1,'p_f','lexer-parser.py',370),
  ('f -> CTEF','f',1,'p_f','lexer-parser.py',371),
  ('f -> CTEC','f',1,'p_f','lexer-parser.py',372),
  ('f -> variable','f',1,'p_f','lexer-parser.py',373),
  ('f -> llamada','f',1,'p_f','lexer-parser.py',374),
  ('f -> funcesp','f',1,'p_f','lexer-parser.py',375),
  ('condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop','condicion',9,'p_condicion','lexer-parser.py',381),
  ('falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','falsop',4,'p_condicion','lexer-parser.py',382),
  ('falsop -> empty','falsop',1,'p_condicion','lexer-parser.py',383),
  ('ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','ciclow',7,'p_ciclow','lexer-parser.py',389),
  ('ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','ciclof',8,'p_ciclof','lexer-parser.py',395),
  ('funcesp -> mean','funcesp',1,'p_funcesp','lexer-parser.py',401),
  ('funcesp -> mode','funcesp',1,'p_funcesp','lexer-parser.py',402),
  ('funcesp -> median','funcesp',1,'p_funcesp','lexer-parser.py',403),
  ('funcesp -> variance','funcesp',1,'p_funcesp','lexer-parser.py',404),
  ('funcesp -> max','funcesp',1,'p_funcesp','lexer-parser.py',405),
  ('funcesp -> min','funcesp',1,'p_funcesp','lexer-parser.py',406),
  ('funcesp -> staddes','funcesp',1,'p_funcesp','lexer-parser.py',407),
  ('funcesp -> boxplot','funcesp',1,'p_funcesp','lexer-parser.py',408),
  ('funcesp -> linreg','funcesp',1,'p_funcesp','lexer-parser.py',409),
  ('funcesp -> copy','funcesp',1,'p_funcesp','lexer-parser.py',410),
  ('mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON','mean',5,'p_mean','lexer-parser.py',416),
  ('mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON','mode',5,'p_mode','lexer-parser.py',422),
  ('median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON','median',5,'p_median','lexer-parser.py',428),
  ('variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON','variance',5,'p_variance','lexer-parser.py',434),
  ('max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON','max',5,'p_max','lexer-parser.py',440),
  ('min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON','min',5,'p_min','lexer-parser.py',446),
  ('staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON','staddes',5,'p_staddes','lexer-parser.py',452),
  ('boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON','boxplot',5,'p_boxplot','lexer-parser.py',458),
  ('linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON','linreg',5,'p_linreg','lexer-parser.py',464),
  ('pnCrearDirFunc -> empty','pnCrearDirFunc',1,'p_pnCrearDirFunc','lexer-parser.py',474),
  ('pnScriptFuncDir -> empty','pnScriptFuncDir',1,'p_pnScriptFuncDir','lexer-parser.py',484),
  ('pnCheckTablaVar -> empty','pnCheckTablaVar',1,'p_pnCheckTablaVar','lexer-parser.py',493),
  ('pnSaveTypeVar -> empty','pnSaveTypeVar',1,'p_pnSaveTypeVar','lexer-parser.py',501),
  ('pnCheckNameTablaVar -> empty','pnCheckNameTablaVar',1,'p_pnCheckNameTablaVar','lexer-parser.py',510),
  ('pnAddFuncinDir -> empty','pnAddFuncinDir',1,'p_pnAddFuncinDir','lexer-parser.py',517),
  ('pnAddParametersTablaVar -> empty','pnAddParametersTablaVar',1,'p_pnAddParametersTablaVar','lexer-parser.py',531),
  ('pnCloseCurrentFunction -> empty','pnCloseCurrentFunction',1,'p_pnCloseCurrentFunction','lexer-parser.py',539),
  ('pnEndScript -> empty','pnEndScript',1,'p_pnEndScript','lexer-parser.py',548),
  ('pnSaveOperandos -> empty','pnSaveOperandos',1,'p_pnSaveOperandos','lexer-parser.py',558),
  ('pnSaveOperadorPlMi -> empty','pnSaveOperadorPlMi',1,'p_pnSaveOperadorPlMi','lexer-parser.py',574),
  ('pnSaveOperadorMuDi -> empty','pnSaveOperadorMuDi',1,'p_pnSaveOperadorMuDi','lexer-parser.py',582),
  ('pnCuadPlMi -> empty','pnCuadPlMi',1,'p_pnCuadPlMi','lexer-parser.py',589),
  ('pnCuadMuDi -> empty','pnCuadMuDi',1,'p_pnCuadMuDi','lexer-parser.py',623),
  ('pnSaveOperadorAsign -> empty','pnSaveOperadorAsign',1,'p_pnSaveOperadorAsign','lexer-parser.py',657),
  ('pnCuadAsign -> empty','pnCuadAsign',1,'p_pnCuadAsign','lexer-parser.py',665),
  ('empty -> <empty>','empty',0,'p_empty','lexer-parser.py',679),
]

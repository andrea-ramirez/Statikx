
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVAND ARROW ASIGN BOXPLOT CHAR COMMA COMMENT CTEC CTEF CTEI DATAFRAME DIV DO EQUALS FLOAT FOR FUNC GREATER_THAN ID IF IF_FALSE IF_TRUE INT LEFT_CUR_BRACKET LEFT_PARENT LEFT_SQR_BRACKET LESS_THAN LETRERO LINREG MAX MEAN MEDIAN MIN MINUS MODE MULT NOTEQUALS OR PLUS READ READ_FILE RETURNS RIGHT_CUR_BRACKET RIGHT_PARENT RIGHT_SQR_BRACKET SCRIPT SEMICOLON STADDES VAR VARIANCE VOID WHILE WRITE\n    programa : SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque\n    varp : var varp \n         | empty\n    funcp : func funcp \n          | empty\n    \n    bloque : DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript\n    estatutop : estatuto estatutop \n              | empty\n    \n    tipo_simp : INT pnSaveTypeVar\n              | FLOAT pnSaveTypeVar\n              | CHAR pnSaveTypeVar\n    \n    tipo_comp : DATAFRAME \n              | file\n    \n    copy : READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON\n    \n    file : ID\n    \n    variable : ID pnSaveOperandos indexp\n    indexp : LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop\n           | empty\n    indexpp : COMMA pnArrAccIncDim exp pnMatCalc\n            | empty pnArrCalc\n    \n    llamada : ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub\n    expp : exp pnCuadParametro exppp\n         | empty\n    exppp : COMMA pnUpdateK exp pnCuadParametro exppp\n          | empty\n    \n    var : VAR pnCheckTablaVar v ARROW idp SEMICOLON\n    v : DATAFRAME pnSaveTypeVar\n      | tipo_simp vp\n    vp : LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar\n       | empty\n    vpp : COMMA CTEI pnArrSaveLim1\n        | empty\n    idp : ID pnCheckNameTablaVar pnArrAddDim idpp\n    idpp : COMMA ID pnCheckNameTablaVar pnArrAddDim idpp\n         | empty\n    \n    func : FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction\n    returnval : tipo_simp \n              | VOID pnSaveTypeVar\n    \n    param : paramlist\n          | empty\n    paramlist : tipoparam ARROW ID pnAddParametersTablaVar paramlistp\n    tipoparam : tipo_simp\n              | DATAFRAME pnSaveTypeVar\n    paramlistp : COMMA paramlist\n               | empty\n    \n    estatuto : asign\n             | llamada\n             | lee\n             | escribe\n             | condicion\n             | ciclow\n             | ciclof\n             | funcesp\n             | return\n             | copy\n    \n    asign : variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON\n    \n    lee : READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON\n    \n    escribe :  WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON\n    escribep : exp pnCuadEscribe\n             | LETRERO pnCuadEscribe\n    \n    return : RETURNS exp SEMICOLON\n    \n    exp : exprel pnCuadOplog logic\n    logic : logicsig exprel pnCuadOplog logic \n          | empty\n    logicsig : AND pnSaveOperadorLog\n             | OR pnSaveOperadorLog\n    \n    exprel : e pnCuadOpRelacional relacionalp\n    relacionalp : relsig e pnCuadOpRelacional relacionalp \n                | empty\n    relsig : LESS_THAN pnSaveOperadorRel\n           | GREATER_THAN pnSaveOperadorRel\n           | EQUALS pnSaveOperadorRel\n           | NOTEQUALS pnSaveOperadorRel\n    \n    e : t pnCuadPlMi tp\n    tp : tsig t pnCuadPlMi tp \n       | empty\n    tsig : PLUS pnSaveOperadorPlMi\n         | MINUS pnSaveOperadorPlMi\n    \n    t : f pnCuadMuDi fp\n    fp : fsig f pnCuadMuDi fp \n       | empty\n    fsig : MULT pnSaveOperadorMuDi\n         | DIV pnSaveOperadorMuDi\n    \n    f : LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso\n      | CTEI pnSaveCteI  pnSaveOperandoConstante\n      | CTEF pnSaveCteF pnSaveOperandoConstante\n      | CTEC pnSaveCteC pnSaveOperandoConstante\n      | variable\n      | llamada\n      | funcesp\n    \n    condicion : IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf\n    falsop : IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET \n           | empty\n    \n    ciclow : WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile\n    \n    ciclof : FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor\n    \n    funcesp : mean\n            | mode\n            | median\n            | variance\n            | max\n            | min\n            | staddes\n            | boxplot\n            | linreg\n            | copy\n    \n    mean : MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    mode : MODE LEFT_PARENT variable  pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    median : MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    variance : VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    max : MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    min : MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    staddes : STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    boxplot : BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    linreg : LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    pnCrearDirFunc : empty\n    \n    pnCuadGotoMain : empty\n    \n    pnDirMain : empty\n    \n    pnScriptFuncDir : empty\n    \n    pnCheckTablaVar : empty\n    \n    pnCrearListaParam : empty\n    \n    pnSaveTypeVar : empty\n    \n    pnCheckNameTablaVar : empty\n    \n    pnAddFuncinDir : empty\n    \n    pnAddParametersTablaVar : empty\n    \n    pnCountVarsINTOResources : empty\n    \n    pnDirecIniFunc : empty\n    \n    pnCloseCurrentFunction : empty\n    \n    pnEndScript : empty\n    \n    pnCheckFunc : empty\n    \n    pnGenerateEra : empty\n    \n    pnCuadParametro : empty\n    \n    pnUpdateK : empty\n    \n    pnCheckNoParam : empty\n    \n    pnCuadGoSub : empty\n    \n    pnSaveCteI : empty\n    \n    pnSaveCteF : empty\n    \n    pnSaveCteC : empty\n    \n    pnSaveFondoFalso : empty\n    \n    pnPopFondoFalso : empty\n    \n    pnSaveOperandos : empty\n    \n    pnSaveOperandoConstante : empty\n    \n    pnSaveOperadorPlMi : empty\n    \n    pnSaveOperadorMuDi : empty\n    \n    pnSaveOperadorRel : empty\n    \n    pnSaveOperadorLog : empty\n    \n    pnCuadPlMi : empty\n    \n    pnCuadMuDi : empty\n    \n    pnCuadOpRelacional : empty\n    \n    pnCuadOplog : empty\n    \n    pnSaveOperadorAsign : empty\n    \n    pnCuadAsign : empty\n    \n    pnCuadEscribe : empty\n    \n    pnCuadLee : empty\n    \n    pnCuadCopy : empty\n    \n    pnCuadFuncEsp : empty\n    \n    pnCheckBoolIf : empty\n    \n    pnElseIf : empty\n    \n    pnEndIf : empty\n    \n    pnSaveWhile : empty\n    \n    pnEndWhile : empty\n    \n    pnSaveForID : empty\n    \n    pnCreateVControl : empty\n    \n    pnCompControlFinal : empty\n    \n    pnEndFor : empty\n    \n    pnArrCreateNode : empty\n    \n    pnArrSaveLim1 : empty\n    \n    pnArrCuadriplificar : empty\n    \n    pnArrAddDim : empty\n    \n    pnArrIni : empty\n    \n    pnArrVerify : empty\n    \n    pnArrAccIncDim : empty\n    \n    pnArrCalc : empty\n    \n    pnMatCalc : empty\n    \n    pnArrFFPop : empty\n    \n    empty :'
    
_lr_action_items = {'SCRIPT':([0,],[2,]),'$end':([1,22,113,154,155,],[0,-1,-175,-6,-128,]),'ID':([2,3,4,12,13,16,17,19,24,36,42,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,108,115,119,120,121,124,130,140,141,142,143,144,145,146,147,148,156,157,158,160,168,170,179,180,209,210,211,212,226,228,229,231,233,234,235,236,238,240,241,243,245,246,265,275,278,280,281,282,284,285,286,287,288,290,291,292,294,295,296,308,311,317,327,328,329,330,331,332,333,334,335,336,337,343,346,348,349,356,357,361,362,363,365,366,371,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,5,-115,-175,-3,-175,-5,-2,-4,48,50,-175,-175,-26,80,80,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,137,151,-175,163,137,137,169,-175,163,163,163,163,163,163,163,163,163,137,-150,-175,-175,137,-61,137,-138,137,-130,137,-169,137,-175,-175,137,-175,-175,-175,-175,137,-175,-175,137,-175,-175,309,-58,137,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,-175,-175,80,80,80,-126,-175,137,-132,137,-171,137,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,80,80,-92,-175,-95,-164,]),'SEMICOLON':([5,6,7,8,9,49,50,57,58,62,63,86,87,88,89,90,91,92,93,94,107,109,117,125,126,127,128,129,131,132,133,134,135,136,137,138,151,159,161,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,204,208,216,225,227,230,232,237,239,242,244,248,249,250,251,267,268,269,274,279,283,289,293,297,298,299,300,301,302,303,304,305,306,307,310,312,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,340,341,352,353,354,355,361,364,374,375,377,378,],[-175,-175,-118,10,-116,56,-175,-175,-122,-175,-168,-96,-97,-98,-99,-100,-101,-102,-103,-104,-33,-35,-175,170,-175,-175,-175,-175,-175,-175,-175,-88,-89,-90,-175,-105,-175,-16,-18,-175,-149,-175,-148,-175,-146,-175,-147,-175,-135,-175,-136,-175,-137,-140,-175,-175,275,-62,-64,-67,-69,-74,-76,-79,-81,-85,-141,-86,-87,-175,311,-151,317,-175,-175,-175,-175,-175,327,328,329,330,331,332,333,334,335,336,-34,-175,-175,-175,-175,-175,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,361,-133,-63,-68,-75,-80,-175,-175,-21,-134,-17,-174,]),'VAR':([10,12,47,56,308,],[14,14,14,-26,14,]),'FUNC':([10,11,12,13,16,19,47,53,56,383,394,395,402,403,],[-175,18,-175,-3,18,-2,-175,18,-26,-175,-175,-125,-36,-127,]),'DO':([10,11,12,13,15,16,17,19,24,56,383,394,395,402,403,],[-175,-175,-175,-3,23,-175,-5,-2,-4,-26,-175,-175,-125,-36,-127,]),'READ':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,170,275,308,311,317,327,328,329,330,331,332,333,334,335,336,337,348,349,356,357,361,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,81,81,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,81,81,81,-126,-175,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,81,81,-92,-175,-95,-164,]),'WRITE':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,170,275,308,311,317,327,328,329,330,331,332,333,334,335,336,337,348,349,356,357,361,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,82,82,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,82,82,82,-126,-175,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,82,82,-92,-175,-95,-164,]),'IF':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,170,275,308,311,317,327,328,329,330,331,332,333,334,335,336,337,348,349,356,357,361,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,83,83,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,83,83,83,-126,-175,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,83,83,-92,-175,-95,-164,]),'WHILE':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,170,275,308,311,317,327,328,329,330,331,332,333,334,335,336,337,348,349,356,357,361,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,84,84,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,84,84,84,-126,-175,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,84,84,-92,-175,-95,-164,]),'FOR':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,170,275,308,311,317,327,328,329,330,331,332,333,334,335,336,337,348,349,356,357,361,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,85,85,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,85,85,85,-126,-175,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,85,85,-92,-175,-95,-164,]),'RETURNS':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,170,275,308,311,317,327,328,329,330,331,332,333,334,335,336,337,348,349,356,357,361,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,95,95,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,95,95,95,-126,-175,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,95,95,-92,-175,-95,-164,]),'READ_FILE':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,156,157,158,160,168,170,179,180,209,210,211,212,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,280,281,282,284,285,286,287,288,290,291,292,294,295,296,308,311,317,327,328,329,330,331,332,333,334,335,336,337,343,346,348,349,356,357,361,362,363,365,366,371,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,96,96,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,96,-175,96,96,-175,96,-150,-175,-175,96,-61,96,-138,96,-130,96,-169,96,-175,-175,96,-175,-175,-175,-175,96,-175,-175,96,-175,-175,-58,96,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,-175,-175,96,96,96,-126,-175,96,-132,96,-171,96,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,96,96,-92,-175,-95,-164,]),'MEAN':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,156,157,158,160,168,170,179,180,209,210,211,212,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,280,281,282,284,285,286,287,288,290,291,292,294,295,296,308,311,317,327,328,329,330,331,332,333,334,335,336,337,343,346,348,349,356,357,361,362,363,365,366,371,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,97,97,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,97,-175,97,97,-175,97,-150,-175,-175,97,-61,97,-138,97,-130,97,-169,97,-175,-175,97,-175,-175,-175,-175,97,-175,-175,97,-175,-175,-58,97,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,-175,-175,97,97,97,-126,-175,97,-132,97,-171,97,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,97,97,-92,-175,-95,-164,]),'MODE':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,156,157,158,160,168,170,179,180,209,210,211,212,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,280,281,282,284,285,286,287,288,290,291,292,294,295,296,308,311,317,327,328,329,330,331,332,333,334,335,336,337,343,346,348,349,356,357,361,362,363,365,366,371,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,98,98,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,98,-175,98,98,-175,98,-150,-175,-175,98,-61,98,-138,98,-130,98,-169,98,-175,-175,98,-175,-175,-175,-175,98,-175,-175,98,-175,-175,-58,98,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,-175,-175,98,98,98,-126,-175,98,-132,98,-171,98,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,98,98,-92,-175,-95,-164,]),'MEDIAN':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,156,157,158,160,168,170,179,180,209,210,211,212,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,280,281,282,284,285,286,287,288,290,291,292,294,295,296,308,311,317,327,328,329,330,331,332,333,334,335,336,337,343,346,348,349,356,357,361,362,363,365,366,371,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,99,99,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,99,-175,99,99,-175,99,-150,-175,-175,99,-61,99,-138,99,-130,99,-169,99,-175,-175,99,-175,-175,-175,-175,99,-175,-175,99,-175,-175,-58,99,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,-175,-175,99,99,99,-126,-175,99,-132,99,-171,99,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,99,99,-92,-175,-95,-164,]),'VARIANCE':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,156,157,158,160,168,170,179,180,209,210,211,212,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,280,281,282,284,285,286,287,288,290,291,292,294,295,296,308,311,317,327,328,329,330,331,332,333,334,335,336,337,343,346,348,349,356,357,361,362,363,365,366,371,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,100,100,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,100,-175,100,100,-175,100,-150,-175,-175,100,-61,100,-138,100,-130,100,-169,100,-175,-175,100,-175,-175,-175,-175,100,-175,-175,100,-175,-175,-58,100,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,-175,-175,100,100,100,-126,-175,100,-132,100,-171,100,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,100,100,-92,-175,-95,-164,]),'MAX':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,156,157,158,160,168,170,179,180,209,210,211,212,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,280,281,282,284,285,286,287,288,290,291,292,294,295,296,308,311,317,327,328,329,330,331,332,333,334,335,336,337,343,346,348,349,356,357,361,362,363,365,366,371,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,101,101,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,101,-175,101,101,-175,101,-150,-175,-175,101,-61,101,-138,101,-130,101,-169,101,-175,-175,101,-175,-175,-175,-175,101,-175,-175,101,-175,-175,-58,101,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,-175,-175,101,101,101,-126,-175,101,-132,101,-171,101,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,101,101,-92,-175,-95,-164,]),'MIN':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,156,157,158,160,168,170,179,180,209,210,211,212,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,280,281,282,284,285,286,287,288,290,291,292,294,295,296,308,311,317,327,328,329,330,331,332,333,334,335,336,337,343,346,348,349,356,357,361,362,363,365,366,371,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,102,102,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,102,-175,102,102,-175,102,-150,-175,-175,102,-61,102,-138,102,-130,102,-169,102,-175,-175,102,-175,-175,-175,-175,102,-175,-175,102,-175,-175,-58,102,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,-175,-175,102,102,102,-126,-175,102,-132,102,-171,102,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,102,102,-92,-175,-95,-164,]),'STADDES':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,156,157,158,160,168,170,179,180,209,210,211,212,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,280,281,282,284,285,286,287,288,290,291,292,294,295,296,308,311,317,327,328,329,330,331,332,333,334,335,336,337,343,346,348,349,356,357,361,362,363,365,366,371,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,103,103,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,103,-175,103,103,-175,103,-150,-175,-175,103,-61,103,-138,103,-130,103,-169,103,-175,-175,103,-175,-175,-175,-175,103,-175,-175,103,-175,-175,-58,103,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,-175,-175,103,103,103,-126,-175,103,-132,103,-171,103,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,103,103,-92,-175,-95,-164,]),'BOXPLOT':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,156,157,158,160,168,170,179,180,209,210,211,212,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,280,281,282,284,285,286,287,288,290,291,292,294,295,296,308,311,317,327,328,329,330,331,332,333,334,335,336,337,343,346,348,349,356,357,361,362,363,365,366,371,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,104,104,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,104,-175,104,104,-175,104,-150,-175,-175,104,-61,104,-138,104,-130,104,-169,104,-175,-175,104,-175,-175,-175,-175,104,-175,-175,104,-175,-175,-58,104,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,-175,-175,104,104,104,-126,-175,104,-132,104,-171,104,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,104,104,-92,-175,-95,-164,]),'LINREG':([12,13,16,17,19,24,47,53,56,60,67,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,95,115,120,121,130,156,157,158,160,168,170,179,180,209,210,211,212,226,228,229,231,233,234,235,236,238,240,241,243,245,246,275,278,280,281,282,284,285,286,287,288,290,291,292,294,295,296,308,311,317,327,328,329,330,331,332,333,334,335,336,337,343,346,348,349,356,357,361,362,363,365,366,371,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,105,105,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,105,-175,105,105,-175,105,-150,-175,-175,105,-61,105,-138,105,-130,105,-169,105,-175,-175,105,-175,-175,-175,-175,105,-175,-175,105,-175,-175,-58,105,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,-175,-175,105,105,105,-126,-175,105,-132,105,-171,105,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,105,105,-92,-175,-95,-164,]),'RIGHT_CUR_BRACKET':([12,13,16,17,19,24,47,53,56,60,66,67,68,69,70,71,72,73,74,75,76,77,78,86,87,88,89,90,91,92,93,94,114,170,275,308,311,317,327,328,329,330,331,332,333,334,335,336,337,348,349,356,357,361,369,370,372,374,375,380,381,383,387,389,390,391,394,395,397,398,402,403,404,405,406,407,408,409,410,411,],[-175,-3,-175,-5,-2,-4,-175,-175,-26,-175,113,-175,-8,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-7,-61,-58,-175,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,-175,-175,-175,-126,-175,380,381,383,-21,-134,-175,-175,-175,-175,-93,-94,-160,-175,-125,-91,-158,-36,-127,-175,-175,408,409,-92,-175,-95,-164,]),'DATAFRAME':([14,20,21,61,106,149,150,359,],[-175,32,-119,-175,-175,203,-120,203,]),'INT':([14,18,20,21,61,106,149,150,359,],[-175,28,28,-119,-175,-175,28,-120,28,]),'FLOAT':([14,18,20,21,61,106,149,150,359,],[-175,29,29,-119,-175,-175,29,-120,29,]),'CHAR':([14,18,20,21,61,106,149,150,359,],[-175,30,30,-119,-175,-175,30,-120,30,]),'VOID':([18,],[27,]),'RIGHT_PARENT':([21,61,86,87,88,89,90,91,92,93,94,106,117,126,127,128,129,131,132,133,134,135,136,137,138,149,150,158,159,161,162,163,164,165,166,167,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,209,210,213,214,215,217,218,219,220,221,222,225,227,230,232,237,239,242,244,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,270,271,272,277,279,283,289,293,297,309,313,314,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,338,339,342,344,352,353,354,355,358,360,361,364,373,374,375,376,377,378,382,384,392,393,396,],[-119,-175,-96,-97,-98,-99,-100,-101,-102,-103,-104,-175,-175,-175,-175,-175,-175,-175,-175,-175,-88,-89,-90,-175,-105,-175,-120,-175,-16,-18,-175,-175,216,-175,-175,-175,-175,-149,-175,-148,-175,-146,-175,-147,-175,-135,-175,-136,-175,-137,-140,-175,-175,-175,-175,-175,-175,-175,-175,-175,-175,264,-39,-40,-175,-130,274,-153,-140,-59,-152,-60,276,-156,-175,-62,-64,-67,-69,-74,-76,-79,-81,297,-85,-141,-86,-87,298,-154,299,-155,300,301,302,303,304,305,306,307,312,-175,-23,319,-175,-175,-175,-175,-175,-175,-175,-131,-175,-175,-175,-175,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,-124,-22,-25,-63,-68,-75,-80,-41,-45,-175,-175,-44,-21,-134,-175,-17,-174,-175,-175,401,-163,-24,]),'LEFT_CUR_BRACKET':([23,34,35,264,318,319,388,399,400,401,],[-175,47,-117,308,348,349,-175,404,-157,405,]),'ARROW':([25,26,27,28,29,30,31,32,33,37,38,39,40,41,43,44,46,152,201,202,203,205,206,266,],[36,-37,-175,-175,-175,-175,42,-175,-175,-38,-121,-9,-10,-11,-27,-28,-30,-175,265,-42,-175,-29,-167,-43,]),'LEFT_SQR_BRACKET':([28,29,30,33,38,39,40,41,80,117,118,137,163,187,215,],[-175,-175,-175,45,-121,-9,-10,-11,-175,160,-140,-175,-175,-140,-140,]),'CTEI':([45,51,52,95,111,115,120,121,130,156,157,158,160,168,179,180,209,210,211,212,226,228,229,231,233,234,235,236,238,240,241,243,245,246,278,280,281,282,284,285,286,287,288,290,291,292,294,295,296,343,346,362,363,365,366,371,],[-175,59,-165,131,153,-175,131,131,-175,131,-150,-175,-175,131,131,-138,131,-130,131,-169,131,-175,-175,131,-175,-175,-175,-175,131,-175,-175,131,-175,-175,131,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-175,-175,131,-132,131,-171,131,]),'LEFT_PARENT':([48,54,55,80,81,82,83,84,85,95,96,97,98,99,100,101,102,103,104,105,115,116,118,120,121,122,123,130,137,156,157,158,160,168,179,180,187,209,210,211,212,226,228,229,231,233,234,235,236,238,240,241,243,245,246,278,280,281,282,284,285,286,287,288,290,291,292,294,295,296,343,346,362,363,365,366,371,],[-175,61,-123,-175,119,120,121,-175,124,130,139,140,141,142,143,144,145,146,147,148,-175,158,-129,130,130,168,-159,-175,-175,130,-150,-175,-175,130,130,-138,-129,130,-130,130,-169,130,-175,-175,130,-175,-175,-175,-175,130,-175,-175,130,-175,-175,130,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-175,-175,130,-132,130,-171,130,]),'COMMA':([50,57,58,59,62,63,64,65,86,87,88,89,90,91,92,93,94,117,126,127,128,129,131,132,133,134,135,136,137,138,151,159,161,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,204,225,227,230,232,237,239,242,244,248,249,250,251,267,271,273,279,283,289,293,297,309,313,314,315,316,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,338,339,350,351,352,353,354,355,361,364,374,375,376,377,378,384,],[-175,-175,-122,-175,108,-168,111,-166,-96,-97,-98,-99,-100,-101,-102,-103,-104,-175,-175,-175,-175,-175,-175,-175,-175,-88,-89,-90,-175,-105,-175,-16,-18,-175,-149,-175,-148,-175,-146,-175,-147,-175,-135,-175,-136,-175,-137,-140,-175,-62,-64,-67,-69,-74,-76,-79,-81,-85,-141,-86,-87,108,-175,-175,-175,-175,-175,-175,-175,-175,343,-131,346,-170,-175,-175,-175,-175,-175,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,359,-124,371,-162,-63,-68,-75,-80,-175,-175,-21,-134,-175,-17,-174,343,]),'RIGHT_SQR_BRACKET':([59,64,65,86,87,88,89,90,91,92,93,94,110,112,117,126,127,128,129,131,132,133,134,135,136,137,138,153,159,161,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,207,225,227,230,232,237,239,242,244,248,249,250,251,273,279,283,289,293,297,315,316,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,345,347,352,353,354,355,361,364,367,368,374,375,377,378,379,385,386,],[-175,-175,-166,-96,-97,-98,-99,-100,-101,-102,-103,-104,152,-32,-175,-175,-175,-175,-175,-175,-175,-175,-88,-89,-90,-175,-105,-175,-16,-18,-175,-149,-175,-148,-175,-146,-175,-147,-175,-135,-175,-136,-175,-137,-140,-31,-62,-64,-67,-69,-74,-76,-79,-81,-85,-141,-86,-87,-175,-175,-175,-175,-175,-175,-175,-170,-175,-175,-175,-175,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,364,-175,-63,-68,-75,-80,-175,-175,-172,-20,-21,-134,-17,-174,-175,-19,-173,]),'ASIGN':([79,80,117,118,159,161,169,223,224,364,377,378,],[115,-175,-175,-140,-16,-18,-175,278,-161,-175,-17,-174,]),'MULT':([86,87,88,89,90,91,92,93,94,117,129,131,132,133,134,135,136,137,138,159,161,177,178,181,182,183,184,185,186,187,248,249,250,251,293,297,324,325,326,327,328,329,330,331,332,333,334,335,336,361,364,374,375,377,378,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-175,-175,-175,-175,-175,-88,-89,-90,-175,-105,-16,-18,245,-147,-175,-135,-175,-136,-175,-137,-140,-85,-141,-86,-87,-175,-175,245,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,-175,-21,-134,-17,-174,]),'DIV':([86,87,88,89,90,91,92,93,94,117,129,131,132,133,134,135,136,137,138,159,161,177,178,181,182,183,184,185,186,187,248,249,250,251,293,297,324,325,326,327,328,329,330,331,332,333,334,335,336,361,364,374,375,377,378,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-175,-175,-175,-175,-175,-88,-89,-90,-175,-105,-16,-18,246,-147,-175,-135,-175,-136,-175,-137,-140,-85,-141,-86,-87,-175,-175,246,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-175,-175,-21,-134,-17,-174,]),'PLUS':([86,87,88,89,90,91,92,93,94,117,128,129,131,132,133,134,135,136,137,138,159,161,175,176,177,178,181,182,183,184,185,186,187,242,244,248,249,250,251,289,293,297,323,324,325,326,327,328,329,330,331,332,333,334,335,336,355,361,364,374,375,377,378,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-175,-175,-175,-175,-175,-175,-88,-89,-90,-175,-105,-16,-18,240,-146,-175,-147,-175,-135,-175,-136,-175,-137,-140,-79,-81,-85,-141,-86,-87,-175,-175,-175,240,-175,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-80,-175,-175,-21,-134,-17,-174,]),'MINUS':([86,87,88,89,90,91,92,93,94,117,128,129,131,132,133,134,135,136,137,138,159,161,175,176,177,178,181,182,183,184,185,186,187,242,244,248,249,250,251,289,293,297,323,324,325,326,327,328,329,330,331,332,333,334,335,336,355,361,364,374,375,377,378,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-175,-175,-175,-175,-175,-175,-88,-89,-90,-175,-105,-16,-18,241,-146,-175,-147,-175,-135,-175,-136,-175,-137,-140,-79,-81,-85,-141,-86,-87,-175,-175,-175,241,-175,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-80,-175,-175,-21,-134,-17,-174,]),'LESS_THAN':([86,87,88,89,90,91,92,93,94,117,127,128,129,131,132,133,134,135,136,137,138,159,161,173,174,175,176,177,178,181,182,183,184,185,186,187,237,239,242,244,248,249,250,251,283,289,293,297,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,354,355,361,364,374,375,377,378,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-175,-175,-175,-175,-175,-175,-175,-88,-89,-90,-175,-105,-16,-18,233,-148,-175,-146,-175,-147,-175,-135,-175,-136,-175,-137,-140,-74,-76,-79,-81,-85,-141,-86,-87,-175,-175,-175,-175,233,-175,-175,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,-175,-175,-21,-134,-17,-174,]),'GREATER_THAN':([86,87,88,89,90,91,92,93,94,117,127,128,129,131,132,133,134,135,136,137,138,159,161,173,174,175,176,177,178,181,182,183,184,185,186,187,237,239,242,244,248,249,250,251,283,289,293,297,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,354,355,361,364,374,375,377,378,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-175,-175,-175,-175,-175,-175,-175,-88,-89,-90,-175,-105,-16,-18,234,-148,-175,-146,-175,-147,-175,-135,-175,-136,-175,-137,-140,-74,-76,-79,-81,-85,-141,-86,-87,-175,-175,-175,-175,234,-175,-175,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,-175,-175,-21,-134,-17,-174,]),'EQUALS':([86,87,88,89,90,91,92,93,94,117,127,128,129,131,132,133,134,135,136,137,138,159,161,173,174,175,176,177,178,181,182,183,184,185,186,187,237,239,242,244,248,249,250,251,283,289,293,297,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,354,355,361,364,374,375,377,378,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-175,-175,-175,-175,-175,-175,-175,-88,-89,-90,-175,-105,-16,-18,235,-148,-175,-146,-175,-147,-175,-135,-175,-136,-175,-137,-140,-74,-76,-79,-81,-85,-141,-86,-87,-175,-175,-175,-175,235,-175,-175,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,-175,-175,-21,-134,-17,-174,]),'NOTEQUALS':([86,87,88,89,90,91,92,93,94,117,127,128,129,131,132,133,134,135,136,137,138,159,161,173,174,175,176,177,178,181,182,183,184,185,186,187,237,239,242,244,248,249,250,251,283,289,293,297,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,354,355,361,364,374,375,377,378,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-175,-175,-175,-175,-175,-175,-175,-88,-89,-90,-175,-105,-16,-18,236,-148,-175,-146,-175,-147,-175,-135,-175,-136,-175,-137,-140,-74,-76,-79,-81,-85,-141,-86,-87,-175,-175,-175,-175,236,-175,-175,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,-175,-175,-21,-134,-17,-174,]),'AND':([86,87,88,89,90,91,92,93,94,117,126,127,128,129,131,132,133,134,135,136,137,138,159,161,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,230,232,237,239,242,244,248,249,250,251,279,283,289,293,297,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,353,354,355,361,364,374,375,377,378,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-175,-175,-175,-175,-175,-175,-175,-175,-88,-89,-90,-175,-105,-16,-18,228,-149,-175,-148,-175,-146,-175,-147,-175,-135,-175,-136,-175,-137,-140,-67,-69,-74,-76,-79,-81,-85,-141,-86,-87,-175,-175,-175,-175,-175,228,-175,-175,-175,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-68,-75,-80,-175,-175,-21,-134,-17,-174,]),'OR':([86,87,88,89,90,91,92,93,94,117,126,127,128,129,131,132,133,134,135,136,137,138,159,161,171,172,173,174,175,176,177,178,181,182,183,184,185,186,187,230,232,237,239,242,244,248,249,250,251,279,283,289,293,297,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,353,354,355,361,364,374,375,377,378,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-175,-175,-175,-175,-175,-175,-175,-175,-88,-89,-90,-175,-105,-16,-18,229,-149,-175,-148,-175,-146,-175,-147,-175,-135,-175,-136,-175,-137,-140,-67,-69,-74,-76,-79,-81,-85,-141,-86,-87,-175,-175,-175,-175,-175,229,-175,-175,-175,-84,-139,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-68,-75,-80,-175,-175,-21,-134,-17,-174,]),'CTEF':([95,115,120,121,130,156,157,158,160,168,179,180,209,210,211,212,226,228,229,231,233,234,235,236,238,240,241,243,245,246,278,280,281,282,284,285,286,287,288,290,291,292,294,295,296,343,346,362,363,365,366,371,],[132,-175,132,132,-175,132,-150,-175,-175,132,132,-138,132,-130,132,-169,132,-175,-175,132,-175,-175,-175,-175,132,-175,-175,132,-175,-175,132,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-175,-175,132,-132,132,-171,132,]),'CTEC':([95,115,120,121,130,156,157,158,160,168,179,180,209,210,211,212,226,228,229,231,233,234,235,236,238,240,241,243,245,246,278,280,281,282,284,285,286,287,288,290,291,292,294,295,296,343,346,362,363,365,366,371,],[133,-175,133,133,-175,133,-150,-175,-175,133,133,-138,133,-130,133,-169,133,-175,-175,133,-175,-175,-175,-175,133,-175,-175,133,-175,-175,133,-65,-145,-66,-70,-144,-71,-72,-73,-77,-142,-78,-82,-143,-83,-175,-175,133,-132,133,-171,133,]),'LETRERO':([120,139,],[166,188,]),'IF_TRUE':([276,],[318,]),'IF_FALSE':([380,],[388,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pnCrearDirFunc':([2,],[3,]),'empty':([2,5,6,10,11,12,14,16,23,27,28,29,30,32,33,45,47,48,50,53,57,59,60,61,62,64,67,80,84,106,113,115,117,126,127,128,129,130,131,132,133,137,149,151,152,153,158,160,162,163,165,166,167,169,171,173,175,177,181,183,185,188,189,190,191,192,193,194,195,196,197,203,204,208,209,222,228,229,233,234,235,236,240,241,245,246,267,271,273,279,283,289,293,297,308,309,312,313,315,320,321,322,323,324,337,338,343,346,347,348,349,356,361,364,376,379,380,381,382,383,384,387,388,394,404,405,409,],[4,7,9,13,17,13,21,17,35,38,38,38,38,38,46,52,13,55,58,17,63,65,68,21,109,112,68,118,123,150,155,157,161,172,174,176,178,180,182,184,186,187,200,58,206,65,210,212,214,215,218,218,221,224,227,232,239,244,249,249,249,253,255,255,255,255,255,255,255,255,255,38,63,269,272,221,281,281,285,285,285,285,291,291,295,295,109,314,316,172,174,176,178,326,13,339,341,344,347,351,227,232,239,244,357,360,363,366,367,68,68,68,375,378,314,386,389,391,393,395,344,398,400,403,68,68,411,]),'pnScriptFuncDir':([5,],[6,]),'pnCuadGotoMain':([6,],[8,]),'varp':([10,12,47,308,],[11,19,53,337,]),'var':([10,12,47,308,],[12,12,12,12,]),'funcp':([11,16,53,],[15,24,60,]),'func':([11,16,53,],[16,16,16,]),'pnCheckTablaVar':([14,61,],[20,106,]),'bloque':([15,],[22,]),'returnval':([18,],[25,]),'tipo_simp':([18,20,149,359,],[26,33,202,202,]),'v':([20,],[31,]),'pnDirMain':([23,],[34,]),'pnSaveTypeVar':([27,28,29,30,32,203,],[37,39,40,41,43,266,]),'vp':([33,],[44,]),'idp':([42,],[49,]),'pnArrCreateNode':([45,],[51,]),'pnAddFuncinDir':([48,],[54,]),'pnCheckNameTablaVar':([50,151,],[57,204,]),'pnArrAddDim':([57,204,],[62,267,]),'pnArrSaveLim1':([59,153,],[64,207,]),'estatutop':([60,67,348,349,356,404,405,],[66,114,369,370,372,406,407,]),'estatuto':([60,67,348,349,356,404,405,],[67,67,67,67,67,67,67,]),'asign':([60,67,348,349,356,404,405,],[69,69,69,69,69,69,69,]),'llamada':([60,67,95,120,121,156,168,179,209,211,226,231,238,243,278,348,349,356,362,365,371,404,405,],[70,70,135,135,135,135,135,135,135,135,135,135,135,135,135,70,70,70,135,135,135,70,70,]),'lee':([60,67,348,349,356,404,405,],[71,71,71,71,71,71,71,]),'escribe':([60,67,348,349,356,404,405,],[72,72,72,72,72,72,72,]),'condicion':([60,67,348,349,356,404,405,],[73,73,73,73,73,73,73,]),'ciclow':([60,67,348,349,356,404,405,],[74,74,74,74,74,74,74,]),'ciclof':([60,67,348,349,356,404,405,],[75,75,75,75,75,75,75,]),'funcesp':([60,67,95,120,121,156,168,179,209,211,226,231,238,243,278,348,349,356,362,365,371,404,405,],[76,76,136,136,136,136,136,136,136,136,136,136,136,136,136,76,76,76,136,136,136,76,76,]),'return':([60,67,348,349,356,404,405,],[77,77,77,77,77,77,77,]),'copy':([60,67,95,120,121,156,168,179,209,211,226,231,238,243,278,348,349,356,362,365,371,404,405,],[78,78,138,138,138,138,138,138,138,138,138,138,138,138,138,78,78,78,138,138,138,78,78,]),'variable':([60,67,95,119,120,121,140,141,142,143,144,145,146,147,148,156,168,179,209,211,226,231,238,243,278,348,349,356,362,365,371,404,405,],[79,79,134,162,134,134,189,190,191,192,193,194,195,196,197,134,134,134,134,134,134,134,134,134,134,79,79,79,134,134,134,79,79,]),'mean':([60,67,95,120,121,156,168,179,209,211,226,231,238,243,278,348,349,356,362,365,371,404,405,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'mode':([60,67,95,120,121,156,168,179,209,211,226,231,238,243,278,348,349,356,362,365,371,404,405,],[87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,]),'median':([60,67,95,120,121,156,168,179,209,211,226,231,238,243,278,348,349,356,362,365,371,404,405,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'variance':([60,67,95,120,121,156,168,179,209,211,226,231,238,243,278,348,349,356,362,365,371,404,405,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'max':([60,67,95,120,121,156,168,179,209,211,226,231,238,243,278,348,349,356,362,365,371,404,405,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'min':([60,67,95,120,121,156,168,179,209,211,226,231,238,243,278,348,349,356,362,365,371,404,405,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'staddes':([60,67,95,120,121,156,168,179,209,211,226,231,238,243,278,348,349,356,362,365,371,404,405,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'boxplot':([60,67,95,120,121,156,168,179,209,211,226,231,238,243,278,348,349,356,362,365,371,404,405,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'linreg':([60,67,95,120,121,156,168,179,209,211,226,231,238,243,278,348,349,356,362,365,371,404,405,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'idpp':([62,267,],[107,310,]),'vpp':([64,],[110,]),'pnCheckFunc':([80,137,],[116,116,]),'pnSaveOperandos':([80,137,163,],[117,117,117,]),'pnSaveWhile':([84,],[122,]),'exp':([95,120,121,156,168,179,209,211,278,362,365,371,],[125,165,167,208,222,247,271,273,320,376,379,382,]),'exprel':([95,120,121,156,168,179,209,211,226,278,362,365,371,],[126,126,126,126,126,126,126,126,279,126,126,126,126,]),'e':([95,120,121,156,168,179,209,211,226,231,278,362,365,371,],[127,127,127,127,127,127,127,127,127,283,127,127,127,127,]),'t':([95,120,121,156,168,179,209,211,226,231,238,278,362,365,371,],[128,128,128,128,128,128,128,128,128,128,289,128,128,128,128,]),'f':([95,120,121,156,168,179,209,211,226,231,238,243,278,362,365,371,],[129,129,129,129,129,129,129,129,129,129,129,293,129,129,129,129,]),'pnCrearListaParam':([106,],[149,]),'pnEndScript':([113,],[154,]),'pnSaveOperadorAsign':([115,],[156,]),'indexp':([117,],[159,]),'escribep':([120,],[164,]),'pnCuadOplog':([126,279,],[171,321,]),'pnCuadOpRelacional':([127,283,],[173,322,]),'pnCuadPlMi':([128,289,],[175,323,]),'pnCuadMuDi':([129,293,],[177,324,]),'pnSaveFondoFalso':([130,],[179,]),'pnSaveCteI':([131,],[181,]),'pnSaveCteF':([132,],[183,]),'pnSaveCteC':([133,],[185,]),'param':([149,],[198,]),'paramlist':([149,359,],[199,373,]),'tipoparam':([149,359,],[201,201,]),'pnArrCuadriplificar':([152,],[205,]),'pnGenerateEra':([158,],[209,]),'pnArrIni':([160,],[211,]),'pnCuadLee':([162,],[213,]),'pnCuadEscribe':([165,166,],[217,219,]),'pnCheckBoolIf':([167,222,],[220,277,]),'pnSaveForID':([169,],[223,]),'logic':([171,321,],[225,352,]),'logicsig':([171,321,],[226,226,]),'relacionalp':([173,322,],[230,353,]),'relsig':([173,322,],[231,231,]),'tp':([175,323,],[237,354,]),'tsig':([175,323,],[238,238,]),'fp':([177,324,],[242,355,]),'fsig':([177,324,],[243,243,]),'pnSaveOperandoConstante':([181,183,185,],[248,250,251,]),'pnCuadCopy':([188,],[252,]),'pnCuadFuncEsp':([189,190,191,192,193,194,195,196,197,],[254,256,257,258,259,260,261,262,263,]),'pnCuadAsign':([208,],[268,]),'expp':([209,],[270,]),'pnSaveOperadorLog':([228,229,],[280,282,]),'pnSaveOperadorRel':([233,234,235,236,],[284,286,287,288,]),'pnSaveOperadorPlMi':([240,241,],[290,292,]),'pnSaveOperadorMuDi':([245,246,],[294,296,]),'pnCuadParametro':([271,376,],[313,384,]),'pnArrVerify':([273,],[315,]),'pnPopFondoFalso':([297,],[325,]),'pnAddParametersTablaVar':([309,],[338,]),'pnCheckNoParam':([312,],[340,]),'exppp':([313,384,],[342,396,]),'indexpp':([315,],[345,]),'pnCreateVControl':([320,],[350,]),'pnDirecIniFunc':([337,],[356,]),'paramlistp':([338,],[358,]),'pnUpdateK':([343,],[362,]),'pnArrAccIncDim':([346,],[365,]),'pnArrCalc':([347,],[368,]),'pnCuadGoSub':([361,],[374,]),'pnArrFFPop':([364,],[377,]),'pnMatCalc':([379,],[385,]),'falsop':([380,],[387,]),'pnEndWhile':([381,],[390,]),'pnCompControlFinal':([382,],[392,]),'pnCountVarsINTOResources':([383,],[394,]),'pnEndIf':([387,],[397,]),'pnElseIf':([388,],[399,]),'pnCloseCurrentFunction':([394,],[402,]),'pnEndFor':([409,],[410,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque','programa',9,'p_programa','lexerParser.py',199),
  ('varp -> var varp','varp',2,'p_programa','lexerParser.py',200),
  ('varp -> empty','varp',1,'p_programa','lexerParser.py',201),
  ('funcp -> func funcp','funcp',2,'p_programa','lexerParser.py',202),
  ('funcp -> empty','funcp',1,'p_programa','lexerParser.py',203),
  ('bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript','bloque',8,'p_bloque','lexerParser.py',209),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_bloque','lexerParser.py',210),
  ('estatutop -> empty','estatutop',1,'p_bloque','lexerParser.py',211),
  ('tipo_simp -> INT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexerParser.py',217),
  ('tipo_simp -> FLOAT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexerParser.py',218),
  ('tipo_simp -> CHAR pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexerParser.py',219),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','lexerParser.py',225),
  ('tipo_comp -> file','tipo_comp',1,'p_tipo_comp','lexerParser.py',226),
  ('copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON','copy',6,'p_copy','lexerParser.py',232),
  ('file -> ID','file',1,'p_file','lexerParser.py',238),
  ('variable -> ID pnSaveOperandos indexp','variable',3,'p_variable','lexerParser.py',244),
  ('indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop','indexp',7,'p_variable','lexerParser.py',245),
  ('indexp -> empty','indexp',1,'p_variable','lexerParser.py',246),
  ('indexpp -> COMMA pnArrAccIncDim exp pnMatCalc','indexpp',4,'p_variable','lexerParser.py',247),
  ('indexpp -> empty pnArrCalc','indexpp',2,'p_variable','lexerParser.py',248),
  ('llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub','llamada',9,'p_llamada','lexerParser.py',254),
  ('expp -> exp pnCuadParametro exppp','expp',3,'p_llamada','lexerParser.py',255),
  ('expp -> empty','expp',1,'p_llamada','lexerParser.py',256),
  ('exppp -> COMMA pnUpdateK exp pnCuadParametro exppp','exppp',5,'p_llamada','lexerParser.py',257),
  ('exppp -> empty','exppp',1,'p_llamada','lexerParser.py',258),
  ('var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON','var',6,'p_var','lexerParser.py',264),
  ('v -> DATAFRAME pnSaveTypeVar','v',2,'p_var','lexerParser.py',265),
  ('v -> tipo_simp vp','v',2,'p_var','lexerParser.py',266),
  ('vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar','vp',7,'p_var','lexerParser.py',267),
  ('vp -> empty','vp',1,'p_var','lexerParser.py',268),
  ('vpp -> COMMA CTEI pnArrSaveLim1','vpp',3,'p_var','lexerParser.py',269),
  ('vpp -> empty','vpp',1,'p_var','lexerParser.py',270),
  ('idp -> ID pnCheckNameTablaVar pnArrAddDim idpp','idp',4,'p_var','lexerParser.py',271),
  ('idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim idpp','idpp',5,'p_var','lexerParser.py',272),
  ('idpp -> empty','idpp',1,'p_var','lexerParser.py',273),
  ('func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction','func',17,'p_func','lexerParser.py',279),
  ('returnval -> tipo_simp','returnval',1,'p_func','lexerParser.py',280),
  ('returnval -> VOID pnSaveTypeVar','returnval',2,'p_func','lexerParser.py',281),
  ('param -> paramlist','param',1,'p_param','lexerParser.py',287),
  ('param -> empty','param',1,'p_param','lexerParser.py',288),
  ('paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp','paramlist',5,'p_param','lexerParser.py',289),
  ('tipoparam -> tipo_simp','tipoparam',1,'p_param','lexerParser.py',290),
  ('tipoparam -> DATAFRAME pnSaveTypeVar','tipoparam',2,'p_param','lexerParser.py',291),
  ('paramlistp -> COMMA paramlist','paramlistp',2,'p_param','lexerParser.py',292),
  ('paramlistp -> empty','paramlistp',1,'p_param','lexerParser.py',293),
  ('estatuto -> asign','estatuto',1,'p_estatuto','lexerParser.py',299),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','lexerParser.py',300),
  ('estatuto -> lee','estatuto',1,'p_estatuto','lexerParser.py',301),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','lexerParser.py',302),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexerParser.py',303),
  ('estatuto -> ciclow','estatuto',1,'p_estatuto','lexerParser.py',304),
  ('estatuto -> ciclof','estatuto',1,'p_estatuto','lexerParser.py',305),
  ('estatuto -> funcesp','estatuto',1,'p_estatuto','lexerParser.py',306),
  ('estatuto -> return','estatuto',1,'p_estatuto','lexerParser.py',307),
  ('estatuto -> copy','estatuto',1,'p_estatuto','lexerParser.py',308),
  ('asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON','asign',6,'p_asign','lexerParser.py',314),
  ('lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON','lee',6,'p_lee','lexerParser.py',320),
  ('escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON','escribe',5,'p_escribe','lexerParser.py',326),
  ('escribep -> exp pnCuadEscribe','escribep',2,'p_escribe','lexerParser.py',327),
  ('escribep -> LETRERO pnCuadEscribe','escribep',2,'p_escribe','lexerParser.py',328),
  ('return -> RETURNS exp SEMICOLON','return',3,'p_return','lexerParser.py',334),
  ('exp -> exprel pnCuadOplog logic','exp',3,'p_exp','lexerParser.py',340),
  ('logic -> logicsig exprel pnCuadOplog logic','logic',4,'p_exp','lexerParser.py',341),
  ('logic -> empty','logic',1,'p_exp','lexerParser.py',342),
  ('logicsig -> AND pnSaveOperadorLog','logicsig',2,'p_exp','lexerParser.py',343),
  ('logicsig -> OR pnSaveOperadorLog','logicsig',2,'p_exp','lexerParser.py',344),
  ('exprel -> e pnCuadOpRelacional relacionalp','exprel',3,'p_exprel','lexerParser.py',350),
  ('relacionalp -> relsig e pnCuadOpRelacional relacionalp','relacionalp',4,'p_exprel','lexerParser.py',351),
  ('relacionalp -> empty','relacionalp',1,'p_exprel','lexerParser.py',352),
  ('relsig -> LESS_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',353),
  ('relsig -> GREATER_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',354),
  ('relsig -> EQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',355),
  ('relsig -> NOTEQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',356),
  ('e -> t pnCuadPlMi tp','e',3,'p_e','lexerParser.py',362),
  ('tp -> tsig t pnCuadPlMi tp','tp',4,'p_e','lexerParser.py',363),
  ('tp -> empty','tp',1,'p_e','lexerParser.py',364),
  ('tsig -> PLUS pnSaveOperadorPlMi','tsig',2,'p_e','lexerParser.py',365),
  ('tsig -> MINUS pnSaveOperadorPlMi','tsig',2,'p_e','lexerParser.py',366),
  ('t -> f pnCuadMuDi fp','t',3,'p_t','lexerParser.py',372),
  ('fp -> fsig f pnCuadMuDi fp','fp',4,'p_t','lexerParser.py',373),
  ('fp -> empty','fp',1,'p_t','lexerParser.py',374),
  ('fsig -> MULT pnSaveOperadorMuDi','fsig',2,'p_t','lexerParser.py',375),
  ('fsig -> DIV pnSaveOperadorMuDi','fsig',2,'p_t','lexerParser.py',376),
  ('f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso','f',5,'p_f','lexerParser.py',382),
  ('f -> CTEI pnSaveCteI pnSaveOperandoConstante','f',3,'p_f','lexerParser.py',383),
  ('f -> CTEF pnSaveCteF pnSaveOperandoConstante','f',3,'p_f','lexerParser.py',384),
  ('f -> CTEC pnSaveCteC pnSaveOperandoConstante','f',3,'p_f','lexerParser.py',385),
  ('f -> variable','f',1,'p_f','lexerParser.py',386),
  ('f -> llamada','f',1,'p_f','lexerParser.py',387),
  ('f -> funcesp','f',1,'p_f','lexerParser.py',388),
  ('condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf','condicion',11,'p_condicion','lexerParser.py',394),
  ('falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','falsop',5,'p_condicion','lexerParser.py',395),
  ('falsop -> empty','falsop',1,'p_condicion','lexerParser.py',396),
  ('ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile','ciclow',10,'p_ciclow','lexerParser.py',402),
  ('ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor','ciclof',15,'p_ciclof','lexerParser.py',408),
  ('funcesp -> mean','funcesp',1,'p_funcesp','lexerParser.py',414),
  ('funcesp -> mode','funcesp',1,'p_funcesp','lexerParser.py',415),
  ('funcesp -> median','funcesp',1,'p_funcesp','lexerParser.py',416),
  ('funcesp -> variance','funcesp',1,'p_funcesp','lexerParser.py',417),
  ('funcesp -> max','funcesp',1,'p_funcesp','lexerParser.py',418),
  ('funcesp -> min','funcesp',1,'p_funcesp','lexerParser.py',419),
  ('funcesp -> staddes','funcesp',1,'p_funcesp','lexerParser.py',420),
  ('funcesp -> boxplot','funcesp',1,'p_funcesp','lexerParser.py',421),
  ('funcesp -> linreg','funcesp',1,'p_funcesp','lexerParser.py',422),
  ('funcesp -> copy','funcesp',1,'p_funcesp','lexerParser.py',423),
  ('mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mean',6,'p_mean','lexerParser.py',429),
  ('mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mode',6,'p_mode','lexerParser.py',435),
  ('median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','median',6,'p_median','lexerParser.py',441),
  ('variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','variance',6,'p_variance','lexerParser.py',447),
  ('max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','max',6,'p_max','lexerParser.py',453),
  ('min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','min',6,'p_min','lexerParser.py',459),
  ('staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','staddes',6,'p_staddes','lexerParser.py',465),
  ('boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','boxplot',6,'p_boxplot','lexerParser.py',471),
  ('linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','linreg',6,'p_linreg','lexerParser.py',477),
  ('pnCrearDirFunc -> empty','pnCrearDirFunc',1,'p_pnCrearDirFunc','lexerParser.py',487),
  ('pnCuadGotoMain -> empty','pnCuadGotoMain',1,'p_pnCuadGotoMain','lexerParser.py',497),
  ('pnDirMain -> empty','pnDirMain',1,'p_pnDirMain','lexerParser.py',506),
  ('pnScriptFuncDir -> empty','pnScriptFuncDir',1,'p_pnScriptFuncDir','lexerParser.py',514),
  ('pnCheckTablaVar -> empty','pnCheckTablaVar',1,'p_pnCheckTablaVar','lexerParser.py',523),
  ('pnCrearListaParam -> empty','pnCrearListaParam',1,'p_pnCrearListaParam','lexerParser.py',531),
  ('pnSaveTypeVar -> empty','pnSaveTypeVar',1,'p_pnSaveTypeVar','lexerParser.py',538),
  ('pnCheckNameTablaVar -> empty','pnCheckNameTablaVar',1,'p_pnCheckNameTablaVar','lexerParser.py',547),
  ('pnAddFuncinDir -> empty','pnAddFuncinDir',1,'p_pnAddFuncinDir','lexerParser.py',595),
  ('pnAddParametersTablaVar -> empty','pnAddParametersTablaVar',1,'p_pnAddParametersTablaVar','lexerParser.py',609),
  ('pnCountVarsINTOResources -> empty','pnCountVarsINTOResources',1,'p_pnCountVarsINTOResources','lexerParser.py',639),
  ('pnDirecIniFunc -> empty','pnDirecIniFunc',1,'p_pnDirecIniFunc','lexerParser.py',668),
  ('pnCloseCurrentFunction -> empty','pnCloseCurrentFunction',1,'p_pnCloseCurrentFunction','lexerParser.py',675),
  ('pnEndScript -> empty','pnEndScript',1,'p_pnEndScript','lexerParser.py',691),
  ('pnCheckFunc -> empty','pnCheckFunc',1,'p_pnCheckFunc','lexerParser.py',700),
  ('pnGenerateEra -> empty','pnGenerateEra',1,'p_pnGenerateEra','lexerParser.py',714),
  ('pnCuadParametro -> empty','pnCuadParametro',1,'p_pnCuadParametro','lexerParser.py',728),
  ('pnUpdateK -> empty','pnUpdateK',1,'p_pnUpdateK','lexerParser.py',754),
  ('pnCheckNoParam -> empty','pnCheckNoParam',1,'p_pnCheckNoParam','lexerParser.py',762),
  ('pnCuadGoSub -> empty','pnCuadGoSub',1,'p_pnCuadGoSub','lexerParser.py',775),
  ('pnSaveCteI -> empty','pnSaveCteI',1,'p_pnSaveCteI','lexerParser.py',789),
  ('pnSaveCteF -> empty','pnSaveCteF',1,'p_pnSaveCteF','lexerParser.py',800),
  ('pnSaveCteC -> empty','pnSaveCteC',1,'p_pnSaveCteC','lexerParser.py',810),
  ('pnSaveFondoFalso -> empty','pnSaveFondoFalso',1,'p_pnSaveFondoFalso','lexerParser.py',820),
  ('pnPopFondoFalso -> empty','pnPopFondoFalso',1,'p_pnPopFondoFalso','lexerParser.py',827),
  ('pnSaveOperandos -> empty','pnSaveOperandos',1,'p_pnSaveOperandos','lexerParser.py',837),
  ('pnSaveOperandoConstante -> empty','pnSaveOperandoConstante',1,'p_pnSaveOperandoConstante','lexerParser.py',862),
  ('pnSaveOperadorPlMi -> empty','pnSaveOperadorPlMi',1,'p_pnSaveOperadorPlMi','lexerParser.py',870),
  ('pnSaveOperadorMuDi -> empty','pnSaveOperadorMuDi',1,'p_pnSaveOperadorMuDi','lexerParser.py',877),
  ('pnSaveOperadorRel -> empty','pnSaveOperadorRel',1,'p_pnSaveOperadorRel','lexerParser.py',884),
  ('pnSaveOperadorLog -> empty','pnSaveOperadorLog',1,'p_pnSaveOperadorLog','lexerParser.py',891),
  ('pnCuadPlMi -> empty','pnCuadPlMi',1,'p_pnCuadPlMi','lexerParser.py',898),
  ('pnCuadMuDi -> empty','pnCuadMuDi',1,'p_pnCuadMuDi','lexerParser.py',930),
  ('pnCuadOpRelacional -> empty','pnCuadOpRelacional',1,'p_pnCuadOpRelacional','lexerParser.py',962),
  ('pnCuadOplog -> empty','pnCuadOplog',1,'p_pnCuadOplog','lexerParser.py',995),
  ('pnSaveOperadorAsign -> empty','pnSaveOperadorAsign',1,'p_pnSaveOperadorAsign','lexerParser.py',1026),
  ('pnCuadAsign -> empty','pnCuadAsign',1,'p_pnCuadAsign','lexerParser.py',1033),
  ('pnCuadEscribe -> empty','pnCuadEscribe',1,'p_pnCuadEscribe','lexerParser.py',1059),
  ('pnCuadLee -> empty','pnCuadLee',1,'p_pnCuadLee','lexerParser.py',1097),
  ('pnCuadCopy -> empty','pnCuadCopy',1,'p_pnCuadCopy','lexerParser.py',1114),
  ('pnCuadFuncEsp -> empty','pnCuadFuncEsp',1,'p_pnCuadFuncEsp','lexerParser.py',1133),
  ('pnCheckBoolIf -> empty','pnCheckBoolIf',1,'p_pnCheckBoolIf','lexerParser.py',1176),
  ('pnElseIf -> empty','pnElseIf',1,'p_pnElseIf','lexerParser.py',1194),
  ('pnEndIf -> empty','pnEndIf',1,'p_pnEndIf','lexerParser.py',1205),
  ('pnSaveWhile -> empty','pnSaveWhile',1,'p_pnSaveWhile','lexerParser.py',1214),
  ('pnEndWhile -> empty','pnEndWhile',1,'p_pnEndWhile','lexerParser.py',1224),
  ('pnSaveForID -> empty','pnSaveForID',1,'p_pnSaveForID','lexerParser.py',1238),
  ('pnCreateVControl -> empty','pnCreateVControl',1,'p_pnCreateVControl','lexerParser.py',1262),
  ('pnCompControlFinal -> empty','pnCompControlFinal',1,'p_pnCompControlFinal','lexerParser.py',1293),
  ('pnEndFor -> empty','pnEndFor',1,'p_pnEndFor','lexerParser.py',1321),
  ('pnArrCreateNode -> empty','pnArrCreateNode',1,'p_pnArrCreateNode','lexerParser.py',1357),
  ('pnArrSaveLim1 -> empty','pnArrSaveLim1',1,'p_pnArrSaveLim1','lexerParser.py',1371),
  ('pnArrCuadriplificar -> empty','pnArrCuadriplificar',1,'p_pnArrCuadriplificar','lexerParser.py',1397),
  ('pnArrAddDim -> empty','pnArrAddDim',1,'p_pnArrAddDim','lexerParser.py',1420),
  ('pnArrIni -> empty','pnArrIni',1,'p_pnArrIni','lexerParser.py',1448),
  ('pnArrVerify -> empty','pnArrVerify',1,'p_pnArrVerify','lexerParser.py',1475),
  ('pnArrAccIncDim -> empty','pnArrAccIncDim',1,'p_pnArrAccIncDim','lexerParser.py',1490),
  ('pnArrCalc -> empty','pnArrCalc',1,'p_pnArrCalc','lexerParser.py',1503),
  ('pnMatCalc -> empty','pnMatCalc',1,'p_pnMatCalc','lexerParser.py',1525),
  ('pnArrFFPop -> empty','pnArrFFPop',1,'p_pnArrFFPop','lexerParser.py',1578),
  ('empty -> <empty>','empty',0,'p_empty','lexerParser.py',1586),
]

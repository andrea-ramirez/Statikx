
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVAND ARROW ASIGN BOXPLOT CHAR COMMA COMMENT CTEC CTEF CTEI DATAFRAME DIV DO EQUALS FLOAT FOR FUNC GREATER_THAN ID IF IF_FALSE IF_TRUE INT LEFT_CUR_BRACKET LEFT_PARENT LEFT_SQR_BRACKET LESS_THAN LETRERO LINREG MAX MEAN MEDIAN MIN MINUS MODE MULT NOTEQUALS OR PLUS READ READ_FILE RETURNS RIGHT_CUR_BRACKET RIGHT_PARENT RIGHT_SQR_BRACKET SCRIPT SEMICOLON STADDES VAR VARIANCE VOID WHILE WRITE\n    programa : SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque\n    varp : var varp \n         | empty\n    funcp : func funcp \n          | empty\n    \n    bloque : DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript\n    estatutop : estatuto estatutop \n              | empty\n    \n    tipo_simp : INT pnSaveTypeVar\n              | FLOAT pnSaveTypeVar\n              | CHAR pnSaveTypeVar\n    \n    tipo_comp : DATAFRAME \n              | file\n    \n    copy : READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON\n    \n    file : ID\n    \n    variable : ID indexp\n    indexp : LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET \n           | empty\n    indexpp : COMMA exp \n            | empty\n    \n    llamada : ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON\n    expp : exp exppp\n         | empty\n    exppp : COMMA exp exppp\n          | empty\n    \n    var : VAR pnCheckTablaVar v ARROW idp SEMICOLON\n    v : DATAFRAME pnSaveTypeVar\n      | tipo_simp vp\n    vp : LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET \n       | empty\n    vpp : COMMA CTEI \n        | empty\n    idp : ID pnCheckNameTablaVar idpp\n    idpp : COMMA ID pnCheckNameTablaVar idpp\n         | empty\n    \n    func : FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction\n    returnval : tipo_simp \n              | VOID pnSaveTypeVar\n    \n    param : tipo_simp ARROW ID paramp \n          | empty\n    paramp : COMMA param paramp \n           | empty\n    \n    estatuto : asign\n             | llamada\n             | lee\n             | escribe\n             | condicion\n             | ciclow\n             | ciclof\n             | funcesp\n             | return\n             | copy\n    \n    asign : variable ASIGN exp SEMICOLON\n    \n    lee : READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    escribe :  WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON\n    escribep : exp \n             | LETRERO\n    \n    return : RETURNS exp SEMICOLON\n    \n    exp : exprel logic\n    logic : logicsig exprel logic \n          | empty\n    logicsig : AND \n             | OR\n    \n    exprel : e relacionalp\n    relacionalp : relsig e relacionalp \n                | empty\n    relsig : LESS_THAN \n           | GREATER_THAN \n           | EQUALS \n           | NOTEQUALS\n    \n    e : t tp\n    tp : tsig t tp \n       | empty\n    tsig : PLUS \n         | MINUS\n    \n    t : f fp\n    fp : fsig f fp \n       | empty\n    fsig : MULT \n         | DIV\n    \n    f : LEFT_PARENT exp RIGHT_PARENT\n      | CTEI\n      | CTEF\n      | CTEC\n      | variable\n      | llamada\n      | funcesp\n    \n    condicion : IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop\n    falsop : IF_FALSE  LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET \n           | empty\n    \n    ciclow : WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET\n    \n    ciclof : FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET\n    \n    funcesp : mean\n            | mode\n            | median\n            | variance\n            | max\n            | min\n            | staddes\n            | boxplot\n            | linreg\n            | copy\n    \n    mean : MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    mode : MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    median : MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    variance : VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    max : MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    min : MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    staddes : STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    boxplot : BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    linreg : LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON\n    \n    pnCrearDirFunc : empty\n    \n    pnScriptFuncDir : empty\n    \n    pnCheckTablaVar : empty\n    \n    pnSaveTypeVar : empty\n    \n    pnCheckNameTablaVar : empty\n    \n    pnAddFuncinDir : empty\n    \n    pnCloseCurrentFunction : empty\n    \n    pnEndScript : empty\n    \n    empty :'
    
_lr_action_items = {'SCRIPT':([0,],[2,]),'$end':([1,20,104,144,145,],[0,-1,-120,-6,-119,]),'ID':([2,3,4,10,11,14,15,17,22,32,33,39,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,100,106,107,109,111,112,113,114,115,121,131,132,133,134,135,136,137,138,139,158,159,161,163,164,166,168,169,170,171,173,175,176,178,180,181,194,196,199,202,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,5,-112,-120,-3,-120,-5,-2,-4,-120,45,47,-120,72,-26,72,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,128,143,128,128,128,152,128,128,128,152,128,152,152,152,152,152,152,152,152,152,128,-58,128,-62,-63,128,-67,-68,-69,-70,128,-74,-75,128,-79,-80,225,-53,128,128,-120,-21,-54,-55,72,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,72,72,72,-91,-120,-120,-92,-36,-118,-88,-90,72,-89,]),'SEMICOLON':([5,6,7,46,47,53,54,78,79,80,81,82,83,84,85,86,99,101,108,110,116,117,118,119,120,122,123,124,125,126,127,128,129,143,146,160,162,165,167,172,174,177,179,195,197,204,205,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,226,227,229,236,237,238,239,240,241,242,243,244,245,246,247,248,249,],[-120,8,-113,52,-120,-120,-116,-93,-94,-95,-96,-97,-98,-99,-100,-101,-33,-35,-16,-18,159,-120,-120,-120,-120,-82,-83,-84,-85,-86,-87,-120,-102,-120,196,-59,-61,-64,-66,-71,-73,-76,-78,-120,227,231,232,-120,-120,-120,-120,-81,240,241,242,243,244,245,246,247,248,249,-34,-21,-17,-60,-65,-72,-77,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,]),'VAR':([8,10,32,52,224,],[12,12,12,-26,12,]),'FUNC':([8,9,10,11,14,17,32,44,52,263,267,268,],[-120,16,-120,-3,16,-2,-120,16,-26,-120,-36,-118,]),'DO':([8,9,10,11,13,14,15,17,22,52,263,267,268,],[-120,-120,-120,-3,21,-120,-5,-2,-4,-26,-120,-36,-118,]),'READ':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,196,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,-3,-120,-5,-2,-4,-120,-120,73,-26,73,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,-58,-53,-120,-21,-54,-55,73,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,73,73,73,-91,-120,-120,-92,-36,-118,-88,-90,73,-89,]),'WRITE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,196,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,-3,-120,-5,-2,-4,-120,-120,74,-26,74,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,-58,-53,-120,-21,-54,-55,74,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,74,74,74,-91,-120,-120,-92,-36,-118,-88,-90,74,-89,]),'IF':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,196,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,-3,-120,-5,-2,-4,-120,-120,75,-26,75,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,-58,-53,-120,-21,-54,-55,75,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,75,75,75,-91,-120,-120,-92,-36,-118,-88,-90,75,-89,]),'WHILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,196,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,-3,-120,-5,-2,-4,-120,-120,76,-26,76,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,-58,-53,-120,-21,-54,-55,76,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,76,76,76,-91,-120,-120,-92,-36,-118,-88,-90,76,-89,]),'FOR':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,196,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,-3,-120,-5,-2,-4,-120,-120,77,-26,77,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,-58,-53,-120,-21,-54,-55,77,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,77,77,77,-91,-120,-120,-92,-36,-118,-88,-90,77,-89,]),'RETURNS':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,196,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,-3,-120,-5,-2,-4,-120,-120,87,-26,87,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,-58,-53,-120,-21,-54,-55,87,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,87,87,87,-91,-120,-120,-92,-36,-118,-88,-90,87,-89,]),'READ_FILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,109,112,113,114,121,158,159,161,163,164,166,168,169,170,171,173,175,176,178,180,181,196,199,202,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,-3,-120,-5,-2,-4,-120,-120,88,-26,88,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,88,88,88,88,88,88,88,88,88,-58,88,-62,-63,88,-67,-68,-69,-70,88,-74,-75,88,-79,-80,-53,88,88,-120,-21,-54,-55,88,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,88,88,88,-91,-120,-120,-92,-36,-118,-88,-90,88,-89,]),'MEAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,109,112,113,114,121,158,159,161,163,164,166,168,169,170,171,173,175,176,178,180,181,196,199,202,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,-3,-120,-5,-2,-4,-120,-120,89,-26,89,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,89,89,89,89,89,89,89,89,89,-58,89,-62,-63,89,-67,-68,-69,-70,89,-74,-75,89,-79,-80,-53,89,89,-120,-21,-54,-55,89,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,89,89,89,-91,-120,-120,-92,-36,-118,-88,-90,89,-89,]),'MODE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,109,112,113,114,121,158,159,161,163,164,166,168,169,170,171,173,175,176,178,180,181,196,199,202,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,-3,-120,-5,-2,-4,-120,-120,90,-26,90,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,90,90,90,90,90,90,90,90,90,-58,90,-62,-63,90,-67,-68,-69,-70,90,-74,-75,90,-79,-80,-53,90,90,-120,-21,-54,-55,90,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,90,90,90,-91,-120,-120,-92,-36,-118,-88,-90,90,-89,]),'MEDIAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,109,112,113,114,121,158,159,161,163,164,166,168,169,170,171,173,175,176,178,180,181,196,199,202,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,-3,-120,-5,-2,-4,-120,-120,91,-26,91,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,91,91,91,91,91,91,91,91,91,-58,91,-62,-63,91,-67,-68,-69,-70,91,-74,-75,91,-79,-80,-53,91,91,-120,-21,-54,-55,91,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,91,91,91,-91,-120,-120,-92,-36,-118,-88,-90,91,-89,]),'VARIANCE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,109,112,113,114,121,158,159,161,163,164,166,168,169,170,171,173,175,176,178,180,181,196,199,202,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,-3,-120,-5,-2,-4,-120,-120,92,-26,92,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,92,92,92,92,92,92,92,92,92,-58,92,-62,-63,92,-67,-68,-69,-70,92,-74,-75,92,-79,-80,-53,92,92,-120,-21,-54,-55,92,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,92,92,92,-91,-120,-120,-92,-36,-118,-88,-90,92,-89,]),'MAX':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,109,112,113,114,121,158,159,161,163,164,166,168,169,170,171,173,175,176,178,180,181,196,199,202,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,-3,-120,-5,-2,-4,-120,-120,93,-26,93,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,93,93,93,93,93,93,93,93,93,-58,93,-62,-63,93,-67,-68,-69,-70,93,-74,-75,93,-79,-80,-53,93,93,-120,-21,-54,-55,93,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,93,93,93,-91,-120,-120,-92,-36,-118,-88,-90,93,-89,]),'MIN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,109,112,113,114,121,158,159,161,163,164,166,168,169,170,171,173,175,176,178,180,181,196,199,202,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,-3,-120,-5,-2,-4,-120,-120,94,-26,94,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,94,94,94,94,94,94,94,94,94,-58,94,-62,-63,94,-67,-68,-69,-70,94,-74,-75,94,-79,-80,-53,94,94,-120,-21,-54,-55,94,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,94,94,94,-91,-120,-120,-92,-36,-118,-88,-90,94,-89,]),'STADDES':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,109,112,113,114,121,158,159,161,163,164,166,168,169,170,171,173,175,176,178,180,181,196,199,202,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,-3,-120,-5,-2,-4,-120,-120,95,-26,95,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,95,95,95,95,95,95,95,95,95,-58,95,-62,-63,95,-67,-68,-69,-70,95,-74,-75,95,-79,-80,-53,95,95,-120,-21,-54,-55,95,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,95,95,95,-91,-120,-120,-92,-36,-118,-88,-90,95,-89,]),'BOXPLOT':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,109,112,113,114,121,158,159,161,163,164,166,168,169,170,171,173,175,176,178,180,181,196,199,202,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,-3,-120,-5,-2,-4,-120,-120,96,-26,96,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,96,96,96,96,96,96,96,96,96,-58,96,-62,-63,96,-67,-68,-69,-70,96,-74,-75,96,-79,-80,-53,96,96,-120,-21,-54,-55,96,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,96,96,96,-91,-120,-120,-92,-36,-118,-88,-90,96,-89,]),'LINREG':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,109,112,113,114,121,158,159,161,163,164,166,168,169,170,171,173,175,176,178,180,181,196,199,202,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,257,261,263,265,266,267,268,269,271,272,274,],[-120,-3,-120,-5,-2,-4,-120,-120,97,-26,97,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,97,97,97,97,97,97,97,97,97,-58,97,-62,-63,97,-67,-68,-69,-70,97,-74,-75,97,-79,-80,-53,97,97,-120,-21,-54,-55,97,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,97,97,97,-91,-120,-120,-92,-36,-118,-88,-90,97,-89,]),'RIGHT_CUR_BRACKET':([10,11,14,15,17,22,32,44,49,52,58,59,60,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,105,159,196,224,227,231,232,234,240,241,242,243,244,245,246,247,248,249,250,255,256,257,258,260,261,262,263,265,266,267,268,269,271,272,273,274,],[-120,-3,-120,-5,-2,-4,-120,-120,-120,-26,104,-120,-8,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-93,-94,-95,-96,-97,-98,-99,-100,-101,-7,-58,-53,-120,-21,-54,-55,-120,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,-120,-120,261,-120,263,265,-91,266,-120,-120,-92,-36,-118,-88,-90,-120,274,-89,]),'DATAFRAME':([12,18,19,],[-120,30,-114,]),'INT':([12,16,18,19,98,252,],[-120,26,26,-114,26,26,]),'FLOAT':([12,16,18,19,98,252,],[-120,27,27,-114,27,27,]),'CHAR':([12,16,18,19,98,252,],[-120,28,28,-114,28,28,]),'VOID':([16,],[25,]),'LEFT_CUR_BRACKET':([21,193,207,233,235,270,],[32,224,234,255,257,272,]),'ARROW':([23,24,25,26,27,28,29,30,31,34,35,36,37,38,40,41,43,102,141,],[33,-37,-120,-120,-120,-120,39,-120,-120,-38,-115,-9,-10,-11,-27,-28,-30,-29,194,]),'LEFT_SQR_BRACKET':([26,27,28,31,35,36,37,38,72,128,152,],[-120,-120,-120,42,-115,-9,-10,-11,109,109,109,]),'CTEI':([42,56,87,106,107,109,112,113,114,121,158,161,163,164,166,168,169,170,171,173,175,176,178,180,181,196,199,202,],[48,103,122,122,122,122,122,122,122,122,122,122,-62,-63,122,-67,-68,-69,-70,122,-74,-75,122,-79,-80,-53,122,122,]),'LEFT_PARENT':([45,50,51,72,73,74,75,76,77,87,88,89,90,91,92,93,94,95,96,97,106,107,109,112,113,114,121,128,158,161,163,164,166,168,169,170,171,173,175,176,178,180,181,196,199,202,],[-120,98,-117,107,111,112,113,114,115,121,130,131,132,133,134,135,136,137,138,139,121,121,121,121,121,121,121,107,121,121,-62,-63,121,-67,-68,-69,-70,121,-74,-75,121,-79,-80,-53,121,121,]),'COMMA':([47,48,53,54,78,79,80,81,82,83,84,85,86,108,110,117,118,119,120,122,123,124,125,126,127,128,129,142,143,148,150,160,162,165,167,172,174,177,179,195,209,210,211,212,213,225,227,228,229,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,259,264,],[-120,56,100,-116,-93,-94,-95,-96,-97,-98,-99,-100,-101,-16,-18,-120,-120,-120,-120,-82,-83,-84,-85,-86,-87,-120,-102,-40,-120,199,202,-59,-61,-64,-66,-71,-73,-76,-78,100,-120,-120,-120,-120,-81,252,-21,199,-17,-60,-65,-72,-77,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,-39,-120,-42,252,-41,]),'RIGHT_SQR_BRACKET':([48,55,57,78,79,80,81,82,83,84,85,86,103,108,110,117,118,119,120,122,123,124,125,126,127,128,129,150,160,162,165,167,172,174,177,179,201,203,209,210,211,212,213,227,229,230,236,237,238,239,240,241,242,243,244,245,246,247,248,249,],[-120,102,-32,-93,-94,-95,-96,-97,-98,-99,-100,-101,-31,-16,-18,-120,-120,-120,-120,-82,-83,-84,-85,-86,-87,-120,-102,-120,-59,-61,-64,-66,-71,-73,-76,-78,229,-20,-120,-120,-120,-120,-81,-21,-17,-19,-60,-65,-72,-77,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,]),'ASIGN':([71,72,108,110,152,229,],[106,-120,-16,-18,-120,-17,]),'MULT':([78,79,80,81,82,83,84,85,86,108,110,120,122,123,124,125,126,127,128,129,212,213,227,229,240,241,242,243,244,245,246,247,248,249,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-16,-18,180,-82,-83,-84,-85,-86,-87,-120,-102,180,-81,-21,-17,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,]),'DIV':([78,79,80,81,82,83,84,85,86,108,110,120,122,123,124,125,126,127,128,129,212,213,227,229,240,241,242,243,244,245,246,247,248,249,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-16,-18,181,-82,-83,-84,-85,-86,-87,-120,-102,181,-81,-21,-17,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,]),'PLUS':([78,79,80,81,82,83,84,85,86,108,110,119,120,122,123,124,125,126,127,128,129,177,179,211,212,213,227,229,239,240,241,242,243,244,245,246,247,248,249,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-16,-18,175,-120,-82,-83,-84,-85,-86,-87,-120,-102,-76,-78,175,-120,-81,-21,-17,-77,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,]),'MINUS':([78,79,80,81,82,83,84,85,86,108,110,119,120,122,123,124,125,126,127,128,129,177,179,211,212,213,227,229,239,240,241,242,243,244,245,246,247,248,249,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-16,-18,176,-120,-82,-83,-84,-85,-86,-87,-120,-102,-76,-78,176,-120,-81,-21,-17,-77,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,]),'LESS_THAN':([78,79,80,81,82,83,84,85,86,108,110,118,119,120,122,123,124,125,126,127,128,129,172,174,177,179,210,211,212,213,227,229,238,239,240,241,242,243,244,245,246,247,248,249,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-16,-18,168,-120,-120,-82,-83,-84,-85,-86,-87,-120,-102,-71,-73,-76,-78,168,-120,-120,-81,-21,-17,-72,-77,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,]),'GREATER_THAN':([78,79,80,81,82,83,84,85,86,108,110,118,119,120,122,123,124,125,126,127,128,129,172,174,177,179,210,211,212,213,227,229,238,239,240,241,242,243,244,245,246,247,248,249,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-16,-18,169,-120,-120,-82,-83,-84,-85,-86,-87,-120,-102,-71,-73,-76,-78,169,-120,-120,-81,-21,-17,-72,-77,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,]),'EQUALS':([78,79,80,81,82,83,84,85,86,108,110,118,119,120,122,123,124,125,126,127,128,129,172,174,177,179,210,211,212,213,227,229,238,239,240,241,242,243,244,245,246,247,248,249,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-16,-18,170,-120,-120,-82,-83,-84,-85,-86,-87,-120,-102,-71,-73,-76,-78,170,-120,-120,-81,-21,-17,-72,-77,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,]),'NOTEQUALS':([78,79,80,81,82,83,84,85,86,108,110,118,119,120,122,123,124,125,126,127,128,129,172,174,177,179,210,211,212,213,227,229,238,239,240,241,242,243,244,245,246,247,248,249,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-16,-18,171,-120,-120,-82,-83,-84,-85,-86,-87,-120,-102,-71,-73,-76,-78,171,-120,-120,-81,-21,-17,-72,-77,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,]),'AND':([78,79,80,81,82,83,84,85,86,108,110,117,118,119,120,122,123,124,125,126,127,128,129,165,167,172,174,177,179,209,210,211,212,213,227,229,237,238,239,240,241,242,243,244,245,246,247,248,249,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-16,-18,163,-120,-120,-120,-82,-83,-84,-85,-86,-87,-120,-102,-64,-66,-71,-73,-76,-78,163,-120,-120,-120,-81,-21,-17,-65,-72,-77,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,]),'OR':([78,79,80,81,82,83,84,85,86,108,110,117,118,119,120,122,123,124,125,126,127,128,129,165,167,172,174,177,179,209,210,211,212,213,227,229,237,238,239,240,241,242,243,244,245,246,247,248,249,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-16,-18,164,-120,-120,-120,-82,-83,-84,-85,-86,-87,-120,-102,-64,-66,-71,-73,-76,-78,164,-120,-120,-120,-81,-21,-17,-65,-72,-77,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,]),'RIGHT_PARENT':([78,79,80,81,82,83,84,85,86,98,107,108,110,117,118,119,120,122,123,124,125,126,127,128,129,140,142,147,148,149,151,152,153,154,155,156,157,160,162,165,167,172,174,177,179,182,183,184,185,186,187,188,189,190,191,192,198,200,208,209,210,211,212,213,225,227,228,229,236,237,238,239,240,241,242,243,244,245,246,247,248,249,251,252,253,254,259,264,],[-93,-94,-95,-96,-97,-98,-99,-100,-101,-120,-120,-16,-18,-120,-120,-120,-120,-82,-83,-84,-85,-86,-87,-120,-102,193,-40,197,-120,-23,204,-120,205,-56,-57,206,207,-59,-61,-64,-66,-71,-73,-76,-78,213,214,215,216,217,218,219,220,221,222,223,-22,-25,235,-120,-120,-120,-120,-81,-120,-21,-120,-17,-60,-65,-72,-77,-14,-103,-104,-105,-106,-107,-108,-109,-110,-111,-39,-120,-42,-24,-120,-41,]),'CTEF':([87,106,107,109,112,113,114,121,158,161,163,164,166,168,169,170,171,173,175,176,178,180,181,196,199,202,],[123,123,123,123,123,123,123,123,123,123,-62,-63,123,-67,-68,-69,-70,123,-74,-75,123,-79,-80,-53,123,123,]),'CTEC':([87,106,107,109,112,113,114,121,158,161,163,164,166,168,169,170,171,173,175,176,178,180,181,196,199,202,],[124,124,124,124,124,124,124,124,124,124,-62,-63,124,-67,-68,-69,-70,124,-74,-75,124,-79,-80,-53,124,124,]),'LETRERO':([112,130,],[155,183,]),'IF_TRUE':([206,],[233,]),'IF_FALSE':([265,],[270,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pnCrearDirFunc':([2,],[3,]),'empty':([2,5,8,9,10,12,14,25,26,27,28,30,31,32,44,45,47,48,49,53,59,72,98,104,107,117,118,119,120,128,143,148,150,152,195,209,210,211,212,224,225,228,234,250,252,255,257,259,263,265,272,],[4,7,11,15,11,19,15,35,35,35,35,35,43,11,15,51,54,57,60,101,60,110,142,145,149,162,167,174,179,110,54,200,203,110,101,162,167,174,179,11,253,200,60,60,142,60,60,253,268,271,60,]),'pnScriptFuncDir':([5,],[6,]),'varp':([8,10,32,224,],[9,17,44,250,]),'var':([8,10,32,224,],[10,10,10,10,]),'funcp':([9,14,44,],[13,22,49,]),'func':([9,14,44,],[14,14,14,]),'pnCheckTablaVar':([12,],[18,]),'bloque':([13,],[20,]),'returnval':([16,],[23,]),'tipo_simp':([16,18,98,252,],[24,31,141,141,]),'v':([18,],[29,]),'pnSaveTypeVar':([25,26,27,28,30,],[34,36,37,38,40,]),'vp':([31,],[41,]),'idp':([39,],[46,]),'pnAddFuncinDir':([45,],[50,]),'pnCheckNameTablaVar':([47,143,],[53,195,]),'vpp':([48,],[55,]),'estatutop':([49,59,234,250,255,257,272,],[58,105,256,258,260,262,273,]),'estatuto':([49,59,234,250,255,257,272,],[59,59,59,59,59,59,59,]),'asign':([49,59,115,234,250,255,257,272,],[61,61,158,61,61,61,61,61,]),'llamada':([49,59,87,106,107,109,112,113,114,121,158,161,166,173,178,199,202,234,250,255,257,272,],[62,62,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,62,62,62,62,62,]),'lee':([49,59,234,250,255,257,272,],[63,63,63,63,63,63,63,]),'escribe':([49,59,234,250,255,257,272,],[64,64,64,64,64,64,64,]),'condicion':([49,59,234,250,255,257,272,],[65,65,65,65,65,65,65,]),'ciclow':([49,59,234,250,255,257,272,],[66,66,66,66,66,66,66,]),'ciclof':([49,59,234,250,255,257,272,],[67,67,67,67,67,67,67,]),'funcesp':([49,59,87,106,107,109,112,113,114,121,158,161,166,173,178,199,202,234,250,255,257,272,],[68,68,127,127,127,127,127,127,127,127,127,127,127,127,127,127,127,68,68,68,68,68,]),'return':([49,59,234,250,255,257,272,],[69,69,69,69,69,69,69,]),'copy':([49,59,87,106,107,109,112,113,114,121,158,161,166,173,178,199,202,234,250,255,257,272,],[70,70,129,129,129,129,129,129,129,129,129,129,129,129,129,129,129,70,70,70,70,70,]),'variable':([49,59,87,106,107,109,111,112,113,114,115,121,131,132,133,134,135,136,137,138,139,158,161,166,173,178,199,202,234,250,255,257,272,],[71,71,125,125,125,125,151,125,125,125,71,125,184,185,186,187,188,189,190,191,192,125,125,125,125,125,125,125,71,71,71,71,71,]),'mean':([49,59,87,106,107,109,112,113,114,121,158,161,166,173,178,199,202,234,250,255,257,272,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'mode':([49,59,87,106,107,109,112,113,114,121,158,161,166,173,178,199,202,234,250,255,257,272,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'median':([49,59,87,106,107,109,112,113,114,121,158,161,166,173,178,199,202,234,250,255,257,272,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'variance':([49,59,87,106,107,109,112,113,114,121,158,161,166,173,178,199,202,234,250,255,257,272,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'max':([49,59,87,106,107,109,112,113,114,121,158,161,166,173,178,199,202,234,250,255,257,272,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'min':([49,59,87,106,107,109,112,113,114,121,158,161,166,173,178,199,202,234,250,255,257,272,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'staddes':([49,59,87,106,107,109,112,113,114,121,158,161,166,173,178,199,202,234,250,255,257,272,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'boxplot':([49,59,87,106,107,109,112,113,114,121,158,161,166,173,178,199,202,234,250,255,257,272,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'linreg':([49,59,87,106,107,109,112,113,114,121,158,161,166,173,178,199,202,234,250,255,257,272,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'idpp':([53,195,],[99,226,]),'indexp':([72,128,152,],[108,108,108,]),'exp':([87,106,107,109,112,113,114,121,158,199,202,],[116,146,148,150,154,156,157,182,208,228,230,]),'exprel':([87,106,107,109,112,113,114,121,158,161,199,202,],[117,117,117,117,117,117,117,117,117,209,117,117,]),'e':([87,106,107,109,112,113,114,121,158,161,166,199,202,],[118,118,118,118,118,118,118,118,118,118,210,118,118,]),'t':([87,106,107,109,112,113,114,121,158,161,166,173,199,202,],[119,119,119,119,119,119,119,119,119,119,119,211,119,119,]),'f':([87,106,107,109,112,113,114,121,158,161,166,173,178,199,202,],[120,120,120,120,120,120,120,120,120,120,120,120,212,120,120,]),'param':([98,252,],[140,259,]),'pnEndScript':([104,],[144,]),'expp':([107,],[147,]),'escribep':([112,],[153,]),'logic':([117,209,],[160,236,]),'logicsig':([117,209,],[161,161,]),'relacionalp':([118,210,],[165,237,]),'relsig':([118,210,],[166,166,]),'tp':([119,211,],[172,238,]),'tsig':([119,211,],[173,173,]),'fp':([120,212,],[177,239,]),'fsig':([120,212,],[178,178,]),'exppp':([148,228,],[198,254,]),'indexpp':([150,],[201,]),'paramp':([225,259,],[251,264,]),'pnCloseCurrentFunction':([263,],[267,]),'falsop':([265,],[269,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque','programa',8,'p_programa','lexer-parser.py',177),
  ('varp -> var varp','varp',2,'p_programa','lexer-parser.py',178),
  ('varp -> empty','varp',1,'p_programa','lexer-parser.py',179),
  ('funcp -> func funcp','funcp',2,'p_programa','lexer-parser.py',180),
  ('funcp -> empty','funcp',1,'p_programa','lexer-parser.py',181),
  ('bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript','bloque',7,'p_bloque','lexer-parser.py',187),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_bloque','lexer-parser.py',188),
  ('estatutop -> empty','estatutop',1,'p_bloque','lexer-parser.py',189),
  ('tipo_simp -> INT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',195),
  ('tipo_simp -> FLOAT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',196),
  ('tipo_simp -> CHAR pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',197),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','lexer-parser.py',203),
  ('tipo_comp -> file','tipo_comp',1,'p_tipo_comp','lexer-parser.py',204),
  ('copy -> READ_FILE LEFT_PARENT LETRERO RIGHT_PARENT SEMICOLON','copy',5,'p_copy','lexer-parser.py',210),
  ('file -> ID','file',1,'p_file','lexer-parser.py',216),
  ('variable -> ID indexp','variable',2,'p_variable','lexer-parser.py',222),
  ('indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET','indexp',4,'p_variable','lexer-parser.py',223),
  ('indexp -> empty','indexp',1,'p_variable','lexer-parser.py',224),
  ('indexpp -> COMMA exp','indexpp',2,'p_variable','lexer-parser.py',225),
  ('indexpp -> empty','indexpp',1,'p_variable','lexer-parser.py',226),
  ('llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON','llamada',5,'p_llamada','lexer-parser.py',232),
  ('expp -> exp exppp','expp',2,'p_llamada','lexer-parser.py',233),
  ('expp -> empty','expp',1,'p_llamada','lexer-parser.py',234),
  ('exppp -> COMMA exp exppp','exppp',3,'p_llamada','lexer-parser.py',235),
  ('exppp -> empty','exppp',1,'p_llamada','lexer-parser.py',236),
  ('var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON','var',6,'p_var','lexer-parser.py',242),
  ('v -> DATAFRAME pnSaveTypeVar','v',2,'p_var','lexer-parser.py',243),
  ('v -> tipo_simp vp','v',2,'p_var','lexer-parser.py',244),
  ('vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET','vp',4,'p_var','lexer-parser.py',245),
  ('vp -> empty','vp',1,'p_var','lexer-parser.py',246),
  ('vpp -> COMMA CTEI','vpp',2,'p_var','lexer-parser.py',247),
  ('vpp -> empty','vpp',1,'p_var','lexer-parser.py',248),
  ('idp -> ID pnCheckNameTablaVar idpp','idp',3,'p_var','lexer-parser.py',249),
  ('idpp -> COMMA ID pnCheckNameTablaVar idpp','idpp',4,'p_var','lexer-parser.py',250),
  ('idpp -> empty','idpp',1,'p_var','lexer-parser.py',251),
  ('func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction','func',13,'p_func','lexer-parser.py',257),
  ('returnval -> tipo_simp','returnval',1,'p_func','lexer-parser.py',258),
  ('returnval -> VOID pnSaveTypeVar','returnval',2,'p_func','lexer-parser.py',259),
  ('param -> tipo_simp ARROW ID paramp','param',4,'p_param','lexer-parser.py',265),
  ('param -> empty','param',1,'p_param','lexer-parser.py',266),
  ('paramp -> COMMA param paramp','paramp',3,'p_param','lexer-parser.py',267),
  ('paramp -> empty','paramp',1,'p_param','lexer-parser.py',268),
  ('estatuto -> asign','estatuto',1,'p_estatuto','lexer-parser.py',274),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','lexer-parser.py',275),
  ('estatuto -> lee','estatuto',1,'p_estatuto','lexer-parser.py',276),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','lexer-parser.py',277),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexer-parser.py',278),
  ('estatuto -> ciclow','estatuto',1,'p_estatuto','lexer-parser.py',279),
  ('estatuto -> ciclof','estatuto',1,'p_estatuto','lexer-parser.py',280),
  ('estatuto -> funcesp','estatuto',1,'p_estatuto','lexer-parser.py',281),
  ('estatuto -> return','estatuto',1,'p_estatuto','lexer-parser.py',282),
  ('estatuto -> copy','estatuto',1,'p_estatuto','lexer-parser.py',283),
  ('asign -> variable ASIGN exp SEMICOLON','asign',4,'p_asign','lexer-parser.py',289),
  ('lee -> READ LEFT_PARENT variable RIGHT_PARENT SEMICOLON','lee',5,'p_lee','lexer-parser.py',295),
  ('escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON','escribe',5,'p_escribe','lexer-parser.py',301),
  ('escribep -> exp','escribep',1,'p_escribe','lexer-parser.py',302),
  ('escribep -> LETRERO','escribep',1,'p_escribe','lexer-parser.py',303),
  ('return -> RETURNS exp SEMICOLON','return',3,'p_return','lexer-parser.py',309),
  ('exp -> exprel logic','exp',2,'p_exp','lexer-parser.py',315),
  ('logic -> logicsig exprel logic','logic',3,'p_exp','lexer-parser.py',316),
  ('logic -> empty','logic',1,'p_exp','lexer-parser.py',317),
  ('logicsig -> AND','logicsig',1,'p_exp','lexer-parser.py',318),
  ('logicsig -> OR','logicsig',1,'p_exp','lexer-parser.py',319),
  ('exprel -> e relacionalp','exprel',2,'p_exprel','lexer-parser.py',325),
  ('relacionalp -> relsig e relacionalp','relacionalp',3,'p_exprel','lexer-parser.py',326),
  ('relacionalp -> empty','relacionalp',1,'p_exprel','lexer-parser.py',327),
  ('relsig -> LESS_THAN','relsig',1,'p_exprel','lexer-parser.py',328),
  ('relsig -> GREATER_THAN','relsig',1,'p_exprel','lexer-parser.py',329),
  ('relsig -> EQUALS','relsig',1,'p_exprel','lexer-parser.py',330),
  ('relsig -> NOTEQUALS','relsig',1,'p_exprel','lexer-parser.py',331),
  ('e -> t tp','e',2,'p_e','lexer-parser.py',337),
  ('tp -> tsig t tp','tp',3,'p_e','lexer-parser.py',338),
  ('tp -> empty','tp',1,'p_e','lexer-parser.py',339),
  ('tsig -> PLUS','tsig',1,'p_e','lexer-parser.py',340),
  ('tsig -> MINUS','tsig',1,'p_e','lexer-parser.py',341),
  ('t -> f fp','t',2,'p_t','lexer-parser.py',347),
  ('fp -> fsig f fp','fp',3,'p_t','lexer-parser.py',348),
  ('fp -> empty','fp',1,'p_t','lexer-parser.py',349),
  ('fsig -> MULT','fsig',1,'p_t','lexer-parser.py',350),
  ('fsig -> DIV','fsig',1,'p_t','lexer-parser.py',351),
  ('f -> LEFT_PARENT exp RIGHT_PARENT','f',3,'p_f','lexer-parser.py',357),
  ('f -> CTEI','f',1,'p_f','lexer-parser.py',358),
  ('f -> CTEF','f',1,'p_f','lexer-parser.py',359),
  ('f -> CTEC','f',1,'p_f','lexer-parser.py',360),
  ('f -> variable','f',1,'p_f','lexer-parser.py',361),
  ('f -> llamada','f',1,'p_f','lexer-parser.py',362),
  ('f -> funcesp','f',1,'p_f','lexer-parser.py',363),
  ('condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop','condicion',9,'p_condicion','lexer-parser.py',369),
  ('falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','falsop',4,'p_condicion','lexer-parser.py',370),
  ('falsop -> empty','falsop',1,'p_condicion','lexer-parser.py',371),
  ('ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','ciclow',7,'p_ciclow','lexer-parser.py',377),
  ('ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','ciclof',8,'p_ciclof','lexer-parser.py',383),
  ('funcesp -> mean','funcesp',1,'p_funcesp','lexer-parser.py',389),
  ('funcesp -> mode','funcesp',1,'p_funcesp','lexer-parser.py',390),
  ('funcesp -> median','funcesp',1,'p_funcesp','lexer-parser.py',391),
  ('funcesp -> variance','funcesp',1,'p_funcesp','lexer-parser.py',392),
  ('funcesp -> max','funcesp',1,'p_funcesp','lexer-parser.py',393),
  ('funcesp -> min','funcesp',1,'p_funcesp','lexer-parser.py',394),
  ('funcesp -> staddes','funcesp',1,'p_funcesp','lexer-parser.py',395),
  ('funcesp -> boxplot','funcesp',1,'p_funcesp','lexer-parser.py',396),
  ('funcesp -> linreg','funcesp',1,'p_funcesp','lexer-parser.py',397),
  ('funcesp -> copy','funcesp',1,'p_funcesp','lexer-parser.py',398),
  ('mean -> MEAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON','mean',5,'p_mean','lexer-parser.py',404),
  ('mode -> MODE LEFT_PARENT variable RIGHT_PARENT SEMICOLON','mode',5,'p_mode','lexer-parser.py',410),
  ('median -> MEDIAN LEFT_PARENT variable RIGHT_PARENT SEMICOLON','median',5,'p_median','lexer-parser.py',416),
  ('variance -> VARIANCE LEFT_PARENT variable RIGHT_PARENT SEMICOLON','variance',5,'p_variance','lexer-parser.py',422),
  ('max -> MAX LEFT_PARENT variable RIGHT_PARENT SEMICOLON','max',5,'p_max','lexer-parser.py',428),
  ('min -> MIN LEFT_PARENT variable RIGHT_PARENT SEMICOLON','min',5,'p_min','lexer-parser.py',434),
  ('staddes -> STADDES LEFT_PARENT variable RIGHT_PARENT SEMICOLON','staddes',5,'p_staddes','lexer-parser.py',440),
  ('boxplot -> BOXPLOT LEFT_PARENT variable RIGHT_PARENT SEMICOLON','boxplot',5,'p_boxplot','lexer-parser.py',446),
  ('linreg -> LINREG LEFT_PARENT variable RIGHT_PARENT SEMICOLON','linreg',5,'p_linreg','lexer-parser.py',452),
  ('pnCrearDirFunc -> empty','pnCrearDirFunc',1,'p_pnCrearDirFunc','lexer-parser.py',462),
  ('pnScriptFuncDir -> empty','pnScriptFuncDir',1,'p_pnScriptFuncDir','lexer-parser.py',473),
  ('pnCheckTablaVar -> empty','pnCheckTablaVar',1,'p_pnCheckTablaVar','lexer-parser.py',483),
  ('pnSaveTypeVar -> empty','pnSaveTypeVar',1,'p_pnSaveTypeVar','lexer-parser.py',491),
  ('pnCheckNameTablaVar -> empty','pnCheckNameTablaVar',1,'p_pnCheckNameTablaVar','lexer-parser.py',500),
  ('pnAddFuncinDir -> empty','pnAddFuncinDir',1,'p_pnAddFuncinDir','lexer-parser.py',522),
  ('pnCloseCurrentFunction -> empty','pnCloseCurrentFunction',1,'p_pnCloseCurrentFunction','lexer-parser.py',535),
  ('pnEndScript -> empty','pnEndScript',1,'p_pnEndScript','lexer-parser.py',544),
  ('empty -> <empty>','empty',0,'p_empty','lexer-parser.py',552),
]

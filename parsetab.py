
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVAND ARROW ASIGN BOXPLOT CHAR COMMA COMMENT CTEC CTEF CTEI DATAFRAME DIV DO EQUALS FLOAT FOR FUNC GREATER_THAN ID IF IF_FALSE IF_TRUE INT LEFT_CUR_BRACKET LEFT_PARENT LEFT_SQR_BRACKET LESS_THAN LETRERO LINREG MAX MEAN MEDIAN MIN MINUS MODE MULT NOTEQUALS OR PLUS READ READ_FILE RETURNS RIGHT_CUR_BRACKET RIGHT_PARENT RIGHT_SQR_BRACKET SCRIPT SEMICOLON STADDES VAR VARIANCE VOID WHILE WRITE\n    programa : SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque\n    varp : var varp \n         | empty\n    funcp : func funcp \n          | empty\n    \n    bloque : DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript\n    estatutop : estatuto estatutop \n              | empty\n    \n    tipo_simp : INT pnSaveTypeVar\n              | FLOAT pnSaveTypeVar\n              | CHAR pnSaveTypeVar\n    \n    tipo_comp : DATAFRAME \n              | file\n    \n    copy : READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON\n    \n    file : ID\n    \n    variable : ID pnSaveOperandos indexp\n    indexp : LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET \n           | empty\n    indexpp : COMMA exp \n            | empty\n    \n    llamada : ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON\n    expp : exp exppp\n         | empty\n    exppp : COMMA exp exppp\n          | empty\n    \n    var : VAR pnCheckTablaVar v ARROW idp SEMICOLON\n    v : DATAFRAME pnSaveTypeVar\n      | tipo_simp vp\n    vp : LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET \n       | empty\n    vpp : COMMA CTEI \n        | empty\n    idp : ID pnCheckNameTablaVar idpp\n    idpp : COMMA ID pnCheckNameTablaVar idpp\n         | empty\n    \n    func : FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction\n    returnval : tipo_simp \n              | VOID pnSaveTypeVar\n    \n    param : paramlist\n          | empty\n    paramlist : tipoparam ARROW ID pnAddParametersTablaVar paramlistp\n    tipoparam : tipo_simp\n              | DATAFRAME pnSaveTypeVar\n    paramlistp : COMMA paramlist\n               | empty\n    \n    estatuto : asign\n             | llamada\n             | lee\n             | escribe\n             | condicion\n             | ciclow\n             | ciclof\n             | funcesp\n             | return\n             | copy\n    \n    asign : variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON\n    \n    lee : READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON\n    \n    escribe :  WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON\n    escribep : exp pnCuadEscribe\n             | LETRERO pnCuadEscribe\n    \n    return : RETURNS exp SEMICOLON\n    \n    exp : exprel pnCuadOplog logic\n    logic : logicsig exprel pnCuadOplog logic \n          | empty\n    logicsig : AND pnSaveOperadorLog\n             | OR pnSaveOperadorLog\n    \n    exprel : e pnCuadOpRelacional relacionalp\n    relacionalp : relsig e pnCuadOpRelacional relacionalp \n                | empty\n    relsig : LESS_THAN pnSaveOperadorRel\n           | GREATER_THAN pnSaveOperadorRel\n           | EQUALS pnSaveOperadorRel\n           | NOTEQUALS pnSaveOperadorRel\n    \n    e : t pnCuadPlMi tp\n    tp : tsig t pnCuadPlMi tp \n       | empty\n    tsig : PLUS pnSaveOperadorPlMi\n         | MINUS pnSaveOperadorPlMi\n    \n    t : f pnCuadMuDi fp\n    fp : fsig f pnCuadMuDi fp \n       | empty\n    fsig : MULT pnSaveOperadorMuDi\n         | DIV pnSaveOperadorMuDi\n    \n    f : LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso\n      | CTEI pnSaveCteI  pnSaveOperandoConstante\n      | CTEF pnSaveCteF pnSaveOperandoConstante\n      | CTEC pnSaveCteC pnSaveOperandoConstante\n      | variable\n      | llamada\n      | funcesp\n    \n    condicion : IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop\n    falsop : IF_FALSE  LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET \n           | empty\n    \n    ciclow : WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET\n    \n    ciclof : FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET\n    \n    funcesp : mean\n            | mode\n            | median\n            | variance\n            | max\n            | min\n            | staddes\n            | boxplot\n            | linreg\n            | copy\n    \n    mean : MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    mode : MODE LEFT_PARENT variable  pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    median : MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    variance : VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    max : MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    min : MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    staddes : STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    boxplot : BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    linreg : LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    pnCrearDirFunc : empty\n    \n    pnScriptFuncDir : empty\n    \n    pnCheckTablaVar : empty\n    \n    pnSaveTypeVar : empty\n    \n    pnCheckNameTablaVar : empty\n    \n    pnAddFuncinDir : empty\n    \n    pnAddParametersTablaVar : empty\n    \n    pnCloseCurrentFunction : empty\n    \n    pnEndScript : empty\n    \n    pnSaveCteI : empty\n    \n    pnSaveCteF : empty\n    \n    pnSaveCteC : empty\n    \n    pnSaveFondoFalso : empty\n    \n    pnPopFondoFalso : empty\n    \n    pnSaveOperandos : empty\n    \n    pnSaveOperandoConstante : empty\n    \n    pnSaveOperadorPlMi : empty\n    \n    pnSaveOperadorMuDi : empty\n    \n    pnSaveOperadorRel : empty\n    \n    pnSaveOperadorLog : empty\n    \n    pnCuadPlMi : empty\n    \n    pnCuadMuDi : empty\n    \n    pnCuadOpRelacional : empty\n    \n    pnCuadOplog : empty\n    \n    pnSaveOperadorAsign : empty\n    \n    pnCuadAsign : empty\n    \n    pnCuadEscribe : empty\n    \n    pnCuadLee : empty\n    \n    pnCuadCopy : empty\n    \n    pnCuadFuncEsp : empty\n    \n    empty :'
    
_lr_action_items = {'SCRIPT':([0,],[2,]),'$end':([1,20,104,141,142,],[0,-1,-145,-6,-123,]),'ID':([2,3,4,10,11,14,15,17,22,32,33,39,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,100,106,107,110,111,112,113,114,120,130,131,132,133,134,135,136,137,138,143,144,149,158,159,168,169,196,209,211,212,214,216,217,218,219,221,223,224,226,228,229,248,253,256,259,261,264,265,266,268,269,270,271,272,274,275,276,278,279,280,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,5,-115,-145,-3,-145,-5,-2,-4,-145,45,47,-145,72,-26,72,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,127,140,-145,127,152,127,127,127,152,-145,152,152,152,152,152,152,152,152,152,127,-139,127,127,-61,127,-127,127,127,-145,-145,127,-145,-145,-145,-145,127,-145,-145,127,-145,-145,293,-21,127,-58,72,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-145,-56,-57,72,72,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,72,-94,-145,-95,-145,-91,-93,-36,-122,72,-92,]),'SEMICOLON':([5,6,7,46,47,53,54,78,79,80,81,82,83,84,85,86,99,101,108,109,115,116,117,118,119,121,122,123,124,125,126,127,128,140,148,150,160,161,162,163,164,165,166,167,170,171,172,173,174,175,192,193,194,201,208,210,213,215,220,222,225,227,231,232,233,234,250,251,252,253,258,263,267,273,277,281,282,283,284,285,286,287,288,289,290,291,296,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,324,325,326,327,],[-145,8,-116,52,-145,-145,-119,-96,-97,-98,-99,-100,-101,-102,-103,-104,-33,-35,-145,-129,159,-145,-145,-145,-145,-145,-145,-145,-88,-89,-90,-145,-105,-145,-16,-18,-145,-138,-145,-137,-145,-135,-145,-136,-145,-124,-145,-125,-145,-126,-145,-145,253,259,-62,-64,-67,-69,-74,-76,-79,-81,-85,-130,-86,-87,-34,294,-140,-21,298,-145,-145,-145,-145,-145,308,309,310,311,312,313,314,315,316,317,-17,-145,-145,-145,-145,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-63,-68,-75,-80,]),'VAR':([8,10,32,52,292,],[12,12,12,-26,12,]),'FUNC':([8,9,10,11,14,17,32,44,52,334,339,340,],[-145,16,-145,-3,16,-2,-145,16,-26,-145,-36,-122,]),'DO':([8,9,10,11,13,14,15,17,22,52,334,339,340,],[-145,-145,-145,-3,21,-145,-5,-2,-4,-26,-145,-36,-122,]),'READ':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,253,259,261,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,-3,-145,-5,-2,-4,-145,-145,73,-26,73,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,73,-145,-56,-57,73,73,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,73,-94,-145,-95,-145,-91,-93,-36,-122,73,-92,]),'WRITE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,253,259,261,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,-3,-145,-5,-2,-4,-145,-145,74,-26,74,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,74,-145,-56,-57,74,74,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,74,-94,-145,-95,-145,-91,-93,-36,-122,74,-92,]),'IF':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,253,259,261,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,-3,-145,-5,-2,-4,-145,-145,75,-26,75,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,75,-145,-56,-57,75,75,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,75,-94,-145,-95,-145,-91,-93,-36,-122,75,-92,]),'WHILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,253,259,261,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,-3,-145,-5,-2,-4,-145,-145,76,-26,76,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,76,-145,-56,-57,76,76,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,76,-94,-145,-95,-145,-91,-93,-36,-122,76,-92,]),'FOR':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,253,259,261,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,-3,-145,-5,-2,-4,-145,-145,77,-26,77,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,77,-145,-56,-57,77,77,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,77,-94,-145,-95,-145,-91,-93,-36,-122,77,-92,]),'RETURNS':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,159,253,259,261,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,-3,-145,-5,-2,-4,-145,-145,87,-26,87,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-21,-58,87,-145,-56,-57,87,87,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,87,-94,-145,-95,-145,-91,-93,-36,-122,87,-92,]),'READ_FILE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,168,169,196,209,211,212,214,216,217,218,219,221,223,224,226,228,229,253,256,259,261,264,265,266,268,269,270,271,272,274,275,276,278,279,280,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,-3,-145,-5,-2,-4,-145,-145,88,-26,88,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,88,-145,88,88,88,88,-145,88,-139,88,88,-61,88,-127,88,88,-145,-145,88,-145,-145,-145,-145,88,-145,-145,88,-145,-145,-21,88,-58,88,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-145,-56,-57,88,88,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,88,-94,-145,-95,-145,-91,-93,-36,-122,88,-92,]),'MEAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,168,169,196,209,211,212,214,216,217,218,219,221,223,224,226,228,229,253,256,259,261,264,265,266,268,269,270,271,272,274,275,276,278,279,280,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,-3,-145,-5,-2,-4,-145,-145,89,-26,89,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,89,-145,89,89,89,89,-145,89,-139,89,89,-61,89,-127,89,89,-145,-145,89,-145,-145,-145,-145,89,-145,-145,89,-145,-145,-21,89,-58,89,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-145,-56,-57,89,89,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,89,-94,-145,-95,-145,-91,-93,-36,-122,89,-92,]),'MODE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,168,169,196,209,211,212,214,216,217,218,219,221,223,224,226,228,229,253,256,259,261,264,265,266,268,269,270,271,272,274,275,276,278,279,280,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,-3,-145,-5,-2,-4,-145,-145,90,-26,90,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,90,-145,90,90,90,90,-145,90,-139,90,90,-61,90,-127,90,90,-145,-145,90,-145,-145,-145,-145,90,-145,-145,90,-145,-145,-21,90,-58,90,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-145,-56,-57,90,90,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,90,-94,-145,-95,-145,-91,-93,-36,-122,90,-92,]),'MEDIAN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,168,169,196,209,211,212,214,216,217,218,219,221,223,224,226,228,229,253,256,259,261,264,265,266,268,269,270,271,272,274,275,276,278,279,280,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,-3,-145,-5,-2,-4,-145,-145,91,-26,91,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,91,-145,91,91,91,91,-145,91,-139,91,91,-61,91,-127,91,91,-145,-145,91,-145,-145,-145,-145,91,-145,-145,91,-145,-145,-21,91,-58,91,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-145,-56,-57,91,91,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,91,-94,-145,-95,-145,-91,-93,-36,-122,91,-92,]),'VARIANCE':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,168,169,196,209,211,212,214,216,217,218,219,221,223,224,226,228,229,253,256,259,261,264,265,266,268,269,270,271,272,274,275,276,278,279,280,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,-3,-145,-5,-2,-4,-145,-145,92,-26,92,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,92,-145,92,92,92,92,-145,92,-139,92,92,-61,92,-127,92,92,-145,-145,92,-145,-145,-145,-145,92,-145,-145,92,-145,-145,-21,92,-58,92,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-145,-56,-57,92,92,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,92,-94,-145,-95,-145,-91,-93,-36,-122,92,-92,]),'MAX':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,168,169,196,209,211,212,214,216,217,218,219,221,223,224,226,228,229,253,256,259,261,264,265,266,268,269,270,271,272,274,275,276,278,279,280,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,-3,-145,-5,-2,-4,-145,-145,93,-26,93,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,93,-145,93,93,93,93,-145,93,-139,93,93,-61,93,-127,93,93,-145,-145,93,-145,-145,-145,-145,93,-145,-145,93,-145,-145,-21,93,-58,93,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-145,-56,-57,93,93,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,93,-94,-145,-95,-145,-91,-93,-36,-122,93,-92,]),'MIN':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,168,169,196,209,211,212,214,216,217,218,219,221,223,224,226,228,229,253,256,259,261,264,265,266,268,269,270,271,272,274,275,276,278,279,280,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,-3,-145,-5,-2,-4,-145,-145,94,-26,94,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,94,-145,94,94,94,94,-145,94,-139,94,94,-61,94,-127,94,94,-145,-145,94,-145,-145,-145,-145,94,-145,-145,94,-145,-145,-21,94,-58,94,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-145,-56,-57,94,94,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,94,-94,-145,-95,-145,-91,-93,-36,-122,94,-92,]),'STADDES':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,168,169,196,209,211,212,214,216,217,218,219,221,223,224,226,228,229,253,256,259,261,264,265,266,268,269,270,271,272,274,275,276,278,279,280,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,-3,-145,-5,-2,-4,-145,-145,95,-26,95,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,95,-145,95,95,95,95,-145,95,-139,95,95,-61,95,-127,95,95,-145,-145,95,-145,-145,-145,-145,95,-145,-145,95,-145,-145,-21,95,-58,95,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-145,-56,-57,95,95,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,95,-94,-145,-95,-145,-91,-93,-36,-122,95,-92,]),'BOXPLOT':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,168,169,196,209,211,212,214,216,217,218,219,221,223,224,226,228,229,253,256,259,261,264,265,266,268,269,270,271,272,274,275,276,278,279,280,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,-3,-145,-5,-2,-4,-145,-145,96,-26,96,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,96,-145,96,96,96,96,-145,96,-139,96,96,-61,96,-127,96,96,-145,-145,96,-145,-145,-145,-145,96,-145,-145,96,-145,-145,-21,96,-58,96,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-145,-56,-57,96,96,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,96,-94,-145,-95,-145,-91,-93,-36,-122,96,-92,]),'LINREG':([10,11,14,15,17,22,32,44,49,52,59,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,87,106,107,111,112,113,120,143,144,149,158,159,168,169,196,209,211,212,214,216,217,218,219,221,223,224,226,228,229,253,256,259,261,264,265,266,268,269,270,271,272,274,275,276,278,279,280,292,294,298,299,301,308,309,310,311,312,313,314,315,316,317,318,322,332,333,334,336,338,339,340,341,343,],[-145,-3,-145,-5,-2,-4,-145,-145,97,-26,97,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,97,-145,97,97,97,97,-145,97,-139,97,97,-61,97,-127,97,97,-145,-145,97,-145,-145,-145,-145,97,-145,-145,97,-145,-145,-21,97,-58,97,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-145,-56,-57,97,97,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,97,-94,-145,-95,-145,-91,-93,-36,-122,97,-92,]),'RIGHT_CUR_BRACKET':([10,11,14,15,17,22,32,44,49,52,58,59,60,61,62,63,64,65,66,67,68,69,70,78,79,80,81,82,83,84,85,86,105,159,253,259,261,292,294,298,299,300,301,308,309,310,311,312,313,314,315,316,317,318,321,322,323,328,332,333,334,336,338,339,340,341,342,343,],[-145,-3,-145,-5,-2,-4,-145,-145,-145,-26,104,-145,-8,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-7,-61,-21,-58,-145,-145,-56,-57,-145,322,-145,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-145,332,-94,333,334,-145,-95,-145,-91,-93,-36,-122,-145,343,-92,]),'DATAFRAME':([12,18,19,98,139,330,],[-145,30,-117,-145,191,191,]),'INT':([12,16,18,19,98,139,330,],[-145,26,26,-117,-145,26,26,]),'FLOAT':([12,16,18,19,98,139,330,],[-145,27,27,-117,-145,27,27,]),'CHAR':([12,16,18,19,98,139,330,],[-145,28,28,-117,-145,28,28,]),'VOID':([16,],[25,]),'RIGHT_PARENT':([19,78,79,80,81,82,83,84,85,86,98,107,108,109,116,117,118,119,121,122,123,124,125,126,127,128,139,145,146,147,148,150,151,152,153,154,155,156,157,160,161,162,163,164,165,166,167,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,195,197,199,200,202,203,204,207,208,210,213,215,220,222,225,227,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,253,254,263,267,273,277,281,293,295,296,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,324,325,326,327,329,331,335,],[-117,-96,-97,-98,-99,-100,-101,-102,-103,-104,-145,-145,-145,-129,-145,-145,-145,-145,-145,-145,-145,-88,-89,-90,-145,-105,-145,194,-145,-23,-16,-18,-145,-145,201,-145,-145,205,206,-145,-138,-145,-137,-145,-135,-145,-136,-145,-124,-145,-125,-145,-126,-145,-145,-145,-145,-145,-145,-145,-145,-145,-145,247,-39,-40,-22,-25,258,-142,-59,-141,-60,262,-62,-64,-67,-69,-74,-76,-79,-81,281,-85,-130,-86,-87,282,-143,283,-144,284,285,286,287,288,289,290,291,-21,-145,-145,-145,-145,-145,-145,-145,-24,-17,-145,-145,-145,-145,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-145,-121,-63,-68,-75,-80,-41,-45,-44,]),'LEFT_CUR_BRACKET':([21,206,247,260,262,337,],[32,261,292,299,301,341,]),'ARROW':([23,24,25,26,27,28,29,30,31,34,35,36,37,38,40,41,43,102,189,190,191,249,],[33,-37,-145,-145,-145,-145,39,-145,-145,-38,-118,-9,-10,-11,-27,-28,-30,-29,248,-42,-145,-43,]),'LEFT_SQR_BRACKET':([26,27,28,31,35,36,37,38,72,108,109,127,152,],[-145,-145,-145,42,-118,-9,-10,-11,-145,149,-129,-145,-145,]),'CTEI':([42,56,87,106,107,111,112,113,120,143,144,149,158,168,169,196,209,211,212,214,216,217,218,219,221,223,224,226,228,229,256,264,265,266,268,269,270,271,272,274,275,276,278,279,280,294,],[48,103,121,-145,121,121,121,121,-145,121,-139,121,121,121,-127,121,121,-145,-145,121,-145,-145,-145,-145,121,-145,-145,121,-145,-145,121,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-56,]),'LEFT_PARENT':([45,50,51,72,73,74,75,76,77,87,88,89,90,91,92,93,94,95,96,97,106,107,111,112,113,120,127,143,144,149,158,168,169,196,209,211,212,214,216,217,218,219,221,223,224,226,228,229,256,264,265,266,268,269,270,271,272,274,275,276,278,279,280,294,],[-145,98,-120,107,110,111,112,113,114,120,129,130,131,132,133,134,135,136,137,138,-145,120,120,120,120,-145,107,120,-139,120,120,120,-127,120,120,-145,-145,120,-145,-145,-145,-145,120,-145,-145,120,-145,-145,120,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-56,]),'COMMA':([47,48,53,54,78,79,80,81,82,83,84,85,86,108,109,116,117,118,119,121,122,123,124,125,126,127,128,140,146,148,150,160,161,162,163,164,165,166,167,170,171,172,173,174,175,192,198,208,210,213,215,220,222,225,227,231,232,233,234,253,254,263,267,273,277,281,293,296,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,319,320,324,325,326,327,],[-145,56,100,-119,-96,-97,-98,-99,-100,-101,-102,-103,-104,-145,-129,-145,-145,-145,-145,-145,-145,-145,-88,-89,-90,-145,-105,-145,196,-16,-18,-145,-138,-145,-137,-145,-135,-145,-136,-145,-124,-145,-125,-145,-126,100,256,-62,-64,-67,-69,-74,-76,-79,-81,-85,-130,-86,-87,-21,196,-145,-145,-145,-145,-145,-145,-17,-145,-145,-145,-145,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,330,-121,-63,-68,-75,-80,]),'RIGHT_SQR_BRACKET':([48,55,57,78,79,80,81,82,83,84,85,86,103,108,109,116,117,118,119,121,122,123,124,125,126,127,128,148,150,160,161,162,163,164,165,166,167,170,171,172,173,174,175,198,208,210,213,215,220,222,225,227,231,232,233,234,253,255,257,263,267,273,277,281,296,297,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,324,325,326,327,],[-145,102,-32,-96,-97,-98,-99,-100,-101,-102,-103,-104,-31,-145,-129,-145,-145,-145,-145,-145,-145,-145,-88,-89,-90,-145,-105,-16,-18,-145,-138,-145,-137,-145,-135,-145,-136,-145,-124,-145,-125,-145,-126,-145,-62,-64,-67,-69,-74,-76,-79,-81,-85,-130,-86,-87,-21,296,-20,-145,-145,-145,-145,-145,-17,-19,-145,-145,-145,-145,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-63,-68,-75,-80,]),'ASIGN':([71,72,108,109,148,150,152,296,],[106,-145,-145,-129,-16,-18,-145,-17,]),'MULT':([78,79,80,81,82,83,84,85,86,108,109,119,121,122,123,124,125,126,127,128,148,150,166,167,170,171,172,173,174,175,231,232,233,234,253,277,281,296,305,306,307,308,309,310,311,312,313,314,315,316,317,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-145,-129,-145,-145,-145,-145,-88,-89,-90,-145,-105,-16,-18,228,-136,-145,-124,-145,-125,-145,-126,-85,-130,-86,-87,-21,-145,-145,-17,228,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'DIV':([78,79,80,81,82,83,84,85,86,108,109,119,121,122,123,124,125,126,127,128,148,150,166,167,170,171,172,173,174,175,231,232,233,234,253,277,281,296,305,306,307,308,309,310,311,312,313,314,315,316,317,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-145,-129,-145,-145,-145,-145,-88,-89,-90,-145,-105,-16,-18,229,-136,-145,-124,-145,-125,-145,-126,-85,-130,-86,-87,-21,-145,-145,-17,229,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,]),'PLUS':([78,79,80,81,82,83,84,85,86,108,109,118,119,121,122,123,124,125,126,127,128,148,150,164,165,166,167,170,171,172,173,174,175,225,227,231,232,233,234,253,273,277,281,296,304,305,306,307,308,309,310,311,312,313,314,315,316,317,327,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-145,-129,-145,-145,-145,-145,-145,-88,-89,-90,-145,-105,-16,-18,223,-135,-145,-136,-145,-124,-145,-125,-145,-126,-79,-81,-85,-130,-86,-87,-21,-145,-145,-145,-17,223,-145,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-80,]),'MINUS':([78,79,80,81,82,83,84,85,86,108,109,118,119,121,122,123,124,125,126,127,128,148,150,164,165,166,167,170,171,172,173,174,175,225,227,231,232,233,234,253,273,277,281,296,304,305,306,307,308,309,310,311,312,313,314,315,316,317,327,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-145,-129,-145,-145,-145,-145,-145,-88,-89,-90,-145,-105,-16,-18,224,-135,-145,-136,-145,-124,-145,-125,-145,-126,-79,-81,-85,-130,-86,-87,-21,-145,-145,-145,-17,224,-145,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-80,]),'LESS_THAN':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,121,122,123,124,125,126,127,128,148,150,162,163,164,165,166,167,170,171,172,173,174,175,220,222,225,227,231,232,233,234,253,267,273,277,281,296,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,326,327,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-145,-129,-145,-145,-145,-145,-145,-145,-88,-89,-90,-145,-105,-16,-18,216,-137,-145,-135,-145,-136,-145,-124,-145,-125,-145,-126,-74,-76,-79,-81,-85,-130,-86,-87,-21,-145,-145,-145,-145,-17,216,-145,-145,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,]),'GREATER_THAN':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,121,122,123,124,125,126,127,128,148,150,162,163,164,165,166,167,170,171,172,173,174,175,220,222,225,227,231,232,233,234,253,267,273,277,281,296,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,326,327,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-145,-129,-145,-145,-145,-145,-145,-145,-88,-89,-90,-145,-105,-16,-18,217,-137,-145,-135,-145,-136,-145,-124,-145,-125,-145,-126,-74,-76,-79,-81,-85,-130,-86,-87,-21,-145,-145,-145,-145,-17,217,-145,-145,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,]),'EQUALS':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,121,122,123,124,125,126,127,128,148,150,162,163,164,165,166,167,170,171,172,173,174,175,220,222,225,227,231,232,233,234,253,267,273,277,281,296,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,326,327,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-145,-129,-145,-145,-145,-145,-145,-145,-88,-89,-90,-145,-105,-16,-18,218,-137,-145,-135,-145,-136,-145,-124,-145,-125,-145,-126,-74,-76,-79,-81,-85,-130,-86,-87,-21,-145,-145,-145,-145,-17,218,-145,-145,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,]),'NOTEQUALS':([78,79,80,81,82,83,84,85,86,108,109,117,118,119,121,122,123,124,125,126,127,128,148,150,162,163,164,165,166,167,170,171,172,173,174,175,220,222,225,227,231,232,233,234,253,267,273,277,281,296,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,326,327,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-145,-129,-145,-145,-145,-145,-145,-145,-88,-89,-90,-145,-105,-16,-18,219,-137,-145,-135,-145,-136,-145,-124,-145,-125,-145,-126,-74,-76,-79,-81,-85,-130,-86,-87,-21,-145,-145,-145,-145,-17,219,-145,-145,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,]),'AND':([78,79,80,81,82,83,84,85,86,108,109,116,117,118,119,121,122,123,124,125,126,127,128,148,150,160,161,162,163,164,165,166,167,170,171,172,173,174,175,213,215,220,222,225,227,231,232,233,234,253,263,267,273,277,281,296,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,325,326,327,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-145,-129,-145,-145,-145,-145,-145,-145,-145,-88,-89,-90,-145,-105,-16,-18,211,-138,-145,-137,-145,-135,-145,-136,-145,-124,-145,-125,-145,-126,-67,-69,-74,-76,-79,-81,-85,-130,-86,-87,-21,-145,-145,-145,-145,-145,-17,211,-145,-145,-145,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-68,-75,-80,]),'OR':([78,79,80,81,82,83,84,85,86,108,109,116,117,118,119,121,122,123,124,125,126,127,128,148,150,160,161,162,163,164,165,166,167,170,171,172,173,174,175,213,215,220,222,225,227,231,232,233,234,253,263,267,273,277,281,296,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,325,326,327,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-145,-129,-145,-145,-145,-145,-145,-145,-145,-88,-89,-90,-145,-105,-16,-18,212,-138,-145,-137,-145,-135,-145,-136,-145,-124,-145,-125,-145,-126,-67,-69,-74,-76,-79,-81,-85,-130,-86,-87,-21,-145,-145,-145,-145,-145,-17,212,-145,-145,-145,-84,-128,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-68,-75,-80,]),'CTEF':([87,106,107,111,112,113,120,143,144,149,158,168,169,196,209,211,212,214,216,217,218,219,221,223,224,226,228,229,256,264,265,266,268,269,270,271,272,274,275,276,278,279,280,294,],[122,-145,122,122,122,122,-145,122,-139,122,122,122,-127,122,122,-145,-145,122,-145,-145,-145,-145,122,-145,-145,122,-145,-145,122,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-56,]),'CTEC':([87,106,107,111,112,113,120,143,144,149,158,168,169,196,209,211,212,214,216,217,218,219,221,223,224,226,228,229,256,264,265,266,268,269,270,271,272,274,275,276,278,279,280,294,],[123,-145,123,123,123,123,-145,123,-139,123,123,123,-127,123,123,-145,-145,123,-145,-145,-145,-145,123,-145,-145,123,-145,-145,123,-65,-134,-66,-70,-133,-71,-72,-73,-77,-131,-78,-82,-132,-83,-56,]),'LETRERO':([111,129,],[155,176,]),'IF_TRUE':([205,],[260,]),'IF_FALSE':([332,],[337,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pnCrearDirFunc':([2,],[3,]),'empty':([2,5,8,9,10,12,14,25,26,27,28,30,31,32,44,45,47,48,49,53,59,72,98,104,106,107,108,116,117,118,119,120,121,122,123,127,139,140,146,151,152,154,155,160,162,164,166,170,172,174,176,177,178,179,180,181,182,183,184,185,191,192,193,198,211,212,216,217,218,219,223,224,228,229,254,261,263,267,273,277,281,292,293,299,301,302,303,304,305,318,319,332,334,341,],[4,7,11,15,11,19,15,35,35,35,35,35,43,11,15,51,54,57,60,101,60,109,19,142,144,147,150,161,163,165,167,169,171,173,175,109,188,54,197,200,109,203,203,210,215,222,227,232,232,232,236,238,238,238,238,238,238,238,238,238,35,101,252,257,265,265,269,269,269,269,275,275,279,279,197,60,161,163,165,167,307,11,320,60,60,210,215,222,227,60,331,338,340,60,]),'pnScriptFuncDir':([5,],[6,]),'varp':([8,10,32,292,],[9,17,44,318,]),'var':([8,10,32,292,],[10,10,10,10,]),'funcp':([9,14,44,],[13,22,49,]),'func':([9,14,44,],[14,14,14,]),'pnCheckTablaVar':([12,98,],[18,139,]),'bloque':([13,],[20,]),'returnval':([16,],[23,]),'tipo_simp':([16,18,139,330,],[24,31,190,190,]),'v':([18,],[29,]),'pnSaveTypeVar':([25,26,27,28,30,191,],[34,36,37,38,40,249,]),'vp':([31,],[41,]),'idp':([39,],[46,]),'pnAddFuncinDir':([45,],[50,]),'pnCheckNameTablaVar':([47,140,],[53,192,]),'vpp':([48,],[55,]),'estatutop':([49,59,261,299,301,318,341,],[58,105,300,321,323,328,342,]),'estatuto':([49,59,261,299,301,318,341,],[59,59,59,59,59,59,59,]),'asign':([49,59,114,261,299,301,318,341,],[61,61,158,61,61,61,61,61,]),'llamada':([49,59,87,107,111,112,113,143,149,158,168,196,209,214,221,226,256,261,299,301,318,341,],[62,62,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,62,62,62,62,62,]),'lee':([49,59,261,299,301,318,341,],[63,63,63,63,63,63,63,]),'escribe':([49,59,261,299,301,318,341,],[64,64,64,64,64,64,64,]),'condicion':([49,59,261,299,301,318,341,],[65,65,65,65,65,65,65,]),'ciclow':([49,59,261,299,301,318,341,],[66,66,66,66,66,66,66,]),'ciclof':([49,59,261,299,301,318,341,],[67,67,67,67,67,67,67,]),'funcesp':([49,59,87,107,111,112,113,143,149,158,168,196,209,214,221,226,256,261,299,301,318,341,],[68,68,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,68,68,68,68,68,]),'return':([49,59,261,299,301,318,341,],[69,69,69,69,69,69,69,]),'copy':([49,59,87,107,111,112,113,143,149,158,168,196,209,214,221,226,256,261,299,301,318,341,],[70,70,128,128,128,128,128,128,128,128,128,128,128,128,128,128,128,70,70,70,70,70,]),'variable':([49,59,87,107,110,111,112,113,114,130,131,132,133,134,135,136,137,138,143,149,158,168,196,209,214,221,226,256,261,299,301,318,341,],[71,71,124,124,151,124,124,124,71,177,178,179,180,181,182,183,184,185,124,124,124,124,124,124,124,124,124,124,71,71,71,71,71,]),'mean':([49,59,87,107,111,112,113,143,149,158,168,196,209,214,221,226,256,261,299,301,318,341,],[78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,78,]),'mode':([49,59,87,107,111,112,113,143,149,158,168,196,209,214,221,226,256,261,299,301,318,341,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'median':([49,59,87,107,111,112,113,143,149,158,168,196,209,214,221,226,256,261,299,301,318,341,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'variance':([49,59,87,107,111,112,113,143,149,158,168,196,209,214,221,226,256,261,299,301,318,341,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'max':([49,59,87,107,111,112,113,143,149,158,168,196,209,214,221,226,256,261,299,301,318,341,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'min':([49,59,87,107,111,112,113,143,149,158,168,196,209,214,221,226,256,261,299,301,318,341,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'staddes':([49,59,87,107,111,112,113,143,149,158,168,196,209,214,221,226,256,261,299,301,318,341,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'boxplot':([49,59,87,107,111,112,113,143,149,158,168,196,209,214,221,226,256,261,299,301,318,341,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'linreg':([49,59,87,107,111,112,113,143,149,158,168,196,209,214,221,226,256,261,299,301,318,341,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'idpp':([53,192,],[99,250,]),'pnSaveOperandos':([72,127,152,],[108,108,108,]),'exp':([87,107,111,112,113,143,149,158,168,196,256,],[115,146,154,156,157,193,198,207,230,254,297,]),'exprel':([87,107,111,112,113,143,149,158,168,196,209,256,],[116,116,116,116,116,116,116,116,116,116,263,116,]),'e':([87,107,111,112,113,143,149,158,168,196,209,214,256,],[117,117,117,117,117,117,117,117,117,117,117,267,117,]),'t':([87,107,111,112,113,143,149,158,168,196,209,214,221,256,],[118,118,118,118,118,118,118,118,118,118,118,118,273,118,]),'f':([87,107,111,112,113,143,149,158,168,196,209,214,221,226,256,],[119,119,119,119,119,119,119,119,119,119,119,119,119,277,119,]),'pnEndScript':([104,],[141,]),'pnSaveOperadorAsign':([106,],[143,]),'expp':([107,],[145,]),'indexp':([108,],[148,]),'escribep':([111,],[153,]),'pnCuadOplog':([116,263,],[160,302,]),'pnCuadOpRelacional':([117,267,],[162,303,]),'pnCuadPlMi':([118,273,],[164,304,]),'pnCuadMuDi':([119,277,],[166,305,]),'pnSaveFondoFalso':([120,],[168,]),'pnSaveCteI':([121,],[170,]),'pnSaveCteF':([122,],[172,]),'pnSaveCteC':([123,],[174,]),'param':([139,],[186,]),'paramlist':([139,330,],[187,335,]),'tipoparam':([139,330,],[189,189,]),'exppp':([146,254,],[195,295,]),'pnCuadLee':([151,],[199,]),'pnCuadEscribe':([154,155,],[202,204,]),'logic':([160,302,],[208,324,]),'logicsig':([160,302,],[209,209,]),'relacionalp':([162,303,],[213,325,]),'relsig':([162,303,],[214,214,]),'tp':([164,304,],[220,326,]),'tsig':([164,304,],[221,221,]),'fp':([166,305,],[225,327,]),'fsig':([166,305,],[226,226,]),'pnSaveOperandoConstante':([170,172,174,],[231,233,234,]),'pnCuadCopy':([176,],[235,]),'pnCuadFuncEsp':([177,178,179,180,181,182,183,184,185,],[237,239,240,241,242,243,244,245,246,]),'pnCuadAsign':([193,],[251,]),'indexpp':([198,],[255,]),'pnSaveOperadorLog':([211,212,],[264,266,]),'pnSaveOperadorRel':([216,217,218,219,],[268,270,271,272,]),'pnSaveOperadorPlMi':([223,224,],[274,276,]),'pnSaveOperadorMuDi':([228,229,],[278,280,]),'pnPopFondoFalso':([281,],[306,]),'pnAddParametersTablaVar':([293,],[319,]),'paramlistp':([319,],[329,]),'falsop':([332,],[336,]),'pnCloseCurrentFunction':([334,],[339,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir SEMICOLON varp funcp bloque','programa',8,'p_programa','lexer-parser.py',188),
  ('varp -> var varp','varp',2,'p_programa','lexer-parser.py',189),
  ('varp -> empty','varp',1,'p_programa','lexer-parser.py',190),
  ('funcp -> func funcp','funcp',2,'p_programa','lexer-parser.py',191),
  ('funcp -> empty','funcp',1,'p_programa','lexer-parser.py',192),
  ('bloque -> DO LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript','bloque',7,'p_bloque','lexer-parser.py',198),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_bloque','lexer-parser.py',199),
  ('estatutop -> empty','estatutop',1,'p_bloque','lexer-parser.py',200),
  ('tipo_simp -> INT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',206),
  ('tipo_simp -> FLOAT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',207),
  ('tipo_simp -> CHAR pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexer-parser.py',208),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','lexer-parser.py',214),
  ('tipo_comp -> file','tipo_comp',1,'p_tipo_comp','lexer-parser.py',215),
  ('copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON','copy',6,'p_copy','lexer-parser.py',221),
  ('file -> ID','file',1,'p_file','lexer-parser.py',227),
  ('variable -> ID pnSaveOperandos indexp','variable',3,'p_variable','lexer-parser.py',233),
  ('indexp -> LEFT_SQR_BRACKET exp indexpp RIGHT_SQR_BRACKET','indexp',4,'p_variable','lexer-parser.py',234),
  ('indexp -> empty','indexp',1,'p_variable','lexer-parser.py',235),
  ('indexpp -> COMMA exp','indexpp',2,'p_variable','lexer-parser.py',236),
  ('indexpp -> empty','indexpp',1,'p_variable','lexer-parser.py',237),
  ('llamada -> ID LEFT_PARENT expp RIGHT_PARENT SEMICOLON','llamada',5,'p_llamada','lexer-parser.py',243),
  ('expp -> exp exppp','expp',2,'p_llamada','lexer-parser.py',244),
  ('expp -> empty','expp',1,'p_llamada','lexer-parser.py',245),
  ('exppp -> COMMA exp exppp','exppp',3,'p_llamada','lexer-parser.py',246),
  ('exppp -> empty','exppp',1,'p_llamada','lexer-parser.py',247),
  ('var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON','var',6,'p_var','lexer-parser.py',253),
  ('v -> DATAFRAME pnSaveTypeVar','v',2,'p_var','lexer-parser.py',254),
  ('v -> tipo_simp vp','v',2,'p_var','lexer-parser.py',255),
  ('vp -> LEFT_SQR_BRACKET CTEI vpp RIGHT_SQR_BRACKET','vp',4,'p_var','lexer-parser.py',256),
  ('vp -> empty','vp',1,'p_var','lexer-parser.py',257),
  ('vpp -> COMMA CTEI','vpp',2,'p_var','lexer-parser.py',258),
  ('vpp -> empty','vpp',1,'p_var','lexer-parser.py',259),
  ('idp -> ID pnCheckNameTablaVar idpp','idp',3,'p_var','lexer-parser.py',260),
  ('idpp -> COMMA ID pnCheckNameTablaVar idpp','idpp',4,'p_var','lexer-parser.py',261),
  ('idpp -> empty','idpp',1,'p_var','lexer-parser.py',262),
  ('func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar param RIGHT_PARENT LEFT_CUR_BRACKET varp estatutop RIGHT_CUR_BRACKET pnCloseCurrentFunction','func',14,'p_func','lexer-parser.py',268),
  ('returnval -> tipo_simp','returnval',1,'p_func','lexer-parser.py',269),
  ('returnval -> VOID pnSaveTypeVar','returnval',2,'p_func','lexer-parser.py',270),
  ('param -> paramlist','param',1,'p_param','lexer-parser.py',276),
  ('param -> empty','param',1,'p_param','lexer-parser.py',277),
  ('paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp','paramlist',5,'p_param','lexer-parser.py',278),
  ('tipoparam -> tipo_simp','tipoparam',1,'p_param','lexer-parser.py',279),
  ('tipoparam -> DATAFRAME pnSaveTypeVar','tipoparam',2,'p_param','lexer-parser.py',280),
  ('paramlistp -> COMMA paramlist','paramlistp',2,'p_param','lexer-parser.py',281),
  ('paramlistp -> empty','paramlistp',1,'p_param','lexer-parser.py',282),
  ('estatuto -> asign','estatuto',1,'p_estatuto','lexer-parser.py',288),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','lexer-parser.py',289),
  ('estatuto -> lee','estatuto',1,'p_estatuto','lexer-parser.py',290),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','lexer-parser.py',291),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexer-parser.py',292),
  ('estatuto -> ciclow','estatuto',1,'p_estatuto','lexer-parser.py',293),
  ('estatuto -> ciclof','estatuto',1,'p_estatuto','lexer-parser.py',294),
  ('estatuto -> funcesp','estatuto',1,'p_estatuto','lexer-parser.py',295),
  ('estatuto -> return','estatuto',1,'p_estatuto','lexer-parser.py',296),
  ('estatuto -> copy','estatuto',1,'p_estatuto','lexer-parser.py',297),
  ('asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON','asign',6,'p_asign','lexer-parser.py',303),
  ('lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON','lee',6,'p_lee','lexer-parser.py',309),
  ('escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON','escribe',5,'p_escribe','lexer-parser.py',315),
  ('escribep -> exp pnCuadEscribe','escribep',2,'p_escribe','lexer-parser.py',316),
  ('escribep -> LETRERO pnCuadEscribe','escribep',2,'p_escribe','lexer-parser.py',317),
  ('return -> RETURNS exp SEMICOLON','return',3,'p_return','lexer-parser.py',323),
  ('exp -> exprel pnCuadOplog logic','exp',3,'p_exp','lexer-parser.py',329),
  ('logic -> logicsig exprel pnCuadOplog logic','logic',4,'p_exp','lexer-parser.py',330),
  ('logic -> empty','logic',1,'p_exp','lexer-parser.py',331),
  ('logicsig -> AND pnSaveOperadorLog','logicsig',2,'p_exp','lexer-parser.py',332),
  ('logicsig -> OR pnSaveOperadorLog','logicsig',2,'p_exp','lexer-parser.py',333),
  ('exprel -> e pnCuadOpRelacional relacionalp','exprel',3,'p_exprel','lexer-parser.py',339),
  ('relacionalp -> relsig e pnCuadOpRelacional relacionalp','relacionalp',4,'p_exprel','lexer-parser.py',340),
  ('relacionalp -> empty','relacionalp',1,'p_exprel','lexer-parser.py',341),
  ('relsig -> LESS_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',342),
  ('relsig -> GREATER_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',343),
  ('relsig -> EQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',344),
  ('relsig -> NOTEQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexer-parser.py',345),
  ('e -> t pnCuadPlMi tp','e',3,'p_e','lexer-parser.py',351),
  ('tp -> tsig t pnCuadPlMi tp','tp',4,'p_e','lexer-parser.py',352),
  ('tp -> empty','tp',1,'p_e','lexer-parser.py',353),
  ('tsig -> PLUS pnSaveOperadorPlMi','tsig',2,'p_e','lexer-parser.py',354),
  ('tsig -> MINUS pnSaveOperadorPlMi','tsig',2,'p_e','lexer-parser.py',355),
  ('t -> f pnCuadMuDi fp','t',3,'p_t','lexer-parser.py',361),
  ('fp -> fsig f pnCuadMuDi fp','fp',4,'p_t','lexer-parser.py',362),
  ('fp -> empty','fp',1,'p_t','lexer-parser.py',363),
  ('fsig -> MULT pnSaveOperadorMuDi','fsig',2,'p_t','lexer-parser.py',364),
  ('fsig -> DIV pnSaveOperadorMuDi','fsig',2,'p_t','lexer-parser.py',365),
  ('f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso','f',5,'p_f','lexer-parser.py',371),
  ('f -> CTEI pnSaveCteI pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',372),
  ('f -> CTEF pnSaveCteF pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',373),
  ('f -> CTEC pnSaveCteC pnSaveOperandoConstante','f',3,'p_f','lexer-parser.py',374),
  ('f -> variable','f',1,'p_f','lexer-parser.py',375),
  ('f -> llamada','f',1,'p_f','lexer-parser.py',376),
  ('f -> funcesp','f',1,'p_f','lexer-parser.py',377),
  ('condicion -> IF LEFT_PARENT exp RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop','condicion',9,'p_condicion','lexer-parser.py',383),
  ('falsop -> IF_FALSE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','falsop',4,'p_condicion','lexer-parser.py',384),
  ('falsop -> empty','falsop',1,'p_condicion','lexer-parser.py',385),
  ('ciclow -> WHILE LEFT_PARENT exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','ciclow',7,'p_ciclow','lexer-parser.py',391),
  ('ciclof -> FOR LEFT_PARENT asign exp RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','ciclof',8,'p_ciclof','lexer-parser.py',397),
  ('funcesp -> mean','funcesp',1,'p_funcesp','lexer-parser.py',403),
  ('funcesp -> mode','funcesp',1,'p_funcesp','lexer-parser.py',404),
  ('funcesp -> median','funcesp',1,'p_funcesp','lexer-parser.py',405),
  ('funcesp -> variance','funcesp',1,'p_funcesp','lexer-parser.py',406),
  ('funcesp -> max','funcesp',1,'p_funcesp','lexer-parser.py',407),
  ('funcesp -> min','funcesp',1,'p_funcesp','lexer-parser.py',408),
  ('funcesp -> staddes','funcesp',1,'p_funcesp','lexer-parser.py',409),
  ('funcesp -> boxplot','funcesp',1,'p_funcesp','lexer-parser.py',410),
  ('funcesp -> linreg','funcesp',1,'p_funcesp','lexer-parser.py',411),
  ('funcesp -> copy','funcesp',1,'p_funcesp','lexer-parser.py',412),
  ('mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mean',6,'p_mean','lexer-parser.py',418),
  ('mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mode',6,'p_mode','lexer-parser.py',424),
  ('median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','median',6,'p_median','lexer-parser.py',430),
  ('variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','variance',6,'p_variance','lexer-parser.py',436),
  ('max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','max',6,'p_max','lexer-parser.py',442),
  ('min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','min',6,'p_min','lexer-parser.py',448),
  ('staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','staddes',6,'p_staddes','lexer-parser.py',454),
  ('boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','boxplot',6,'p_boxplot','lexer-parser.py',460),
  ('linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','linreg',6,'p_linreg','lexer-parser.py',466),
  ('pnCrearDirFunc -> empty','pnCrearDirFunc',1,'p_pnCrearDirFunc','lexer-parser.py',476),
  ('pnScriptFuncDir -> empty','pnScriptFuncDir',1,'p_pnScriptFuncDir','lexer-parser.py',486),
  ('pnCheckTablaVar -> empty','pnCheckTablaVar',1,'p_pnCheckTablaVar','lexer-parser.py',495),
  ('pnSaveTypeVar -> empty','pnSaveTypeVar',1,'p_pnSaveTypeVar','lexer-parser.py',503),
  ('pnCheckNameTablaVar -> empty','pnCheckNameTablaVar',1,'p_pnCheckNameTablaVar','lexer-parser.py',512),
  ('pnAddFuncinDir -> empty','pnAddFuncinDir',1,'p_pnAddFuncinDir','lexer-parser.py',519),
  ('pnAddParametersTablaVar -> empty','pnAddParametersTablaVar',1,'p_pnAddParametersTablaVar','lexer-parser.py',533),
  ('pnCloseCurrentFunction -> empty','pnCloseCurrentFunction',1,'p_pnCloseCurrentFunction','lexer-parser.py',541),
  ('pnEndScript -> empty','pnEndScript',1,'p_pnEndScript','lexer-parser.py',550),
  ('pnSaveCteI -> empty','pnSaveCteI',1,'p_pnSaveCteI','lexer-parser.py',558),
  ('pnSaveCteF -> empty','pnSaveCteF',1,'p_pnSaveCteF','lexer-parser.py',565),
  ('pnSaveCteC -> empty','pnSaveCteC',1,'p_pnSaveCteC','lexer-parser.py',572),
  ('pnSaveFondoFalso -> empty','pnSaveFondoFalso',1,'p_pnSaveFondoFalso','lexer-parser.py',579),
  ('pnPopFondoFalso -> empty','pnPopFondoFalso',1,'p_pnPopFondoFalso','lexer-parser.py',586),
  ('pnSaveOperandos -> empty','pnSaveOperandos',1,'p_pnSaveOperandos','lexer-parser.py',596),
  ('pnSaveOperandoConstante -> empty','pnSaveOperandoConstante',1,'p_pnSaveOperandoConstante','lexer-parser.py',612),
  ('pnSaveOperadorPlMi -> empty','pnSaveOperadorPlMi',1,'p_pnSaveOperadorPlMi','lexer-parser.py',620),
  ('pnSaveOperadorMuDi -> empty','pnSaveOperadorMuDi',1,'p_pnSaveOperadorMuDi','lexer-parser.py',627),
  ('pnSaveOperadorRel -> empty','pnSaveOperadorRel',1,'p_pnSaveOperadorRel','lexer-parser.py',634),
  ('pnSaveOperadorLog -> empty','pnSaveOperadorLog',1,'p_pnSaveOperadorLog','lexer-parser.py',641),
  ('pnCuadPlMi -> empty','pnCuadPlMi',1,'p_pnCuadPlMi','lexer-parser.py',648),
  ('pnCuadMuDi -> empty','pnCuadMuDi',1,'p_pnCuadMuDi','lexer-parser.py',682),
  ('pnCuadOpRelacional -> empty','pnCuadOpRelacional',1,'p_pnCuadOpRelacional','lexer-parser.py',716),
  ('pnCuadOplog -> empty','pnCuadOplog',1,'p_pnCuadOplog','lexer-parser.py',751),
  ('pnSaveOperadorAsign -> empty','pnSaveOperadorAsign',1,'p_pnSaveOperadorAsign','lexer-parser.py',784),
  ('pnCuadAsign -> empty','pnCuadAsign',1,'p_pnCuadAsign','lexer-parser.py',791),
  ('pnCuadEscribe -> empty','pnCuadEscribe',1,'p_pnCuadEscribe','lexer-parser.py',817),
  ('pnCuadLee -> empty','pnCuadLee',1,'p_pnCuadLee','lexer-parser.py',847),
  ('pnCuadCopy -> empty','pnCuadCopy',1,'p_pnCuadCopy','lexer-parser.py',864),
  ('pnCuadFuncEsp -> empty','pnCuadFuncEsp',1,'p_pnCuadFuncEsp','lexer-parser.py',883),
  ('empty -> <empty>','empty',0,'p_empty','lexer-parser.py',926),
]


# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftMULTDIVAND ARROW ASIGN BOXPLOT CHAR COMMA COMMENT CTEC CTEF CTEI DATAFRAME DIV DO EQUALS FLOAT FOR FUNC GREATER_THAN ID IF IF_FALSE IF_TRUE INT LEFT_CUR_BRACKET LEFT_PARENT LEFT_SQR_BRACKET LESS_THAN LETRERO LINREG MAX MEAN MEDIAN MIN MINUS MODE MULT NOTEQUALS OR PLUS READ READ_FILE RETURNS RIGHT_CUR_BRACKET RIGHT_PARENT RIGHT_SQR_BRACKET SCRIPT SEMICOLON STADDES VAR VARIANCE VOID WHILE WRITE\n    programa : SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND\n    varp : var varp \n         | empty\n    funcp : func funcp \n          | empty\n    \n    bloque : DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript\n    estatutop : estatuto estatutop \n              | empty\n    \n    tipo_simp : INT pnSaveTypeVar\n              | FLOAT pnSaveTypeVar\n              | CHAR pnSaveTypeVar\n    \n    tipo_comp : DATAFRAME \n              | file\n    \n    copy : READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON\n    \n    file : ID\n    \n    variable : ID pnSaveOperandos indexp\n    indexp : LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop\n           | empty\n    indexpp : COMMA pnArrAccIncDim exp pnMatCalc\n            | empty pnArrCalc\n    \n    llamada : ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue\n    expp : exp pnCuadParametro exppp\n         | empty\n    exppp : COMMA pnUpdateK exp pnCuadParametro exppp\n          | empty\n    \n    var : VAR pnCheckTablaVar v ARROW idp SEMICOLON\n    v : DATAFRAME pnSaveTypeVar\n      | tipo_simp vp\n    vp : LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar\n       | empty\n    vpp : COMMA CTEI pnArrSaveLim1\n        | empty\n    idp : ID pnCheckNameTablaVar pnArrAddDim idpp\n    idpp : COMMA ID pnCheckNameTablaVar pnArrAddDim idpp\n         | empty\n    \n    func : FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction\n    returnval : tipo_simp\n              | VOID pnSaveTypeVar\n    \n    param : paramlist\n          | empty\n    paramlist : tipoparam ARROW ID pnAddParametersTablaVar paramlistp\n    tipoparam : tipo_simp\n              | DATAFRAME pnSaveTypeVar\n    paramlistp : COMMA paramlist\n               | empty\n    \n    estatuto : asign\n             | llamada\n             | lee\n             | escribe\n             | condicion\n             | ciclow\n             | ciclof\n             | funcesp\n             | return\n             | copy\n    \n    asign : variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON\n    \n    lee : READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON\n    \n    escribe :  WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON\n    escribep : exp pnCuadEscribe\n             | LETRERO pnCuadEscribe\n    \n    return : RETURNS exp pnCuadRet SEMICOLON\n    \n    exp : exprel pnCuadOplog logic\n    logic : logicsig exprel pnCuadOplog logic \n          | empty\n    logicsig : AND pnSaveOperadorLog\n             | OR pnSaveOperadorLog\n    \n    exprel : e pnCuadOpRelacional relacionalp\n    relacionalp : relsig e pnCuadOpRelacional relacionalp \n                | empty\n    relsig : LESS_THAN pnSaveOperadorRel\n           | GREATER_THAN pnSaveOperadorRel\n           | EQUALS pnSaveOperadorRel\n           | NOTEQUALS pnSaveOperadorRel\n    \n    e : t pnCuadPlMi tp\n    tp : tsig t pnCuadPlMi tp \n       | empty\n    tsig : PLUS pnSaveOperadorPlMi\n         | MINUS pnSaveOperadorPlMi\n    \n    t : f pnCuadMuDi fp\n    fp : fsig f pnCuadMuDi fp \n       | empty\n    fsig : MULT pnSaveOperadorMuDi\n         | DIV pnSaveOperadorMuDi\n    \n    f : LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso\n      | CTEI pnSaveCteI  pnSaveOperandoConstante\n      | CTEF pnSaveCteF pnSaveOperandoConstante\n      | CTEC pnSaveCteC pnSaveOperandoConstante\n      | variable\n      | llamada\n      | funcesp\n    \n    condicion : IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf\n    falsop : IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET \n           | empty\n    \n    ciclow : WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile\n    \n    ciclof : FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor\n    \n    funcesp : mean\n            | mode\n            | median\n            | variance\n            | max\n            | min\n            | staddes\n            | boxplot\n            | linreg\n            | copy\n    \n    mean : MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    mode : MODE LEFT_PARENT variable  pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    median : MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    variance : VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    max : MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    min : MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    staddes : STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    boxplot : BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    linreg : LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON\n    \n    pnCrearDirFunc : empty\n    \n    pnCuadGotoMain : empty\n    \n    pnDirMain : empty\n    \n    pnScriptFuncDir : empty\n    \n    pnCheckTablaVar : empty\n    \n    pnCrearListaParam : empty\n    \n    pnSaveTypeVar : empty\n    \n    pnCheckNameTablaVar : empty\n    \n    pnAddFuncinDir : empty\n    \n    pnAddParametersTablaVar : empty\n    \n    pnCountVarsINTOResources : empty\n    \n    pnDirecIniFunc : empty\n    \n    pnCloseCurrentFunction : empty\n    \n    pnEndScript : empty\n    \n    pnCheckFunc : empty\n    \n    pnGenerateEra : empty\n    \n    pnCuadParametro : empty\n    \n    pnUpdateK : empty\n    \n    pnCheckNoParam : empty\n    \n    pnCuadGoSub : empty\n    \n    pnHandleReturnValue : empty\n    \n    pnCuadRet : empty\n    \n    pnSaveCteI : empty\n    \n    pnSaveCteF : empty\n    \n    pnSaveCteC : empty\n    \n    pnSaveFondoFalso : empty\n    \n    pnPopFondoFalso : empty\n    \n    pnSaveOperandos : empty\n    \n    pnSaveOperandoConstante : empty\n    \n    pnSaveOperadorPlMi : empty\n    \n    pnSaveOperadorMuDi : empty\n    \n    pnSaveOperadorRel : empty\n    \n    pnSaveOperadorLog : empty\n    \n    pnCuadPlMi : empty\n    \n    pnCuadMuDi : empty\n    \n    pnCuadOpRelacional : empty\n    \n    pnCuadOplog : empty\n    \n    pnSaveOperadorAsign : empty\n    \n    pnCuadAsign : empty\n    \n    pnCuadEscribe : empty\n    \n    pnCuadLee : empty\n    \n    pnCuadCopy : empty\n    \n    pnCuadFuncEsp : empty\n    \n    pnCheckBoolIf : empty\n    \n    pnElseIf : empty\n    \n    pnEndIf : empty\n    \n    pnSaveWhile : empty\n    \n    pnEndWhile : empty\n    \n    pnSaveForID : empty\n    \n    pnCreateVControl : empty\n    \n    pnCompControlFinal : empty\n    \n    pnEndFor : empty\n    \n    pnArrCreateNode : empty\n    \n    pnArrSaveLim1 : empty\n    \n    pnArrCuadriplificar : empty\n    \n    pnArrAddDim : empty\n    \n    pnArrIni : empty\n    \n    pnArrVerify : empty\n    \n    pnArrAccIncDim : empty\n    \n    pnArrCalc : empty\n    \n    pnMatCalc : empty\n    \n    pnArrFFPop : empty\n    \n    pnCuadEND : empty\n    \n    empty :'
    
_lr_action_items = {'SCRIPT':([0,],[2,]),'$end':([1,22,34,35,115,156,157,],[0,-178,-1,-177,-178,-6,-128,]),'ID':([2,3,4,12,13,16,17,19,24,38,44,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,110,117,121,122,123,126,132,142,143,144,145,146,147,148,149,150,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,269,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,5,-115,-178,-3,-178,-5,-2,-4,50,52,-178,-178,-26,82,82,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,139,153,-178,165,139,139,171,-178,165,165,165,165,165,165,165,165,165,139,-152,-178,-178,139,139,-140,139,-130,139,-171,-61,139,-178,-178,139,-178,-178,-178,-178,139,-178,-178,139,-178,-178,313,-58,139,-65,-147,-66,-70,-146,-71,-72,-73,-77,-144,-78,-82,-145,-83,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,-178,-178,82,82,82,-126,-178,139,-132,139,-173,139,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,82,82,-92,-178,-95,-166,]),'SEMICOLON':([5,6,7,8,9,51,52,59,60,64,65,88,89,90,91,92,93,94,95,96,109,111,119,127,128,129,130,131,133,134,135,136,137,138,139,140,153,161,163,172,173,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,207,211,219,229,231,234,236,241,243,246,248,252,253,254,255,271,272,273,278,283,287,293,297,301,302,303,304,305,306,307,308,309,310,311,314,316,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,344,345,356,357,358,359,365,368,378,379,381,382,388,389,],[-178,-178,-118,10,-116,58,-178,-178,-122,-178,-170,-96,-97,-98,-99,-100,-101,-102,-103,-104,-33,-35,-178,-178,-178,-178,-178,-178,-178,-178,-178,-88,-89,-90,-178,-105,-178,-16,-18,228,-136,-178,-151,-178,-150,-178,-148,-178,-149,-178,-137,-178,-138,-178,-139,-142,-178,-178,279,-62,-64,-67,-69,-74,-76,-79,-81,-85,-143,-86,-87,-178,315,-153,321,-178,-178,-178,-178,-178,331,332,333,334,335,336,337,338,339,340,-34,-178,-178,-178,-178,-178,-84,-141,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,365,-133,-63,-68,-75,-80,-178,-178,-178,-134,-17,-176,-21,-135,]),'VAR':([10,12,49,58,312,],[14,14,14,-26,14,]),'FUNC':([10,11,12,13,16,19,49,55,58,387,400,401,408,409,],[-178,18,-178,-3,18,-2,-178,18,-26,-178,-178,-125,-36,-127,]),'DO':([10,11,12,13,15,16,17,19,24,58,387,400,401,408,409,],[-178,-178,-178,-3,23,-178,-5,-2,-4,-26,-178,-178,-125,-36,-127,]),'READ':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,228,279,312,315,321,331,332,333,334,335,336,337,338,339,340,341,352,353,360,361,365,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,83,83,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,83,83,83,-126,-178,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,83,83,-92,-178,-95,-166,]),'WRITE':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,228,279,312,315,321,331,332,333,334,335,336,337,338,339,340,341,352,353,360,361,365,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,84,84,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,84,84,84,-126,-178,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,84,84,-92,-178,-95,-166,]),'IF':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,228,279,312,315,321,331,332,333,334,335,336,337,338,339,340,341,352,353,360,361,365,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,85,85,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,85,85,85,-126,-178,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,85,85,-92,-178,-95,-166,]),'WHILE':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,228,279,312,315,321,331,332,333,334,335,336,337,338,339,340,341,352,353,360,361,365,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,86,86,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,86,86,86,-126,-178,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,86,86,-92,-178,-95,-166,]),'FOR':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,228,279,312,315,321,331,332,333,334,335,336,337,338,339,340,341,352,353,360,361,365,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,87,87,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,87,87,87,-126,-178,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,87,87,-92,-178,-95,-166,]),'RETURNS':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,228,279,312,315,321,331,332,333,334,335,336,337,338,339,340,341,352,353,360,361,365,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,97,97,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-61,-58,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,97,97,97,-126,-178,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,97,97,-92,-178,-95,-166,]),'READ_FILE':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,98,98,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,98,-178,98,98,-178,98,-152,-178,-178,98,98,-140,98,-130,98,-171,-61,98,-178,-178,98,-178,-178,-178,-178,98,-178,-178,98,-178,-178,-58,98,-65,-147,-66,-70,-146,-71,-72,-73,-77,-144,-78,-82,-145,-83,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,-178,-178,98,98,98,-126,-178,98,-132,98,-173,98,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,98,98,-92,-178,-95,-166,]),'MEAN':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,99,99,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,99,-178,99,99,-178,99,-152,-178,-178,99,99,-140,99,-130,99,-171,-61,99,-178,-178,99,-178,-178,-178,-178,99,-178,-178,99,-178,-178,-58,99,-65,-147,-66,-70,-146,-71,-72,-73,-77,-144,-78,-82,-145,-83,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,-178,-178,99,99,99,-126,-178,99,-132,99,-173,99,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,99,99,-92,-178,-95,-166,]),'MODE':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,100,100,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,100,-178,100,100,-178,100,-152,-178,-178,100,100,-140,100,-130,100,-171,-61,100,-178,-178,100,-178,-178,-178,-178,100,-178,-178,100,-178,-178,-58,100,-65,-147,-66,-70,-146,-71,-72,-73,-77,-144,-78,-82,-145,-83,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,-178,-178,100,100,100,-126,-178,100,-132,100,-173,100,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,100,100,-92,-178,-95,-166,]),'MEDIAN':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,101,101,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,101,-178,101,101,-178,101,-152,-178,-178,101,101,-140,101,-130,101,-171,-61,101,-178,-178,101,-178,-178,-178,-178,101,-178,-178,101,-178,-178,-58,101,-65,-147,-66,-70,-146,-71,-72,-73,-77,-144,-78,-82,-145,-83,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,-178,-178,101,101,101,-126,-178,101,-132,101,-173,101,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,101,101,-92,-178,-95,-166,]),'VARIANCE':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,102,102,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,102,-178,102,102,-178,102,-152,-178,-178,102,102,-140,102,-130,102,-171,-61,102,-178,-178,102,-178,-178,-178,-178,102,-178,-178,102,-178,-178,-58,102,-65,-147,-66,-70,-146,-71,-72,-73,-77,-144,-78,-82,-145,-83,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,-178,-178,102,102,102,-126,-178,102,-132,102,-173,102,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,102,102,-92,-178,-95,-166,]),'MAX':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,103,103,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,103,-178,103,103,-178,103,-152,-178,-178,103,103,-140,103,-130,103,-171,-61,103,-178,-178,103,-178,-178,-178,-178,103,-178,-178,103,-178,-178,-58,103,-65,-147,-66,-70,-146,-71,-72,-73,-77,-144,-78,-82,-145,-83,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,-178,-178,103,103,103,-126,-178,103,-132,103,-173,103,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,103,103,-92,-178,-95,-166,]),'MIN':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,104,104,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,104,-178,104,104,-178,104,-152,-178,-178,104,104,-140,104,-130,104,-171,-61,104,-178,-178,104,-178,-178,-178,-178,104,-178,-178,104,-178,-178,-58,104,-65,-147,-66,-70,-146,-71,-72,-73,-77,-144,-78,-82,-145,-83,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,-178,-178,104,104,104,-126,-178,104,-132,104,-173,104,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,104,104,-92,-178,-95,-166,]),'STADDES':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,105,105,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,105,-178,105,105,-178,105,-152,-178,-178,105,105,-140,105,-130,105,-171,-61,105,-178,-178,105,-178,-178,-178,-178,105,-178,-178,105,-178,-178,-58,105,-65,-147,-66,-70,-146,-71,-72,-73,-77,-144,-78,-82,-145,-83,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,-178,-178,105,105,105,-126,-178,105,-132,105,-173,105,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,105,105,-92,-178,-95,-166,]),'BOXPLOT':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,106,106,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,106,-178,106,106,-178,106,-152,-178,-178,106,106,-140,106,-130,106,-171,-61,106,-178,-178,106,-178,-178,-178,-178,106,-178,-178,106,-178,-178,-58,106,-65,-147,-66,-70,-146,-71,-72,-73,-77,-144,-78,-82,-145,-83,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,-178,-178,106,106,106,-126,-178,106,-132,106,-173,106,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,106,106,-92,-178,-95,-166,]),'LINREG':([12,13,16,17,19,24,49,55,58,62,69,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,228,230,232,233,235,237,238,239,240,242,244,245,247,249,250,279,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,312,315,321,331,332,333,334,335,336,337,338,339,340,341,347,350,352,353,360,361,365,366,367,369,370,375,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,107,107,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,107,-178,107,107,-178,107,-152,-178,-178,107,107,-140,107,-130,107,-171,-61,107,-178,-178,107,-178,-178,-178,-178,107,-178,-178,107,-178,-178,-58,107,-65,-147,-66,-70,-146,-71,-72,-73,-77,-144,-78,-82,-145,-83,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,-178,-178,107,107,107,-126,-178,107,-132,107,-173,107,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,107,107,-92,-178,-95,-166,]),'RIGHT_CUR_BRACKET':([12,13,16,17,19,24,49,55,58,62,68,69,70,71,72,73,74,75,76,77,78,79,80,88,89,90,91,92,93,94,95,96,116,228,279,312,315,321,331,332,333,334,335,336,337,338,339,340,341,352,353,360,361,365,373,374,376,378,379,384,385,387,388,389,393,395,396,397,400,401,403,404,408,409,410,411,412,413,414,415,416,417,],[-178,-3,-178,-5,-2,-4,-178,-178,-26,-178,115,-178,-8,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-96,-97,-98,-99,-100,-101,-102,-103,-104,-7,-61,-58,-178,-56,-57,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,-178,-178,-178,-126,-178,384,385,387,-178,-134,-178,-178,-178,-21,-135,-178,-93,-94,-162,-178,-125,-91,-160,-36,-127,-178,-178,414,415,-92,-178,-95,-166,]),'DATAFRAME':([14,20,21,63,108,151,152,363,],[-178,32,-119,-178,-178,206,-120,206,]),'INT':([14,18,20,21,63,108,151,152,363,],[-178,28,28,-119,-178,-178,28,-120,28,]),'FLOAT':([14,18,20,21,63,108,151,152,363,],[-178,29,29,-119,-178,-178,29,-120,29,]),'CHAR':([14,18,20,21,63,108,151,152,363,],[-178,30,30,-119,-178,-178,30,-120,30,]),'VOID':([18,],[27,]),'RIGHT_PARENT':([21,63,88,89,90,91,92,93,94,95,96,108,119,128,129,130,131,133,134,135,136,137,138,139,140,151,152,160,161,163,164,165,166,167,168,169,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,212,213,216,217,218,220,221,222,223,224,225,229,231,234,236,241,243,246,248,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,274,275,276,281,283,287,293,297,301,313,317,318,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,342,343,346,348,356,357,358,359,362,364,365,368,377,378,379,380,381,382,386,388,389,390,398,399,402,],[-119,-178,-96,-97,-98,-99,-100,-101,-102,-103,-104,-178,-178,-178,-178,-178,-178,-178,-178,-178,-88,-89,-90,-178,-105,-178,-120,-178,-16,-18,-178,-178,219,-178,-178,-178,-178,-151,-178,-150,-178,-148,-178,-149,-178,-137,-178,-138,-178,-139,-142,-178,-178,-178,-178,-178,-178,-178,-178,-178,-178,268,-39,-40,-178,-130,278,-155,-142,-59,-154,-60,280,-158,-178,-62,-64,-67,-69,-74,-76,-79,-81,301,-85,-143,-86,-87,302,-156,303,-157,304,305,306,307,308,309,310,311,316,-178,-23,323,-178,-178,-178,-178,-178,-178,-178,-131,-178,-178,-178,-178,-84,-141,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,-124,-22,-25,-63,-68,-75,-80,-41,-45,-178,-178,-44,-178,-134,-178,-17,-176,-178,-21,-135,-178,407,-165,-24,]),'LEFT_CUR_BRACKET':([23,36,37,268,322,323,394,405,406,407,],[-178,49,-117,312,352,353,-178,410,-159,411,]),'ARROW':([25,26,27,28,29,30,31,32,33,39,40,41,42,43,45,46,48,154,204,205,206,208,209,270,],[38,-37,-178,-178,-178,-178,44,-178,-178,-38,-121,-9,-10,-11,-27,-28,-30,-178,269,-42,-178,-29,-169,-43,]),'LEFT_SQR_BRACKET':([28,29,30,33,40,41,42,43,82,119,120,139,165,190,218,],[-178,-178,-178,47,-121,-9,-10,-11,-178,162,-142,-178,-178,-142,-142,]),'CTEI':([47,53,54,97,113,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,230,232,233,235,237,238,239,240,242,244,245,247,249,250,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,347,350,366,367,369,370,375,],[-178,61,-167,133,155,-178,133,133,-178,133,-152,-178,-178,133,133,-140,133,-130,133,-171,133,-178,-178,133,-178,-178,-178,-178,133,-178,-178,133,-178,-178,133,-65,-147,-66,-70,-146,-71,-72,-73,-77,-144,-78,-82,-145,-83,-178,-178,133,-132,133,-173,133,]),'LEFT_PARENT':([50,56,57,82,83,84,85,86,87,97,98,99,100,101,102,103,104,105,106,107,117,118,120,122,123,124,125,132,139,158,159,160,162,170,182,183,190,212,213,214,215,230,232,233,235,237,238,239,240,242,244,245,247,249,250,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,347,350,366,367,369,370,375,],[-178,63,-123,-178,121,122,123,-178,126,132,141,142,143,144,145,146,147,148,149,150,-178,160,-129,132,132,170,-161,-178,-178,132,-152,-178,-178,132,132,-140,-129,132,-130,132,-171,132,-178,-178,132,-178,-178,-178,-178,132,-178,-178,132,-178,-178,132,-65,-147,-66,-70,-146,-71,-72,-73,-77,-144,-78,-82,-145,-83,-178,-178,132,-132,132,-173,132,]),'COMMA':([52,59,60,61,64,65,66,67,88,89,90,91,92,93,94,95,96,119,128,129,130,131,133,134,135,136,137,138,139,140,153,161,163,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,207,229,231,234,236,241,243,246,248,252,253,254,255,271,275,277,283,287,293,297,301,313,317,318,319,320,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,342,343,354,355,356,357,358,359,365,368,378,379,380,381,382,388,389,390,],[-178,-178,-122,-178,110,-170,113,-168,-96,-97,-98,-99,-100,-101,-102,-103,-104,-178,-178,-178,-178,-178,-178,-178,-178,-88,-89,-90,-178,-105,-178,-16,-18,-178,-151,-178,-150,-178,-148,-178,-149,-178,-137,-178,-138,-178,-139,-142,-178,-62,-64,-67,-69,-74,-76,-79,-81,-85,-143,-86,-87,110,-178,-178,-178,-178,-178,-178,-178,-178,347,-131,350,-172,-178,-178,-178,-178,-178,-84,-141,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,363,-124,375,-164,-63,-68,-75,-80,-178,-178,-178,-134,-178,-17,-176,-21,-135,347,]),'RIGHT_SQR_BRACKET':([61,66,67,88,89,90,91,92,93,94,95,96,112,114,119,128,129,130,131,133,134,135,136,137,138,139,140,155,161,163,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,210,229,231,234,236,241,243,246,248,252,253,254,255,277,283,287,293,297,301,319,320,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,349,351,356,357,358,359,365,368,371,372,378,379,381,382,383,388,389,391,392,],[-178,-178,-168,-96,-97,-98,-99,-100,-101,-102,-103,-104,154,-32,-178,-178,-178,-178,-178,-178,-178,-178,-88,-89,-90,-178,-105,-178,-16,-18,-178,-151,-178,-150,-178,-148,-178,-149,-178,-137,-178,-138,-178,-139,-142,-31,-62,-64,-67,-69,-74,-76,-79,-81,-85,-143,-86,-87,-178,-178,-178,-178,-178,-178,-178,-172,-178,-178,-178,-178,-84,-141,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,368,-178,-63,-68,-75,-80,-178,-178,-174,-20,-178,-134,-17,-176,-178,-21,-135,-19,-175,]),'ASIGN':([81,82,119,120,161,163,171,226,227,368,381,382,],[117,-178,-178,-142,-16,-18,-178,282,-163,-178,-17,-176,]),'MULT':([88,89,90,91,92,93,94,95,96,119,131,133,134,135,136,137,138,139,140,161,163,180,181,184,185,186,187,188,189,190,252,253,254,255,297,301,328,329,330,331,332,333,334,335,336,337,338,339,340,365,368,378,379,381,382,388,389,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-178,-178,-178,-178,-178,-88,-89,-90,-178,-105,-16,-18,249,-149,-178,-137,-178,-138,-178,-139,-142,-85,-143,-86,-87,-178,-178,249,-84,-141,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,-178,-178,-134,-17,-176,-21,-135,]),'DIV':([88,89,90,91,92,93,94,95,96,119,131,133,134,135,136,137,138,139,140,161,163,180,181,184,185,186,187,188,189,190,252,253,254,255,297,301,328,329,330,331,332,333,334,335,336,337,338,339,340,365,368,378,379,381,382,388,389,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-178,-178,-178,-178,-178,-88,-89,-90,-178,-105,-16,-18,250,-149,-178,-137,-178,-138,-178,-139,-142,-85,-143,-86,-87,-178,-178,250,-84,-141,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-178,-178,-178,-134,-17,-176,-21,-135,]),'PLUS':([88,89,90,91,92,93,94,95,96,119,130,131,133,134,135,136,137,138,139,140,161,163,178,179,180,181,184,185,186,187,188,189,190,246,248,252,253,254,255,293,297,301,327,328,329,330,331,332,333,334,335,336,337,338,339,340,359,365,368,378,379,381,382,388,389,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-178,-178,-178,-178,-178,-178,-88,-89,-90,-178,-105,-16,-18,244,-148,-178,-149,-178,-137,-178,-138,-178,-139,-142,-79,-81,-85,-143,-86,-87,-178,-178,-178,244,-178,-84,-141,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-80,-178,-178,-178,-134,-17,-176,-21,-135,]),'MINUS':([88,89,90,91,92,93,94,95,96,119,130,131,133,134,135,136,137,138,139,140,161,163,178,179,180,181,184,185,186,187,188,189,190,246,248,252,253,254,255,293,297,301,327,328,329,330,331,332,333,334,335,336,337,338,339,340,359,365,368,378,379,381,382,388,389,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-178,-178,-178,-178,-178,-178,-88,-89,-90,-178,-105,-16,-18,245,-148,-178,-149,-178,-137,-178,-138,-178,-139,-142,-79,-81,-85,-143,-86,-87,-178,-178,-178,245,-178,-84,-141,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-80,-178,-178,-178,-134,-17,-176,-21,-135,]),'LESS_THAN':([88,89,90,91,92,93,94,95,96,119,129,130,131,133,134,135,136,137,138,139,140,161,163,176,177,178,179,180,181,184,185,186,187,188,189,190,241,243,246,248,252,253,254,255,287,293,297,301,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,358,359,365,368,378,379,381,382,388,389,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-178,-178,-178,-178,-178,-178,-178,-88,-89,-90,-178,-105,-16,-18,237,-150,-178,-148,-178,-149,-178,-137,-178,-138,-178,-139,-142,-74,-76,-79,-81,-85,-143,-86,-87,-178,-178,-178,-178,237,-178,-178,-84,-141,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,-178,-178,-178,-134,-17,-176,-21,-135,]),'GREATER_THAN':([88,89,90,91,92,93,94,95,96,119,129,130,131,133,134,135,136,137,138,139,140,161,163,176,177,178,179,180,181,184,185,186,187,188,189,190,241,243,246,248,252,253,254,255,287,293,297,301,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,358,359,365,368,378,379,381,382,388,389,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-178,-178,-178,-178,-178,-178,-178,-88,-89,-90,-178,-105,-16,-18,238,-150,-178,-148,-178,-149,-178,-137,-178,-138,-178,-139,-142,-74,-76,-79,-81,-85,-143,-86,-87,-178,-178,-178,-178,238,-178,-178,-84,-141,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,-178,-178,-178,-134,-17,-176,-21,-135,]),'EQUALS':([88,89,90,91,92,93,94,95,96,119,129,130,131,133,134,135,136,137,138,139,140,161,163,176,177,178,179,180,181,184,185,186,187,188,189,190,241,243,246,248,252,253,254,255,287,293,297,301,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,358,359,365,368,378,379,381,382,388,389,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-178,-178,-178,-178,-178,-178,-178,-88,-89,-90,-178,-105,-16,-18,239,-150,-178,-148,-178,-149,-178,-137,-178,-138,-178,-139,-142,-74,-76,-79,-81,-85,-143,-86,-87,-178,-178,-178,-178,239,-178,-178,-84,-141,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,-178,-178,-178,-134,-17,-176,-21,-135,]),'NOTEQUALS':([88,89,90,91,92,93,94,95,96,119,129,130,131,133,134,135,136,137,138,139,140,161,163,176,177,178,179,180,181,184,185,186,187,188,189,190,241,243,246,248,252,253,254,255,287,293,297,301,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,358,359,365,368,378,379,381,382,388,389,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-178,-178,-178,-178,-178,-178,-178,-88,-89,-90,-178,-105,-16,-18,240,-150,-178,-148,-178,-149,-178,-137,-178,-138,-178,-139,-142,-74,-76,-79,-81,-85,-143,-86,-87,-178,-178,-178,-178,240,-178,-178,-84,-141,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-75,-80,-178,-178,-178,-134,-17,-176,-21,-135,]),'AND':([88,89,90,91,92,93,94,95,96,119,128,129,130,131,133,134,135,136,137,138,139,140,161,163,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,234,236,241,243,246,248,252,253,254,255,283,287,293,297,301,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,357,358,359,365,368,378,379,381,382,388,389,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-178,-178,-178,-178,-178,-178,-178,-178,-88,-89,-90,-178,-105,-16,-18,232,-151,-178,-150,-178,-148,-178,-149,-178,-137,-178,-138,-178,-139,-142,-67,-69,-74,-76,-79,-81,-85,-143,-86,-87,-178,-178,-178,-178,-178,232,-178,-178,-178,-84,-141,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-68,-75,-80,-178,-178,-178,-134,-17,-176,-21,-135,]),'OR':([88,89,90,91,92,93,94,95,96,119,128,129,130,131,133,134,135,136,137,138,139,140,161,163,174,175,176,177,178,179,180,181,184,185,186,187,188,189,190,234,236,241,243,246,248,252,253,254,255,283,287,293,297,301,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,357,358,359,365,368,378,379,381,382,388,389,],[-96,-97,-98,-99,-100,-101,-102,-103,-104,-178,-178,-178,-178,-178,-178,-178,-178,-88,-89,-90,-178,-105,-16,-18,233,-151,-178,-150,-178,-148,-178,-149,-178,-137,-178,-138,-178,-139,-142,-67,-69,-74,-76,-79,-81,-85,-143,-86,-87,-178,-178,-178,-178,-178,233,-178,-178,-178,-84,-141,-14,-106,-107,-108,-109,-110,-111,-112,-113,-114,-68,-75,-80,-178,-178,-178,-134,-17,-176,-21,-135,]),'CTEF':([97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,230,232,233,235,237,238,239,240,242,244,245,247,249,250,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,347,350,366,367,369,370,375,],[134,-178,134,134,-178,134,-152,-178,-178,134,134,-140,134,-130,134,-171,134,-178,-178,134,-178,-178,-178,-178,134,-178,-178,134,-178,-178,134,-65,-147,-66,-70,-146,-71,-72,-73,-77,-144,-78,-82,-145,-83,-178,-178,134,-132,134,-173,134,]),'CTEC':([97,117,122,123,132,158,159,160,162,170,182,183,212,213,214,215,230,232,233,235,237,238,239,240,242,244,245,247,249,250,282,284,285,286,288,289,290,291,292,294,295,296,298,299,300,347,350,366,367,369,370,375,],[135,-178,135,135,-178,135,-152,-178,-178,135,135,-140,135,-130,135,-171,135,-178,-178,135,-178,-178,-178,-178,135,-178,-178,135,-178,-178,135,-65,-147,-66,-70,-146,-71,-72,-73,-77,-144,-78,-82,-145,-83,-178,-178,135,-132,135,-173,135,]),'LETRERO':([122,141,],[168,191,]),'IF_TRUE':([280,],[322,]),'IF_FALSE':([384,],[394,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'pnCrearDirFunc':([2,],[3,]),'empty':([2,5,6,10,11,12,14,16,22,23,27,28,29,30,32,33,47,49,50,52,55,59,61,62,63,64,66,69,82,86,108,115,117,119,127,128,129,130,131,132,133,134,135,139,151,153,154,155,160,162,164,165,167,168,169,171,174,176,178,180,184,186,188,191,192,193,194,195,196,197,198,199,200,206,207,211,212,225,232,233,237,238,239,240,244,245,249,250,271,275,277,283,287,293,297,301,312,313,316,317,319,324,325,326,327,328,341,342,347,350,351,352,353,360,365,368,378,380,383,384,385,386,387,390,393,394,400,410,411,415,],[4,7,9,13,17,13,21,17,35,37,40,40,40,40,40,48,54,13,57,60,17,65,67,70,21,111,114,70,120,125,152,157,159,163,173,175,177,179,181,183,185,187,189,190,203,60,209,67,213,215,217,218,221,221,224,227,231,236,243,248,253,253,253,257,259,259,259,259,259,259,259,259,259,40,65,273,276,224,285,285,289,289,289,289,295,295,299,299,111,318,320,175,177,179,181,330,13,343,345,348,351,355,231,236,243,248,361,364,367,370,371,70,70,70,379,382,389,318,392,395,397,399,401,348,404,406,409,70,70,417,]),'pnScriptFuncDir':([5,],[6,]),'pnCuadGotoMain':([6,],[8,]),'varp':([10,12,49,312,],[11,19,55,341,]),'var':([10,12,49,312,],[12,12,12,12,]),'funcp':([11,16,55,],[15,24,62,]),'func':([11,16,55,],[16,16,16,]),'pnCheckTablaVar':([14,63,],[20,108,]),'bloque':([15,],[22,]),'returnval':([18,],[25,]),'tipo_simp':([18,20,151,363,],[26,33,205,205,]),'v':([20,],[31,]),'pnCuadEND':([22,],[34,]),'pnDirMain':([23,],[36,]),'pnSaveTypeVar':([27,28,29,30,32,206,],[39,41,42,43,45,270,]),'vp':([33,],[46,]),'idp':([44,],[51,]),'pnArrCreateNode':([47,],[53,]),'pnAddFuncinDir':([50,],[56,]),'pnCheckNameTablaVar':([52,153,],[59,207,]),'pnArrAddDim':([59,207,],[64,271,]),'pnArrSaveLim1':([61,155,],[66,210,]),'estatutop':([62,69,352,353,360,410,411,],[68,116,373,374,376,412,413,]),'estatuto':([62,69,352,353,360,410,411,],[69,69,69,69,69,69,69,]),'asign':([62,69,352,353,360,410,411,],[71,71,71,71,71,71,71,]),'llamada':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[72,72,137,137,137,137,137,137,137,137,137,137,137,137,137,72,72,72,137,137,137,72,72,]),'lee':([62,69,352,353,360,410,411,],[73,73,73,73,73,73,73,]),'escribe':([62,69,352,353,360,410,411,],[74,74,74,74,74,74,74,]),'condicion':([62,69,352,353,360,410,411,],[75,75,75,75,75,75,75,]),'ciclow':([62,69,352,353,360,410,411,],[76,76,76,76,76,76,76,]),'ciclof':([62,69,352,353,360,410,411,],[77,77,77,77,77,77,77,]),'funcesp':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[78,78,138,138,138,138,138,138,138,138,138,138,138,138,138,78,78,78,138,138,138,78,78,]),'return':([62,69,352,353,360,410,411,],[79,79,79,79,79,79,79,]),'copy':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[80,80,140,140,140,140,140,140,140,140,140,140,140,140,140,80,80,80,140,140,140,80,80,]),'variable':([62,69,97,121,122,123,142,143,144,145,146,147,148,149,150,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[81,81,136,164,136,136,192,193,194,195,196,197,198,199,200,136,136,136,136,136,136,136,136,136,136,81,81,81,136,136,136,81,81,]),'mean':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,]),'mode':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,]),'median':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,]),'variance':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'max':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'min':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,]),'staddes':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,]),'boxplot':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,95,]),'linreg':([62,69,97,122,123,158,170,182,212,214,230,235,242,247,282,352,353,360,366,369,375,410,411,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'idpp':([64,271,],[109,314,]),'vpp':([66,],[112,]),'pnCheckFunc':([82,139,],[118,118,]),'pnSaveOperandos':([82,139,165,],[119,119,119,]),'pnSaveWhile':([86,],[124,]),'exp':([97,122,123,158,170,182,212,214,282,366,369,375,],[127,167,169,211,225,251,275,277,324,380,383,386,]),'exprel':([97,122,123,158,170,182,212,214,230,282,366,369,375,],[128,128,128,128,128,128,128,128,283,128,128,128,128,]),'e':([97,122,123,158,170,182,212,214,230,235,282,366,369,375,],[129,129,129,129,129,129,129,129,129,287,129,129,129,129,]),'t':([97,122,123,158,170,182,212,214,230,235,242,282,366,369,375,],[130,130,130,130,130,130,130,130,130,130,293,130,130,130,130,]),'f':([97,122,123,158,170,182,212,214,230,235,242,247,282,366,369,375,],[131,131,131,131,131,131,131,131,131,131,131,297,131,131,131,131,]),'pnCrearListaParam':([108,],[151,]),'pnEndScript':([115,],[156,]),'pnSaveOperadorAsign':([117,],[158,]),'indexp':([119,],[161,]),'escribep':([122,],[166,]),'pnCuadRet':([127,],[172,]),'pnCuadOplog':([128,283,],[174,325,]),'pnCuadOpRelacional':([129,287,],[176,326,]),'pnCuadPlMi':([130,293,],[178,327,]),'pnCuadMuDi':([131,297,],[180,328,]),'pnSaveFondoFalso':([132,],[182,]),'pnSaveCteI':([133,],[184,]),'pnSaveCteF':([134,],[186,]),'pnSaveCteC':([135,],[188,]),'param':([151,],[201,]),'paramlist':([151,363,],[202,377,]),'tipoparam':([151,363,],[204,204,]),'pnArrCuadriplificar':([154,],[208,]),'pnGenerateEra':([160,],[212,]),'pnArrIni':([162,],[214,]),'pnCuadLee':([164,],[216,]),'pnCuadEscribe':([167,168,],[220,222,]),'pnCheckBoolIf':([169,225,],[223,281,]),'pnSaveForID':([171,],[226,]),'logic':([174,325,],[229,356,]),'logicsig':([174,325,],[230,230,]),'relacionalp':([176,326,],[234,357,]),'relsig':([176,326,],[235,235,]),'tp':([178,327,],[241,358,]),'tsig':([178,327,],[242,242,]),'fp':([180,328,],[246,359,]),'fsig':([180,328,],[247,247,]),'pnSaveOperandoConstante':([184,186,188,],[252,254,255,]),'pnCuadCopy':([191,],[256,]),'pnCuadFuncEsp':([192,193,194,195,196,197,198,199,200,],[258,260,261,262,263,264,265,266,267,]),'pnCuadAsign':([211,],[272,]),'expp':([212,],[274,]),'pnSaveOperadorLog':([232,233,],[284,286,]),'pnSaveOperadorRel':([237,238,239,240,],[288,290,291,292,]),'pnSaveOperadorPlMi':([244,245,],[294,296,]),'pnSaveOperadorMuDi':([249,250,],[298,300,]),'pnCuadParametro':([275,380,],[317,390,]),'pnArrVerify':([277,],[319,]),'pnPopFondoFalso':([301,],[329,]),'pnAddParametersTablaVar':([313,],[342,]),'pnCheckNoParam':([316,],[344,]),'exppp':([317,390,],[346,402,]),'indexpp':([319,],[349,]),'pnCreateVControl':([324,],[354,]),'pnDirecIniFunc':([341,],[360,]),'paramlistp':([342,],[362,]),'pnUpdateK':([347,],[366,]),'pnArrAccIncDim':([350,],[369,]),'pnArrCalc':([351,],[372,]),'pnCuadGoSub':([365,],[378,]),'pnArrFFPop':([368,],[381,]),'pnHandleReturnValue':([378,],[388,]),'pnMatCalc':([383,],[391,]),'falsop':([384,],[393,]),'pnEndWhile':([385,],[396,]),'pnCompControlFinal':([386,],[398,]),'pnCountVarsINTOResources':([387,],[400,]),'pnEndIf':([393,],[403,]),'pnElseIf':([394,],[405,]),'pnCloseCurrentFunction':([400,],[408,]),'pnEndFor':([415,],[416,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> SCRIPT pnCrearDirFunc ID pnScriptFuncDir pnCuadGotoMain SEMICOLON varp funcp bloque pnCuadEND','programa',10,'p_programa','lexerParser.py',193),
  ('varp -> var varp','varp',2,'p_programa','lexerParser.py',194),
  ('varp -> empty','varp',1,'p_programa','lexerParser.py',195),
  ('funcp -> func funcp','funcp',2,'p_programa','lexerParser.py',196),
  ('funcp -> empty','funcp',1,'p_programa','lexerParser.py',197),
  ('bloque -> DO pnDirMain LEFT_CUR_BRACKET varp funcp estatutop RIGHT_CUR_BRACKET pnEndScript','bloque',8,'p_bloque','lexerParser.py',203),
  ('estatutop -> estatuto estatutop','estatutop',2,'p_bloque','lexerParser.py',204),
  ('estatutop -> empty','estatutop',1,'p_bloque','lexerParser.py',205),
  ('tipo_simp -> INT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexerParser.py',211),
  ('tipo_simp -> FLOAT pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexerParser.py',212),
  ('tipo_simp -> CHAR pnSaveTypeVar','tipo_simp',2,'p_tipo_simp','lexerParser.py',213),
  ('tipo_comp -> DATAFRAME','tipo_comp',1,'p_tipo_comp','lexerParser.py',219),
  ('tipo_comp -> file','tipo_comp',1,'p_tipo_comp','lexerParser.py',220),
  ('copy -> READ_FILE LEFT_PARENT LETRERO pnCuadCopy RIGHT_PARENT SEMICOLON','copy',6,'p_copy','lexerParser.py',226),
  ('file -> ID','file',1,'p_file','lexerParser.py',232),
  ('variable -> ID pnSaveOperandos indexp','variable',3,'p_variable','lexerParser.py',238),
  ('indexp -> LEFT_SQR_BRACKET pnArrIni exp pnArrVerify indexpp RIGHT_SQR_BRACKET pnArrFFPop','indexp',7,'p_variable','lexerParser.py',239),
  ('indexp -> empty','indexp',1,'p_variable','lexerParser.py',240),
  ('indexpp -> COMMA pnArrAccIncDim exp pnMatCalc','indexpp',4,'p_variable','lexerParser.py',241),
  ('indexpp -> empty pnArrCalc','indexpp',2,'p_variable','lexerParser.py',242),
  ('llamada -> ID pnCheckFunc LEFT_PARENT pnGenerateEra expp RIGHT_PARENT pnCheckNoParam SEMICOLON pnCuadGoSub pnHandleReturnValue','llamada',10,'p_llamada','lexerParser.py',248),
  ('expp -> exp pnCuadParametro exppp','expp',3,'p_llamada','lexerParser.py',249),
  ('expp -> empty','expp',1,'p_llamada','lexerParser.py',250),
  ('exppp -> COMMA pnUpdateK exp pnCuadParametro exppp','exppp',5,'p_llamada','lexerParser.py',251),
  ('exppp -> empty','exppp',1,'p_llamada','lexerParser.py',252),
  ('var -> VAR pnCheckTablaVar v ARROW idp SEMICOLON','var',6,'p_var','lexerParser.py',258),
  ('v -> DATAFRAME pnSaveTypeVar','v',2,'p_var','lexerParser.py',259),
  ('v -> tipo_simp vp','v',2,'p_var','lexerParser.py',260),
  ('vp -> LEFT_SQR_BRACKET pnArrCreateNode CTEI pnArrSaveLim1 vpp RIGHT_SQR_BRACKET pnArrCuadriplificar','vp',7,'p_var','lexerParser.py',261),
  ('vp -> empty','vp',1,'p_var','lexerParser.py',262),
  ('vpp -> COMMA CTEI pnArrSaveLim1','vpp',3,'p_var','lexerParser.py',263),
  ('vpp -> empty','vpp',1,'p_var','lexerParser.py',264),
  ('idp -> ID pnCheckNameTablaVar pnArrAddDim idpp','idp',4,'p_var','lexerParser.py',265),
  ('idpp -> COMMA ID pnCheckNameTablaVar pnArrAddDim idpp','idpp',5,'p_var','lexerParser.py',266),
  ('idpp -> empty','idpp',1,'p_var','lexerParser.py',267),
  ('func -> FUNC returnval ARROW ID pnAddFuncinDir LEFT_PARENT pnCheckTablaVar pnCrearListaParam param RIGHT_PARENT LEFT_CUR_BRACKET varp pnDirecIniFunc estatutop RIGHT_CUR_BRACKET pnCountVarsINTOResources pnCloseCurrentFunction','func',17,'p_func','lexerParser.py',273),
  ('returnval -> tipo_simp','returnval',1,'p_func','lexerParser.py',274),
  ('returnval -> VOID pnSaveTypeVar','returnval',2,'p_func','lexerParser.py',275),
  ('param -> paramlist','param',1,'p_param','lexerParser.py',281),
  ('param -> empty','param',1,'p_param','lexerParser.py',282),
  ('paramlist -> tipoparam ARROW ID pnAddParametersTablaVar paramlistp','paramlist',5,'p_param','lexerParser.py',283),
  ('tipoparam -> tipo_simp','tipoparam',1,'p_param','lexerParser.py',284),
  ('tipoparam -> DATAFRAME pnSaveTypeVar','tipoparam',2,'p_param','lexerParser.py',285),
  ('paramlistp -> COMMA paramlist','paramlistp',2,'p_param','lexerParser.py',286),
  ('paramlistp -> empty','paramlistp',1,'p_param','lexerParser.py',287),
  ('estatuto -> asign','estatuto',1,'p_estatuto','lexerParser.py',293),
  ('estatuto -> llamada','estatuto',1,'p_estatuto','lexerParser.py',294),
  ('estatuto -> lee','estatuto',1,'p_estatuto','lexerParser.py',295),
  ('estatuto -> escribe','estatuto',1,'p_estatuto','lexerParser.py',296),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lexerParser.py',297),
  ('estatuto -> ciclow','estatuto',1,'p_estatuto','lexerParser.py',298),
  ('estatuto -> ciclof','estatuto',1,'p_estatuto','lexerParser.py',299),
  ('estatuto -> funcesp','estatuto',1,'p_estatuto','lexerParser.py',300),
  ('estatuto -> return','estatuto',1,'p_estatuto','lexerParser.py',301),
  ('estatuto -> copy','estatuto',1,'p_estatuto','lexerParser.py',302),
  ('asign -> variable ASIGN pnSaveOperadorAsign exp pnCuadAsign SEMICOLON','asign',6,'p_asign','lexerParser.py',308),
  ('lee -> READ LEFT_PARENT variable pnCuadLee RIGHT_PARENT SEMICOLON','lee',6,'p_lee','lexerParser.py',314),
  ('escribe -> WRITE LEFT_PARENT escribep RIGHT_PARENT SEMICOLON','escribe',5,'p_escribe','lexerParser.py',320),
  ('escribep -> exp pnCuadEscribe','escribep',2,'p_escribe','lexerParser.py',321),
  ('escribep -> LETRERO pnCuadEscribe','escribep',2,'p_escribe','lexerParser.py',322),
  ('return -> RETURNS exp pnCuadRet SEMICOLON','return',4,'p_return','lexerParser.py',328),
  ('exp -> exprel pnCuadOplog logic','exp',3,'p_exp','lexerParser.py',334),
  ('logic -> logicsig exprel pnCuadOplog logic','logic',4,'p_exp','lexerParser.py',335),
  ('logic -> empty','logic',1,'p_exp','lexerParser.py',336),
  ('logicsig -> AND pnSaveOperadorLog','logicsig',2,'p_exp','lexerParser.py',337),
  ('logicsig -> OR pnSaveOperadorLog','logicsig',2,'p_exp','lexerParser.py',338),
  ('exprel -> e pnCuadOpRelacional relacionalp','exprel',3,'p_exprel','lexerParser.py',344),
  ('relacionalp -> relsig e pnCuadOpRelacional relacionalp','relacionalp',4,'p_exprel','lexerParser.py',345),
  ('relacionalp -> empty','relacionalp',1,'p_exprel','lexerParser.py',346),
  ('relsig -> LESS_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',347),
  ('relsig -> GREATER_THAN pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',348),
  ('relsig -> EQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',349),
  ('relsig -> NOTEQUALS pnSaveOperadorRel','relsig',2,'p_exprel','lexerParser.py',350),
  ('e -> t pnCuadPlMi tp','e',3,'p_e','lexerParser.py',356),
  ('tp -> tsig t pnCuadPlMi tp','tp',4,'p_e','lexerParser.py',357),
  ('tp -> empty','tp',1,'p_e','lexerParser.py',358),
  ('tsig -> PLUS pnSaveOperadorPlMi','tsig',2,'p_e','lexerParser.py',359),
  ('tsig -> MINUS pnSaveOperadorPlMi','tsig',2,'p_e','lexerParser.py',360),
  ('t -> f pnCuadMuDi fp','t',3,'p_t','lexerParser.py',366),
  ('fp -> fsig f pnCuadMuDi fp','fp',4,'p_t','lexerParser.py',367),
  ('fp -> empty','fp',1,'p_t','lexerParser.py',368),
  ('fsig -> MULT pnSaveOperadorMuDi','fsig',2,'p_t','lexerParser.py',369),
  ('fsig -> DIV pnSaveOperadorMuDi','fsig',2,'p_t','lexerParser.py',370),
  ('f -> LEFT_PARENT pnSaveFondoFalso exp RIGHT_PARENT pnPopFondoFalso','f',5,'p_f','lexerParser.py',376),
  ('f -> CTEI pnSaveCteI pnSaveOperandoConstante','f',3,'p_f','lexerParser.py',377),
  ('f -> CTEF pnSaveCteF pnSaveOperandoConstante','f',3,'p_f','lexerParser.py',378),
  ('f -> CTEC pnSaveCteC pnSaveOperandoConstante','f',3,'p_f','lexerParser.py',379),
  ('f -> variable','f',1,'p_f','lexerParser.py',380),
  ('f -> llamada','f',1,'p_f','lexerParser.py',381),
  ('f -> funcesp','f',1,'p_f','lexerParser.py',382),
  ('condicion -> IF LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT IF_TRUE LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET falsop pnEndIf','condicion',11,'p_condicion','lexerParser.py',388),
  ('falsop -> IF_FALSE pnElseIf LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET','falsop',5,'p_condicion','lexerParser.py',389),
  ('falsop -> empty','falsop',1,'p_condicion','lexerParser.py',390),
  ('ciclow -> WHILE pnSaveWhile LEFT_PARENT exp pnCheckBoolIf RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndWhile','ciclow',10,'p_ciclow','lexerParser.py',396),
  ('ciclof -> FOR LEFT_PARENT ID pnSaveForID ASIGN exp pnCreateVControl COMMA exp pnCompControlFinal RIGHT_PARENT LEFT_CUR_BRACKET estatutop RIGHT_CUR_BRACKET pnEndFor','ciclof',15,'p_ciclof','lexerParser.py',402),
  ('funcesp -> mean','funcesp',1,'p_funcesp','lexerParser.py',408),
  ('funcesp -> mode','funcesp',1,'p_funcesp','lexerParser.py',409),
  ('funcesp -> median','funcesp',1,'p_funcesp','lexerParser.py',410),
  ('funcesp -> variance','funcesp',1,'p_funcesp','lexerParser.py',411),
  ('funcesp -> max','funcesp',1,'p_funcesp','lexerParser.py',412),
  ('funcesp -> min','funcesp',1,'p_funcesp','lexerParser.py',413),
  ('funcesp -> staddes','funcesp',1,'p_funcesp','lexerParser.py',414),
  ('funcesp -> boxplot','funcesp',1,'p_funcesp','lexerParser.py',415),
  ('funcesp -> linreg','funcesp',1,'p_funcesp','lexerParser.py',416),
  ('funcesp -> copy','funcesp',1,'p_funcesp','lexerParser.py',417),
  ('mean -> MEAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mean',6,'p_mean','lexerParser.py',423),
  ('mode -> MODE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','mode',6,'p_mode','lexerParser.py',429),
  ('median -> MEDIAN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','median',6,'p_median','lexerParser.py',435),
  ('variance -> VARIANCE LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','variance',6,'p_variance','lexerParser.py',441),
  ('max -> MAX LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','max',6,'p_max','lexerParser.py',447),
  ('min -> MIN LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','min',6,'p_min','lexerParser.py',453),
  ('staddes -> STADDES LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','staddes',6,'p_staddes','lexerParser.py',459),
  ('boxplot -> BOXPLOT LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','boxplot',6,'p_boxplot','lexerParser.py',465),
  ('linreg -> LINREG LEFT_PARENT variable pnCuadFuncEsp RIGHT_PARENT SEMICOLON','linreg',6,'p_linreg','lexerParser.py',471),
  ('pnCrearDirFunc -> empty','pnCrearDirFunc',1,'p_pnCrearDirFunc','lexerParser.py',481),
  ('pnCuadGotoMain -> empty','pnCuadGotoMain',1,'p_pnCuadGotoMain','lexerParser.py',491),
  ('pnDirMain -> empty','pnDirMain',1,'p_pnDirMain','lexerParser.py',500),
  ('pnScriptFuncDir -> empty','pnScriptFuncDir',1,'p_pnScriptFuncDir','lexerParser.py',508),
  ('pnCheckTablaVar -> empty','pnCheckTablaVar',1,'p_pnCheckTablaVar','lexerParser.py',517),
  ('pnCrearListaParam -> empty','pnCrearListaParam',1,'p_pnCrearListaParam','lexerParser.py',525),
  ('pnSaveTypeVar -> empty','pnSaveTypeVar',1,'p_pnSaveTypeVar','lexerParser.py',532),
  ('pnCheckNameTablaVar -> empty','pnCheckNameTablaVar',1,'p_pnCheckNameTablaVar','lexerParser.py',541),
  ('pnAddFuncinDir -> empty','pnAddFuncinDir',1,'p_pnAddFuncinDir','lexerParser.py',589),
  ('pnAddParametersTablaVar -> empty','pnAddParametersTablaVar',1,'p_pnAddParametersTablaVar','lexerParser.py',623),
  ('pnCountVarsINTOResources -> empty','pnCountVarsINTOResources',1,'p_pnCountVarsINTOResources','lexerParser.py',653),
  ('pnDirecIniFunc -> empty','pnDirecIniFunc',1,'p_pnDirecIniFunc','lexerParser.py',682),
  ('pnCloseCurrentFunction -> empty','pnCloseCurrentFunction',1,'p_pnCloseCurrentFunction','lexerParser.py',689),
  ('pnEndScript -> empty','pnEndScript',1,'p_pnEndScript','lexerParser.py',705),
  ('pnCheckFunc -> empty','pnCheckFunc',1,'p_pnCheckFunc','lexerParser.py',714),
  ('pnGenerateEra -> empty','pnGenerateEra',1,'p_pnGenerateEra','lexerParser.py',728),
  ('pnCuadParametro -> empty','pnCuadParametro',1,'p_pnCuadParametro','lexerParser.py',745),
  ('pnUpdateK -> empty','pnUpdateK',1,'p_pnUpdateK','lexerParser.py',771),
  ('pnCheckNoParam -> empty','pnCheckNoParam',1,'p_pnCheckNoParam','lexerParser.py',779),
  ('pnCuadGoSub -> empty','pnCuadGoSub',1,'p_pnCuadGoSub','lexerParser.py',796),
  ('pnHandleReturnValue -> empty','pnHandleReturnValue',1,'p_pnHandleReturnValue','lexerParser.py',808),
  ('pnCuadRet -> empty','pnCuadRet',1,'p_pnCuadRet','lexerParser.py',832),
  ('pnSaveCteI -> empty','pnSaveCteI',1,'p_pnSaveCteI','lexerParser.py',859),
  ('pnSaveCteF -> empty','pnSaveCteF',1,'p_pnSaveCteF','lexerParser.py',870),
  ('pnSaveCteC -> empty','pnSaveCteC',1,'p_pnSaveCteC','lexerParser.py',880),
  ('pnSaveFondoFalso -> empty','pnSaveFondoFalso',1,'p_pnSaveFondoFalso','lexerParser.py',890),
  ('pnPopFondoFalso -> empty','pnPopFondoFalso',1,'p_pnPopFondoFalso','lexerParser.py',897),
  ('pnSaveOperandos -> empty','pnSaveOperandos',1,'p_pnSaveOperandos','lexerParser.py',907),
  ('pnSaveOperandoConstante -> empty','pnSaveOperandoConstante',1,'p_pnSaveOperandoConstante','lexerParser.py',932),
  ('pnSaveOperadorPlMi -> empty','pnSaveOperadorPlMi',1,'p_pnSaveOperadorPlMi','lexerParser.py',940),
  ('pnSaveOperadorMuDi -> empty','pnSaveOperadorMuDi',1,'p_pnSaveOperadorMuDi','lexerParser.py',947),
  ('pnSaveOperadorRel -> empty','pnSaveOperadorRel',1,'p_pnSaveOperadorRel','lexerParser.py',954),
  ('pnSaveOperadorLog -> empty','pnSaveOperadorLog',1,'p_pnSaveOperadorLog','lexerParser.py',961),
  ('pnCuadPlMi -> empty','pnCuadPlMi',1,'p_pnCuadPlMi','lexerParser.py',968),
  ('pnCuadMuDi -> empty','pnCuadMuDi',1,'p_pnCuadMuDi','lexerParser.py',1000),
  ('pnCuadOpRelacional -> empty','pnCuadOpRelacional',1,'p_pnCuadOpRelacional','lexerParser.py',1032),
  ('pnCuadOplog -> empty','pnCuadOplog',1,'p_pnCuadOplog','lexerParser.py',1065),
  ('pnSaveOperadorAsign -> empty','pnSaveOperadorAsign',1,'p_pnSaveOperadorAsign','lexerParser.py',1096),
  ('pnCuadAsign -> empty','pnCuadAsign',1,'p_pnCuadAsign','lexerParser.py',1103),
  ('pnCuadEscribe -> empty','pnCuadEscribe',1,'p_pnCuadEscribe','lexerParser.py',1129),
  ('pnCuadLee -> empty','pnCuadLee',1,'p_pnCuadLee','lexerParser.py',1167),
  ('pnCuadCopy -> empty','pnCuadCopy',1,'p_pnCuadCopy','lexerParser.py',1184),
  ('pnCuadFuncEsp -> empty','pnCuadFuncEsp',1,'p_pnCuadFuncEsp','lexerParser.py',1203),
  ('pnCheckBoolIf -> empty','pnCheckBoolIf',1,'p_pnCheckBoolIf','lexerParser.py',1246),
  ('pnElseIf -> empty','pnElseIf',1,'p_pnElseIf','lexerParser.py',1264),
  ('pnEndIf -> empty','pnEndIf',1,'p_pnEndIf','lexerParser.py',1275),
  ('pnSaveWhile -> empty','pnSaveWhile',1,'p_pnSaveWhile','lexerParser.py',1284),
  ('pnEndWhile -> empty','pnEndWhile',1,'p_pnEndWhile','lexerParser.py',1293),
  ('pnSaveForID -> empty','pnSaveForID',1,'p_pnSaveForID','lexerParser.py',1307),
  ('pnCreateVControl -> empty','pnCreateVControl',1,'p_pnCreateVControl','lexerParser.py',1331),
  ('pnCompControlFinal -> empty','pnCompControlFinal',1,'p_pnCompControlFinal','lexerParser.py',1362),
  ('pnEndFor -> empty','pnEndFor',1,'p_pnEndFor','lexerParser.py',1390),
  ('pnArrCreateNode -> empty','pnArrCreateNode',1,'p_pnArrCreateNode','lexerParser.py',1426),
  ('pnArrSaveLim1 -> empty','pnArrSaveLim1',1,'p_pnArrSaveLim1','lexerParser.py',1440),
  ('pnArrCuadriplificar -> empty','pnArrCuadriplificar',1,'p_pnArrCuadriplificar','lexerParser.py',1458),
  ('pnArrAddDim -> empty','pnArrAddDim',1,'p_pnArrAddDim','lexerParser.py',1477),
  ('pnArrIni -> empty','pnArrIni',1,'p_pnArrIni','lexerParser.py',1503),
  ('pnArrVerify -> empty','pnArrVerify',1,'p_pnArrVerify','lexerParser.py',1534),
  ('pnArrAccIncDim -> empty','pnArrAccIncDim',1,'p_pnArrAccIncDim','lexerParser.py',1553),
  ('pnArrCalc -> empty','pnArrCalc',1,'p_pnArrCalc','lexerParser.py',1564),
  ('pnMatCalc -> empty','pnMatCalc',1,'p_pnMatCalc','lexerParser.py',1596),
  ('pnArrFFPop -> empty','pnArrFFPop',1,'p_pnArrFFPop','lexerParser.py',1656),
  ('pnCuadEND -> empty','pnCuadEND',1,'p_pnCuadEND','lexerParser.py',1665),
  ('empty -> <empty>','empty',0,'p_empty','lexerParser.py',1675),
]
